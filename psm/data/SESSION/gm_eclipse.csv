ID,Overall,Text
2,1,"Patch Set 1:Stefan, do you see any issues? This is almost the same as the p2 change. I would love to merge this, as the blocking search dialog is super annoying for my usage of Eclipse (which involves a lot of text search for our tutorials)"
4,0,Change has been successfully merged into the git repository by Stefan Xenos
8,0,Change has been successfully merged into the git repository by David Williams
11,0,Change has been successfully merged into the git repository by David Williams
14,0,Change has been successfully merged into the git repository by David Williams
18,0,Change has been successfully merged into the git repository by Jonathan Nieder
23,1,"Patch Set 1:CQ 11658 and CQ 11878 were both approved, so you can now proceed and add JavaEWAH 1.1.6 to Orbit recipes.I filed bug 500455 for adding JavaEWAH 1.1.6 to Orbit, link it from the change adding it to Orbit recipes."
25,1,"Patch Set 2:> CQ 11658 and CQ 11878 were both approved, so you can now proceed > and add JavaEWAH 1.1.6 to Orbit recipes. >  > I filed bug 500455 for adding JavaEWAH 1.1.6 to Orbit, link it from > the change adding it to Orbit recipes.This seems to have been done in https://git.eclipse.org/r/#/c/81339/"
27,1,"Patch Set 2:> > CQ 11658 and CQ 11878 were both approved, so you can now proceed > > and add JavaEWAH 1.1.6 to Orbit recipes. > > > > I filed bug 500455 for adding JavaEWAH 1.1.6 to Orbit, link it > from > > the change adding it to Orbit recipes. >  > This seems to have been done in https://git.eclipse.org/r/#/c/81339/I can update target platforms tomorrow"
32,0,Change has been successfully merged into the git repository by Jonathan Nieder
35,0,Change has been successfully merged into the git repository by Sergey Prigogin
38,0,Change has been successfully merged into the git repository by Michael Rennie
47,0,"Patch Set 5: Code-Review+1 Verified+1(2 comments)Last comment, if we get this in, I will have a LOT of fun with apache lang."
55,0,Change has been successfully cherry-picked as 55be2778829c92a601e02b8b62afe4600cdc56d7 by Patrick Tasse
58,0,Change has been successfully cherry-picked as 2189785cb5e54774dc58e064c86478f4e5525dda by Patrick Tasse
61,0,Change has been successfully merged into the git repository by Kaloyan Raev
64,0,Change has been successfully merged into the git repository by Kaloyan Raev
67,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
70,0,Change has been successfully merged into the git repository by vincent lorenzo
73,0,Change has been successfully merged into the git repository by Jeff Johnston
76,0,Change has been successfully merged into the git repository by Carsten Reckord
80,0,Change has been successfully merged into the git repository by Young-Soo Roh
83,0,Change has been successfully merged into the git repository by Marc-Andr├® Laperle
88,0,Change has been successfully merged into the git repository by David Green
90,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/889/ : UNSTABLE
92,0,Patch Set 3: Code-Review+1(2 comments)Looks good Jeremie.
96,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6647/ : UNSTABLE
98,0,Change has been successfully merged into the git repository by Marc Khouzam
100,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6648/ : UNSTABLE
102,0,Change has been successfully merged into the git repository by Marc Khouzam
105,0,Change has been successfully merged into the git repository by Doug Schaefer
108,0,Change has been successfully merged into the git repository by Doug Schaefer
111,0,Change has been successfully merged into the git repository by Roland Grunberg
116,0,Change has been successfully merged into the git repository by Christian W. Damus
119,0,Change has been successfully cherry-picked as 048cc0d846d640ef8fd0d6561bca9d2bfe5874e1 by Matthew Khouzam
121,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/11206/ : UNSTABLE
123,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/11207/ : UNSTABLE
125,0,Change has been successfully merged into the git repository by Mickael Istria
127,0,Change has been successfully pushed.
130,0,Change has been successfully merged into the git repository by Eike Stepper
133,0,Change has been successfully merged into the git repository by vincent lorenzo
135,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
147,0,Change has been successfully merged into the git repository by Hallvard Traetteberg
149,0,Change has been successfully merged into the git repository by Christian Pontesegger
155,0,Change has been successfully merged into the git repository by Marvin Mueller
160,0,Change has been successfully merged into the git repository by Andrew Johnson
163,0,Change has been successfully merged into the git repository by Thomas Watson
164,0,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Core/151/ : UNSTABLEhttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/223/ : SUCCESS
165,0,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Core/153/ : UNSTABLEhttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/226/ : SUCCESS
166,0,Patch Set 4: Code-Review+2 Verified+1Test issues on core should be fixed with latest patch (working fine with tooling...)
167,0,Change has been successfully merged into the git repository by Remi Schnekenburger
169,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Core/148/ : UNSTABLEhttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/217/ : UNSTABLE
172,0,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Core/152/ : UNSTABLEhttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/225/ : SUCCESS
176,0,Change has been successfully merged into the git repository by Alexander Kurtakov
180,0,Change has been successfully merged into the git repository by vincent lorenzo
183,0,Change has been successfully merged into the git repository by Thomas Watson
186,0,Change has been successfully merged into the git repository by Jacques Bouthillier
192,0,Change has been successfully merged into the git repository by Thomas Watson
195,0,Change has been successfully merged into the git repository by Jan Belle
198,0,Change has been successfully merged into the git repository by Remi Schnekenburger
202,0,Change has been successfully merged into the git repository by Andreas Sewe
205,0,Change has been successfully merged into the git repository by Andreas Sewe
208,0,Change has been successfully merged into the git repository by Benoit Maggi
213,0,Change has been successfully merged into the git repository by Arun Thondapu
216,0,Change has been successfully merged into the git repository by Andreas Sewe
224,0,Change has been successfully merged into the git repository by Andreas Sewe
229,0,Change has been successfully merged into the git repository by Alexander Kurtakov
232,0,Change has been successfully merged into the git repository by Manoj Palat
235,0,Change has been successfully merged into the git repository by Roxanne Joncas
238,0,Change has been successfully merged into the git repository by Andreas Sewe
244,0,Change has been successfully merged into the git repository by Johannes Dorn
250,0,Change has been successfully merged into the git repository by Andreas Sewe
253,0,Change has been successfully merged into the git repository by Andreas Sewe
257,0,Change has been successfully merged into the git repository by Andreas Sewe
260,0,Change has been successfully merged into the git repository by vincent lorenzo
266,0,Change has been successfully cherry-picked as 26b9290461576e6c1bc9af887ee9a9e7fc5dae01 by Andi Bur
270,0,Change has been successfully merged into the git repository by Andreas Sewe
274,0,Change has been successfully rebased as f02d492e5a9bbad5e36a9b6097f6092d32ea62af by Remi Schnekenburger
282,0,Change has been successfully merged into the git repository by Johannes Dorn
286,0,Change has been successfully merged into the git repository by Johannes Dorn
291,0,Change has been successfully merged into the git repository by Arthur van Dorp
294,0,Change has been successfully merged into the git repository by Andreas Sewe
303,0,Change has been successfully merged into the git repository by Johannes Dorn
310,0,Change has been successfully merged into the git repository by Johannes Dorn
315,0,Change has been successfully merged into the git repository by Johannes Dorn
327,0,Patch Set 4: Verified+1Expected output is good on Mac!
328,0,Change has been successfully merged into the git repository by Jonah Graham
330,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6635/ : UNSTABLE
331,1,Patch Set 4:> Build Unstable >  > https://hudson.eclipse.org/cdt/job/cdt-verify/6635/ : UNSTABLEThis unstable build was caused by intermittent failure. This change has been merged into master and the tests passed successfully there.
333,1,"Patch Set 1: Code-Review-2Needs new bugs created for remaining issues, including cross reference in call to org.eclipse.cdt.utils.CommandLineUtil.argumentsToStringBash(String[], boolean)"
335,0,"Patch Set 1:This also needs announcement on mailing list as there is a user visible change here, along with the future plans of resolving remaining quoting issues and SHELL != bash issues."
336,1,"Patch Set 1:Note to self: new bugs needed are:- ""incorrect"" handling of escaping (backslashes) on Windows, including in run mode- Assumption that shell=bash on linuxNot a bug exactly, but a question. What is the purpose of ""Arguments"" box. Should it try to match behaviour of command line / gdb on respective platform, or be a self-sustained standard. At the moment it is somewhere it between, with some behaviour consistent on diff platforms and some matching.And finally: We need windows tests. If they had been in place, we probably wouldn't of had a regression in Neon."
337,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6611/ : UNSTABLE
343,0,Change has been successfully merged into the git repository by Johannes Dorn
361,0,Change has been successfully merged into the git repository by Johannes Dorn
366,0,Change has been successfully merged into the git repository by Johannes Dorn
371,0,Change has been successfully merged into the git repository by Johannes Dorn
377,0,Change has been successfully merged into the git repository by Sasikanth Bharadwaj
382,0,Change has been successfully merged into the git repository by Marc Khouzam
384,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6643/ : UNSTABLE
386,0,Change has been successfully merged into the git repository by Marc Khouzam
390,0,Change has been successfully pushed.
392,0,Change has been successfully merged into the git repository by Marc Khouzam
394,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6637/ : UNSTABLE
399,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6636/ : UNSTABLE
403,0,Change has been successfully merged into the git repository by Marc Khouzam
407,0,Change has been successfully merged into the git repository by Marc Khouzam
409,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6623/ : UNSTABLE
415,0,Change has been successfully cherry-picked as f24c9fa52ec1b412e5abc92b71027b62ff6b062d by Jeff Johnston
417,0,"Patch Set 1: Verified+1I do not know enough of annotations to really give a +1 code-review, but it did solve my problem with getIfPresent. Thanks!"
419,0,Change has been successfully cherry-picked as 9c8ea59abb311ce0cfd9829330c12aeb954532f4 by Alexandre Montplaisir
422,0,Change has been successfully merged into the git repository by Ernesto Posse
428,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
432,0,Change has been successfully merged into the git repository by vincent lorenzo
435,1,"Patch Set 1:Not sure why this build failed, but failed on p2.tests.ui which does not have any direct relation to my changes. But I do see 2 issues in the log. First, a warning from ""comparator"": [WARNING] MavenProject: org.eclipse.equinox:org.eclipse.equinox.p2.tests.ui:1.1.200-SNAPSHOT @ /jobs/genie.equinox/p2-gerrit/workspace/bundles/org.eclipse.equinox.p2.tests.ui/pom.xml: baseline and build artifacts have same version but different contents[INFO] MavenProject: org.eclipse.equinox:org.eclipse.equinox.p2.tests.ui:1.1.200-SNAPSHOT @ /jobs/genie.equinox/p2-gerrit/workspace/bundles/org.eclipse.equinox.p2.tests.ui/pom.xml    The main artifact has been replaced with the baseline version.    The following attached artifacts are not present in the baseline and have been removed: [sources]Worse, and perhaps the reason ""ui tests"" failed there was an error message about ** (java:2487): WARNING **: Could not open X displayUnable to init server: Could not connect: Connection refusedPerhaps it was ""too busy""? Or perhaps it is ""misconfigured""?"
436,1,"Patch Set 1: Code-Review+2> Not sure why this build failed, but failed on p2.tests.ui which > does not have any direct relation to my changes. But I do see 2 > issues in the log. > First, a warning from ""comparator"": > [WARNING] MavenProject: org.eclipse.equinox:org.eclipse.equinox.p2.tests.ui:1.1.200-SNAPSHOT > @ /jobs/genie.equinox/p2-gerrit/workspace/bundles/org.eclipse.equinox.p2.tests.ui/pom.xml: > baseline and build artifacts have same version but different > contents > [INFO] MavenProject: org.eclipse.equinox:org.eclipse.equinox.p2.tests.ui:1.1.200-SNAPSHOT > @ /jobs/genie.equinox/p2-gerrit/workspace/bundles/org.eclipse.equinox.p2.tests.ui/pom.xml > The main artifact has been replaced with the baseline version. > The following attached artifacts are not present in the baseline > and have been removed: [sources] >  > Worse, and perhaps the reason ""ui tests"" failed there was an error > message about >  > ** (java:2487): WARNING **: Could not open X display > Unable to init server: Could not connect: Connection refused >  > Perhaps it was ""too busy""? Or perhaps it is ""misconfigured""?I think it was a intermittent issue of some kind.  I retriggered the build and it passed this time"
437,0,Change has been successfully merged into the git repository by Thomas Watson
440,0,Change has been successfully merged into the git repository by vincent lorenzo
444,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
445,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
448,1,Patch Set 5: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6564/ : UNSTABLE
450,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6502/ : UNSTABLE
451,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6514/ : UNSTABLE
453,1,Patch Set 8: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6607/ : UNSTABLE
454,0,Patch Set 8:(11 comments)Nice job!Only minor cleanup that I will fix in a follow-up patch.
456,0,Patch Set 8:(3 comments)Only one comment added to the non api method (taken from the former interface method)enableReverseModeAtBpLocationThanks for the thorough review and fixes !
458,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6559/ : UNSTABLE
464,0,Change has been successfully merged into the git repository by Alvaro Sanchez-Leon
465,1,Patch Set 13:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6631/ : UNSTABLE
468,1,Patch Set 9: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6609/ : UNSTABLE
470,1,"Patch Set 10: Code-Review+1I think we are close enough to go ahead with this.We'll need to fix some of the issues with running async with gdbserver, but we can address this after RC1.  Besides, I think getting the full console is important enough to take this risk."
471,1,Patch Set 10: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6619/ : UNSTABLE
476,1,Patch Set 11: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6622/ : UNSTABLE
481,0,Change has been successfully merged into the git repository by Lars Vogel
484,0,Change has been successfully merged into the git repository by Thomas Watson
487,0,Change has been successfully merged into the git repository by Thomas Watson
493,0,Change has been successfully merged into the git repository by Jacques Bouthillier
496,0,Change has been successfully cherry-picked as 2209af38f2f1e9c83a4364a8a390a08b29810c92 by Jeff Johnston
499,0,Change has been successfully merged into the git repository by Johannes Faltermeier
505,0,Change has been successfully merged into the git repository by Shuai Li
513,1,Patch Set 4:I think this is a serious concern.  I hadn't thought of it before.We should look at how the platform console does this.  You can clone the platform console view and each new console will be filled with all the text.  Our TracingConsole class (gdb traces) does this by extending IOConsole.  How do they do this efficiently.  I think they use some kinds of scheme using a document.
515,0,"Patch Set 2:Why trying the new buffering scheme, the last line is not buffered.  This means that the gdb prompt (gdb) does not re-appear when closing and re-opening the Debugger console.  Also, if I start typing something but don't press <enter>, then close the view, then re-open it, what I typed is not shown, but when I press <enter>, what I type is used.That second use-case is not that important, but it would be nice to show the (gdb) prompt if possible."
519,1,Patch Set 9: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6614/ : UNSTABLE
521,1,Patch Set 6:While testing this I found something obscure but weird that I thought I'd mention.1- Start a debug session with the full console.2- type a very long line in the new console so that the text wraps (don't press enter)3- close the debugger console4- make the space where the console was significantly bigger5- open the debugger console view=> the text is messed up with the cursor higher up than other texts.  This may be a bug with the widget itself.  I just wanted to document it in case it may be related to a bug in this patch.
522,0,"Patch Set 6:The scenario brought by Marc K, on patch 6 and related to the  resizing of the console when there is some input in the buffer but not yet consumed by GDB.    It is indeed a valid problem, however this issue is being uncovered by this implementation and with the combination of actions above.    I suggest we track this scenario as a separate issue.Please comment, Thanks !"
523,0,"Patch Set 6:(4 comments)> The scenario brought by Marc K, on patch 6 and related to the  > resizing of the console when there is some input in the buffer but > not yet consumed by GDB. > It is indeed a valid problem, however this issue is being uncovered > by this implementation and with the combination of actions above. > I suggest we track this scenario as a separate issue. >  > Please comment, > Thanks !Ok with me.There are a couple on comments in line that I wrote although I haven't gone deeply in the review"
524,0,Patch Set 6:(4 comments)Hi Marc !I have answered the inline comments and the updates are reflected in patch set 7
525,0,Patch Set 11: Code-Review+2 Verified+1This looks good to me!Thanks
526,0,Change has been successfully merged into the git repository by Alvaro Sanchez-Leon
528,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6232/ : UNSTABLE
534,1,Patch Set 8: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6603/ : UNSTABLE
536,0,"Patch Set 8:(6 comments)The comments are now addressed in patch set 9, Thanks Marc K!"
542,0,Change has been successfully cherry-picked as a2f54bf2de5d3ddf238eb6a4d59687df7feaee5a by Matthew Khouzam
545,0,Change has been successfully merged into the git repository by Mika├½l Barbero
547,0,Change has been successfully merged into the git repository by Pascal Rapicault
558,0,"Patch Set 2:If IO is laggy, PipedInputStream could be blocked waiting for data which was recently written. The question is whether a the window between write()/flush() to this class could wake up that blocked read via the flush/interrupt rather than the data that shows up via the write(). If it is impossible, great. There is the chance to miss flushes."
559,0,Change has been successfully merged into the git repository by Jonathan Nieder
560,0,"Patch Set 2:> If IO is laggy, PipedInputStream could be blocked waiting for data > which was recently written. The question is whether a the window > between write()/flush() to this class could wake up that blocked > read via the flush/interrupt rather than the data that shows up via > the write(). If it is impossible, great. There is the chance to > miss flushes.Oof, I'm missing the forest for the trees. The interrupt() can happen after a successful read and before the corresponding write. The code if (isInterrupted()) {   continue; }is broken. Luckily it's straightforward to fix: https://git.eclipse.org/r/84513"
565,1,"Patch Set 1:> There may still be a race condition here. Consider the sequence: > StreamCopyThread.write(lots_of_data); StreamCopyThread.flush(). If > flush() calls interrupt() while run() is in the src.read() call, > but src still has more data to read, can the current run() loop > break out of the src.read(), perform a partial flush, then loop > again to copy the rest of the data, and fail to do a final flush?Yes, I think that could happen. czhen and I talked a little about how we want to rewrite this code. I still think this change is an improvement since it avoids the ""Short read of block"" errors. I'll clarify the commit message."
566,1,"Patch Set 1:> > There may still be a race condition here. Consider the sequence: > > StreamCopyThread.write(lots_of_data); StreamCopyThread.flush(). If > > flush() calls interrupt() while run() is in the src.read() call, > > but src still has more data to read, can the current run() loop > > break out of the src.read(), perform a partial flush, then loop > > again to copy the rest of the data, and fail to do a final flush? >  > Yes, I think that could happen. czhen and I talked a little about > how we want to rewrite this code. I still think this change is an > improvement since it avoids the ""Short read of block"" errors. I'll > clarify the commit message.On second thought: PipedInputStream.read is not interruptible unless its buffer is empty. If the buffer contains some data, it returns that data without waiting for more.We don't flush until readInterrupted is true. That means we don't flush until the pipe is drained."
570,0,Change has been successfully cherry-picked as 3bc2beb411b22390d663c3930cb6789c40807781 by Jeff Johnston
574,0,Change has been successfully merged into the git repository by vincent lorenzo
577,0,Change has been successfully merged into the git repository by Lars Vogel
579,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
584,0,Change has been successfully merged into the git repository by Sergey Prigogin
589,1,Patch Set 2: Code-Review+2I am so ashamed for this bug... Nice catch and fix.
590,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
592,0,Change has been successfully merged into the git repository by Sergey Prigogin
596,0,Change has been successfully merged into the git repository by Lars Vogel
608,1,Patch Set 3:(4 comments)We still need a bug report and the current commit header pointing to this bug report.
617,0,Change has been successfully merged into the git repository by Christopher Guindon
621,0,Change has been successfully cherry-picked as 15e39e8f51e5deea25eeae1ddb405b207fb32848 by Jeff Johnston
625,1,"Patch Set 4:> > I'm wondering if the Ng* files can also be actually removed, we > > don't seem to be building them at all... >  > Look at make_cocoa.mak line 74. They are actually compiled.I did notice those targets in make_cocoa.mak but what I meant was that we can probably get rid of those too as those targets don't seem to be really invoked. See line 32 of the same makefile where the targets are commented out and I've never seen them being built myself."
634,0,Change has been successfully merged into the git repository by Arun Thondapu
642,0,Change has been successfully merged into the git repository by vincent lorenzo
646,0,Change has been successfully merged into the git repository by Donald Dunne
649,0,Change has been successfully merged into the git repository by Donald Dunne
652,0,Change has been successfully merged into the git repository by Donald Dunne
655,0,Change has been successfully merged into the git repository by Donald Dunne
658,0,Change has been successfully merged into the git repository by Donald Dunne
660,0,Change has been successfully merged into the git repository by Sergey Prigogin
666,0,Change has been successfully merged into the git repository by Sergey Prigogin
673,0,Change has been successfully merged into the git repository by Stefan Xenos
676,0,Change has been successfully merged into the git repository by Benoit Maggi
679,0,Change has been successfully merged into the git repository by Johannes Faltermeier
683,0,Change has been successfully merged into the git repository by Sravan Kumar Lakkimsetti
686,1,Patch Set 4:sorry about the last two patches I tried something out of desperation but without my brain switched on...
690,0,Change has been successfully merged into the git repository by vincent lorenzo
694,1,Patch Set 5: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6414/ : UNSTABLE
696,0,"Patch Set 5:Jonah, since you have already had a quick look, would you have the time to review this?  I'm hoping to have it for 9.2 if possible."
699,1,"Patch Set 7: Code-Review-2I rebased again, hopefully this build will be stable."
701,1,Patch Set 7: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6512/ : UNSTABLE
702,1,Patch Set 7: Code-Review+2 Verified+1The test failures are unrelated.Thanks Jonah
703,0,Change has been successfully merged into the git repository by Marc Khouzam
704,1,Patch Set 7:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6519/ : UNSTABLE
708,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6359/ : UNSTABLE
710,0,"Patch Set 1: Code-Review-2> This patch was just created to share information, but one key item > missing from the patch is that it does not change the default value > of the preference IGdbDebugPreferenceConstants.PREF_TRACES_ENABLE > in GdbPreferenceInitializer.Woops, that is actually a over-site on my part.  In my testing, I turn on and off and forgot to set the initializer!  Thanks for noticing."
711,1,Patch Set 6: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6506/ : UNSTABLE
720,0,Change has been successfully rebased as b010c9a0cf1de24275617532cb09fdb056ba5021 by Patrick Tessier
724,0,Change has been successfully merged into the git repository by vincent lorenzo
729,0,Change has been successfully merged into the git repository by Ansgar Radermacher
735,0,Change has been successfully merged into the git repository by Laurent Goubet
741,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/9257/ : UNSTABLE
743,0,Change has been successfully merged into the git repository by Thomas Wolf
749,0,Change has been successfully rebased as 735b1ab48853d1e8bd5dcee102c6343588c00cd4 by Marc Dumais
751,0,"Patch Set 1:(1 comment)Just one inline question,Thanks for looking into this !"
755,0,Patch Set 4: Code-Review+2Thanks Marc D!
756,0,Patch Set 4: Code-Review+2 Verified+1Alvaro - thanks for the quick review!
757,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6518/ : UNSTABLE
760,0,Change has been successfully merged into the git repository by David Green
761,0,Patch Set 10:Thanks for the contribution Simon!  I've merged your changes.
762,0,"Patch Set 5:Hi David,would be nice if you could review my latest changes. I┬┤d love to make use of this feature during ""asciidocing"" ;-)"
763,0,Patch Set 5: Code-Review+1(1 comment)Looks great! A question inline:
765,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/855/ : UNSTABLE
768,0,"Patch Set 2: Code-Review+1Simon, can you remove the dependency to the other commit? I think it is not necessary.David, could you review this? This would be extremely helpful during my documentation work?"
769,1,"Patch Set 2:It is not a dependency, but ""only"" a conflict, which I am going to resolve once one of the 2 patches are merged"
770,0,"Patch Set 2:David, can you give feedback on this change? Would be very nice to have hyperlinking for Asccidoc"
771,0,"Patch Set 2: Code-Review+1(9 comments)Looks good.  Apologies for the delay.  I would have liked to get to this one sooner, but it's been really busy.I've made some suggestions inline."
781,1,"Patch Set 6:In the latest patch set I removed the api filters and just implemented the ITextViewer interface, which leads to a pretty long static inner class in the test, but allows us to omit the api filter file.What do you prefer?"
784,0,Patch Set 4:Now I've also added 3 tests for the FileRefHyperlink detector and resolved the other issues.
793,0,Change has been successfully rebased as c28f7d15e007e12209f3404e4190734a39f41bd6 by Benoit Maggi
797,0,Change has been successfully merged into the git repository by Eric Poirier
804,0,Change has been successfully merged into the git repository by Pascal Rapicault
806,0,"Patch Set 4:After further discussion with Jacques, it seems the best is to only keep the tooltip on the subject widget. I also added the update to the license."
812,0,Change has been successfully merged into the git repository by Thierry BLIND
819,0,Change has been successfully merged into the git repository by Benoit Maggi
822,0,Change has been successfully merged into the git repository by Gabor Bergmann
825,1,Patch Set 1:There seems to be something wrong with the recipes.ecore code generation at my machine - let's see whether it works on the build server.
830,0,Change has been successfully merged into the git repository by Alexander Kurtakov
833,0,Change has been successfully merged into the git repository by Mickael Istria
838,0,Change has been successfully merged into the git repository by vincent lorenzo
842,0,Change has been successfully merged into the git repository by Benoit Maggi
849,0,Change has been successfully merged into the git repository by vincent lorenzo
853,0,"Patch Set 1: Code-Review+1This is very good, but can we also have the file creation? It can help us catch hung state systems."
855,0,"Patch Set 1: Verified+1@genevieve, I think this is good to go."
857,0,Change has been successfully cherry-picked as 441a6e7fa14cd9ed8a0aeafead9a2f379fd67e30 by Genevieve Bastien
860,0,Change has been successfully merged into the git repository by Sravan Kumar Lakkimsetti
865,0,Change has been successfully merged into the git repository by Manoj Palat
869,0,Change has been successfully merged into the git repository by Ansgar Radermacher
875,1,"Patch Set 1:I would deprecate the nvl methods all utilities except ObjectUtility, because they are redundant."
879,0,Change has been successfully cherry-picked as e4a767db3c86a9873bf86d7f281dfdfac9f679b0 by Hannes Mueller
882,0,Change has been successfully cherry-picked as ec54b38cf1790b33e6a647fc10fc8fd33b63cd94 by Patrick B??nziger
887,0,Change has been successfully rebased as 62814f85e137f41b201272f78d00c99642cf4bdd by Florian Noyrit
890,0,Change has been successfully cherry-picked as 41fefa84fdcf27e3611cae8a7899d89d01ca1e2a by Judith Gull
894,0,Change has been successfully cherry-picked as 99e83aa7a365d6a169ebe285b35ce53cbd80ee54 by Judith Gull
896,0,Change has been successfully merged into the git repository by Nathan Ridge
898,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6443/ : UNSTABLE
901,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6442/ : UNSTABLE
906,0,Change has been successfully merged into the git repository by Nathan Ridge
910,0,"Patch Set 3:Thanks, Aur├®lien !I just applied the same change on an extra class."
911,0,Change has been successfully cherry-picked as 0557a9ab6649ee7cf8980ae950e0fec783b8ee83 by Xavier Coulon
915,0,Change has been successfully cherry-picked as de842ec4ca7f84ac270ccf8f151cd893f3aa8eff by Beat Schwarzentrub
923,0,Change has been successfully cherry-picked as 0caee877d24e76658b3a9ffec24d920225c3d7ea by Claudio Guglielmo
926,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/1203/ : UNSTABLE
928,0,Change has been successfully cherry-picked as 8322ee98a4f1276c176eff6108792599274cf6c3 by Matthias Villiger
932,0,Change has been successfully merged into the git repository by Sasikanth Bharadwaj
934,0,Change has been successfully merged into the git repository by Lars Vogel
936,0,"Patch Set 1:@ Lars, Once Bug 501742  is merged, when you have time, please feel free to review this guy.Thank you."
937,0,Patch Set 1: Code-Review+2 Verified+1Looks good. Waiting for the JDT merge.
940,0,"Patch Set 1:I see two issues with your patch. The first one is a blocker: You can't remove API because we don't plan for a major release.The other issue is that I don't like your ""pessimistic fall-back"" apporach to determine the absolute path of the file. What if the file exists in both possible locations? I imagine a more deterministic approach would be the introduction of a special syntax for config-folder-relative paths, for example ""@config/...""."
942,0,Change has been successfully pushed.
952,1,"Patch Set 4:Something is wrong with this review. Not sure what the status ""Not Current"" tells me. I can't do anything with it, so I cherry-picked it locally and will push it directly."
955,0,"Patch Set 1:@ Dani or Noopur, Would you be able to review this patch?Thank you."
957,0,Change has been successfully merged into the git repository by Noopur Gupta
960,0,Change has been successfully merged into the git repository by Lars Vogel
963,0,Change has been successfully merged into the git repository by Dirk Fauth
969,1,"Patch Set 5:> So to recap: rename the method, add a component to the commit > message, than I +1/+1. It passed stress test btw. It did before too > though. :SIt's pretty difficult to reproduce. I've seen it with machines under load, etc. But I see other failures too. Still, an improvement is better than nothing."
970,0,"Patch Set 5: Code-Review+2Agreed, wait for hudson!"
972,0,Change has been successfully cherry-picked as e4af2e9935d3cef9964a4476c88f1198e130cbcf by Marc-Andr├® Laperle
980,1,"Patch Set 4:So to recap: rename the method, add a component to the commit message, than I +1/+1. It passed stress test btw. It did before too though. :S"
990,0,Change has been successfully cherry-picked as 1d310b28f6e909e9dab7444259d3752eb7e7d9c1 by Marc-Andr├® Laperle
992,1,Patch Set 1:I am tempted to +2 this due to hudson's instability. question though: is there a way to make sure none of the plug-ins were forgotten?
993,1,"Patch Set 1:> I am tempted to +2 this due to hudson's instability. question > though: is there a way to make sure none of the plug-ins were > forgotten?This change updates all features versions to be the same as the release. It also updates the RCP and the doc plugins. This is done in a script, update_version.shThe ""code"" plugins are handled through the API tooling and we also do a best effort closer to release day to bump the service release number of modified plugins that have no API changes. This is also done in a script, check_plugins_changes.shThere is room for mistake because there could be bugs in the scripts but in the end, we just have to make sure that the features and the RCP display the right version."
998,0,Change has been successfully merged into the git repository by Doug Schaefer
1009,0,Change has been successfully merged into the git repository by Jacques Bouthillier
1019,0,Change has been successfully cherry-picked as a78037a8a8d40322ebbf4aa060f868e3c6a14a32 by Marc-Andr├® Laperle
1027,0,Change has been successfully merged into the git repository by Sergey Prigogin
1030,0,Change has been successfully merged into the git repository by Roland Grunberg
1036,1,"Patch Set 2:Build #11126 took 24 mb, every build takes 24mb. Did it build the wrong patch?"
1037,0,Change has been successfully cherry-picked as bca351b92e5ac04b8f98d1f0009b1820c089f0ff by Marc-Andr├® Laperle
1039,0,Change has been successfully cherry-picked as e6bc97822f0d6a1e17d992d13560245613df00c4 by Marc-Andr├® Laperle
1050,0,Patch Set 2: Code-Review+2If that allows working-around https://bugs.lttng.org/issues/1070 then great!
1051,0,Patch Set 2:> If that allows working-around https://bugs.lttng.org/issues/1070 > then great!I don't think it's the same. It's the path that's too long. Those tests use old MI format so the limit is 255 but in 3.0 there is no such limit. So it's really working around the limitation in MI < 3.0 which is not going to be fixed.
1055,0,Change has been successfully cherry-picked as 10e212f1bd0ed82e9f64a992d9137646e24639ee by Marc-Andr├® Laperle
1058,0,Change has been successfully cherry-picked as 0bcbd422efb2b9face1e2ceb62e89e6eaaacdf94 by Jeff Johnston
1066,0,Change has been successfully cherry-picked as bc84ff5815a0ecd98424cd53ccd88f10898440ac by Matthew Khouzam
1070,0,Patch Set 1: Code-Review+2seems good
1073,0,Change has been successfully rebased as 230d3053afae0f2a6ae9b8344f66ac994779dd3b by Sam Davis
1076,1,"Patch Set 2: Code-Review+1It doesn't break anything. The bug is _hard_ to reproduce, but I think I understood by code inspection."
1078,0,Change has been successfully cherry-picked as 9597a3b53931e8e6ade3c8d59534a8918a0d25e8 by Patrick Tasse
1079,1,"Patch Set 3:> It doesn't break anything. The bug is _hard_ to reproduce, but I > think I understood by code inspection.I didn't :p"
1082,0,"Patch Set 5: Code-Review+1I am fine with this, please remember to update the manuals at the end of this chain."
1084,0,Change has been successfully cherry-picked as 968b0216b769dbdd8e7c553d8ae667d87890e43a by Patrick Tasse
1094,0,Change has been successfully cherry-picked as 516a0f0f213544918ace0b0b80b224c215abf95d by Marc-Andr├® Laperle
1098,1,"Patch Set 1:No, it's a race condition between the 2 ways to update that view (see https://git.eclipse.org/r/#/c/83526/7 to fix that). And the waitViewReady will return when the CommonXYChart is not dirty anymore, but the scatter viewer is still dirty. Probably if you make the compacting job sleep, it will fail all the time."
1105,0,Change has been successfully merged into the git repository by Stefan Xenos
1108,0,Change has been successfully merged into the git repository by Doug Schaefer
1111,0,Change has been successfully merged into the git repository by Sergey Prigogin
1117,0,Change has been successfully pushed.
1121,0,Change has been successfully cherry-picked as 252e671bf0c4d643cfaab489a0dd326b011a3b85 by Jeff Johnston
1126,0,Change has been successfully pushed.
1134,1,"Patch Set 4:NOTE : The reason there were some build issues is likely because this patch was #3 in a series of others to do other stuff (eg. add newer httpcore/client), but since it modifies existing stuff I wanted to have it first. Likely I missed some things in the rebasing."
1136,0,Change has been successfully merged into the git repository by Roland Grunberg
1139,0,Change has been successfully merged into the git repository by Brian de Alwis
1142,0,Change has been successfully merged into the git repository by Ansgar Radermacher
1145,0,Change has been successfully rebased as 4267d2acbf4eb1810d4e199dd3a294ba1c64e3d7 by Benoit Maggi
1149,0,"Patch Set 1:I was wrong the code works fine. My bad. But If I use the code from CustomizableDelegatingItemLabelProvider, I introduce uml dependancies  to infra"
1157,0,Change has been successfully merged into the git repository by Jan-Philipp Stegh??fer
1162,0,Change has been successfully merged into the git repository by Andras Szabolcs Nagy
1165,0,Change has been successfully merged into the git repository by Thomas Watson
1168,0,Change has been successfully merged into the git repository by Yogesh Manware
1171,0,Patch Set 1:Yes please! Thanks!
1173,0,Change has been successfully merged into the git repository by Benoit Maggi
1175,1,Patch Set 1: Verified+1@Philip: Can I merge this one?Verified by https://hudson.eclipse.org/papyrus/view/InformationModeling/job/papyrus-informationmodeling-gerrit/55/(HIPP seems to forget to report :( )
1176,0,Patch Set 1:Yes please! Thanks!
1178,0,Change has been successfully merged into the git repository by Benoit Maggi
1181,0,Change has been successfully merged into the git repository by Benoit Maggi
1184,0,Change has been successfully merged into the git repository by Benoit Maggi
1187,0,Change has been successfully merged into the git repository by Laurent Delaigue
1190,0,Change has been successfully merged into the git repository by Kaloyan Raev
1192,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6166/ : UNSTABLE
1193,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6125/ : UNSTABLE
1195,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6247/ : UNSTABLE
1198,0,"Patch Set 4:The discussion was around having the possibility to select the inverted colors from the preference page in addition to the original action.After agreeing that it should be present in the preference page, you suggested to then remove the actual action from the console pages.We decided to leave the removal as a separate commit in case we change our mind.So this is the best time re-consider :-)"
1201,0,Patch Set 5: Code-Review+2 Verified+1looks good.
1204,0,Change has been successfully rebased as 5ab506c95eb609d8a209570351491c5491993f13 by Alvaro Sanchez-Leon
1206,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6064/ : UNSTABLE
1210,0,Change has been successfully merged into the git repository by Thomas Watson
1213,0,Change has been successfully merged into the git repository by Sergey Prigogin
1217,0,Change has been successfully merged into the git repository by Lars Vogel out-of-office until 21.10.2016
1222,0,Change has been successfully merged into the git repository by Christopher Guindon
1229,0,Change has been successfully merged into the git repository by Lars Vogel out-of-office until 21.10.2016
1232,0,Change has been successfully rebased as 6f243ab3e3cb0b54df183e5c98452f8b552efcec by Sam Davis
1239,0,Change has been successfully merged into the git repository by Christopher Guindon
1242,0,Change has been successfully merged into the git repository by Michael Rennie
1249,1,Patch Set 5:Rebased in hope that hudson wakes up.Realized that it was because hudson was overwhelmed.
1250,0,"Patch Set 5: Code-Review+2 Verified+1Previously approved, thanks for the review!"
1251,0,Change has been successfully cherry-picked as bcd8d4b12d6c8e7de2b48064e4bd629714047341 by Alexandre Montplaisir
1257,1,"Patch Set 1:Bernd, Matthew, any fundamental objection to the idea of the patch or can I assume this will go in eventually and I can base some work on it (like the custom charts)?"
1258,0,Patch Set 1:(Maybe not important) I did a quick look at the patch. I like the idea of this patch. It brings more genericity to TC also as better handling of latency views. Let's wait for the others opinion before starting the review process.
1259,1,"Patch Set 1:(5 comments)I like the approach. Some observations that I added as comments. I guess you will work on the patch more to remove the existing views and the title. Then we can do a formal review.Just as note, users that have the current Syscall Latency view open, will get an error message that the view was removed after upgrading this change. I don't think we can avoid that."
1260,0,Patch Set 1:(1 comment)Thanks for the review. Do you want the removal of the system call latency table and XML view in this same patch? I was thinking to do patches above this one for that so that each one is well scoped (there are swtbot tests for latency view to change as well)
1261,0,Patch Set 1:> (1 comment) >  > Thanks for the review. >  > Do you want the removal of the system call latency table and XML > view in this same patch? I was thinking to do patches above this > one for that so that each one is well scoped (there are swtbot > tests for latency view to change as well)Separate patch is fine with me.
1273,0,"Patch Set 5:Ok, the icons should be moved progressively, but I am fine with them all arriving now."
1277,0,"Patch Set 6:screencast maybe? I did the same with trace2, as I do not have the robot trace, and it works fine."
1285,0,Change has been successfully cherry-picked as 781ba0c515925f449cffc99ae4c5b4ca142e4b9f by Genevieve Bastien
1288,0,Change has been successfully merged into the git repository by Thomas Watson
1291,0,Change has been successfully merged into the git repository by Christian Pontesegger
1295,0,Change has been successfully merged into the git repository by Jacques Bouthillier
1298,0,Change has been successfully merged into the git repository by Thomas Watson
1302,0,Change has been successfully merged into the git repository by Ernesto Posse
1305,0,Change has been successfully merged into the git repository by Alois Zoitl
1308,0,Change has been successfully merged into the git repository by Alois Zoitl
1311,0,Change has been successfully merged into the git repository by Alois Zoitl
1314,0,Change has been successfully merged into the git repository by Alois Zoitl
1317,0,Change has been successfully cherry-picked as c827e96ffeb7fa750da95fcce6b3d06bc3d4864a by Matthew Khouzam
1329,0,Change has been successfully merged into the git repository by Guy Perron
1333,0,Change has been successfully merged into the git repository by David Williams
1335,1,Patch Set 7: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6323/ : UNSTABLE
1337,0,Patch Set 13: Verified+1 Code-Review+2Patchset 13 looks good to me.
1338,1,Patch Set 13: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6391/ : UNSTABLE
1341,1,Patch Set 14: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6392/ : UNSTABLE
1342,0,Patch Set 14: Code-Review+2 Verified+1Thanks Marc D. and Marc K. for your thorough reviews !
1343,0,Change has been successfully merged into the git repository by Alvaro Sanchez-Leon
1345,1,Patch Set 5: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6248/ : UNSTABLE
1347,0,Patch Set 5:(8 comments)looking good
1355,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6063/ : UNSTABLE
1359,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6124/ : UNSTABLE
1363,1,Patch Set 11: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6376/ : UNSTABLE
1365,1,Patch Set 6: Code-Review-1(1 comment)Oops- I added a problem with my previous patch. Will send a new one
1368,1,Patch Set 9: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6370/ : UNSTABLE
1375,0,Change has been successfully merged into the git repository by David Williams
1378,0,Change has been successfully merged into the git repository by Pierre-Charles David
1381,1,"Patch Set 1:This is the only test we do to test a dynamic menu and seems it does not work for some reasons, I agree with you then, we should remove the test and have the others test executed"
1385,0,Change has been successfully merged into the git repository by Pascal Rapicault
1390,0,Change has been successfully merged into the git repository by Laurent Redor
1393,0,Change has been successfully merged into the git repository by David Williams
1396,0,Change has been successfully merged into the git repository by Pierre-Charles David
1399,0,Change has been successfully merged into the git repository by Alois Zoitl
1402,0,Change has been successfully merged into the git repository by Alois Zoitl
1407,0,Change has been successfully merged into the git repository by Scott Lewis
1410,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
1415,0,Change has been successfully merged into the git repository by Benoit Maggi
1420,0,Change has been successfully merged into the git repository by David Williams
1423,0,Change has been successfully merged into the git repository by David Williams
1426,0,Change has been successfully merged into the git repository by David Williams
1429,0,Change has been successfully merged into the git repository by David Williams
1432,0,Change has been successfully merged into the git repository by David Williams
1434,0,"Patch Set 1:Do we really need a special section like ""Special Situations"" to describe this? IMHO adding we can add it similar to ""Host"""
1438,0,Change has been successfully merged into the git repository by Sarika Sinha
1445,0,Change has been successfully merged into the git repository by Maxime Porhel
1456,0,Change has been successfully merged into the git repository by Pierre-Charles David
1459,0,Change has been successfully merged into the git repository by Laurent Delaigue
1465,0,Change has been successfully cherry-picked as 5e5db53423ace0486b822f0d97658990fd107034 by Matthew Khouzam
1468,0,Change has been successfully merged into the git repository by David Pursehouse
1471,0,Change has been successfully merged into the git repository by Christian W. Damus
1474,0,"Patch Set 6: Code-Review+2 Verified+1Nice reduction on GdbFullCliConsolePage, Thanks Marc K. !!"
1476,0,Change has been successfully rebased as 1cfa38948ccbdac251140a8f498eda53c2542c26 by Alvaro Sanchez-Leon
1478,0,Patch Set 5:(10 comments)Excellent patch!My only comments are about names of classes and variables.I also noticed we can simplify the GdbFullCliConsolePage class.I'll post those fixes so you can tell me what you think.
1481,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6250/ : UNSTABLE
1486,0,"Patch Set 1: Code-Review-1Could you add a unit test for this please? Very many unit tests have their own delete Supplementary file small method (at least, I've copy pasted it at least a dozen times ;-) They will all be using this now!Also, this method is using the old io library, while new code should aim to rather use the java.nio library. That said, we don't really enforce that and the ""delete files in directory"" use case is much more verbose with nio than this one-liner. But I know you usually prefer the new and hipster way, so I'll just highlight this here with no obligation ;-)"
1487,0,"Patch Set 1:You know me well ;) I did try to use Path/Files/nio at first, but this particular operation is *very* verbose with nio, DirectoryStream and whatnot and handling exceptions endlessly.Although note that FileUtils is part of Apache Commons (which was already used by this plugin, so I didn't even have to add the dependency!) and it does exactly what we want in a one-liner. It makes sense to just use that. If a future version of that lib allows using a Path directly, even better."
1493,0,Change has been successfully cherry-picked as cad998a77667bc8e7ae27d9c9124f098fdebb9ec by Alexandre Montplaisir
1494,0,"Patch Set 4:> I'm wondering if we should be running those jenkins builds at all.It's somewhat useful to me, as I have some private jobs that are based on that one that I can use to run tests before pushing patches to Gerrit. Also, Mac and Windows coverage, which we do not have anywhere else.With this new build property, I'll split a new column that runs just the ""unit"" tests, and another one that runs all the tests. So at least we'll be able to differentiate between ""it's completely broken"" and ""works except for the known UI test flakiness""."
1502,0,"Patch Set 1:> The better way to do it would be to sort the tests by duration and pick the ones that take over a threshold.> I think it'd be better to call them ""slow tests"". The line for integration tests is not very clear and too open for debate. What do you think?Slow tests are good, I would then love to study which ones are slow in core too. We have some that have huge room for improvement, like the scheduler tests."
1503,0,Patch Set 1:> Perhaps -Dskip-ui-integration-tests would be a better name?How about -Dskip-automated-ui-tests ? I'd like to have no ambiguity about what should go in or not.
1507,0,"Patch Set 3:Yeah so we're kinda stuck until https://issues.apache.org/jira/browse/MNG-3328 gets fixed. We're trying to activate profile based on a OR of several conditions ((!property1) OR (!property2)), and that is just not currently supported.Here's an alternative solution, which makes -Dskip-rcp only work if -Dskip-automated-tests is also passed. If the automated tests are asked for, it will build the RCP so it can run them. Not ideal, but I think it's an ok stopgap solution. Thoughts?"
1510,0,"Patch Set 3:> We haven't add a successful TC build in weeks. If at least we can > get *some* of the rows showing green, this can give some baseline > that we can use for testing our patches against. Right now our > Trace Compass job is honestly just burning CPU cycles for nothing.I'm wondering if we should be running those jenkins builds at all. We don't seem to have the manpower available to take care of maintaining them. Sometimes I look at them on a rainy Saturday. It's somewhat interesting to me as additional data points, but that's about it."
1511,0,Patch Set 3:Thanks for the review!
1512,0,Change has been successfully cherry-picked as c682d4064f08adbdc1cda65af449cfcac470e2a3 by Alexandre Montplaisir
1515,0,"Patch Set 6: Code-Review+1 Verified+1(1 comment)looks good to me, just a comment on code not from this patch, so it can be done separately."
1518,0,Change has been successfully cherry-picked as b6fddb839ef7b61c5a418a5e05091c52b3d25c67 by Matthew Khouzam
1527,1,Patch Set 2:I'd be very very happy to test and approve this patch if it can make the test not fail. I had 2 patches fail on that test just today.
1529,1,"Patch Set 4: Code-Review+1 Verified+1This makes the test more robust. And no other side-effect that I can notice, though randomly cancelling analyses in the progress view is not without side-effect, especially when cancelling an analysis others depend on... More bugs to fix!"
1531,0,Patch Set 4:Go for it!
1532,0,Patch Set 4:Hello hudson!
1535,0,Change has been successfully cherry-picked as 1a01cbfd2acf7daf9b9deaeb1549ead48b47ed17 by Matthew Khouzam
1538,0,Change has been successfully merged into the git repository by Andrey Loskutov
1541,0,"Patch Set 2: Code-Review-1(1 comment)I'm pushing a patch (and publishing!) with additional unit tests for various comparators. My previous comments about supporting also sorted iterators for the other iterator methods are still valid.Also should the segments store all be sorted by start time by default, or is the order irrelevant, one can always sort from the view if they wish. I'd be tempted to say the latter, but the code seems to scream the former, though the javadoc of the segment store makes no comment about the default ordering."
1543,0,Patch Set 6:(1 comment)I like this
1552,0,Change has been successfully cherry-picked as def1d9d0cd83d812a3d19ef72860c188e1a830ba by Jean-Christian Kouame
1554,1,"Patch Set 3:commit msg: garantied -> guaranteedJust the sampling method of the clock offset has an intrinsic error, which explains why kernel vs UST offsets differ.You could state that babeltrace 1.x also does this.You could special-case this average work-around to lttng traces."
1558,0,"Patch Set 3: Code-Review-1(1 comment)It is not so bad to have it automatic. People doing kernel and ust traces will not expect to have to click the synchronize button for traces taken on the same host (I wouldn't!). So unless the synchronization is automatic, it can be out of the synchronization API.Also the trace-sync does an event request and expects to match events from the various traces. The trace-sync will have to be modified for this trace-wide scenario. Also the new synchronized kernel/ust blob of traces may need to be synchronized with another host entirely through network packet. This will have to work as well, adding the 2 sync formulae.Also, some issues to fix for more seemless experience."
1559,1,"Patch Set 3:Alright so I've looked into this a bit. The trace-synchronization mechanisms did seem like a good fit, however a lot of work would be required to that to be able to do what we want to do (make it usable with different sync algos, provide an extension point, have a UI for the user to choose which algo(s) to use, etc.) A bit outside of the scope of the bug we're trying to fix here.The approach used here has some limitations, namely that if a trace is used inside different experiments at the same time, the timestamp corrections would stack and apply for all instances of the trace. Not ideal, but that may not be an important use case (the main use case being a UST+kernel trace inside a single experiment).If you don't mind I can take over this patch, brush it up, add some test traces and tests, and we can propose it this form. At least short term the very common use case of kernel + ust traces will be fixed."
1560,1,"Patch Set 3:It's open source, do whatever you want. If you would rather, I can abandon this patch and you can write a new one from scratch."
1561,0,"Patch Set 3:Whoever ends up working on this patch, I'd like that my comments that I put a -1 for are taken into account... Or I'll put a -1 again :p"
1564,0,Patch Set 11: Code-Review+1(1 comment)Still fine with me and even better than last time I +1ed it!
1565,1,"Patch Set 11:The clocks may also be sampled using different techniques. See Mathieu D for details    I see this comment on the top page, but not in the Commit Message one. Weird? What should be reworded/added?Just the sampling method of the clock offset has an intrinsic error, which explains why kernel vs UST offsets differ.""sampling method of the clock offset has an intrinsic error"""
1568,1,"Patch Set 11: Code-Review-1About commit message:""This clock always increments, but the rate is not guaranteed.""^ not true. The rate is guaranteed. What do you mean ?""If it is sampled at different intervals"" -> It's the correlation between monotonic and realtime clocks that are sampled, not just the monotonic clock. This sentence is misleading.""an NTP correction or other clock adjustement occurs, there can be a skew. "" -> sentence syntax incorrect. Plus, both monotonic and realtime clocks are adjusted with the exact slope factors. Now sure what you mean.""with matching the host ID"" -> remove ""the""There are offset_s and offset fields that need to be taken into account. What is described here is not CTF compliant.""when other descriptions of a monotonic clock arrive, this will be handled in a clock layout."" -> no whack-a-mole please."
1572,0,"Patch Set 8: Code-Review-1(2 comments)Thanks, all the tests pass now! I'll just fix the double-rounding-average problem."
1575,0,"Patch Set 9: Code-Review+1 Verified+1(4 comments)Except for my rant, thank you for reading, this patch looks fine.I have one last point of discussion, but any change there can be done in a separate patch, as if we move the delete Supp files to TmfTrace, we may need some unit tests and other to make sure it all still works fine."
1588,0,Change has been successfully cherry-picked as 472ea248a0bba4cee7ee055b4a4d676e1bf2dda1 by Alexandre Montplaisir
1593,1,"Patch Set 6: Code-Review-1(1 comment)19 out of 20 tests failed because I was lazy and didn't even run them knowing it would fail, but one, the first failure is legit and due to this patch, or at least this patch should make sure it passes."
1598,0,"Patch Set 4:(4 comments)Thanks for the comments, I'll wait until we get to this patch in the branch to update it."
1599,1,"Patch Set 4:(1 comment)I added a test to patchset 5 that will fail now, but should not. Showing that this patch, over trace synchronization will not behave correctly.There is also the other way around: trace synchronization over this patch, will not work correctly because it sets the timestamp transform instead of composing it, but that is for another patch to test and fix."
1607,1,"Patch Set 10:(5 comments)The stream-related utility method in StreamUtils seems to trigger everyone for some reason, so I'll keep the code in TmfExperiment.> The clocks may also be sampled using different techniques. See Mathieu D for detailsI see this comment on the top page, but not in the Commit Message one. Weird? What should be reworded/added?"
1609,1,"Patch Set 7: Code-Review-1Ok so, I folded the new tests back into this patch, and I've added some try/finally blocks so that the disposes happen all the time, which should isolate failures of these tests.There is still one failure remaining, and I am not sure how it's supposed to be fixed, see my comment just before this one."
1613,0,Change has been successfully merged into the git repository by Ernesto Posse
1616,0,Change has been successfully cherry-picked as abdcc7b3450a4a29d884b0ae447bbcbc7491632b by Jean-Christian Kouame
1618,1,"Patch Set 7:I've tested the latest patch-set, and the new feature org.eclipse.emf.compare.rcp.ui.feature.group gets installed as expecred. Still we get the wrong EGit/EMF Compare stuff due to the too old contents in the integration repos. But this is a known issue and let's wait for the integration repos to be updated."
1625,0,Change has been successfully merged into the git repository by Christian W. Damus
1650,0,"Patch Set 4: Code-Review+1I tested to pull the latest patch-set, and restarted my installation. Oomph was intelligent enough to detect the two new added features and popped up a dialog asking for installation of these new features (I have never seen this dialog before in corresponding scenarios, must be some new improved behavior in Oomph). Anyway, I think that we are close of getting this one completed. The only thing left is to actually get the 0.8 repo completed, and make the final update to the setup file to reference the release repo."
1651,0,"Patch Set 4:(2 comments)It looks good, but a recent (2016-10-18 10:30) email from Ernesto may change some of the content, which I have highlighted in the comments. This would have to be coordinated with the RCP creation."
1664,0,"Patch Set 8:(In reply to comment #40)> Uploaded patch set 8.It occurred to me that, as the repository URLs determine which versions of software are available to install, it would be best to put those in the product versions, not in the product (parent) node.  That also means that we can remove version range constraints from the requirements because we would like to get always the latest service release of the selected minor release.With the exception of the Oomph update URL, which may as well always just be the latest until we figure out how their compatibility story is going forward."
1670,0,Change has been successfully merged into the git repository by Ernesto Posse
1673,0,Change has been successfully merged into the git repository by Sergey Prigogin
1676,0,Change has been successfully merged into the git repository by Ernesto Posse
1678,1,Patch Set 1: Code-Review+1 Verified+1Can't reproduce the bug that these lines were fixing. Maybe the initial problem is gone. We can remove them for now.
1679,1,Patch Set 1: Code-Review+2Thanks for the review. I guess what this solves is more major than the bug this code was originally written for.
1680,0,Change has been successfully cherry-picked as 8cbbdf920cb9806aa12adf529138ac1d9154e127 by Genevieve Bastien
1684,0,Change has been successfully merged into the git repository by Ernesto Posse
1686,0,"Patch Set 3:(4 comments)Looks good, with just some minor correction in installer URLs.One question:  where did you get the OS icons?  Are they provided by the OS vendors with license for use for this purpose?  I'm thinking that the Apple and Windows logos, in particular, are so accurate as to be subject to protection."
1689,0,Change has been successfully merged into the git repository by Ernesto Posse
1695,0,"Patch Set 1:> From technical point of view, this patch is good. > Doesn't break any jUnit test cases. >  > From deprecation perspective, I'm not 100% sure how to deal with > deprecations. Alex?Adding Alex for Review."
1699,0,Patch Set 2: Code-Review+2 Verified+1There was no reply on SWT mailing list.This patch looks good to me. It's really good to get rid of old and unused code. Merging.
1700,0,Change has been successfully merged into the git repository by Leo Ufimtsev
1704,0,Change has been successfully merged into the git repository by Christian W. Damus
1708,0,Change has been successfully rebased as e56e180f754c03ab690aab82b8d41fef02fc7ac1 by Benoit Maggi
1713,0,Change has been successfully merged into the git repository by Laurent Delaigue
1715,1,"Patch Set 2: Code-Review-1(1 comment)Nice catch!I think your patch contains a useless modification and can thus be simplified, but congrats for detecting & fiwing this problem!"
1717,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1177/ : UNSTABLE
1719,0,Change has been successfully merged into the git repository by Andrey Sobolev
1722,0,Change has been successfully merged into the git repository by Benoit Maggi
1731,0,Change has been successfully merged into the git repository by Niraj Modi
1738,0,Change has been successfully merged into the git repository by Laurent Redor
1745,0,Change has been successfully merged into the git repository by Laurent Delaigue
1747,0,Change has been successfully cherry-picked as 7e952fa20657441f2812ee0c81ac38a614d97718 by Claudio Guglielmo
1757,0,Change has been successfully cherry-picked as a54a6c07a7eb12e243013d4c84dcaff1c3cf3360 by Claudio Guglielmo
1763,0,Change has been successfully merged into the git repository by Lars Vogel out-of-office until 21.10.2016
1776,0,Change has been successfully merged into the git repository by Maxime Porhel
1778,0,Change has been successfully merged into the git repository by Maxime Porhel
1790,0,Change has been successfully merged into the git repository by Michal Niewrzal
1794,0,Change has been successfully rebased as 8d461ef1b814327dc9763a754a749afdbb73ae2e by Benoit Maggi
1796,0,"Patch Set 2: Code-Review-1Works fine :) small typos in the preference pagePreferences:  - the field is initiated with 0 when starting a fresh workspace - export the string to a property message file - Replace ""Expand All at Selection Action"" by Expand - add a tooltip to ""Expand All at Selection Action"" saying ""The expand function is available in model explorer with the + button""  - Replace ""Expand all max level (-1 for infinite)"" by ""Max level"" - add a tooltip to """"Expand all max level (-1 for infinite)"" saying ""You may use -1 to allow infinite level but it won't work on recursive model"""
1803,0,Change has been successfully merged into the git repository by Sarika Sinha
1806,0,Change has been successfully merged into the git repository by Sravan Kumar Lakkimsetti
1808,1,"Patch Set 1:Kevin Corcoran took over https://git.eclipse.org/r/#/c/69292/ from me, so this is identical to that patch. https://git.eclipse.org/r/#/c/69292/ was abandoned in favor of this."
1817,0,Change has been successfully merged into the git repository by David Pursehouse
1819,0,Change has been successfully pushed.
1822,0,Change has been successfully merged into the git repository by Pierre-Charles David
1826,0,Change has been successfully merged into the git repository by Subodh Godbole
1829,0,Change has been successfully merged into the git repository by Henrik Rentz-Reichert
1832,0,Change has been successfully merged into the git repository by Lars Vogel out-of-office until 21.10.2016
1835,0,Change has been successfully merged into the git repository by Henrik Rentz-Reichert
1839,0,Change has been successfully merged into the git repository by Subodh Godbole
1842,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
1847,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
1850,0,Change has been successfully merged into the git repository by Matthias Sohn
1863,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6324/ : UNSTABLE
1865,0,Change has been successfully merged into the git repository by Nathan Ridge
1869,0,Change has been successfully merged into the git repository by David Pursehouse
1872,0,Change has been successfully merged into the git repository by Matthias Sohn
1876,0,"Patch Set 1: Code-Review+1I like the idea. I'm not sure if we could enable this on our Gerrit servers because we run gc from a different machine to not take resources from Gerrit server but still, I like the idea of automatically running gc if loose objects exceeds a threshold."
1892,0,Change has been successfully merged into the git repository by Matthias Sohn
1897,0,Change has been successfully merged into the git repository by Nathan Ridge
1900,0,Change has been successfully merged into the git repository by Jay Arthanareeswaran
1902,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
1904,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
1906,0,Change has been successfully merged into the git repository by Jan Sievers
1911,0,Change has been successfully merged into the git repository by Sergey Prigogin
1913,0,Change has been successfully merged into the git repository by Sergey Prigogin
1919,0,Change has been successfully merged into the git repository by Christopher Guindon
1921,0,Change has been successfully merged into the git repository by Sergey Prigogin
1927,0,Change has been successfully merged into the git repository by Christopher Guindon
1933,0,Change has been successfully cherry-picked as cd936d77ef9ad18ee739f2bf59ab5df29b3fed2e by Bernd Hufmann
1950,0,Change has been successfully cherry-picked as 6120dc638d8ea1aaca8dee3b4a0244d582c4b241 by Marc-Andre Laperle
1952,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6341/ : UNSTABLE
1956,0,Change has been successfully rebased as e76ec05aabc57886c6a832cbacf8a84fa88fee4c by Doug Schaefer
1959,0,Change has been successfully merged into the git repository by Katharine Hirsch
1962,0,Change has been successfully cherry-picked as 7d8ec39c3b4c3c06dd98f59ca969a569fce8f0fe by Jeff Johnston
1965,0,Change has been successfully merged into the git repository by Megumi Telles
1972,0,Patch Set 2: Code-Review-1Is this a good commit for a few tuple tests?
1978,0,Change has been successfully merged into the git repository by Pascal Rapicault
1988,1,Patch Set 5: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6337/ : UNSTABLE
1990,0,Change has been successfully merged into the git repository by Jonah Graham
1996,0,Change has been successfully merged into the git repository by Megumi Telles
2001,0,Change has been successfully merged into the git repository by vincent lorenzo
2005,0,Change has been successfully merged into the git repository by Matthias Sohn
2008,0,Change has been successfully merged into the git repository by Matthias Sohn
2011,0,Change has been successfully merged into the git repository by Steve Monnier
2021,0,Change has been successfully cherry-picked as cdfe10e7096bf98050a9a32104e2756d4bfbe463 by Patrick Tasse
2039,0,Change has been successfully merged into the git repository by Celine Janssens
2041,1,Patch Set 2: Code-Review+1Yes I got you ! ;)I think :s
2045,0,Change has been successfully rebased as 49e33b5be8246356a280b57719f2377f98e05edd by Thierry BLIND
2049,0,Change has been successfully merged into the git repository by Scott Lewis
2052,0,Change has been successfully merged into the git repository by Dani Megert
2058,0,Change has been successfully cherry-picked as b31ea9298667d0124f763dbfb57881d637d659cc by Andre Wegmueller
2061,0,Change has been successfully merged into the git repository by Benoit Maggi
2064,0,Change has been successfully cherry-picked as 7fe1280714fe1d4d205f6cd7fa62a7ff835d2a46 by Andre Wegmueller
2066,0,Change has been successfully merged into the git repository by Megumi Telles
2075,0,Change has been successfully rebased as 3278cc73a27b664bbd23fd4065521d8d6824e88b by Benoit Maggi
2078,0,Change has been successfully merged into the git repository by Benoit Maggi
2080,0,"Patch Set 4:@Dawid, is this patch ok for you? I like the fact that it remains light ;)Though, it doesn't cover the constant importing feature (PHP 5.6+), maybe it already works correctly, I never used and tested this feature:use const My\Full\CONSTANT;"
2082,0,"Patch Set 4:> yes, it's ok for meGreat, thank you Dawid :)"
2085,0,Change has been successfully rebased as bc2af39be75d43013710140a0c6882c70ffea0af by Thierry BLIND
2093,0,Change has been successfully cherry-picked as f3023b37caa4b21e15da5baf57641c6c4cf52a89 by Patrick Tasse
2096,0,Change has been successfully merged into the git repository by Alois Zoitl
2101,0,Change has been successfully merged into the git repository by Andrey Sobolev
2102,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1175/ : UNSTABLE
2105,0,"Patch Set 1:I discussed 2 minutes ago with C├®line, she will create a job so we can test the new RCP with this fix.If that is the good fix, I would be happy for the weekend ;-)"
2108,0,Change has been successfully merged into the git repository by Remi Schnekenburger
2111,0,Change has been successfully merged into the git repository by Alois Zoitl
2114,0,Change has been successfully merged into the git repository by Alois Zoitl
2117,0,Change has been successfully merged into the git repository by Alois Zoitl
2120,0,Change has been successfully merged into the git repository by Alois Zoitl
2123,0,Change has been successfully merged into the git repository by Christian W. Damus
2133,0,"Patch Set 8:> now the tests run and your new test fails.  That's progress!  :-)Yes, and now the test succeeded :)"
2135,0,"Patch Set 8:> (1 comment):) I don't know !! I find it in my gerrit stanging view, I add it to the commit ;) I should have ignore it."
2138,0,"Patch Set 9:> I rebased on master, and it seems that the previous build error > dealing with wrong wk path is raised gain, build failed Caused by: > org.apache.maven.plugin.MojoFailureException: The explicit location > /jobs/genie.papyrus-rt/Papyrus-RT-Gerrit-RCPTT/workspace/source/releng/org.eclipse.papyrusrt.rcptt/../../../../../Papyrus-RT-Master-Product/lastStable/archive/source/releng/org.eclipse.papyrusrt.product/target/products/org.eclipse.papyrusrt.product-linux.gtk.x86_64.zip > is not validNo, that's the right location.  Probably the product ZIP file just actually wasn't there (temporarily?).  I suspect it was just bad timing, that re-triggering the build would see it work fine.But, in any case, it looks like you deleted the wrong rcptt.properties file?  That could be a hint as to why RCPTT created another one for you that snuck into this patch:  that somehow you have imported the RCPTT project into your workspace in the wrong way.  Did you import the org.eclipse.papyrusrt.rcptt project into your workspace or did you import the whole git repository as a project?"
2140,0,"Patch Set 2:> The RCPTT build is broken, seems to deal with some wrong path :I've merged a fix for the RCPTT runner's location of the AUT, so now the tests run and your new test fails.  That's progress!  :-)"
2147,1,"Patch Set 12:Hello, it seems that all rcptt test fails Cause: Failed to set selection: [[CapsuleAndProtocol, model.di]]."
2150,1,"Patch Set 10:Okay, so it appears that, in fact, the Product build is no longer archiving the RCP packages that it creates.  That's a problem for RCPTT!"
2151,1,"Patch Set 10:> Okay, so it appears that, in fact, the Product build is no longer > archiving the RCP packages that it creates.  That's a problem for > RCPTT!They are still being built, but the product ZIP filenames have changed, so the archive configuration of the Product job needs to be updated.  I have fixed the job configuration and will re-trigger this Gerrit build when the new Product archives are ready."
2152,1,"Patch Set 10:> > Okay, so it appears that, in fact, the Product build is no longer > > archiving the RCP packages that it creates.  That's a problem for > > RCPTT! >  > They are still being built, but the product ZIP filenames have > changed, so the archive configuration of the Product job needs to > be updated.  I have fixed the job configuration and will re-trigger > this Gerrit build when the new Product archives are ready.Yes I'm working on it... don't worry ... it will be back to normal soon ;)"
2153,1,"Patch Set 10:> But, in any case, it looks like you deleted the wrong > rcptt.properties file?  That could be a hint as to why RCPTT > created another one for you that snuck into this patch:  that > somehow you have imported the RCPTT project into your workspace in > the wrong way.  Did you import the org.eclipse.papyrusrt.rcptt > project into your workspace or did you import the whole git > repository as a project?Yes. In my workspace I imported all the releng folder :) to see all projects including the org.eclipse.papyrusrt.rcptt."
2154,0,"Patch Set 10:Hi Asma, The Path for the AUT in the RCPTT pom should be updated in order to point to the new Product bundle. the good path should be ..../releng/rcp/oeprt.rcp.product/target/....I'm nearly ready to commit the fix, but if you want to test quickly this is the solution.Regards"
2158,0,Change has been successfully merged into the git repository by Jan-Philipp Stegh??fer
2161,0,Change has been successfully merged into the git repository by Christian Pontesegger
2163,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
2165,1,"Patch Set 2:Just changing it doesn't work since p2 doesn't populate the OS/WS/Arch (it's bug 505808). However, the API is in place and can already be used by Tycho to prepare for p2 to populate it.So it's only one part of the fix, and both parts (p2 and Tycho) can be fixed independently."
2169,0,Change has been successfully merged into the git repository by Jan Sievers
2170,0,Patch Set 3:Build SUCCESSFUL. Now starting integration tests...
2175,0,"Patch Set 20:(2 comments)> Brian, any more concerns except the reparenting issue? If not I > plan to merge it end of this week, after having tested the > reparenting.I'm good; just a teeny tweak.  Thanks for tackling this!"
2178,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10781/ : UNSTABLE
2180,0,Patch Set 12:(5 comments)Looking good!  A few comments and one question.
2188,0,Patch Set 17:Tests are running fine locally from the IDE. I now run the build via Tycho locally.
2196,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10771/ : UNSTABLE
2201,1,Patch Set 11: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10785/ : UNSTABLE
2209,0,Change has been successfully merged into the git repository by Lars Vogel
2211,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10775/ : UNSTABLE
2212,0,"Patch Set 7: Code-Review-1(1 comment)I hadn't considered using an attribute ÔÇö great idea!  Could I suggest a shorter name ('inject=true/false'), as 'useDependencyInjection' is quite a mouthful and out-of-keeping with other attribute names used throughout the platform.We definitely need some tests for this too."
2218,0,Change has been successfully merged into the git repository by Mickael Istria
2221,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
2224,0,Change has been successfully merged into the git repository by Benoit Maggi
2225,0,Patch Set 2: Code-Review+2 Verified+1The code looks good and I verified it with the steps from https://bugs.eclipse.org/bugs/show_bug.cgi?id=505670#c0.How about some tests?
2226,1,"Patch Set 2:> How about some tests?That would be nice, but I don't have the time and energy for that.There's an inactive test suite org.eclipse.core.tests.net.SystemProxyTest, but all its tests are failing (at least on Linux). The code that prepends the ""http://"" is trivial, and if we need a test for that, then the project is doomed anyway."
2228,1,"Patch Set 3: Code-Review+2 Verified+1> > How about some tests? >  > That would be nice, but I don't have the time and energy for that. >  > There's an inactive test suite org.eclipse.core.tests.net.SystemProxyTest, > but all its tests are failing (at least on Linux). The code that > prepends the ""http://"" is trivial, and if we need a test for that, > then the project is doomed anyway.Fair enough!"
2229,0,Change has been successfully merged into the git repository by Dani Megert
2235,0,Change has been successfully merged into the git repository by Celine Janssens
2239,0,Change has been successfully merged into the git repository by Celine Janssens
2241,0,Change has been successfully merged into the git repository by Mickael Istria
2246,0,Change has been successfully merged into the git repository by Mickael Istria
2248,0,Patch Set 2:It's also worth noting thata the new test did run successfully: https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10709/testReport/org.eclipse.ui.tests.api/IEditorRegistryTest/
2253,0,Patch Set 1: Code-Review+2 Verified+1All good.
2254,0,Change has been successfully merged into the git repository by Olivier Constant
2256,0,Patch Set 1: Code-Review+2 Verified+1All good.
2257,0,Change has been successfully merged into the git repository by Olivier Constant
2259,0,Patch Set 1: Code-Review+2 Verified+1All good.
2260,0,Change has been successfully merged into the git repository by Olivier Constant
2262,0,Patch Set 1: Code-Review+2 Verified+1All good.
2263,0,Change has been successfully merged into the git repository by Olivier Constant
2265,0,Patch Set 1: Code-Review+2 Verified+1All good.
2266,0,Change has been successfully merged into the git repository by Olivier Constant
2268,0,Change has been successfully merged into the git repository by Dani Megert
2271,0,Change has been successfully merged into the git repository by Lars Vogel
2273,1,Patch Set 2:> This patchset was reverted in change: Ie54afd343bd11da832bcf5994542ddbf40af9ceePlease ignore. Pushed the button on the wrong change.
2277,0,Change has been successfully merged into the git repository by Laurent Goubet
2282,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/9141/ : UNSTABLE
2283,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/9142/ : UNSTABLE
2285,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/9144/ : UNSTABLE
2286,1,"Patch Set 3:Changes from PS2:* Cosmetics in the handler activation expression. Children of an <adapt> expression are and-ed anyway.* The <activeEditorInput> expression needs to be guarded by a check that the active part indeed is an editor. <activeEditorInput> is also available when the active part is _not_ an editor...* Fix the visibility; the command was missing in the context menu of a text editor.I noticed a couple more problems with this command, but they are unrelated to this change (also exist without this change). See bug 505938, bug 505939, bug 505940."
2288,0,Change has been successfully merged into the git repository by Matthias Sohn
2293,0,Change has been successfully merged into the git repository by Alois Zoitl
2297,0,Change has been successfully merged into the git repository by Lars Vogel
2301,0,Change has been successfully merged into the git repository by Lars Vogel
2308,0,Change has been successfully merged into the git repository by Stefan Xenos
2311,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6333/ : UNSTABLE
2313,0,Change has been successfully merged into the git repository by Sergey Prigogin
2318,1,"Patch Set 2:Sergey, since this problem is interfering with the JDT builds, I'm going to push it in its current state and will address any further issues in follow-up changes."
2320,0,Change has been successfully merged into the git repository by Stefan Xenos
2322,0,Change has been successfully merged into the git repository by Stefan Xenos
2328,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6329/ : UNSTABLE
2330,0,Change has been successfully merged into the git repository by Sergey Prigogin
2332,1,"Patch Set 1: Code-Review+2 Verified+1Thanks for the contribution, Fred!  Even paying attention to copyright statements.This change certainly cuts neatly through a bunch of unnecessary and wonky code.  I was going to complain that changing the APIs in the UI classes from working with URIs to working with IResources results in a loss of generality, so that it would be more difficult to support exporting diagrams to the host filesystem (which is desperately needed, IMO) or other destinations, and that IResource is not even as appropriate a type as IContainer, but then I observed that the entire export infrastructure beneath the UI is all pinned to the IResource contract, anyways.  That, combined with the fact that any clients trying to use these UI bits would have had to construct nonsense URIs, means that I don't mind that this technically is an API-breaking change because that API was already non-functional and it will have to break again some time anyways to support exporting to non-workspace destinations.  Besides that none of these UI classes should ever have been exposed as API to begin with.All of which is to say thanks for working through the contribution process and do come back for more."
2333,0,Change has been successfully merged into the git repository by Christian W. Damus
2335,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6299/ : UNSTABLE
2337,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6309/ : UNSTABLE
2340,0,Change has been successfully merged into the git repository by Sergey Prigogin
2341,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6327/ : UNSTABLE
2345,0,Change has been successfully cherry-picked as 1dfc69dc5da8afe0990ad0c2058f3cf47a762f07 by Alexandre Montplaisir
2350,0,Change has been successfully merged into the git repository by Till Brychcy
2358,0,Change has been successfully merged into the git repository by Matthias Sohn
2378,1,Patch Set 1:(7 comments)I must wait until http://download.eclipse.org/mylyn/drops/3.21.0/mylyn-3.21.0-api.zip is in place before I can push a new patch set. Otherwise we get problems because of the wrong @since 3.21
2391,0,Change has been successfully merged into the git repository by Frank Becker
2394,0,Patch Set 7:(3 comments)Looks pretty good already. Here are few minor nitpicks.
2406,0,Change has been successfully merged into the git repository by Sergey Prigogin
2417,0,Change has been successfully merged into the git repository by Ryan Brooks
2426,0,Change has been successfully merged into the git repository by Ryan Brooks
2429,0,Change has been successfully merged into the git repository by Christian W. Damus
2432,0,"Patch Set 1:Change 83115 which is dependent on this change built and tested successfully. The aborted build was an infra problem, not a CDT problem"
2434,0,Change has been successfully rebased as 33d12e75c91a0a973cb5608bad375f98822e40ec by Jonah Graham
2435,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6322/ : UNSTABLE
2440,0,Change has been successfully merged into the git repository by Marc Khouzam
2441,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6319/ : UNSTABLE
2446,0,Change has been successfully merged into the git repository by vincent lorenzo
2450,0,Patch Set 1: Code-Review+1 Verified+1(1 comment)This looks good to me
2453,0,Change has been successfully cherry-picked as 4a1d13c4965799a6afd60b6ff26c0d7fb282a0e6 by Alexandre Montplaisir
2458,1,Patch Set 2:> It's safer to preserve the cancellation check and the synchronized block since split my sometimes skip cancellation check.Done
2461,0,Change has been successfully merged into the git repository by Sergey Prigogin
2465,0,Change has been successfully rebased as 663c5e8eb090bd0493ee07735a99e35f0363e4f2 by vincent lorenzo
2468,0,Change has been successfully merged into the git repository by vincent lorenzo
2475,0,Change has been successfully merged into the git repository by Sergey Prigogin
2485,0,Change has been successfully merged into the git repository by Wim Jongman
2487,0,Change has been successfully merged into the git repository by Mickael Istria
2494,0,Change has been successfully merged into the git repository by Till Brychcy
2502,0,Change has been successfully merged into the git repository by Jad El-khoury
2505,0,Change has been successfully merged into the git repository by Jad El-khoury
2510,0,Change has been successfully rebased as 9e9bac9c2625a46e724a93bfd8c925dfc66c315d by vincent lorenzo
2513,0,Change has been successfully merged into the git repository by Christian W. Damus
2516,0,Change has been successfully merged into the git repository by Christian W. Damus
2518,1,Patch Set 1: Code-Review+2 Verified+1Verified with local mock build.
2519,0,Change has been successfully cherry-picked as d5db901519674ad1dd5823a62bb6cec7a0f73fa3 by Mat Booth
2522,0,Change has been successfully merged into the git repository by Katharine Hirsch
2525,0,Change has been successfully merged into the git repository by Alois Zoitl
2528,0,Change has been successfully merged into the git repository by Katharine Hirsch
2531,0,Change has been successfully merged into the git repository by Alois Zoitl
2535,0,Change has been successfully merged into the git repository by Christian Halstrick
2539,0,Change has been successfully merged into the git repository by Christian Halstrick
2543,0,Change has been successfully merged into the git repository by Mickael Istria
2546,0,Change has been successfully merged into the git repository by Michael Wenz
2549,0,Change has been successfully merged into the git repository by Nathan Ridge
2550,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6244/ : UNSTABLE
2554,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6181/ : UNSTABLE
2558,0,Change has been successfully merged into the git repository by Nathan Ridge
2559,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6243/ : UNSTABLE
2571,0,Change has been successfully merged into the git repository by Lars Vogel
2576,0,Change has been successfully merged into the git repository by Nathan Ridge
2583,0,Change has been successfully merged into the git repository by Nathan Ridge
2584,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6241/ : UNSTABLE
2591,0,"Patch Set 2:(3 comments)Thanks for comments, Sergey!"
2594,0,Change has been successfully merged into the git repository by Stefan Xenos
2602,0,Change has been successfully merged into the git repository by Stefan Xenos
2615,0,"Patch Set 3: Code-Review-1(4 comments)Very nice initiative! This should give much more information in logs.Few small things. Also I wonder about the name RuntimeUtils, since it's specific to Jobs (Eclipse things), shouldn't it be called something like PlatformUtils? ""Runtime"" refers more to the JRE to me."
2617,1,"Patch Set 3:Also, this conflicts with your other patch, one will have to be rebased on top of the other."
2620,0,"Patch Set 3:> (4 comments) >  > Very nice initiative! This should give much more information in > logs. >  > Few small things. Also I wonder about the name RuntimeUtils, since > it's specific to Jobs (Eclipse things), shouldn't it be called > something like PlatformUtils? ""Runtime"" refers more to the JRE to > me.And Platform refers to many many things in Eclipse. So maybe I'll just call it JobUtils?"
2624,0,Change has been successfully cherry-picked as 217d5c8162282eb789d9fcff663e2c5129eeb686 by Marc-Andre Laperle
2629,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6235/ : UNSTABLE
2631,0,Change has been successfully merged into the git repository by Sergey Prigogin
2632,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6240/ : UNSTABLE
2635,0,Change has been successfully merged into the git repository by Sergey Prigogin
2637,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6200/ : UNSTABLE
2638,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6201/ : UNSTABLE
2639,1,"AbandonedUnfortunately, this rollback breaks tests."
2643,0,Change has been successfully merged into the git repository by Sergey Prigogin
2647,0,Change has been successfully merged into the git repository by Pascal Rapicault
2652,0,"Patch Set 5: Code-Review+1I haven't tried it, but it looks good to me."
2654,0,Change has been successfully cherry-picked as 524fb56d7e2069046a94ed41c1d125f9c2e5e488 by Matthew Khouzam
2659,0,Change has been successfully cherry-picked as f5ab42b3cd0c97a3f51db38d4d3c3da6124978bb by Marc-Andre Laperle
2663,0,Change has been successfully cherry-picked as a463a9ba644aedf2b4db5958ad9abbac114a33ee by Marc-Andre Laperle
2665,0,Patch Set 1: Code-Review-1(3 comments)Thanks for fixing this. But I think it should throw an exception instead of simply returning the old backend.
2675,0,Change has been successfully cherry-picked as 6305377c1b83226c3a0e7ac962ef7d2534edd785 by Alexandre Montplaisir
2678,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/393/ : UNSTABLE
2680,0,Change has been successfully merged into the git repository by Sam Davis
2683,0,Change has been successfully merged into the git repository by Sam Davis
2686,0,Change has been successfully merged into the git repository by Dirk Fauth
2690,0,Change has been successfully cherry-picked as 99a3796d83a3957b6a3cd68bcf10f5526e4a7a9d by Roberto Oliveira
2694,0,Change has been successfully merged into the git repository by Dirk Fauth
2697,0,Change has been successfully merged into the git repository by Sergey Prigogin
2710,0,Change has been successfully cherry-picked as 1dfcd42b04b94bc6965905654723e02e85dfb2dc by Marc-Andre Laperle
2711,0,Patch Set 2: Code-Review+1Looks good and is an improvement toward a functional test suite.
2719,0,Change has been successfully merged into the git repository by Lars Vogel
2725,0,"Patch Set 5: Code-Review+1Ok, now should be good to go."
2726,0,Patch Set 5: Code-Review+2Thanks so much for the contribution Leo!
2728,0,Change has been successfully rebased as 2abd17c2ef00212b7ebd680d0c866ced9195d167 by Jaxsun McCarthy Huggan
2730,0,"Patch Set 4: Code-Review+1> (2 comments) >  > This looks great, but I don't think we should change the prefix for > Bugzilla.Thank you for your feedback and the idea. I implemented the changes accordingly."
2742,1,"Patch Set 3:### Gerrit build started by unauthorized user lufimtse@redhat.com. Committers, verify that the change is safe to run and then retrigger the build.The hudson server defensively do not run builds for patches by non-committers by default. I have retiggered the build for you."
2743,0,"Patch Set 3: Code-Review+1As long as Sam is happy with the change of bug to Bug in the bugzilla connector I think this looks great, thanks Leo!"
2745,0,"Patch Set 3:(2 comments)This looks great, but I don't think we should change the prefix for Bugzilla."
2750,0,Change has been successfully merged into the git repository by Christopher Guindon
2752,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6219/ : UNSTABLE
2755,0,Change has been successfully merged into the git repository by Marc-Andre Laperle
2758,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6226/ : UNSTABLE
2759,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6230/ : UNSTABLE
2763,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6220/ : UNSTABLE
2767,0,Change has been successfully rebased as 04e31e3fae1e93cad67cff6b2bb8321c6a855608 by Marc-Andre Laperle
2768,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6228/ : UNSTABLE
2771,0,Change has been successfully merged into the git repository by Henrik Rentz-Reichert
2775,0,Change has been successfully merged into the git repository by Christian Pontesegger
2778,0,Change has been successfully merged into the git repository by Pascal Rapicault
2782,0,Change has been successfully merged into the git repository by Mickael Istria
2786,0,Change has been successfully merged into the git repository by Henrik Rentz-Reichert
2789,0,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Codegen/32/ : SUCCESShttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Common/41/ : UNSTABLEhttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Core/104/ : SUCCESShttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Cpp/49/ : SUCCESShttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Migration/36/ : SUCCESShttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Profile/36/ : SUCCESShttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/132/ : SUCCESS
2790,1,"Patch Set 2:> * The ""This feature contains the ..."" preamble is redundant in text > that is presented to the user as a feature descriptionI kind of agree with Christian's comment. I also felt that all these ""This feature contains..."" was kind of superfluous. The only feature were I though that it could be appropriate was the top level Papyrus-RT feature, which ""contains"" other features could have some different wording related to ""contains"" to indicate that it in fact is a top level feature which ""contains"" other features."
2794,1,"Patch Set 1:(2 comments)General comments:* The ""This feature contains the ..."" preamble is redundant in text that is presented to the user as a feature description* feature names and descriptions should be externalized in the feature.properties for translation (some are, but not all).  This applies also to URLs for licenses, copyright, etc.  (using a license feature in our builds would help a lot, but would be a separate task)"
2799,0,Change has been successfully rebased as b99c5215a65bcbf1232429ae74c816ea4620bc45 by Ernesto Posse
2802,0,Change has been successfully merged into the git repository by Carsten Reckord
2806,0,Change has been successfully cherry-picked as f9c3ba0d3e573c8de45a59c6204277ca19cd3b62 by Marc-Andre Laperle
2809,0,Change has been successfully merged into the git repository by Henrik Rentz-Reichert
2813,0,Change has been successfully merged into the git repository by Mickael Istria
2816,0,Change has been successfully merged into the git repository by Leo Ufimtsev
2820,0,Change has been successfully merged into the git repository by Christopher Guindon
2822,0,Change has been successfully pushed.
2824,0,Change has been successfully pushed.
2826,0,Change has been successfully pushed.
2828,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10817/ : UNSTABLE
2829,0,"Patch Set 1:Unstable tests don't seem to be related there, so that's 2 successful runs so far for this change."
2832,0,Change has been successfully merged into the git repository by Mickael Istria
2834,0,Change has been successfully merged into the git repository by Megumi Telles
2840,0,"Patch Set 4:This update elaborates the README, this time in Markdown format with the project configured to generate it automatically to a user-friendly HTML with hyperlinks to important related content."
2843,0,Change has been successfully rebased as 21f6b0f9d15652f2c0c1254e95bc2d1d3e20eea3 by Christian W. Damus
2851,0,"Patch Set 3:Could you explain the steps to maintain this , either through a video, a gif or some printscreen. That could be useful ;)Thanks"
2852,0,"Patch Set 3:> Could you explain the steps to maintain this , either through a > video, a gif or some printscreen. That could be useful ;) >  > ThanksDo you mean, more than what I explain in the README.txt file that I added in this patch?"
2853,0,"Patch Set 3:I meant a visual example... you know people like images , lol;)But you're explaination in ReadME is clear enough !"
2856,0,Change has been successfully merged into the git repository by Michael Wenz
2858,0,Patch Set 2: Code-Review+1(1 comment)Thank you for that change!Just a minor comment on the header information for this change. Please add that and I can merge the change.One further note: usually we do the fixes on the master branch and then downport then to released versions. On the other hand it is no problem to do the fix on the release 0.13 track and then to upport them to the current development version (master branch).
2859,1,Abandoned
2865,0,"Patch Set 2: Code-Review+1I've tested the latest patch-set (I rebased on the latest merged one, just to be sure I tested it with the latest delivered stuff). This seem to work good enough with respect to the issue identified in the Bugzilla, i.e. both the name and type column are visible in the edit dialog. The previous issue with the name column gradually filling the complete table in the properties view is not happening (not even in a new workspace).There are some drawbacks, e.g. the horizontal scrollbar and the resizing does not work. But all this is already brought up within the scope of https://bugs.eclipse.org/bugs/show_bug.cgi?id=495352.So I guess that this should be ""good enough"" for 0.8, and then we can introduce the improvements tracked by https://bugs.eclipse.org/bugs/show_bug.cgi?id=495352 later when we have gotten the needed fixes in base Papyrus."
2868,0,Change has been successfully rebased as 65d610741ac6b0624216f4293d55379ac86127ea by Young-Soo Roh
2872,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
2877,0,Change has been successfully rebased as 0d838459d403c4a85d00b310c882403b0cab10cb by Thierry BLIND
2880,0,Change has been successfully merged into the git repository by Thierry BLIND
2884,0,Patch Set 1: Code-Review-1(1 comment)I tested and it seems to works fine.but :)there is a small typo : some system.out in the codeI tried to change the preference but I didn't manage to make it work.Open question:=> Why did you chose a combo-box in the preferences?I would have expect: - a checkbox to allow live validation    - a String number field to set millisecond for the live validation(Not preference for enter that should always work)
2885,1,"Patch Set 1:You suggestion is not a bad idea, I will modify this. For me, delay to set in preferences was just to much thinks to set which is not necessary, but I can add it too.I will remove syso too :)thanks for the review"
2886,0,"Patch Set 1:also change the label from ""Case Sensitive"" to ""A a""(the tooltip should be enough to explain for the one that don't get it :) )"
2889,0,Patch Set 3: Code-Review+2 Verified+1Good job!
2891,0,Change has been successfully rebased as 721ef7d021121732a8ec45f5df6daab3ee4abce7 by Benoit Maggi
2894,0,Change has been successfully merged into the git repository by Benoit Maggi
2897,0,Change has been successfully merged into the git repository by Alexander Kurtakov
2900,0,Change has been successfully merged into the git repository by Henrik Rentz-Reichert
2907,0,Change has been successfully merged into the git repository by vincent lorenzo
2911,1,"Patch Set 1:I have not tested this yet, but just wanted to understand the scope and what to expect when testing. Do this change handle the stacking pattern for both ports and capsule parts? Or is only ports? Has it fixed the issue with the lack of stacking pattern for ports on capsule parts?I am also a bit uncertain what the implications will be regarding the statement about ""always white background"". What it someone wants to put color on different capsule parts, e.g. using CSS customization, will that then be impossible? I guess this will be a bit too restrictive. For ports I guess it is okay, since we have put such a strict semantic meaning for white vs. black, i.e. whether the port is conjugated or not."
2913,0,"Patch Set 4: Code-Review+1I've tested the latest patch-set, and it looks really nice! The refresh also works when toggling port kind and changing between replicated/non-replicated. The shadow looks and behaves as in legacy tooling. I cannot see any of the refresh issues mentioned in the Bugzilla, e.g. related to the diagram assistant handles on capsule parts (now when the shadow is on the ""inside""). The only thing now that is lacking is the stacking pattern for ports on capsule parts (which is tracked by a separate Bugzilla anyway)."
2915,0,Change has been successfully merged into the git repository by Ansgar Radermacher
2922,0,Change has been successfully merged into the git repository by Christian Pontesegger
2925,0,Change has been successfully merged into the git repository by Noopur Gupta
2929,0,Change has been successfully rebased as bd9a413b7282ae80168bdb5cdb35aba6119c8117 by Ansgar Radermacher
2932,1,"Patch Set 1: Code-Review-1I've tested this patch-set as well. As Asma already have pointed out, you still have the refresh issue for a replicated port placed on the top border. As I have pointed out and proposed in https://bugs.eclipse.org/bugs/show_bug.cgi?id=500982 this is probably related to the fact the stacking pattern is drawn on the ""outside"" of the original shape instead of in the ""inside"" as it is done in the legacy tooling.Apart from that there is also a major regression related to the orientation of the behavior adornment. If you move around a port placing it on the four different borders, then the behavior adornment used to always be oriented ""inwards"", i.e. it re-orients whenever you move the port to a different border. With this patch-set, the behavior adornment does not change direction but is always in the original direction prior to being move to a another border."
2933,1,"Patch Set 1:> Apart from that there is also a major regression related to the > orientation of the behavior adornment. If you move around a port > placing it on the four different borders, then the behavior > adornment used to always be oriented ""inwards"", i.e. it re-orients > whenever you move the port to a different border. With this > patch-set, the behavior adornment does not change direction but is > always in the original direction prior to being move to a another > border.this regression is not related to this patch set. I can notice the same regression with the latest master branch version"
2934,1,Patch Set 1: -Code-Review> this regression is not related to this patch set. I can notice the > same regression with the latest master branch versionYour are right. I tested using the tester setup with the latest Papyrus-RT build. And the regression regarding the orientation of the behavior adornment is there. Hmmm... This is not the first time we have issues with the behavior adornment. I really thought that we had added some regression test suites to get control over this. I will write a Bugzilla for this (again).
2935,1,"Patch Set 1:> Your are right. I tested using the tester setup with the latest > Papyrus-RT build. And the regression regarding the orientation of > the behavior adornment is there. Hmmm... This is not the first time > we have issues with the behavior adornment. I really thought that > we had added some regression test suites to get control over this. > I will write a Bugzilla for this (again).I wrote https://bugs.eclipse.org/bugs/show_bug.cgi?id=504059 for this regression. But then it is ""only"" the refresh issue for replicated port that remains. But on the other, if we do as I have proposed in https://bugs.eclipse.org/bugs/show_bug.cgi?id=500982 and render the stacking pattern for replicated ports on the ""inside"" of the port shape, then this maybe solves the refresh issue in this situation as well?"
2938,1,"Patch Set 2:> Yes, it would solve it, but it might be more difficult to read. The > new patch extends the stackedFigure code to handle elements that > draw outside their original bounds.What do you mean with ""difficult to read""? To read the stacking pattern in the diagram? If you do as in the legacy tooling then I can't say that it will be hard to read. There is actually an aspect that you should not make the figure larger and that is the layout of legacy models. This is especially important for ports on capsule parts which should be 11x11 pixels large, disregarding if the stacking pattern is shown or not. The reason for the proposal to keep the stacking pattern on the inside is actually more about aligning with the layout of legacy models and size of ports there, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=496304 for initial work related to this (but that one did not include the aspect of replicated ports, since we track that separately with https://bugs.eclipse.org/bugs/show_bug.cgi?id=497825 and improvements in https://bugs.eclipse.org/bugs/show_bug.cgi?id=500982)."
2939,1,"Patch Set 2:Ok, I understand. If we are sure that a stacked figure is never outside the original bounds, the 2nd patch is in fact not required. I don't know, if we want to keep it for possible future use (the new getStackFigBounds inDrawFigureUtils needs to comply with whatever we define in the associated paint method) or rather want to adopt the first one.Btw. the build failure is not related to the patch"
2945,0,"Patch Set 6:(1 comment)See my remark regarding OCL. Otherwise, looks good."
2952,0,Change has been successfully merged into the git repository by Ansgar Radermacher
2957,0,Change has been successfully pushed.
2960,0,Change has been successfully pushed.
2962,0,Change has been successfully pushed.
2966,0,Change has been successfully pushed.
2970,0,Change has been successfully pushed.
2980,0,Change has been successfully pushed.
2982,0,Change has been successfully pushed.
2988,0,Change has been successfully merged into the git repository by Christian Pontesegger
2992,0,Change has been successfully rebased as 07bf14e9ab0f7c6f3a9b5eac16f5460e1560233a by vincent lorenzo
2997,0,Change has been successfully merged into the git repository by Lars Vogel
3000,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10820/ : UNSTABLE
3002,0,Change has been successfully merged into the git repository by Lars Vogel
3004,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10822/ : UNSTABLE
3011,0,Change has been successfully merged into the git repository by Benoit Maggi
3015,0,Change has been successfully merged into the git repository by Jacques Bouthillier
3019,0,"Patch Set 6: Code-Review+2 Verified+1Thanks, code looks good. I now test it."
3020,1,"Patch Set 6:If I generated the template I receive syntax errors in N20161002-2000.Is the generic editor not yet included in the SDK?Eclipse SDKVersion: Oxygen (4.7)Build id: N20161002-2000OS: Linux, v.4.4.0-34-generic, x86_64 / gtk 3.18.9"
3021,1,"Patch Set 6:> If I generated the template I receive syntax errors in > N20161002-2000. > Is the generic editor not yet included in the SDK? >  > Eclipse SDK > Version: Oxygen (4.7) > Build id: N20161002-2000 > OS: Linux, v.4.4.0-34-generic, x86_64 / gtk 3.18.9It should be, what errors do you see?"
3022,1,"Patch Set 6:> It should be, what errors do you see?Sorry my bad, I forgot to add the generic editor plug-in to my runtime.Description says, the editor provides code completion and hover. I don't see that. Should the description be adjusted until we have more?"
3029,0,"Patch Set 2:> > any special reason? It's there for other templates. >  > We should remove it there to, this is used before we had @OverrideOk, I'll re-purpose bug 502849 and make a general clean-up for the other ones."
3031,1,"Patch Set 7:> > It should be, what errors do you see? >  > Sorry my bad, I forgot to add the generic editor plug-in to my > runtime. >  > Description says, the editor provides code completion and hover. I > don't see that. Should the description be adjusted until we have > more?Fixed. Thanks for the nice catch."
3033,0,Change has been successfully merged into the git repository by Lars Vogel
3035,0,"Patch Set 3:> any special reason? It's there for other templates.We should remove it there to, this is used before we had @Override"
3038,1,Patch Set 5:> (3 comments)Rephrased the title strings. Category deletion was an accident.
3042,1,"Patch Set 4:> Sopot, is this ready for final review?Mickael, since bug 500755 is not fixed yet I propose to push a first iteration of the template with just the presentation extension.The rest should be fine. I'm leaving the icon as is as the present general editor icon is too ugly."
3047,1,"Patch Set 4: Code-Review+1I don't have any objection to merge this as a 1st iteration, and to update it once bug 500755 is fixed and a better icon is available."
3055,0,Change has been successfully merged into the git repository by Mickael Istria
3058,0,Change has been successfully merged into the git repository by Lars Vogel
3060,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10813/ : UNSTABLE
3065,0,Change has been successfully merged into the git repository by Mickael Istria
3067,0,Change has been successfully merged into the git repository by Lars Vogel
3070,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10807/ : UNSTABLE
3074,0,Change has been successfully merged into the git repository by Dirk Fauth
3078,0,Change has been successfully merged into the git repository by Florian Noyrit
3081,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
3085,0,Change has been successfully merged into the git repository by Jan Belle
3088,0,Change has been successfully merged into the git repository by Benoit Maggi
3091,0,Change has been successfully rebased as 916ea484cf72e938aaabc59e8831d6e072037785 by Remi Schnekenburger
3093,0,"((BooleanValueStyle) fillColumnsSizeStyle).setBooleanValue(true);"""
3094,0,Patch Set 1:> I still get the same exception when I try to create a new style to > the table configuration after table widget is created. Looks like > domain is not set correctly for table configuration. >  > final Style fillColumnsSizeStyle = this.getTableConfiguration().createStyle(NattablestylePackage.eINSTANCE.getBooleanValueStyle()); > ((BooleanValueStyle) fillColumnsSizeStyle).setName(NamedStyleConstants.FILL_COLUMNS_SIZE); > ((BooleanValueStyle) fillColumnsSizeStyle).setBooleanValue(true);Never mind. The configuration is probably read only anyways. I will try to modify tableconfiguration instead.
3099,0,Change has been successfully merged into the git repository by Sasikanth Bharadwaj
3102,0,Change has been successfully merged into the git repository by Laurent Goubet
3105,0,Change has been successfully merged into the git repository by Benoit Maggi
3107,0,Change has been successfully pushed.
3111,0,Change has been successfully pushed.
3115,0,Change has been successfully pushed.
3120,0,Change has been successfully pushed.
3124,0,Change has been successfully merged into the git repository by Benoit Maggi
3128,0,Change has been successfully merged into the git repository by Christian Pontesegger
3135,0,"Patch Set 4: Code-Review+2 Verified+1Thanks, Stefan. Looks good to me!The group extender only causes problems when running in combination with the group extender Alex added in change 76498. I asked Alex to have a look at this. I'll wait for her feedback, if it's hard to fix. If yes, I'll rebase this change on master and merge it in the meantime."
3137,0,Change has been successfully merged into the git repository by Philip Langer
3143,0,Change has been successfully merged into the git repository by Christian Pontesegger
3149,0,Change has been successfully merged into the git repository by Megumi Telles
3153,0,Change has been successfully merged into the git repository by Patrick Tasse
3156,0,Change has been successfully merged into the git repository by Donald Dunne
3159,0,Change has been successfully merged into the git repository by Katharine Hirsch
3162,0,Change has been successfully merged into the git repository by Alois Zoitl
3165,0,Patch Set 3: Code-Review+1Good catch on the state machine diagram tests!  I hadn't noticed that.
3167,0,Change has been successfully merged into the git repository by Celine Janssens
3169,0,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Core/50/ : UNSTABLEhttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/67/ : SUCCESS
3171,0,Change has been successfully merged into the git repository by Mickael Istria
3173,1,"Patch Set 2:@Brian: the new patch set should address all your concerns, except that for legacy, the ""Other projects"" working set is still off by default. Keeping it off can allow to consider inclusion in Neon.2."
3174,1,"Patch Set 2:> @Brian: the new patch set should address all your concerns, except > that for legacy, the ""Other projects"" working set is still off by > default. Keeping it off can allow to consider inclusion in Neon.2.Looks good. Are you sure exposing the Other Projects is a problem for Neon.2 (since we're introducing a new menu item).  Maybe a question for the PMC."
3180,1,"Patch Set 1: Code-Review+1(2 comments)Thanks for tackling this Mickael and sorry for the delay in reviewing.  My only real comments:I think we should align the text used to match the Package Explorer: so 'Other Projects', rather than 'Other'.I think the different placement of Other, as compared to the Package Explorer, makes sense: the user has chosen to emphasize working sets, so projects that aren't in a working set are different.  But it's worth soliciting feedback from the users who strongly wanted this feature back.I think we should *always* show other projects in the Other category.  The menu item to enable this (""ÔÇªand show remaining projects in "") looks rather bizarre.  And I can't really think of a reason why you would to remove any other projects from view: the 'Other' is easy to ignore, and it helps to discover if there are projects that aren't included in other working sets (which happens to me periodically)."
3184,0,Change has been successfully rebased as 61398028529e25525366594f4ebecf914dc345dc by Benoit Maggi
3189,0,Change has been successfully merged into the git repository by Lars Vogel
3197,0,Change has been successfully merged into the git repository by Shuai Li
3200,0,Change has been successfully cherry-picked as 6707b0fd61b54ffb44157336b699a29275cc2b75 by Andi Bur
3202,0,Change has been successfully merged into the git repository by Megumi Telles
3209,0,Change has been successfully merged into the git repository by Thomas Schuetz
3214,0,Change has been successfully merged into the git repository by Alexander Kurtakov
3218,0,Change has been successfully rebased as f65326ead9a77ec3119f225a2a5e2655ab9835ec by Benoit Maggi
3221,0,Change has been successfully merged into the git repository by Lars Vogel
3225,0,Change has been successfully rebased as 55bf405db31f322da85751086506872d341e6820 by Benoit Maggi
3229,0,Change has been successfully rebased as 742a3a71efda18a14ffa18748ddd59505abf0298 by Benoit Maggi
3233,0,Change has been successfully rebased as 34cb7d30c165794820f9973a4b8e74c0ee2219af by Benoit Maggi
3237,0,Change has been successfully rebased as 987d77231a21a7e32a08e66ff37224b95373878c by Benoit Maggi
3242,0,Change has been successfully merged into the git repository by Megumi Telles
3246,0,Change has been successfully merged into the git repository by Eric Poirier
3249,0,Change has been successfully merged into the git repository by Eric Poirier
3252,0,Change has been successfully merged into the git repository by Benoit Maggi
3255,0,Change has been successfully merged into the git repository by Silenio Quarti
3258,0,Change has been successfully merged into the git repository by Christian Pontesegger
3260,0,"Patch Set 3:Actually Gerrit test runs against last Night N-build (it doesn't have the Printer.isAutoScalable() API code, as it was checked in early today)Hence we have to wait for next N-build before we could re-base this patch successfully."
3261,0,"Patch Set 3: Code-Review+2 Verified+1Code change looks good, verified the patch on Win7 and Ubuntu16."
3262,0,Change has been successfully merged into the git repository by Niraj Modi
3266,0,Change has been successfully merged into the git repository by Lars Vogel
3271,0,Change has been successfully merged into the git repository by Markus Knauer
3274,0,Change has been successfully merged into the git repository by Markus Knauer
3278,0,Change has been successfully merged into the git repository by Alois Zoitl
3281,0,Change has been successfully merged into the git repository by Alois Zoitl
3286,0,Change has been successfully rebased as 11f4996b0d5d77de72cb6b575fb441990624cf2f by Benoit Maggi
3290,0,Change has been successfully merged into the git repository by Lars Vogel
3293,0,Change has been successfully merged into the git repository by Edgar Mueller
3303,0,Change has been successfully merged into the git repository by Dani Megert
3307,0,Change has been successfully merged into the git repository by Dani Megert
3318,0,Change has been successfully pushed.
3323,0,Change has been successfully rebased as 94b9d7bff08da823a56f361099652c6b019ed97b by Thierry BLIND
3328,0,Change has been successfully rebased as 053d8500d015511e1a6c91be14e300545ce6420a by Thierry BLIND
3332,0,Change has been successfully merged into the git repository by Thierry BLIND
3336,0,Change has been successfully merged into the git repository by Mickael Istria
3340,0,Patch Set 1: Code-Review+2 Verified+1Looks good now
3341,0,Change has been successfully merged into the git repository by Uwe Stieber
3344,0,Change has been successfully merged into the git repository by Benoit Maggi
3347,0,Change has been successfully merged into the git repository by Thomas Schuetz
3350,0,Change has been successfully merged into the git repository by vincent lorenzo
3354,0,Change has been successfully rebased as 7aae991053fa4f14cd9e12b48cf34af6d4130a9e by Patrick Tessier
3360,0,Change has been successfully rebased as 94483d2c5302342a39f2f689ce9a9ce0078e2fda by Patrick Tessier
3363,0,"Patch Set 1: Code-Review-1==Code Review==ok but I'me wandering if there is another way to test if it's a delete than check it's label.(-1 for that waiting for an answer)==Smoke tests==project creation: okdiagram creation: okproperties view: okmodel explorer view: ok==Functional tests==The selection after edition, move, etc is fine now, its stay on the edit element.At deletion the root element is well selected."
3366,0,Change has been successfully merged into the git repository by Thomas Schuetz
3370,0,Change has been successfully rebased as c3018cac97fe2e37d54505eb1aa4bc8080f015d5 by Jeremie Tatibouet
3373,0,Change has been successfully merged into the git repository by vincent lorenzo
3375,0,"Patch Set 1:(4 comments)Please have a look at the inline comments/questions. As this is my first commit to Orbit, it's likely that I didn't do everything correctly the first time. Thanks."
3382,1,"Patch Set 2:Sure. I dislike resolution:=optional in all cases where a hard error could occur (e.g., ClassDefNotFoundError) even though the bundle successfully resolves. IMHO, resolution:=optional should be reserved for cases where the importing code is aware of the fact that the dependency *may* be missing and has a fallback implemented.I'm thus think more of cases like the following  Class connectionClass;  try {    connectionClass = Class.forName(""org.example.fast.FastConnection"");  } catch (ClassNotFoundException e) {    connectionClass = PlainOldConnection.class;  }Here, an Import-Package: org.example.fast;resolution:=optional is perfectly safe."
3387,0,Change has been successfully merged into the git repository by Gunnar Wagenknecht
3393,0,Change has been successfully rebased as 22498066f77c8ba6079458b82d1ae1ef9f3d092a by vincent lorenzo
3396,0,Change has been successfully merged into the git repository by Thomas Schuetz
3399,0,Change has been successfully rebased as 41f8c487131c0bf184939868ca4b1cfccfabc566 by Benoit Maggi
3407,0,Change has been successfully merged into the git repository by Benoit Maggi
3417,0,Change has been successfully rebased as 52c24b4e07dbf68bbc728d6287357cf63307b62c by Benoit Maggi
3420,0,Change has been successfully merged into the git repository by Jeremie Bresson
3422,1,Abandoned
3423,1,Restoredthe close was a mistake
3426,0,Change has been successfully rebased as 9d13c72313d91a568f3ba9b16ee21e4370c01ccf by Patrick Tessier
3429,0,Change has been successfully merged into the git repository by Markus Knauer
3433,0,Change has been successfully merged into the git repository by Sravan Kumar Lakkimsetti
3436,0,Change has been successfully merged into the git repository by Thomas Watson
3439,0,Change has been successfully merged into the git repository by Matthias Sohn
3441,1,Patch Set 1: Code-Review-1I think I forgot that one in https://git.eclipse.org/r/#/c/77487/ (check for running launches before modifying the workspace). The question logic should be the same as in ResetMenu.EGit has just too many places implementing the same things in slightly different ways. :-(
3443,0,Patch Set 2: Code-Review+2 Verified+1Thanks for updating the patch. The new patch looks good.
3444,0,Change has been successfully merged into the git repository by Elson Yuen
3450,0,Change has been successfully merged into the git repository by Ernesto Posse
3457,0,Change has been successfully merged into the git repository by Ryan Brooks
3463,0,Change has been successfully merged into the git repository by Ryan Brooks
3466,0,Change has been successfully merged into the git repository by Dirk Fauth
3469,0,Change has been successfully merged into the git repository by Dirk Fauth
3472,0,Change has been successfully cherry-picked as b936f2faf9fbb7bec84e93d4bf9d529033c19eba by Andi Bur
3475,0,Change has been successfully merged into the git repository by David Miller
3484,0,Change has been successfully merged into the git repository by Lars Vogel
3488,0,Change has been successfully merged into the git repository by Lars Vogel
3491,0,Change has been successfully cherry-picked as a36fa387f725817df2daa740af1ce6a0a58ab50c by Patrick Tasse
3494,0,Change has been successfully merged into the git repository by Sergey Prigogin
3498,0,Change has been successfully merged into the git repository by Sergey Prigogin
3499,0,Patch Set 1:Thanks Sergey. I was not sure about the SubMonitor.convert(null) but good to see that the change was good.
3500,0,"Patch Set 1:Oops, I missed SubMonitor.convert(null) calls. Although the calls are harmless, for all practical purposes they are equivalent to new NullProgressMonitor()."
3506,1,"Patch Set 3:> What kind of testing on Windows have you done?I managed to reproduce the error as described in bug 502238 with master. With the version of the dll in this review, I can't reproduce it anymore. To reproduce:- start a runtime workbench - the workspace must contain at least one project - activate the auto-refreshLast step was to test that the auto-refresh still works: create a file in the project via the Windows file explorer and check that the workspace is properly refreshed by Win32Monitor (tracing/refresh and tracing/debug options turned on)I only tested the x86_64 variant, I don't have a  x86 windows at hand; but $ file  bundles/org.eclipse.core.resources.win32.x86/os/win32/x86/win32refresh.dll shows PE32 Executable (DLL) (GUI) Intel 80386, for MS Windowswhile $ file  bundles/org.eclipse.core.resources.win32.x86_64/os/win32/x86_64/win32refresh.dll shows PE32+ Executable (DLL) (GUI) Intel x86-64, for MS Windows"
3508,0,Change has been successfully merged into the git repository by Sergey Prigogin
3513,0,Change has been successfully merged into the git repository by Pascal Rapicault
3521,0,Change has been successfully merged into the git repository by Jacques Bouthillier
3523,1,"Patch Set 2:Patch set 2 adds handling of heterogeneous drag-and-drop that inserts elements before/after protocols in the Model Explorer.  For example, dragging a class and a protocol to drop them ahead of some protocol in another package.A new JUnit test covering that case is included."
3526,0,Change has been successfully rebased as abf00b7602af4f23148f0287e9054372e42e4cff by Christian W. Damus
3529,1,"Patch Set 1:> Not sure what to expect, not being merged, but I quickly tested > this, and case 1 and 3 that Adam has enumerated seem to have been > fixed at least. But case 2 seem to cause p1 to be overwritten by p2 > (at least what you can see in the model explorer).Interesting.  I'm not seeing that.  I just get p2 inserted ahead of p1 in the containing Protocols package, which I think is what one would expect.Perhaps I'm not quite doing the right gesture, but it is difficult to interpret a still image capture.  Words describing steps to reproduce, or else a video capture, would be more helpful."
3530,1,"Patch Set 1:> Perhaps I'm not quite doing the right gesture, but it is difficult > to interpret a still image capture.  Words describing steps to > reproduce, or else a video capture, would be more helpful.Yes, I agree. It was not fully clear for me either from Adams screen shot what the differences were. But if you take a closer look between the screen shot for case 1 and case 2, the difference is that the ""black line"" has its ending a bit further in for case 2, i.e. the intention is to move p2 inside the package Protocols. For case 1 the intention is not to move p2 inside package Protocols but order it after, i.e. it should be a peer to the package Protocols.Anyway, since case 2 is about moving p2 inside the package Protocols, I assume that the expected result should be that p2 should be moved before p1 inside the package Protocols. As it looks now, it replaces it, at least when just looking in the model explorer with the protocol customization enabled. But the protocol message from p1Msg is now contained in p2 instead.If I disable the protocol customization, then it looks like a real mess. Not sure at all what have happened.Does this give more information about which gesture to make?"
3535,0,Change has been successfully merged into the git repository by Megumi Telles
3557,0,Change has been successfully merged into the git repository by Pascal Rapicault
3559,1,"Patch Set 8: Code-Review-2Two things. 1 - We only have two menu entries, adding another one to reset the filter seems to be over zealous. It is only saving a click when the user has selected the two options and this is not something he would do anyway since it does not really mean anything (hide himans, and hide machine means show nothing), so in the end I don't think we help our users in adding this menu.2 - Worst is the fact that when both filters are enabled (nothing is shown), and I click the reset button, nothing happens and I end up in a broken state.I strongly suggest to rethink the need for this additional button."
3568,0,Change has been successfully merged into the git repository by Sergey Prigogin
3571,0,"Patch Set 9: Code-Review+1 Verified+1It seems that what I suspected at first turned out to be so, that trying to use the one headless command for both use cases broke the tests.  From what I can tell, the diagrams created from the menu are identical to diagrams that already existed previously, so it looks good to me."
3573,0,Change has been successfully merged into the git repository by Young-Soo Roh
3574,0,"Patch Set 9:It looks good for me, but I'm not really an expert for viewpoint definitions. I'll add Florian as reviewer as well."
3577,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Core/47/ : SUCCESShttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/62/ : UNSTABLE
3579,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Core/44/ : SUCCESShttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/60/ : UNSTABLE
3582,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Core/40/ : SUCCESShttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/53/ : UNSTABLE
3583,0,"Patch Set 2:> Build Unstable >  > https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Core/40/ > : SUCCESS >  > https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/53/ > : UNSTABLEHmm.  There are a lot of test failures now in the capsule structure diagram tests.Can it be that now diagrams that already existed before this change are no longer recognized as capsule structure diagrams?  Does something that is serialized in the notation model have to be migrated to a new viewpoint diagram type definition?  I think there's some kind of style object for this in the notation, but I am not clear on the details.Suggestions, Ansgar?"
3584,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Core/40/ : SUCCESShttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/56/ : UNSTABLE
3586,0,"Patch Set 1:(3 comments)I'm not as qualified as Ansgar to comment on the best usage of viewpoints for definition of diagram types, so hopefully he can review that aspect of the change.We have already two commands CreateHeadlessCapsuleStructureDiagramCommand and CreateHeadlessStateMachineDiagramCommand that work around the name dialog and do some more setup of the contents of a diagram (at least, in the state machine case).  They are used in a different context (creation of the capsule and state machine, respectively) but I think they could probably be re-used as is for this new capsule diagram type.  Perhaps we should also add a specific state machine diagram type, too.At least, we should be able just to give the existing CreateHeadlessCapsuleStructureDiagramCommand this new diagram type identifier and then we won't need to add the CreateCapsuleStructureDiagramCommand."
3588,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Core/43/ : SUCCESShttps://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/59/ : UNSTABLE
3591,0,Patch Set 1: Code-Review+2Thanks.  I appreciate the work.
3592,0,Change has been successfully merged into the git repository by Scott Lewis
3596,0,Change has been successfully rebased as e352e133f06ccc029b8cb2675a1ba13a6a2318d7 by Ernesto Posse
3603,1,"Patch Set 2:I just tested on Windows and it worked (*) for me, so I think it's only you C├®line. My guess is that the problem is related to moving the oeprt.targetplatform project to the top-level folder in git, (why?) Then, it is removed from your workspace. If you import it in your workspace, it will be able to resolve the platform:/resource URIs.(*) I did get an error about a missing org.eclipse.papyrus.junit.utils bundle, which I have seen before, and I think others have encountered a similar issue, but in any case, this is unrelated to the platform URI, which is correctly resolved."
3604,0,"Patch Set 2:(3 comments)I concur with Ernesto.  If the TP generation works for him on Mac, it will work on all platforms.  The Xtext editor fully supports, via EMF, the platform:/resource URIs.The nesting project structure of the releng directory tree is confusing.  Are we supposed to import only the top-level releng/ folder into the workspace as a project, or the individual nested folders within it?  The actual formulation of these include URIs depends in any case (whether relative or absolute platform:/resource URIs) on how the projects are imported.  I would be much happier if we could just eliminate the confusion by not using nested projects at all so that everybody imports the projects in the same way and the include references work for everybody."
3605,0,"Patch Set 2:(1 comment)> The nesting project structure of the releng directory tree isI don't know who added the nesting structure. > confusing.  Are we supposed to import only the top-level releng/ > folder into the workspace as a project, or the individual nested > folders within it?  Whomever made these projects might have an answer, but as far as I can tell, you can just import the top-level project. That seems to work for me. In fact, I see only one .project in these. The others seem to be sub-folders with POMs and TPs. In the case of the top-level project, I see subfolders for some of the components (codegen, tooling, core) and a few others (releng, rt.included?, *releases, *nightly, *milestones). I don't know if there is a need or reason for a fully qualified name for those, but I'll let that be answered by whomever is working on these (C├®line, I assume?) >The actual formulation of these include URIs > depends in any case (whether relative or absolute platform:/resource > URIs) on how the projects are imported.  I would be much happier if > we could just eliminate the confusion by not using nested projects > at all so that everybody imports the projects in the same way and > the include references work for everybody."
3610,0,"Patch Set 2:> (1 comment) >  > > The nesting project structure of the releng directory tree is >  > I don't know who added the nesting structure. >  > > confusing.  Are we supposed to import only the top-level releng/ > > folder into the workspace as a project, or the individual nested > > folders within it? >  > Whomever made these projects might have an answer, but as far as I > can tell, you can just import the top-level project. That seems to > work for me. In fact, I see only one .project in these. The others > seem to be sub-folders with POMs and TPs. In the case of the > top-level project, I see subfolders for some of the components > (codegen, tooling, core) and a few others (releng, rt.included?, > *releases, *nightly, *milestones). I don't know if there is a need > or reason for a fully qualified name for those, but I'll let that > be answered by whomever is working on these (C├®line, I assume?) >  > >The actual formulation of these include URIs > > depends in any case (whether relative or absolute > platform:/resource > > URIs) on how the projects are imported.  I would be much happier > if > > we could just eliminate the confusion by not using nested > projects > > at all so that everybody imports the projects in the same way and > > the include references work for everybody.The initial project was the releng folder. You can import only the top level of the releng. But once the Bug 500287 will be merged, the codegen TP's will be into the Target platform folders at the root . It has been decided with the CEA (patrick TESSIER) to keep a root project. And let the possibility to the user to import the entire root project or only the nested ones."
3611,1,"Patch Set 2:For the TPD, i have tested several times with the platform path, and i'm sure it doesn't work - at least on my environnement. Maybe I miss some xtext plugin, to make it work properly. What is required to make the xtext platform:resource work ? Regards"
3612,1,"Patch Set 2:> For the TPD, i have tested several times with the platform path, > and i'm sure it doesn't work - at least on my environnement. >  > Maybe I miss some xtext plugin, to make it work properly. > What is required to make the xtext platform:resource work ?You can't have missed anything if the TPD editor works at all.  Handling of platform: scheme URIs is provided by EMF and Eclipse Platform.Can you describe the layout of projects in your workspace?* Do you import the releng/ folder from git as a project?  And if so, what is its name in you workspace?* Do you then also separately import the org.eclipse.papyrusrt.targetplatform/ folder from git (which I have commented before should be within the releng/ folder, not at the root) into your workspace?* Do you import the sub-folders within releng/ that are nested projects into your workspace, also?We really must use the absolute platform: URIs, so we need to find why they aren't working for you and to fix that."
3614,1,"Patch Set 2:> Do you import the releng/ folder from git as a project? And if so, > what is its name in you workspace? >  > => nope, I imported the root project which includes the releng > folderOh, I see.  The git root folder has a .project and is an Eclipse project.  It used to be that Eclipse or EGit wouldn't support this, but I think it doesn't hurt now that all of the importer wizards can find nested projects.  But in any case, I don't think this is the normal way to work with git in the Eclipse workspace.  At least, I didn't expect it.  ;-) > Do you then also separately import the org.eclipse.papyrusrt.targetplatform/ > folder from git (which I have commented before should be within the > releng/ folder, not at the root) into your workspace? >  > => Nope as for releng I make every releng / tp / root pom > modifications from the root project hierarchyThis is why the relative path works for you and why it doesn't work for the rest of us. > If you thing there is no other option than using platform resource > then, let's modify it, and I'll try to make the include works by > changing the way I manage Eclipse Project into my workspace. What > is your confirguration ?It's not that there isn't another option, but that it's the best option to support the way most of use the workspace and what we deem (perhaps prejudicially, I'll admit) to be the ""standard"".What I do, and what Ernesto does, is to let Oomph import the releng/ folder into the workspace as a project.  Then we additionally import the org.eclipse.papyrusrt.targetplatform project.Ernesto, we will have to update the setup model to import the latter."
3617,0,Change has been successfully merged into the git repository by vincent lorenzo
3620,0,Patch Set 2: Code-Review+1The patch seems safe and the behavior seems desirable.
3622,0,Patch Set 2: Code-Review+2The patch looks good and thanks for moving us to the new UI.
3624,0,Change has been successfully merged into the git repository by Elson Yuen
3630,0,Change has been successfully merged into the git repository by Dani Megert
3633,0,Change has been successfully merged into the git repository by Donald Dunne
3639,0,Change has been successfully merged into the git repository by Jacques Bouthillier
3645,0,Change has been successfully cherry-picked as fe89a57f09b1bffb970ee93a9d9070304ad75a3c by Judith Gull
3648,0,Change has been successfully merged into the git repository by Thomas Schuetz
3651,0,Change has been successfully merged into the git repository by Yvan Lussaud
3654,0,Change has been successfully merged into the git repository by Katharine Hirsch
3655,0,"Patch Set 5: Code-Review+2Example is already interesting and good enough to be merged; but sure if it's going to be shipped in the IDE, it makes sense to add additional features."
3657,0,Change has been successfully merged into the git repository by Mickael Istria
3666,0,"Patch Set 21:> (6 comments) >  > Looks good to me, but I would prefer if you could avoid using an > activator. In the past, we had activators slowing done the > platform. >  > The .project editor extension could IMHO be contributed to once > this has been merged to the text repository.Thanks a lot for taking the time Lars. I will quickly handle the non-activator changes right now and investigate what can be done about replacing the activator."
3675,1,"Patch Set 30:> IMHO the new icon should not block the merge, we can handle that > via a follow-up bug.No. I played with it and it's very confusing if two editors are different but can't be distinguished."
3677,1,"Patch Set 30:> Maybe just add a 'G' on top of the Text Editor icon for now? I > didn't really think about it too much, except that it needs to be > there.I came up with https://imgur.com/a/AL1Fo . I think it's very ugly, but not enough ugly to be a blocker as it will be improved. WDYT?"
3678,1,"Patch Set 30:> > Maybe just add a 'G' on top of the Text Editor icon for now? I > > didn't really think about it too much, except that it needs to be > > there. >  > I came up with https://imgur.com/a/AL1Fo . I think it's very ugly, > but not enough ugly to be a blocker as it will be improved. WDYT?Is the icon very important at this moment? I suppose that when implementing support for a language, one would provide a more appropriate icon anyway, right? As an end-user, I don't care what editor class is used, the most important is to know what kind of file is open in it."
3682,0,"Patch Set 25:I rebased the change and it seems it's good to go. Mickael, can you review this patchset so we are in sync? > Change looks fine for me. Great work IMHO which hopefully makes it > easier for extenders to provider language support for other > languages. Please open bugs for the removal of the activator and > the move of the .project editor to platform.ui, after that I'm fine > with the merge. I'm sure others will find issues after the merge, > but having this in early in 4.7 should help in solving these > issues. I filed bug 499812 and bug 499811 to be handled right after this is merged. > Is there follow up work planned in other area, e.g. JSDT, Maven or > Gradle? I would be interested to follow such developments, please > copy me into these bugs, if possible.Once the infrastructure is in place (and constantly improved) there will probably be quite some follow-up. I don't have specific bugs for now but I'll make sure I cc you on anything that comes up."
3686,0,"Patch Set 35: Verified+1Looks good now, but did not do a code review.NOTE: Do not merge before we have a good I-build tomorrow."
3688,0,Change has been successfully merged into the git repository by Mickael Istria
3689,1,"Patch Set 33: Verified-1The extension points need polish. All attributes must be documented. I noticed that at least 'class' and 'id' aren't. Here's a good example for a 'class' documentation:class - the name of the class that implements this container page. The class must be public and implement org.eclipse.jdt.ui.wizards.IClasspathContainerPage with a public 0-argument constructor.The hover provider identifier is wrong - should be plural.Otherwise it looks OK, but did not do a detailed code review."
3691,1,"Patch Set 17:> Mickael or Sopot, can you remove the // TODOS and the unnecessary > whitespace? Make it hard for me to read this.It should be clean now."
3692,0,"Patch Set 28: Code-Review-1 Verified-1It's a good starting point and comes with no warnings - good!There are still several issues to address:1) The hover is not working at mouse location, but on caret location and then shows the hover for the nature no matter where I move the mouse.2) Only make API what really needs to be accessed by clients (tests do not count). Most of the stuff should go into 'org.eclipse.ui.internal.genericeditor'.3) Javadoc is missing everywhere. You have to specify @since tags, and API Tools tags where appropriate.4) The extension point schema (doc) cannot refer to externalized strings (%...). Just use the English name. Use the preview to see how it looks like.5) The plug-in ID in the schema is wrong.It was suggested to remove the example and have some real case in Platform UI. Sorry, I do not yet see that ""real"" use case and hence we should keep the example."
3694,1,"Patch Set 15:Mickael or Sopot, can you remove the // TODOS and the unnecessary whitespace? Make it hard for me to read this."
3711,0,Patch Set 22:Mickael or Sopot: IIRC you had also more complex examples for the usage of this new extension? I think you mentioned asynchronous code completion and TextMate based examples. Where do I think these examples? Would be nice to see more advanced usage of your development for the review.
3712,0,"Patch Set 22:@Lars:Asynchronous code completion is a very different (but related) issue and we do not plan to work on it as part of this change. It's the story of https://bugs.eclipse.org/bugs/show_bug.cgi?id=251156 . Although we've thought about it, we do not have any code or example to improve the situation at the moment.Support for TextMate grammar was implemented by hooking the syntax highlighting from LiclipseText to this generic editors, it's in  https://github.com/mickaelistria/LiClipseText/commit/102c4fb84d2760b5b5e6a8bff27266e2137c932e but it's not something we can contribute to Platform.The best other examples we have is the support for language server with a decent C# editor. It's in https://github.com/eclipselabs/eclipse-language-service but there again, not something we can contribute to Platform at the moment."
3713,1,"Patch Set 22:Lars I addressed your concerns except the activator one. Would you find it acceptable to track the removal of the activator on a separate linked bug which we take care of after the merge? If so, I will file it and link it to the existing bugs.My reasoning is that we need the functionality to be in the repo as soon as possible so we have time to handle issues, the activator being also one of them."
3716,0,Patch Set 22:I suggest to remove org.eclipse.ui.genericeditor.examples from this commit and contribute this as extension to platform UI. I know Mickael wants since a long time to provide editing support for .project and it would be nice to have consumer in platform for the new extensions.
3717,0,"Patch Set 22:> I suggest to remove org.eclipse.ui.genericeditor.examples from this commit and contribute this as extension to platform UI.Having an example for a generic editor such as the .project one was requested by Dani as a requirement to include that change to Platform UI (ie every new API must have a client inside Platform).> I know Mickael wants since a long time to provide editing support for .project and it would be nice to have consumer in platform for the new extensions.(a bit out of topic)Well, I do not care much about this editor for .project. IMO, editing the .project is something that should happen via project preferences and presented in an easier way to end-users.Support for .project is just here to validate the design of the generic editor."
3719,1,"Patch Set 22:(1 comment)Lars, I addressed all of your concerns except the following."
3727,0,"Patch Set 20: Code-Review+1 Verified+1(6 comments)Looks good to me, but I would prefer if you could avoid using an activator. In the past, we had activators slowing done the platform. The .project editor extension could IMHO be contributed to once this has been merged to the text repository."
3739,0,"Patch Set 24: Code-Review+2 Verified+1Change looks fine for me. Great work IMHO which hopefully makes it easier for extenders to provider language support for other languages. Please open bugs for the removal of the activator and the move of the .project editor to platform.ui, after that I'm fine with the merge. I'm sure others will find issues after the merge, but having this in early in 4.7 should help in solving these issues.Is there follow up work planned in other area, e.g. JSDT, Maven or Gradle? I would be interested to follow such developments, please copy me into these bugs, if possible."
3744,0,Change has been successfully merged into the git repository by Dani Megert
3745,1,"Patch Set 1:The change is acceptable, but the right way to cope with platform-specific garbage files is to configure a global gitignore rule. I've added instructions to https://wiki.eclipse.org/Platform-releng/Git_Workflows#Configure_the_workspace"
3746,1,"Patch Set 1:> The change is acceptable, but the right way to cope with > platform-specific garbage files is to configure a global gitignore > rule. I've added instructions to https://wiki.eclipse.org/Platform-releng/Git_Workflows#Configure_the_workspaceYes, but this relies on each developer. We also don't expect developers to set the encoding or formatting, but store it in the repos. So, I'd claim this change is not just acceptable, but good."
3750,0,Change has been successfully merged into the git repository by Ryan Brooks
3757,0,Change has been successfully rebased as 325edf01e5aca97ee74f8144deccf59c1b3c550f by Benoit Maggi
3760,0,Change has been successfully merged into the git repository by Pierre-Charles David
3766,0,Change has been successfully merged into the git repository by Sergey Prigogin
3769,0,Change has been successfully merged into the git repository by vincent lorenzo
3773,0,Change has been successfully merged into the git repository by Katharine Hirsch
3776,0,Change has been successfully merged into the git repository by Christian W. Damus
3779,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/25/ : UNSTABLE
3789,0,Change has been successfully merged into the git repository by Sergey Prigogin
3794,0,Change has been successfully pushed.
3798,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-Tooling/28/ : UNSTABLE
3801,0,Change has been successfully merged into the git repository by Christian W. Damus
3805,0,Change has been successfully merged into the git repository by Markus Knauer
3808,0,Change has been successfully merged into the git repository by Eike Stepper
3817,0,Change has been successfully pushed.
3819,0,Change has been successfully merged into the git repository by Eric Williams
3822,0,Change has been successfully merged into the git repository by Andreas Sewe
3825,0,Change has been successfully merged into the git repository by Martin Oberhuber
3828,0,Change has been successfully cherry-picked as 97cdd3c641009247654f5b3557056a8b1f1b961f by Beat Schwarzentrub
3832,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10436/ : UNSTABLE
3836,0,Change has been successfully merged into the git repository by Patrik Suzzi
3837,1,Patch Set 7:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10523/ : UNSTABLE
3843,0,Patch Set 5: Code-Review-1Ugh. It seems like a post-save action stomped all over these files and replaced anonymous classes with lambdas. Going to rebuild this change to fix it.
3847,0,"Patch Set 18:This looks good to me. Arun, any comments?"
3850,0,Change has been successfully merged into the git repository by Eric Williams
3856,0,"Patch Set 17:> (2 comments)I was not aware of this, thanks. I did some reading and you are correct. https://wiki.eclipse.org/Version_Numbering#When_to_change_the_minor_segmentI will review this patch further."
3882,0,Change has been successfully merged into the git repository by Kaloyan Raev
3884,0,Change has been successfully merged into the git repository by Leo Ufimtsev
3890,0,Change has been successfully merged into the git repository by Patrik Suzzi
3892,0,Patch Set 3: Code-Review+2Looks great
3893,1,Patch Set 3: Code-Review-2 Verified-1doesn't work and results in a glib critical error
3896,0,Change has been successfully cherry-picked as 7df209fa8ce025eea58b567ff3385d9a16414a55 by Marc-Andre Laperle
3899,1,"Patch Set 2: -Code-Reviewwrong patch, sorry!"
3902,0,"Patch Set 2: Code-Review+1(1 comment)I like this, in hudson we get this messagegsettings get org.gnome.desktop.interface gtk-theme -> unknowngsettings get org.gnome.desktop.wm.preferences theme -> unknownI think it should get in sooner than later.One minor request in comment"
3903,0,Patch Set 2:I think this is just not reliable enough... The gconfig is no guarantee that this will be the theme used. I've seen this on numerous occasion giving a different value than what's running.
3912,0,Change has been successfully merged into the git repository by Alois Zoitl
3916,0,Change has been successfully merged into the git repository by Alexander Kurtakov
3920,0,Change has been successfully merged into the git repository by Johannes Dorn
3922,0,Change has been successfully merged into the git repository by Patrik Suzzi
3923,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10520/ : UNSTABLE
3927,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10446/ : UNSTABLE
3928,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10447/ : UNSTABLE
3932,0,Change has been successfully merged into the git repository by Arthur van Dorp
3934,0,Change has been successfully merged into the git repository by Patrik Suzzi
3938,0,Patch Set 2:In Mac looks fine:- old: http://i.imgur.com/aOlfSKP.png- new: http://i.imgur.com/Iba9AfD.png
3944,0,Change has been successfully merged into the git repository by Lars Vogel
3945,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10519/ : UNSTABLE
3955,0,Change has been successfully merged into the git repository by Matthias Sohn
3956,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/9071/ : UNSTABLE
3960,0,Change has been successfully rebased as 05129b2045a8c0f15f5431fdabf54a567c7e0512 by vincent lorenzo
3962,0,Change has been successfully merged into the git repository by Lars Vogel
3970,0,"Patch Set 2: Code-Review-1(1 comment)> I think you must mean #step().  Nice.#split() also does cancellation checks, so either one would work."
3979,0,Change has been successfully merged into the git repository by Katharine Hirsch
3985,0,Change has been successfully merged into the git repository by Stefan Xenos
3990,0,Change has been successfully merged into the git repository by Michal Niewrzal
3993,0,Change has been successfully merged into the git repository by Lars Vogel
3996,0,Change has been successfully merged into the git repository by Alexander Kurtakov
3998,0,Change has been successfully merged into the git repository by Marc-Andre Laperle
3999,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6140/ : UNSTABLE
4001,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6139/ : UNSTABLE
4009,0,Change has been successfully merged into the git repository by Patrick Tessier
4014,0,Change has been successfully merged into the git repository by Pierre-Charles David
4016,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4021,0,Change has been successfully merged into the git repository by Patrick Tessier
4029,0,Patch Set 3:> If JGit 4.5 is coming end of September Is there a more specific date for this planned release?  It would be nice if we can get it before we release Gerrit 2.13.
4030,0,"Patch Set 3:> > If JGit 4.5 is coming end of September >  > Is there a more specific date for this planned release?  It would > be nice if we can get it before we release Gerrit 2.13.I have to schedule the release review with the Eclipse foundation first, can do this later today"
4031,0,"Patch Set 3:> > > If JGit 4.5 is coming end of September > > > > Is there a more specific date for this planned release?  It would > > be nice if we can get it before we release Gerrit 2.13. >  > I have to schedule the release review with the Eclipse foundation > first, can do this later todayAny update on this?"
4032,0,"Patch Set 3:> > > > If JGit 4.5 is coming end of September > > > > > > Is there a more specific date for this planned release?  It > would > > > be nice if we can get it before we release Gerrit 2.13. > > > > I have to schedule the release review with the Eclipse foundation > > first, can do this later today >  > Any update on this?looks like we can release 4.5 on Sept 21, I will prepare release notes tomorrow"
4040,0,Change has been successfully merged into the git repository by Matthias Sohn
4043,0,Change has been successfully merged into the git repository by Andreas Sewe
4047,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4055,0,Change has been successfully pushed.
4059,0,Change has been successfully pushed.
4063,0,Change has been successfully pushed.
4066,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4068,0,Change has been successfully cherry-picked as 0a8901a6a9f4630bc3ddc633cadb7024371d5192 by Matthias Otterbach
4077,0,Change has been successfully merged into the git repository by Mickael Istria
4080,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4082,0,Change has been successfully merged into the git repository by Lars Vogel
4086,0,Change has been successfully pushed.
4091,0,Change has been successfully merged into the git repository by Markus Knauer
4094,0,Change has been successfully merged into the git repository by Markus Knauer
4097,0,Change has been successfully merged into the git repository by Lars Vogel
4101,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10500/ : UNSTABLE
4105,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4111,0,Change has been successfully merged into the git repository by Matthias Sohn
4124,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4141,0,Change has been successfully merged into the git repository by Matthias Sohn
4150,0,Change has been successfully merged into the git repository by Matthias Sohn
4187,0,Change has been successfully merged into the git repository by Matthias Sohn
4201,0,Change has been successfully merged into the git repository by Matthias Sohn
4222,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4225,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
4231,0,Change has been successfully cherry-picked as b1757866d2d0570ff8fec04496dfd34f389326af by Beat Schwarzentrub
4234,0,Change has been successfully cherry-picked as 014cee1a593a4428c1fad0d063725a9941b456c4 by Beat Schwarzentrub
4247,0,Change has been successfully merged into the git repository by Matthias Sohn
4263,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4268,0,Change has been successfully merged into the git repository by Pierre-Charles David
4275,0,Change has been successfully rebased as 94853d49fc247d6475e06a0997d0c63e1776b69f by Patrick Tessier
4278,1,Patch Set 1:Build error is:FATAL: Could not fetch from any repositoryhudson.plugins.git.GitException: Could not fetch from any repositoryWhat's wrong here?
4284,0,Change has been successfully merged into the git repository by Lars Vogel
4286,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/1052/ : UNSTABLE
4288,0,Change has been successfully cherry-picked as 54acfff454b05c01d74cb4c4a7b9e3a230d5e592 by Beat Schwarzentrub
4290,0,Change has been successfully merged into the git repository by Patrick Tessier
4296,0,Change has been successfully cherry-picked as 82f0e05453b4b891e1f3a6e71f23e38bb8767a44 by Beat Schwarzentrub
4303,0,Change has been successfully merged into the git repository by Patrick Tessier
4305,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4312,0,Change has been successfully merged into the git repository by Martin Oberhuber
4315,0,Change has been successfully merged into the git repository by Martin Oberhuber
4320,0,Change has been successfully rebased as 040fb7aeab8cf065ac93709f5f7d8e7a5d22d98c by Florian Noyrit
4323,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4328,0,Change has been successfully merged into the git repository by Andrey Loskutov
4331,0,Change has been successfully merged into the git repository by Mickael Istria
4336,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10488/ : UNSTABLE
4338,0,"Patch Set 3: Code-Review+1 Verified+1Mickael, I think it is good to be submitted now. What do you think?"
4349,0,Change has been successfully merged into the git repository by Benoit Maggi
4352,0,Change has been successfully merged into the git repository by Till Brychcy
4357,0,Change has been successfully rebased as 958056df8fdee1d6af096c82c065675030711733 by Patrick Tessier
4366,0,Change has been successfully merged into the git repository by Lars Vogel
4367,1,Patch Set 5:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10505/ : UNSTABLE
4371,0,Change has been successfully merged into the git repository by Thomas Wolf
4374,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/881/ : UNSTABLE
4375,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/882/ : UNSTABLE
4377,0,Change has been successfully merged into the git repository by Andrey Loskutov
4378,0,"Patch Set 1:> Change has been successfully merged into the git repository by > Andrey LoskutovThe icon we use looks slightly different than the one used for other command e.g. ""Import Projects"". Do you know where to find this one so that we can use the exact same icon ?"
4379,0,"Patch Set 1:> > Change has been successfully merged into the git repository by > > Andrey Loskutov >  > The icon we use looks slightly different than the one used for > other command e.g. ""Import Projects"". Do you know where to find > this one so that we can use the exact same icon ?For 4.6 many icons were changed from gif to png. I guess what we have is based on 3.x state."
4382,0,Change has been successfully merged into the git repository by Sarika Sinha
4392,0,Change has been successfully cherry-picked as 588f11a18177d03589a7c428bdde854dff4fb2f1 by Genevieve Bastien
4396,0,Change has been successfully cherry-picked as 0e4eaca8a90a0c572ca20fe4bf3004628a94380f by Alexandre Montplaisir
4402,0,Change has been successfully cherry-picked as 3fce5c93537952fc371b2ebd50be495cd53330f9 by Genevieve Bastien
4405,0,Change has been successfully merged into the git repository by Sergey Prigogin
4406,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6137/ : UNSTABLE
4410,0,Change has been successfully merged into the git repository by Lars Vogel
4414,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10485/ : UNSTABLE
4417,0,Change has been successfully merged into the git repository by Lars Vogel
4418,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10478/ : UNSTABLE
4424,0,Change has been successfully merged into the git repository by Lars Vogel
4426,0,Change has been successfully merged into the git repository by Lars Vogel
4434,0,"Patch Set 1:> comp.layout(); compContainer.requestLayout();Ups. Of course, this does not belong here. Thanks!"
4439,0,Change has been successfully merged into the git repository by Lars Vogel
4441,0,Change has been successfully merged into the git repository by Lars Vogel
4442,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10499/ : UNSTABLE
4452,0,Change has been successfully cherry-picked as 85ab284499e29c4beba4df18c6500072a667ec62 by Matthew Khouzam
4460,0,Change has been successfully merged into the git repository by vincent lorenzo
4466,0,Change has been successfully merged into the git repository by vincent lorenzo
4470,0,Change has been successfully cherry-picked as bd17655fa695eefe754dc6da76d571636221eb5c by Jeff Johnston
4472,0,Patch Set 1: Code-Review+1Waiting for the end of the build to validate!
4474,0,Change has been successfully merged into the git repository by vincent lorenzo
4478,0,Change has been successfully rebased as b264a22be02b913e8f8833f831f1b8090850fc31 by Steffen Pingel
4488,0,"Patch Set 1:Steffen, could you take a look at this? I don't understand this functionality well enough to give a good review."
4493,0,Change has been successfully rebased as 2f9f5e4c06f3684409b01c086dee43ebee9ab723 by Frank Becker
4500,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6045/ : UNSTABLE
4502,0,Change has been successfully merged into the git repository by Doug Schaefer
4503,1,"Patch Set 4:Are there no tab groups for this new ""C/C++ Local Application (auto)""?  I get an error saying that no tab group is defined for it."
4504,1,"Patch Set 4:> Are there no tab groups for this new ""C/C++ Local Application > (auto)""?  I get an error saying that no tab group is defined for > it.Not at the moment, no. There are no options, everything is derived, thus the (auto). But I should define an empty tab group for it so you don't get the error. And there may be options in the near future."
4511,0,Change has been successfully rebased as baaea6f2dee59f42390bbea459fd3adbe6cdd7a4 by Thierry BLIND
4514,0,Change has been successfully cherry-picked as f1b44a7d70e91d68618d7a58eff0026275e2da80 by Jeff Johnston
4519,0,Change has been successfully merged into the git repository by Dawid Pakula
4523,0,Change has been successfully cherry-picked as f3a540aec115c87754dc03fce7676a43c2701ea8 by Jeff Johnston
4527,0,Change has been successfully merged into the git repository by Dawid Pakula
4530,0,Change has been successfully merged into the git repository by Laurent Delaigue
4542,0,Change has been successfully rebased as a0f875761d4fbaca0953e1e1acb1d7905a9b05a5 by vincent lorenzo
4545,0,Change has been successfully merged into the git repository by Ryan Brooks
4553,0,Change has been successfully merged into the git repository by Ryan Brooks
4558,0,Change has been successfully merged into the git repository by Ryan Brooks
4561,0,Change has been successfully merged into the git repository by Laurent Delaigue
4563,0,"Patch Set 2:Hi Laurent,thanks for the review! I agree, of course.In the meantime, the branch I removed has actually been changed and fixed to really remove the respective storages using removeStorage(Storage) rather then getStorages().remove(). So this is fine now.Anyway, I fixed the JavaDoc and improved the usages of this class to avoid creating too many copies.Thanks!"
4567,0,Patch Set 3:(1 comment)Thanks for your feedback! Please see my inline comment about your question.
4569,1,Patch Set 1:(1 comment)I think this deserves more work because it uncovers an error in some javadoc and possibly there are other non-optimal or plainly erroneous uses of the method involved (getStorages)
4577,0,Change has been successfully merged into the git repository by Ryan Brooks
4583,0,Change has been successfully merged into the git repository by Ryan Brooks
4588,0,Change has been successfully merged into the git repository by Ryan Brooks
4596,0,Change has been successfully merged into the git repository by Ryan Brooks
4598,1,"Patch Set 6:> Thank you Simon for this patch, it looks better and better! > The improvement is already measurable, though a few things remain > to be improved I think: > - Filters > - There's a useless box around 'Select the filters that should be > active...' > - I think on the other hand a box labeled 'Description' has been > removed when it should stay as it was > (in other pref pages, when there is the same kind of master/detail > panel, we use a group for the details) > - 'Remember selected filters' should be on one line abouve the tabs > since it is independent of 2-way/3-way preferences. > The group 'Remember selected filters' should actually be removed, > and 'Synchronize current filter selection:' should be renamed to > 'Reuse selected filters in future comparisons:', which should be > place above the tabs > - Groups: > The same as filters applies to groups. Remove useless box around, > and move ""Remember selected groups"" as a single line above the > tabs. > - Logging: > The fields are indented, they shouldn't be > - Post Processors > The fields are indented, they shouldn't be > - Resolution strategy > I think some space between the box that contains the description of > the selected scope and the text it contains would improve > readability.Thank you Laurent, I'm not sure I understand what you meant by ""The field are indented"" in Logging and Post Processors. I've tested it with GTK2 and GTK3 and it's the same.Concerning the  > Thank you Simon for this patch, it looks better and better! > The improvement is already measurable, though a few things remain > to be improved I think: > - Filters > - There's a useless box around 'Select the filters that should be > active...' > - I think on the other hand a box labeled 'Description' has been > removed when it should stay as it was > (in other pref pages, when there is the same kind of master/detail > panel, we use a group for the details) > - 'Remember selected filters' should be on one line abouve the tabs > since it is independent of 2-way/3-way preferences. > The group 'Remember selected filters' should actually be removed, > and 'Synchronize current filter selection:' should be renamed to > 'Reuse selected filters in future comparisons:', which should be > place above the tabs > - Groups: > The same as filters applies to groups. Remove useless box around, > and move ""Remember selected groups"" as a single line above the > tabs. > - Logging: > The fields are indented, they shouldn't be > - Post Processors > The fields are indented, they shouldn't be > - Resolution strategy > I think some space between the box that contains the description of > the selected scope and the text it contains would improve > readability. > Thank you Simon for this patch, it looks better and better! > The improvement is already measurable, though a few things remain > to be improved I think: > - Filters > - There's a useless box around 'Select the filters that should be > active...' > - I think on the other hand a box labeled 'Description' has been > removed when it should stay as it was > (in other pref pages, when there is the same kind of master/detail > panel, we use a group for the details) > - 'Remember selected filters' should be on one line abouve the tabs > since it is independent of 2-way/3-way preferences. > The group 'Remember selected filters' should actually be removed, > and 'Synchronize current filter selection:' should be renamed to > 'Reuse selected filters in future comparisons:', which should be > place above the tabs > - Groups: > The same as filters applies to groups. Remove useless box around, > and move ""Remember selected groups"" as a single line above the > tabs. > - Logging: > The fields are indented, they shouldn't be > - Post Processors > The fields are indented, they shouldn't be > - Resolution strategy > I think some space between the box that contains the description of > the selected scope and the text it contains would improve > readability.Thank you Laurent, I'm not sure I understand what you meant by ""The fields are indented"" in Logging and Post Processor. I've tested it with GTK2 and GTK3 and it's the same. I don't see any abnormal indent.Concerning ""Remember selected filters"" in filters preference page it does not seems to be the same for the two tabs. Is it normal or these two tabs should have this option? For the Groups preference page it will be possible to move this field above the tabs, but it will be more consistent if the filters and the groups have the same layout."
4599,0,"Patch Set 6:Hello Simon,1) For the indent, I notice (under windows) that pages 'Editor', 'Item Providers', 'Logging' and 'Post-Processors' display options that are slightly indented with regard to the page title. Other pages display fields that are perfectly aligned with the page title. i'll send you some screenshots by mail.2) For the 'remember selected x': It's normal that it's not present for each tab of the filters. So it definitely should be displayed above, with a label that explains that this preference makes it so that the editor will automatically reuse the latest group/filter list used in the latest comparison. So I think this check box should be extracted and displayed on top of the page for both groups and filters."
4601,0,"Patch Set 1: Code-Review-1 Verified+1(1 comment)Hi Simon,thanks for the work! Looks good already! Just a few more thoughts on the pages below. Thanks a lot!Page Engines  * In the Configuration group for tab Match is some padding to the right and hence makes the min width larger then needed.  * The description area has a slightly different background than the rest (on my Linux box using GTK2). It has the right background in the post processor page and the item providers page.Page Filters  * I'd decrease min width a bit  * The description area has a slightly different background than the rest (on my Linux box using GTK2). It has the right background in the post processor page and the item providers page.  * The label ""Automatic behavior"" is misleading. Firstly, this label doesn't really mean a lot. Maybe something like ""Remember selected group"" would be better. Secondly, this preference is independent from the selected group/filter, still it is on the same level as the Description group, which is dependent on the selection. Maybe we should put the description and the list of filters into a group?Page Groups  * Label at the top has a larger margin to the list below than on previous pages.  * Same last two as for filtersItem Providers  * To be consistent with other pages in EMF Compare (e.g. post processors), it'd be good to have a brief label at the top. E.g.: ""Select active item providers used in the comparison editor:"""
4603,0,Patch Set 9: Code-Review+1Looks good
4605,0,Change has been successfully merged into the git repository by Laurent Delaigue
4606,0,"Patch Set 3: Code-Review-1 Verified+1Hi Simon, thanks for the new PS. I think it is nearly perfect!I think you only forgot to address this point from the last review:  * The label ""Automatic behavior"" is misleading. Firstly, this label doesn't really mean a lot. Maybe something like ""Remember selected group"" would be better.And in addition I found another minor thing:  * When opening the item providers page, there is no item provider selected automatically, which leaves the description empty -- and this looks a bit strange. In all the other pages, the first entry of the respective list is selected, which is better, I think, than leaving the selection empty.Thanks!"
4609,1,"Patch Set 5: Code-Review-1Thank you Simon for this patch, it looks better and better!The improvement is already measurable, though a few things remain to be improved I think:- Filters  - There's a useless box around 'Select the filters that should be active...'  - I think on the other hand a box labeled 'Description' has been removed when it should stay as it was    (in other pref pages, when there is the same kind of master/detail panel, we use a group for the details)  - 'Remember selected filters' should be on one line abouve the tabs since it is independent of 2-way/3-way preferences.    The group 'Remember selected filters' should actually be removed, and 'Synchronize current filter selection:' should be renamed to    'Reuse selected filters in future comparisons:', which should be place above the tabs- Groups:  The same as filters applies to groups. Remove useless box around, and move ""Remember selected groups"" as a single line above the tabs.- Logging:  The fields are indented, they shouldn't be- Post Processors  The fields are indented, they shouldn't be- Resolution strategy  I think some space between the box that contains the description of the selected scope and the text it contains would improve readability."
4611,0,"Patch Set 7: Code-Review+1(1 comment)Looks good to me, thanks for the work"
4617,0,Patch Set 1: Code-Review+1perhaps you could give me a good icon for designer in 32 by 32
4623,0,Change has been successfully merged into the git repository by Ansgar Radermacher
4625,0,"Patch Set 2:yes, but pelase push overmeand do not make mee abadon the patch.I have prepared for you the field :-)"
4634,0,Change has been successfully rebased as 64611bd15696f268d33ff09d0689cc2fbb028682 by vincent lorenzo
4637,0,Change has been successfully merged into the git repository by Dawid Pakula
4641,0,Change has been successfully merged into the git repository by Patrick Tessier
4648,0,Change has been successfully merged into the git repository by Patrick Tessier
4651,0,Change has been successfully merged into the git repository by Abel Hegedus
4655,0,Change has been successfully merged into the git repository by Stephan Eberle
4659,0,Change has been successfully merged into the git repository by Ahmed Mahran
4666,0,Change has been successfully merged into the git repository by Stephan Eberle
4711,0,Change has been successfully merged into the git repository by Jacques Bouthillier
4715,0,Change has been successfully merged into the git repository by Michal Niewrzal
4719,0,Change has been successfully rebased as 735f2b0100a195c752b322ca7a778a334b429b1c by Patrick Tessier
4722,0,Change has been successfully merged into the git repository by Patrick Tessier
4725,0,Change has been successfully merged into the git repository by Martin Oberhuber
4728,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4731,0,Change has been successfully merged into the git repository by Christian Pontesegger
4735,0,Change has been successfully rebased as f168d94fc6e6a07b3595e5992e402985b13d78b3 by Michal Niewrzal
4737,0,Change has been successfully pushed.
4740,0,Change has been successfully merged into the git repository by Sravan Kumar Lakkimsetti
4743,0,Change has been successfully merged into the git repository by Martin Oberhuber
4746,0,Change has been successfully merged into the git repository by Martin Oberhuber
4749,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4752,0,Change has been successfully merged into the git repository by Dawid Pakula
4758,0,Change has been successfully merged into the git repository by Daniel Tolgyesi
4760,0,Change has been successfully merged into the git repository by Arun Thondapu
4764,0,Change has been successfully merged into the git repository by Marcel Hein
4770,0,Change has been successfully merged into the git repository by Joao Barata
4771,0,"Patch Set 1:It look good for me. But the modifications are not on the master, and why handle only RuntimeException?"
4775,0,Change has been successfully merged into the git repository by Marcel Hein
4778,0,Change has been successfully merged into the git repository by Johannes Faltermeier
4781,0,Change has been successfully merged into the git repository by Lars Vogel
4785,0,Change has been successfully merged into the git repository by Christian Pontesegger
4787,0,Change has been successfully merged into the git repository by Sarika Sinha
4792,0,Change has been successfully merged into the git repository by Shrikant Gangal
4794,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6041/ : UNSTABLE
4796,0,Change has been successfully merged into the git repository by Doug Schaefer
4802,0,Patch Set 9: Verified+1It is nice there no dependence now to emf facet
4804,0,Change has been successfully rebased as 261b2b3821a24dd91fb87d4e33c75ed33404dc15 by Patrick Tessier
4807,0,Patch Set 2: Code-Review+1=== Code Review ===Looks good to me==Fonctionnal tests== - try some search -> all works fine.==Remarks==Maybe a toggle button in the head view will be fine to display/hide the search area
4813,0,"Patch Set 4: Code-Review+2(7 comments)Looks good, but it behave strangely with (empty) comments=> What is the expected result for not NamedElements?Also:  - small typos - why did you extract exception message? - extract as a constant repeated key : *"
4826,0,Patch Set 2: Code-Review+2 Verified+1No problem :) Thanks for update!
4827,0,Change has been successfully merged into the git repository by Michal Niewrzal
4830,0,Change has been successfully merged into the git repository by Dirk Fauth
4834,0,Change has been successfully merged into the git repository by Dirk Fauth
4841,0,Change has been successfully merged into the git repository by Sarika Sinha
4850,0,Change has been successfully merged into the git repository by Eric Williams
4858,0,Change has been successfully merged into the git repository by Markus Knauer
4861,0,Change has been successfully merged into the git repository by Markus Knauer
4867,0,Change has been successfully merged into the git repository by Sarika Sinha
4872,0,Change has been successfully merged into the git repository by Stephan Herrmann
4880,0,Change has been successfully merged into the git repository by Thierry BLIND
4883,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4889,0,Change has been successfully merged into the git repository by Brian de Alwis
4891,0,Change has been successfully merged into the git repository by Michael Vorburger
4898,0,"Patch Set 1: Code-Review-1The idea looks interesting, but I'm not clear how one would use this in practice? If you could extend org.eclipse.emf.eson.ui/examples/ with a ""show case"" how one would use this for the Library, that would be great."
4901,0,Patch Set 2:OK now I get it - this is actually great - makes the UI much clearer!
4903,0,Change has been successfully rebased as 5402fa9f2b6260f736c53cbabf86b5b26f00d2cb by Michael Vorburger
4905,0,Change has been successfully merged into the git repository by David Miller
4913,0,Change has been successfully rebased as b88afca517e53c596fbff280098d53722fa3edf2 by Michael Vorburger
4921,0,Change has been successfully rebased as 70b6bdb742c504cc4a74ca571a88d8571d3f52dd by Michael Vorburger
4922,1,"Patch Set 5:Thanks David, and sorry for the (huge) delay in merging this one."
4926,1,Patch Set 1:(1 comment)Does it give an error message if the import cannot be resolved?
4932,0,Change has been successfully merged into the git repository by Patrik Suzzi
4936,0,Change has been successfully cherry-picked as 0c1a87a9bc3aa1bff17976d205cc0eccc1f34b38 by Jeff Johnston
4939,0,Change has been successfully cherry-picked as 30dad6c59ffa2f7569f4f419291fc1723247ae07 by Jeff Johnston
4945,0,Change has been successfully merged into the git repository by Ryan Brooks
4948,0,Change has been successfully merged into the git repository by Matthias Sohn
4950,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3170/ : UNSTABLE
4953,0,Change has been successfully pushed.
4955,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3161/ : UNSTABLE
4958,0,Change has been successfully pushed.
4961,0,Change has been successfully pushed.
4967,0,Change has been successfully pushed.
4971,0,Change has been successfully pushed.
4973,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3169/ : UNSTABLE
4975,0,Change has been successfully pushed.
4978,0,Change has been successfully merged into the git repository by Alexander Kurtakov
4981,0,Change has been successfully merged into the git repository by Katharine Hirsch
4984,0,Change has been successfully merged into the git repository by Katharine Hirsch
4989,0,Change has been successfully merged into the git repository by Patrik Suzzi
4991,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6032/ : UNSTABLE
4993,0,Change has been successfully merged into the git repository by Doug Schaefer
5011,0,Change has been successfully cherry-picked as dd8c2fe60b2f8e481577fcb5f3f2e10425459ac1 by Genevieve Bastien
5022,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1548/ : UNSTABLE
5027,0,Change has been successfully rebased as 7fc77503de68cb636a3bc4b3b31124e007849c09 by Frank Becker
5037,0,Change has been successfully merged into the git repository by Marc Khouzam
5041,0,Change has been successfully merged into the git repository by Marc Khouzam
5043,1,"Patch Set 1: Code-Review+2 Verified+1OK, trivial."
5044,0,Change has been successfully merged into the git repository by Olivier Constant
5051,0,Change has been successfully rebased as 2c099dd76036a46f06e04f758dfef91cddc29ca0 by Thierry BLIND
5054,0,Change has been successfully merged into the git repository by Manoj Palat
5060,0,Change has been successfully merged into the git repository by Donald Dunne
5063,0,Change has been successfully merged into the git repository by Marcel Bruch
5065,0,Change has been successfully merged into the git repository by Dawid Pakula
5073,0,Change has been successfully merged into the git repository by Dirk Fauth
5082,0,"Patch Set 2: Code-Review-1(2 comments)Is it possible for you (without much effort) to update the copyright header according to https://wiki.eclipse.org/Platform_UI/How_to_Contribute#Optional:_Update_the_copyright_header_for_existing_filesAlthough that rule has become optional, I like to see who has contributed via copyright header instead of having to check the history."
5090,0,Change has been successfully merged into the git repository by Dirk Fauth
5093,0,Change has been successfully merged into the git repository by Laurent Redor
5098,0,Change has been successfully rebased as 5004db2eb11e572c0e4933af0c8a2c066a93f0d1 by Johannes Faltermeier
5100,0,"Patch Set 2:Is it possible for you (without much effort) to update the copyright header according to https://wiki.eclipse.org/Platform_UI/How_to_Contribute#Optional:_Update_the_copyright_header_for_existing_filesAlthough that rule has become optional, I like to see who has contributed via copyright header instead of having to check the history."
5103,0,Change has been successfully merged into the git repository by Dirk Fauth
5110,0,Change has been successfully merged into the git repository by Michal Niewrzal
5113,0,Change has been successfully merged into the git repository by Johannes Faltermeier
5116,0,Change has been successfully merged into the git repository by Thomas Schuetz
5120,0,Change has been successfully merged into the git repository by Marcel Bruch
5123,0,Change has been successfully merged into the git repository by Marcel Bruch
5126,0,Change has been successfully merged into the git repository by Marcel Bruch
5129,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
5133,0,Change has been successfully merged into the git repository by Matthias Sohn
5139,0,Change has been successfully merged into the git repository by Lars Vogel
5142,0,Change has been successfully merged into the git repository by Lars Vogel
5144,1,Patch Set 1: Code-Review-1(3 comments)ID is wrong and I think the wording could be more end user focused.
5149,0,Change has been successfully rebased as 8f1e35942169ae0cc1d518cebc73afc261c457b7 by Florian Noyrit
5153,0,Change has been successfully merged into the git repository by Eugen Neufeld
5157,0,Change has been successfully rebased as 3a19fff00728aa224c52b4c1e0ddb12eedfd7569 by Patrick Tessier
5163,0,Change has been successfully rebased as f4ac25d957edd8f93ad37c38d548b0e446b8c185 by Patrick Tessier
5170,0,Change has been successfully rebased as fe568f4df647cf7206002ae920aaeb080fff18a7 by Patrick Tessier
5174,0,Change has been successfully merged into the git repository by Marcel Bruch
5181,0,Change has been successfully merged into the git repository by Eugen Neufeld
5184,0,Change has been successfully pushed.
5186,0,Change has been successfully pushed.
5188,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/984/ : UNSTABLE
5194,0,Change has been successfully merged into the git repository by Thomas Wolf
5197,0,Change has been successfully merged into the git repository by Matthias Sohn
5200,0,Change has been successfully merged into the git repository by Scott Lewis
5203,0,Change has been successfully merged into the git repository by Scott Lewis
5205,0,Patch Set 1: Code-Review+2 Verified+1Looks good.
5206,0,Change has been successfully merged into the git repository by Scott Lewis
5209,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10264/ : UNSTABLE
5212,0,Change has been successfully merged into the git repository by Patrik Suzzi
5216,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1159/ : UNSTABLE
5219,0,Change has been successfully merged into the git repository by Vasili Gulevich
5223,0,Change has been successfully cherry-picked as 2eddbf55b7b401dd185cb87b87f957b77e78006c by Marc-Andre Laperle
5225,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5986/ : UNSTABLE
5228,0,Change has been successfully rebased as 3427065e65803cffe1e75a413da893b8313904d5 by Marc-Andre Laperle
5239,0,Patch Set 8: Code-Review+2 Verified+1Looks good.  Thanks for the addition/patch Mat.
5240,0,Change has been successfully merged into the git repository by Scott Lewis
5248,0,Change has been successfully merged into the git repository by Stefan Xenos
5253,0,Change has been successfully cherry-picked as 6b8123316fc864e4845ca97867468a5a1ed50938 by Jeff Johnston
5256,0,Change has been successfully cherry-picked as f3bf52148d6dcc5acf70b6c2e16605e7d4e365bd by Jeff Johnston
5260,0,Change has been successfully merged into the git repository by Lars Vogel
5263,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10265/ : UNSTABLE
5267,0,Change has been successfully merged into the git repository by Alexander Kurtakov
5269,0,Change has been successfully merged into the git repository by Lars Vogel
5274,0,Change has been successfully merged into the git repository by Doug Schaefer
5278,0,Change has been successfully merged into the git repository by Doug Schaefer
5286,0,Change has been successfully merged into the git repository by Patrick Tasse
5291,0,Patch Set 2: Code-Review+1Works great for the original issue I was seeing. Thanks!
5296,0,Change has been successfully merged into the git repository by Patrick Tasse
5301,0,Change has been successfully merged into the git repository by Eric Poirier
5311,0,Change has been successfully merged into the git repository by Eric Poirier
5315,0,"Patch Set 4:It works much better with this patch! Just a question though. If the information is not available from the analysis yet, does that mean the table will show blank information until it re-resolves the aspect when the analysis is done?"
5318,0,Change has been successfully cherry-picked as 599e5482448fede7d30a73bd9a3471b97be7ba4f by Alexandre Montplaisir
5322,0,Change has been successfully cherry-picked as 61d68d53ccc7173e18e509fdef3cd85ef1b83d87 by Alexandre Montplaisir
5325,0,Change has been successfully merged into the git repository by Christian W. Damus
5328,0,Change has been successfully merged into the git repository by Greg Watson
5331,0,"this.admin = admin;}With the patch the error is not shown anymore.Changing the policy to DYNAMIC the error shows up. The changes in the preferences apply correctly then.The behavior with the applied patch matches the expectations.Thanks a lot!"""
5340,0,Patch Set 6:Thank you!
5343,0,Change has been successfully merged into the git repository by Peter Nehrer
5347,0,Change has been successfully rebased as f922bfacc6c42f3af835dcfedc2b79edadbccaa0 by Doug Schaefer
5352,0,Change has been successfully rebased as 6755226232c2f76dac46ae5397d492447b6bb66c by Patrick Tessier
5355,0,Change has been successfully merged into the git repository by Greg Watson
5358,0,Change has been successfully merged into the git repository by Eric Poirier
5362,0,Change has been successfully merged into the git repository by Eric Williams
5364,1,"Patch Set 1: Code-Review-1(4 comments)Just a couple of comments, mostly superficial stuff. Tested the patch out, looks good. Good to go in once these small changes are made."
5368,0,Change has been successfully merged into the git repository by Johannes Faltermeier
5376,0,Change has been successfully merged into the git repository by Thierry BLIND
5386,0,Change has been successfully merged into the git repository by Laurent Redor
5398,0,Change has been successfully rebased as 841f8c0f3285a734c7206fc352d0ab6c8d026de0 by Benoit Maggi
5402,0,Change has been successfully cherry-picked as c5f8f6ecfd3594f5b33632c152bc7ae0e15d56cb by Jeff Johnston
5407,0,Change has been successfully merged into the git repository by Benoit Maggi
5411,1,"Patch Set 1: Code-Review-1(1 comment)Hello,It's better to keep platform in the model, see my in-line comment.I also made some comment in the bug.Beno├«t"
5414,1,Patch Set 2:(1 comment)Thanks for tackling this Dirk.The commit message is missing the bug title.Should we change the reference to org.eclipse.equinox.event in org.eclipse.e4.ui.workbench.addons.swt.test too?Should all bundles with a Service-Component add a Require-Capability on osgi.extender?
5416,0,"Patch Set 2:Sorry, I totally missed your response somehow. > The commit message is missing the bug title.Well the rest of the ticket description is far too long to match the rules, that is why I didn't add it. I can add it but then the warning will arise that the first line of the commit message is too long. :) > Should we change the reference to org.eclipse.equinox.event in > org.eclipse.e4.ui.workbench.addons.swt.test too?IMHO yes, and everywhere it was added just to satisfy the test-runtime. In the ticket Markus also says that there are similar issues in JDT builds. But we can add it to this commit for the platform. But it looks like in the platform this is the last remaining direct Require-Bundle entry. > Should all bundles with a Service-Component add a Require-Capability > on osgi.extender?Yes I think so. There was a contribution about this in the past, but it didn't work that time because p2 doesn't support OSGi capabilities. But we could add Require-Capability and the p2.inf files to all bundles that make use of DS.I will update the contribution on this later and see if the build and the feedback is fine then."
5420,0,Change has been successfully merged into the git repository by Dirk Fauth
5422,0,Change has been successfully pushed.
5427,0,Change has been successfully merged into the git repository by vincent lorenzo
5430,0,Change has been successfully cherry-picked as c22f93ecf9c965622a85af2a587427dff0fbedbe by Andre Wegmueller
5433,0,Change has been successfully merged into the git repository by Andreas Sewe
5437,0,Change has been successfully merged into the git repository by vincent lorenzo
5442,0,Change has been successfully rebased as 5fe6c04e0b1027c4452e65f88363b7e4208121a1 by Benoit Maggi
5447,0,Change has been successfully rebased as b89ad186ee8fb6af2410692b3c9d3613ea2e310e by Benoit Maggi
5453,0,Change has been successfully pushed.
5456,0,Change has been successfully cherry-picked as d7fe830682b18f14b31e94e8470c24163dfd32ab by Andi Bur
5460,0,Change has been successfully pushed.
5469,0,Change has been successfully merged into the git repository by Marcel Bruch
5472,0,Change has been successfully merged into the git repository by Stephane Begaudeau
5476,0,Change has been successfully merged into the git repository by Stephane Begaudeau
5482,0,Change has been successfully merged into the git repository by Stephane Begaudeau
5487,0,Change has been successfully merged into the git repository by Sravan Kumar Lakkimsetti
5492,0,Change has been successfully merged into the git repository by Stephane Begaudeau
5495,0,Change has been successfully merged into the git repository by Stephane Begaudeau
5498,0,Change has been successfully merged into the git repository by Stephane Begaudeau
5503,0,Change has been successfully merged into the git repository by Stephane Begaudeau
5507,0,Change has been successfully pushed.
5511,0,Change has been successfully merged into the git repository by Benoit Maggi
5514,0,Change has been successfully merged into the git repository by Eugen Neufeld
5519,0,Change has been successfully cherry-picked as e36c44667be5646d3cfe8b9b6ead92702d19e67e by Andi Bur
5523,0,Change has been successfully merged into the git repository by vincent lorenzo
5526,0,Change has been successfully cherry-picked as b07d6387e60b13cb82d21e958d5a99b233fd266c by Andre Wegmueller
5528,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/960/ : UNSTABLE
5532,0,Change has been successfully pushed.
5535,0,Change has been successfully cherry-picked as a694cd9ebadd10ff453c5eb85333ce5e42f782c9 by Jeff Johnston
5545,0,Change has been successfully cherry-picked as 9e540f2ba0682cc0cbe0af272e89f9d8abf68cf9 by Jeff Johnston
5548,0,Change has been successfully merged into the git repository by Donald Dunne
5553,0,Change has been successfully merged into the git repository by Matthias Sohn
5556,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1542/ : UNSTABLE
5558,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1539/ : UNSTABLE
5561,0,Change has been successfully merged into the git repository by Sam Davis
5562,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1540/ : UNSTABLE
5569,0,Change has been successfully merged into the git repository by Laurent Redor
5572,0,Change has been successfully merged into the git repository by Kaloyan Raev
5575,0,Change has been successfully merged into the git repository by Kaloyan Raev
5580,0,Patch Set 1:> Thats the setting the other plugins are using. Should I change them > too?Yeah!
5585,0,Change has been successfully merged into the git repository by Lars Vogel
5589,0,Change has been successfully rebased as e091d439c8a746bf6d8ca7fceecb91c2781c05d1 by Johannes Faltermeier
5593,0,Change has been successfully rebased as 5bc49d282479c2761196a20f0b14c39c9c2c5213 by Eugen Neufeld
5596,0,Change has been successfully merged into the git repository by Johannes Faltermeier
5602,0,Change has been successfully merged into the git repository by Patrick Tessier
5606,0,Change has been successfully merged into the git repository by Kaloyan Raev
5623,0,Change has been successfully pushed.
5643,1,"Patch Set 4:> looks good, please rebase and resolve conflicts >  > I think we don't need an option to run this in background but run > it always in background as Lars proposed for Fetch from GerritDone."
5645,0,Change has been successfully merged into the git repository by Matthias Sohn
5647,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8822/ : UNSTABLE
5648,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8823/ : UNSTABLE
5649,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8824/ : UNSTABLE
5650,1,Patch Set 3:I don't think adding additional configuration to block the UI is valuable. Why not simply running in the background? Who will like that his UI is blocked?
5651,0,Patch Set 3:Having this option is definitely a huge improvement over the current situation but I think always running in the background should be preferred if possible.
5653,0,Patch Set 3:Would be great if you could by default use background operations. We should leave blocking the UI to IntelliJ... ;-)
5654,0,Patch Set 3:> Would be great if you could by default use background operations. > We should leave blocking the UI to IntelliJ... ;-)Of course we can. I just want to see what Matthias thinks about it. In any case Fetch from Gerrit and Push to Gerrit should use the same.Speaking of IntelliJ: what about https://git.eclipse.org/r/#/c/77356/ ?
5661,0,Change has been successfully pushed.
5686,0,Change has been successfully pushed.
5693,0,Change has been successfully pushed.
5719,0,Change has been successfully pushed.
5728,0,Change has been successfully pushed.
5750,0,Change has been successfully pushed.
5758,0,Change has been successfully pushed.
5793,0,Change has been successfully pushed.
5800,0,Patch Set 17:Warning: Think to the release notes for MM changes!!!
5820,0,Change has been successfully pushed.
5848,0,Change has been successfully pushed.
5872,0,Change has been successfully pushed.
5881,0,Change has been successfully pushed.
5885,0,Change has been successfully merged into the git repository by Johannes Faltermeier
5888,0,Change has been successfully merged into the git repository by Johannes Faltermeier
5890,0,Change has been successfully pushed.
5893,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/923/ : UNSTABLE
5896,0,Change has been successfully cherry-picked as e5c8674484a8d778c91bee1c981659908f189be0 by Matthias Otterbach
5897,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/924/ : UNSTABLE
5900,0,Change has been successfully merged into the git repository by Alexander Kurtakov
5902,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/918/ : UNSTABLE
5905,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/919/ : UNSTABLE
5907,0,Change has been successfully cherry-picked as b115a7bf0b72d910082f668b52ac8d20f51291a7 by Matthias Otterbach
5909,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/915/ : UNSTABLE
5911,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/917/ : UNSTABLE
5915,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/916/ : UNSTABLE
5918,0,Change has been successfully merged into the git repository by Alexander Kurtakov
5927,0,Change has been successfully merged into the git repository by Yogesh Manware
5930,0,"Patch Set 1:> Should we do the same for DfsInserter.Reader#open? >  > https://eclipse.googlesource.com/jgit/jgit/+/master/org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsInserter.java#569 > Should we do the same for DfsInserter.Reader#open? >  > https://eclipse.googlesource.com/jgit/jgit/+/master/org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsInserter.java#569Yes, good catch."
5934,0,Change has been successfully merged into the git repository by Shawn Pearce
5938,0,Change has been successfully merged into the git repository by Shawn Pearce
5942,0,Change has been successfully merged into the git repository by Shawn Pearce
5951,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5921/ : UNSTABLE
5953,0,Change has been successfully merged into the git repository by Doug Schaefer
5960,0,Change has been successfully merged into the git repository by Shawn Pearce
5972,0,Change has been successfully merged into the git repository by Matthias Sohn
5979,0,"Patch Set 1:> Aside from the nits in the commit message, it looks like it needs > to be rebased.I rebased this locally and fixed the nits, but: ! [remote rejected] HEAD -> refs/for/master (You must be a committer to push on behalf of others.)"
5982,0,Change has been successfully merged into the git repository by Matthias Sohn
5987,0,Change has been successfully merged into the git repository by Christian W. Damus
5990,0,Change has been successfully merged into the git repository by Doug Schaefer
5993,0,Change has been successfully merged into the git repository by Alexander Kurtakov
5996,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10197/ : UNSTABLE
5999,0,Change has been successfully cherry-picked as b9acdde66cb6a6385264bb9392410f46851880fa by Jeff Johnston
6004,0,Change has been successfully cherry-picked as 047f1c67262bc9dc4ec444d23a5be62fc97c87cb by Jeff Johnston
6007,0,Change has been successfully cherry-picked as c6acd9b9ec0b25f190c0030310ffb43e46e892c5 by Jeff Johnston
6017,0,Change has been successfully merged into the git repository by Matthias Sohn
6026,0,Change has been successfully rebased as 50bc082f8413b14cd7f5c5c6b72b493c6e43539e by Doug Schaefer
6030,0,Change has been successfully merged into the git repository by Matthias Sohn
6032,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8856/ : UNSTABLE
6033,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8857/ : UNSTABLE
6034,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8858/ : UNSTABLE
6035,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8859/ : UNSTABLE
6037,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8852/ : UNSTABLE
6043,0,"Patch Set 4: Code-Review-1(4 comments)looks great, some minor issues"
6047,0,Change has been successfully cherry-picked as a5dc7d4bf4737041197e9e64e7ec846172beca19 by Jeff Johnston
6050,0,Change has been successfully cherry-picked as ac186a2adfd67da0906fc1f19a5edc80e665c882 by Jeff Johnston
6054,0,Change has been successfully cherry-picked as c726c9fd1dfa2f92f36df1a799f7443add95a197 by Jeff Johnston
6058,0,Change has been successfully merged into the git repository by Christian W. Damus
6063,0,Change has been successfully cherry-picked as 1f303d78912f7d5d66fa54d287ad06a4b445c097 by Jeff Johnston
6068,0,Change has been successfully merged into the git repository by Johannes Faltermeier
6073,0,"Patch Set 2: Code-Review+1looks fine, but build is not running"
6076,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3095/ : UNSTABLE
6081,0,Change has been successfully merged into the git repository by Stefan Xenos
6087,0,Change has been successfully merged into the git repository by Stefan Xenos
6099,0,Change has been successfully merged into the git repository by John Misinco
6104,0,Change has been successfully merged into the git repository by Ryan Brooks
6107,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3096/ : UNSTABLE
6108,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3097/ : UNSTABLE
6110,0,Change has been successfully merged into the git repository by Johannes Faltermeier
6113,0,Change has been successfully merged into the git repository by Mickael Istria - away until August 16th
6117,0,Patch Set 2:(2 comments)Thanks for the fix! Just a few minor remarks.
6118,0,"Patch Set 2:(2 comments)Thanks for the review! In PS3, I took your second comment into account and refactored the code a little more."
6120,0,Change has been successfully merged into the git repository by Philip Langer
6127,0,Change has been successfully merged into the git repository by Guy Perron
6132,0,Change has been successfully rebased as 929ed024713b6df7f291f340276c1cd67c99b2ac by Christian W. Damus
6135,0,Change has been successfully merged into the git repository by Christian W. Damus
6142,0,Change has been successfully merged into the git repository by Donald Dunne
6148,0,Change has been successfully merged into the git repository by Donald Dunne
6156,0,Change has been successfully merged into the git repository by Donald Dunne
6163,0,Change has been successfully merged into the git repository by Donald Dunne
6170,0,Change has been successfully merged into the git repository by Donald Dunne
6174,0,Change has been successfully merged into the git repository by Donald Dunne
6179,0,Change has been successfully merged into the git repository by Donald Dunne
6189,0,Change has been successfully merged into the git repository by Young-Soo Roh
6192,0,Change has been successfully cherry-picked as 270c26828ede9c4c2cd6d36767a1013f4ccc225f by Hannes Mueller
6195,0,Change has been successfully cherry-picked as 9c4ce4a456800522bc53c6e55026458d6a2e4c31 by Marc-Andre Laperle
6198,0,Change has been successfully cherry-picked as 0d9d8dd67824e1e44c87ccf23ee1bdeea5d868da by Marc-Andre Laperle
6202,0,Change has been successfully cherry-picked as 0e7f82d5832579ffe581b87324b1e41807f17d82 by Beat Schwarzentrub
6205,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/893/ : UNSTABLE
6208,0,Change has been successfully merged into the git repository by Young-Soo Roh
6213,0,Change has been successfully merged into the git repository by John Misinco
6225,0,Change has been successfully merged into the git repository by John Misinco
6228,0,Change has been successfully cherry-picked as 998a8e5f0046358bf826d9e76b711ee5d4c1f602 by Patrick Tasse
6231,0,Change has been successfully cherry-picked as 9726bf01ad3eabaedddad48df5a19a22631d812c by Alexander Kurtakov
6236,0,Change has been successfully rebased as 39da8d9c66b27e55e749afbfbb3013975e1d792b by Christian W. Damus
6239,0,Change has been successfully merged into the git repository by Patrick Tessier
6241,1,Patch Set 4:> Did you run the JDT Debug Tests as well? Especially the one from > bug 451797.I run all UI tests and JDT tests mentioned in bug 108568.
6246,1,"Patch Set 4:> Do you observe testSimpleLineCounter jdt debug test failing?This is bug 407255, but when I only run that test (or the test class) on Windows, it always fails with:junit.framework.AssertionFailedError: Never received 'stopped' notificationSo, I think we can ignore that."
6248,0,Change has been successfully merged into the git repository by Sarika Sinha
6257,1,"Patch Set 3: Code-Review-1(1 comment)Thanks for working on it!It looks better now (I haven't checked the code), but I still see 2 failures on Java 8:org.eclipse.jgit.lib.IndexDiffSubmoduleTesttestDirtySubmoduleWorktreeUntracked(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)org.junit.experimental.theories.internal.ParameterizedAssertionError: testDirtySubmoduleWorktreeUntracked(""UNTRACKED"" <from allModes[2]>)org.eclipse.jgit.merge.RecursiveMergerTestcrissCrossMerge_mergeable2(org.eclipse.jgit.merge.RecursiveMergerTest)org.junit.experimental.theories.internal.ParameterizedAssertionError: crissCrossMerge_mergeable2(""org.eclipse.jgit.merge.StrategyRecursive@53de625d"" <from strategiesUnderTest[0]>, ""SameAsHead"" <from indexStates[2]>, ""SameAsOther"" <from worktreeStates[4]>)... and one new fail on Java 7:org.junit.experimental.theories.internal.ParameterizedAssertionError: testDirtySubmoduleWorktreeUntracked(""UNTRACKED"" <from allModes[2]>)"
6259,1,"Patch Set 5: Code-Review+1> Uploaded patch set 5.I've rebased your patch on top of Christian patch for submodules - this fixes finally last issue with Java 8 without workaround on WorkingTreeIterator, and also keeps Java 7 tests happy.From my side I'm happy with *this* patch now, but honestly speaking, I have not much knowledge with the WorkingTreeIterator to judge if the Christian patch is good enough. The changes looks good *for me*.It would be nice if you could review Christian patch for WorkingTreeIterator. The patch from Christian definitely solves my problems with submodules described in bug 498759."
6261,0,Change has been successfully merged into the git repository by Shawn Pearce
6263,1,Patch Set 4:I cannot reproduce the test failures in my machine. But I saw the same failure before (and now it's gone somehow). I'll use another machine to see if I can reproduce them.
6267,1,"Patch Set 1: Code-Review-1The change will introduce more failures on Java 8 as it would fix (I count 2 errors/4 fails for the ""old"" code and 3/8 for the new one).The direction of the change is good, but all new test failures introduced by this patch must be fixed. Also please see my comments on https://git.eclipse.org/r/#/c/79406.Please also add reference to the bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=500058 to the commit message, like:Bug: 500058"
6268,1,"Patch Set 1:> (1 comment) >  > Thanks for working on it! >  > It looks better now (I haven't checked the code), but I still see 2 > failures on Java 8: >  > org.eclipse.jgit.lib.IndexDiffSubmoduleTest > testDirtySubmoduleWorktreeUntracked(org.eclipse.jgit.lib.IndexDiffSubmoduleTest) > org.junit.experimental.theories.internal.ParameterizedAssertionError: > testDirtySubmoduleWorktreeUntracked(""UNTRACKED"" <from allModes[2]>) >  > org.eclipse.jgit.merge.RecursiveMergerTest > crissCrossMerge_mergeable2(org.eclipse.jgit.merge.RecursiveMergerTest) > org.junit.experimental.theories.internal.ParameterizedAssertionError: > crissCrossMerge_mergeable2(""org.eclipse.jgit.merge.StrategyRecursive@53de625d"" > <from strategiesUnderTest[0]>, ""SameAsHead"" <from indexStates[2]>, > ""SameAsOther"" <from worktreeStates[4]>) >  > ... and one new fail on Java 7: >  > org.junit.experimental.theories.internal.ParameterizedAssertionError: > testDirtySubmoduleWorktreeUntracked(""UNTRACKED"" <from allModes[2]>)using https://git.eclipse.org/r/#/c/79731/ I successfully repeated these tests 100 times in order to confirm that these problems are now fixed on master"
6271,0,Change has been successfully merged into the git repository by Alexander Kurtakov
6273,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3087/ : UNSTABLE
6277,0,Change has been successfully rebased as 0851d9441dcea1e89ffb9910c5344525e413cfa5 by Jonas Helming
6280,0,Change has been successfully merged into the git repository by Patrick Tessier
6283,0,Change has been successfully merged into the git repository by Lars Vogel
6289,0,Change has been successfully merged into the git repository by Lars Vogel
6291,0,Change has been successfully merged into the git repository by Lars Vogel
6297,0,Change has been successfully merged into the git repository by Laurent Redor
6300,0,Change has been successfully merged into the git repository by Alexander Kurtakov
6304,0,"Patch Set 2: Code-Review+2Looks okay to me -- since man page plugin is used by other projects that may not be interested in CDT, this change seems like a good idea to me."
6305,0,Change has been successfully cherry-picked as b4b9c1eeebda569580a4dcc470a2f3ebbfe0285d by Alexander Kurtakov
6312,0,Change has been successfully merged into the git repository by Patrick Tessier
6316,0,Change has been successfully cherry-picked as 9ab76eac6ea61bce4b5a869ce59349b94e029fe1 by Matthias Otterbach
6320,0,Change has been successfully cherry-picked as f948285998d585262bf5c2a591012f5e8e9238ff by Matthias Otterbach
6325,0,Change has been successfully merged into the git repository by Patrick Tessier
6330,0,Change has been successfully pushed.
6337,0,Change has been successfully pushed.
6341,0,Change has been successfully pushed.
6349,0,Change has been successfully cherry-picked as a4dd8bddaf639194c11eacde29290454db26f324 by Alexander Kurtakov
6352,0,Change has been successfully merged into the git repository by Christian Pontesegger
6355,0,Change has been successfully merged into the git repository by Patrick Tessier
6357,0,Change has been successfully pushed.
6361,0,Patch Set 1: Code-Review+1 Verified+1Works just fine + 1
6367,0,Change has been successfully merged into the git repository by Matthieu Helleboid
6370,0,Change has been successfully merged into the git repository by Matthieu Helleboid
6375,0,Change has been successfully merged into the git repository by Stephan Herrmann
6378,0,Change has been successfully pushed.
6381,0,Change has been successfully merged into the git repository by Eugen Neufeld
6385,0,"Patch Set 3: Code-Review+1Thnaks for this contribution, it looks really good.I will just add some formal stuff to the headers, then I guess I can merge it."
6388,0,Change has been successfully merged into the git repository by Michael Wenz
6395,0,Change has been successfully merged into the git repository by Marcel Bruch
6398,0,Change has been successfully merged into the git repository by Laurent Redor
6408,0,Change has been successfully merged into the git repository by Laurent Redor
6410,0,Change has been successfully merged into the git repository by Patrik Suzzi
6420,0,Change has been successfully merged into the git repository by Patrik Suzzi
6423,0,Change has been successfully merged into the git repository by Patrik Suzzi
6425,0,Patch Set 2: Code-Review+1 Verified+1Can't test the performance impact but change looks good to me.
6428,0,"Patch Set 1:Lars, hope you don't mind taking a look at this (please, only after your return from holidays :)I wanted also to increase the version to 3.7.100, as described in bug 499164 - but I was not sure, and this another reason why I'm asking a review!"
6429,0,"Patch Set 1:Change looks good to me. Sam, can you verify, if that fixes your issue without your workaround?"
6434,0,Change has been successfully merged into the git repository by Andrey Sobolev
6435,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1149/ : UNSTABLE
6439,0,Patch Set 1:It works fine on macOS: CMD + Fn + LeftArrow (Home = Fn+LeftArrow)
6440,0,Change has been successfully merged into the git repository by Laurent Redor
6443,0,Change has been successfully merged into the git repository by Laurent Redor
6449,0,Change has been successfully merged into the git repository by Laurent Redor
6455,0,"Patch Set 2:Brian, I think this change is in line with what you suggested. Do you mind reviewing it? Thanks in Advance"
6456,0,"Patch Set 2:That's definitely an improvement, Patrik.  An even better improvement would be to use our DI to create those providers."
6457,0,"Patch Set 2:> That's definitely an improvement, Patrik.  An even better > improvement would be to use our DI to create those providers.What if I create a separate bug: ""Use DI to create Quick Access Providers""? - (This will affect also Bug 495065)"
6458,0,"Patch Set 2:> What if I create a separate bug: ""Use DI to create Quick Access > Providers""? - (This will affect also Bug 495065)Sounds good to me ÔÇö looks like the whole set of QA *Element classes could be greatly simplified by DI."
6460,0,Change has been successfully merged into the git repository by Patrik Suzzi
6471,0,Change has been successfully merged into the git repository by Balazs Grill
6475,0,Change has been successfully merged into the git repository by Brian de Alwis
6478,0,Change has been successfully merged into the git repository by Matthias Sohn
6479,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8982/ : UNSTABLE
6481,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8952/ : UNSTABLE
6484,1,"Patch Set 1:> It seems the tests in the builds are not reliably stable.Known problem. The Git repositories view is refreshed asynchronously in response to events from several sources. It can happen that such a refresh replaces the tree while the SWTbot tests try to expand tree nodes, in which case tests may fail.I don't know yet how to fix this. It sure is an annoying nuisance."
6493,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1523/ : UNSTABLE
6495,0,Change has been successfully merged into the git repository by Sam Davis
6502,0,Change has been successfully merged into the git repository by Donald Dunne
6504,0,Change has been successfully merged into the git repository by Jaxsun McCarthy Huggan
6514,0,Change has been successfully pushed.
6523,0,Change has been successfully merged into the git repository by Donald Dunne
6526,0,Change has been successfully merged into the git repository by Donald Dunne
6533,0,Change has been successfully merged into the git repository by Bogdan Gheorghe
6535,0,Change has been successfully merged into the git repository by Thomas Watson
6548,0,Change has been successfully merged into the git repository by Colin Ritchie
6552,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
6570,0,Change has been successfully cherry-picked as 4bee337dff2bb5529c323bb0d45cbc2daff3fdbc by Bernd Hufmann
6574,0,Change has been successfully rebased as 4afa9e24da257ab3ebbda71e1b8c1604991901eb by Doug Schaefer
6576,0,Change has been successfully pushed.
6580,0,Change has been successfully rebased as cf0271a5edd706218978c49fa29a3473992424d7 by Marc-Andre Laperle
6582,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5810/ : UNSTABLE
6583,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5812/ : UNSTABLE
6585,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
6588,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5817/ : UNSTABLE
6589,1,Patch Set 1: Code-Review+2 Verified+1Test failure is unrelated.
6590,0,Change has been successfully merged into the git repository by Doug Schaefer
6593,0,Change has been successfully merged into the git repository by Thomas Watson
6601,0,Change has been successfully rebased as 4c210d0eaaf84f92eabfbe5e1657aa60f2a57abf by Sam Davis
6604,0,Change has been successfully merged into the git repository by Sam Davis
6606,0,Change has been successfully merged into the git repository by Matthieu Helleboid
6610,0,Patch Set 1: Code-Review+1This looks pretty good to me.
6613,0,Change has been successfully merged into the git repository by Patrik Suzzi
6614,1,"Patch Set 1:(1 comment)I noticed this too!  Thanks!  But you should really avoid using PlatformUI.getWorkbench() if at all possible ÔÇö it's a bad code smell, and our code should be setting a good example."
6616,0,Patch Set 1:The suggestion is now addressed in change 79144. Thanks for pointing me to this best practice!
6618,0,"Patch Set 2:(1 comment)This change seems pretty safe, but I wonder about the static method I put a comment on."
6621,0,Change has been successfully merged into the git repository by Thomas Watson
6626,0,Change has been successfully rebased as 9516b5d898379d5922d2786d3a73a56ed60977e7 by Ernesto Posse
6632,0,Change has been successfully merged into the git repository by Ryan Brooks
6640,0,Change has been successfully merged into the git repository by Silenio Quarti
6642,0,Change has been successfully merged into the git repository by Brian de Alwis
6648,0,"Patch Set 1:Hi Brian, I'm not sure what is expected of me with this backport? If there are any expectations that I'm not meeting, please do let me know. Thanks, Jonah"
6649,0,"Patch Set 1:> Hi Brian, I'm not sure what is expected of me with this backport? > If there are any expectations that I'm not meeting, please do let > me know. Thanks, JonahNothing more to do other than wait for the PMC to approve."
6652,0,Change has been successfully merged into the git repository by Brian de Alwis
6656,0,Change has been successfully rebased as cd559dafafced6d31eb48788c680ef9e5e4eae59 by Marc Khouzam
6661,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5787/ : UNSTABLE
6662,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5790/ : UNSTABLE
6663,1,"Patch Set 3: Code-Review+2Thanks for that. I hadn't even noticed the build had failed. Sorry.  BTW, I'll update the script to try to avoid these mistakes."
6664,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5794/ : UNSTABLE
6665,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5802/ : UNSTABLE
6669,0,Change has been successfully merged into the git repository by Gregoire Dupe
6673,0,Change has been successfully merged into the git repository by Gregoire Dupe
6684,0,Change has been successfully pushed.
6687,0,"Patch Set 2:Thomas, can you review? This blocks the amazing enhancement in https://git.eclipse.org/r/#/c/77213/"
6693,0,Change has been successfully merged into the git repository by Andrey Loskutov
6697,0,Change has been successfully merged into the git repository by Laurent Redor
6700,0,Change has been successfully merged into the git repository by Matthieu Helleboid
6704,0,Patch Set 2: Code-Review+2 Verified+1looks good
6705,0,Change has been successfully merged into the git repository by Vikas Chandra
6707,1,"Patch Set 2:> I am unable to kill the hudson job. Clicking the cross button does > nothingCan you please ping webmasters to do so? We have 3 ""zombie"" jobs on hudson right now."
6715,0,Change has been successfully merged into the git repository by Lars Vogel
6745,0,Change has been successfully merged into the git repository by Lars Vogel
6748,0,"Patch Set 2: Code-Review+2 Verified+1Thanks Paul, change looks fine to me, this internal constant is unused in the repo"
6749,0,Change has been successfully merged into the git repository by Lars Vogel
6754,0,Patch Set 1:> @Akif: I have uploaded a proof of concept for the new category concept. Thanks a lot for this code!> Now you can finish the task as described in 492766.Ok.
6758,0,Change has been successfully merged into the git repository by Timur Achmetow
6762,0,Change has been successfully cherry-picked as 98bba6e8b12825d8cb288f2ac1fe6e01df591b78 by Xavier Coulon
6767,0,Change has been successfully merged into the git repository by Marcel Bruch
6770,0,Change has been successfully merged into the git repository by Lars Vogel
6775,0,Change has been successfully merged into the git repository by Sarika Sinha
6779,0,Change has been successfully merged into the git repository by Gregoire Dupe
6784,0,Change has been successfully rebased as 0a22a1df17f4546cac744f098832811068aa08a1 by Mickael ADAM
6787,0,Change has been successfully merged into the git repository by Lars Vogel
6790,1,"Patch Set 1:Thanks Dani, I remove is a sec the unnecessary dependency to Mickaels change"
6802,0,Change has been successfully merged into the git repository by Timur Achmetow
6806,0,Change has been successfully merged into the git repository by Dennis Huebner
6807,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/xtext/job/emf.gerrit/342/ : UNSTABLE
6813,0,Change has been successfully merged into the git repository by Niraj Modi
6817,0,Change has been successfully merged into the git repository by Yogesh Manware
6820,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
6822,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5788/ : UNSTABLE
6823,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5808/ : UNSTABLE
6826,0,Change has been successfully rebased as 5c80faaafe66c078c7ca56eba702d0b7b4d38c74 by Marc-Andre Laperle
6830,0,Change has been successfully merged into the git repository by Sarika Sinha
6838,0,Change has been successfully merged into the git repository by David Miller
6840,0,Patch Set 5:(1 comment)This looks good. I will give it a try.
6843,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1413/ : UNSTABLE
6847,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1496/ : UNSTABLE
6851,0,Change has been successfully rebased as 10d73213c4d6b5318b0606db516014fbc8de7dd0 by Jaxsun McCarthy Huggan
6853,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1412/ : UNSTABLE
6856,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1495/ : UNSTABLE
6860,0,"Patch Set 4:I didn't add any indication, that's a good idea though I'll add that."
6864,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1458/ : UNSTABLE
6871,0,Change has been successfully merged into the git repository by Colin Ritchie
6881,0,Change has been successfully merged into the git repository by Donald Dunne
6889,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8978/ : UNSTABLE
6890,0,Change has been successfully merged into the git repository by Matthias Sohn
6892,0,Change has been successfully merged into the git repository by Pascal Rapicault
6894,0,Patch Set 1: Code-Review+2 Verified+1Tested and reviewed. works fine.
6900,0,Change has been successfully merged into the git repository by Guy Perron
6909,0,Change has been successfully merged into the git repository by David Miller
6913,0,Change has been successfully merged into the git repository by Matthias Sohn
6917,0,Change has been successfully merged into the git repository by Matthias Sohn
6920,1,Patch Set 5: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5803/ : UNSTABLE
6921,1,Patch Set 5: Code-Review+2 Verified+1The last remaining failure is unrelated.
6922,0,Change has been successfully merged into the git repository by Doug Schaefer
6924,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5785/ : UNSTABLE
6925,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5786/ : UNSTABLE
6929,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5796/ : UNSTABLE
6932,0,Change has been successfully merged into the git repository by Andrey Loskutov
6935,0,Change has been successfully merged into the git repository by Andrey Loskutov
6938,0,Change has been successfully merged into the git repository by Andrey Loskutov
6941,0,Change has been successfully merged into the git repository by Andrey Loskutov
6944,0,Change has been successfully merged into the git repository by Ernesto Posse
6951,0,Change has been successfully merged into the git repository by Ryan Brooks
6953,0,"Patch Set 2: Code-Review+2Yeah, I think this is the best thing to do for now."
6955,0,Change has been successfully rebased as de2cf797383ffab1fabe7343c5889724da5ca447 by Sam Davis
6963,0,Change has been successfully merged into the git repository by Sam Davis
6970,0,Change has been successfully merged into the git repository by Ryan Brooks
6978,0,Change has been successfully merged into the git repository by Christian Pontesegger
6981,0,Change has been successfully pushed.
6986,0,Change has been successfully merged into the git repository by Christian Pontesegger
6991,0,Change has been successfully merged into the git repository by Edgar Mueller
6994,0,Patch Set 1:(In reply to comment #2)> Patch Set 1:> > Shouldn't we use orbit repositories instead of cdo?I did not find cdo in the orbit repositories!
6998,0,Change has been successfully merged into the git repository by Sam Davis
7002,0,Change has been successfully merged into the git repository by Guy Perron
7008,0,Change has been successfully merged into the git repository by Remi Schnekenburger
7011,0,Change has been successfully merged into the git repository by Guy Perron
7013,0,Change has been successfully merged into the git repository by Andrey Loskutov
7021,0,Change has been successfully merged into the git repository by Guy Perron
7025,0,Change has been successfully merged into the git repository by Sergey Prigogin
7031,0,Patch Set 1: Code-Review+2 Verified+1Thanks for remembering. :)
7032,0,Change has been successfully merged into the git repository by David Williams
7038,0,"Patch Set 2: Code-Review-1(4 comments)one small thing, but changing to Collection is good!"
7045,0,Change has been successfully cherry-picked as 48b36dceefd77871835e1b4961fe0ba75f4bbed5 by Genevieve Bastien
7047,0,Change has been successfully merged into the git repository by Andrey Loskutov
7053,0,Change has been successfully merged into the git repository by Vikas Chandra
7062,0,Change has been successfully merged into the git repository by Vikas Chandra
7067,0,Change has been successfully rebased as 427f0dd842ebd821ffebf390ff530426b13563e0 by Michal Niewrzal
7070,0,Change has been successfully merged into the git repository by Andreas Sewe
7077,0,Change has been successfully rebased as ef5fb6f168553366f49e17b26e4516206556f803 by vincent lorenzo
7085,0,Change has been successfully rebased as d1509c41bd5026471b1744596df5440411148654 by vincent lorenzo
7101,0,Change has been successfully rebased as ef15ff64d8681bd86cd70f7d3d5fd5a3c8a3736b by vincent lorenzo
7103,0,Change has been successfully merged into the git repository by Matthias Sohn
7109,0,Change has been successfully merged into the git repository by Matthias Sohn
7113,0,Change has been successfully merged into the git repository by Sergey Prigogin
7121,0,"Patch Set 3:Hmm, I had not thought about the case of empty catch blocks (I think they should only apper in situations where the exception really doesn't matter - otherwise there should be at least some debug logging in the catch block).I've thought about it: It should be possible to figure out the thrown exception by requesting ExceptionEvents for ALL thrown exceptions while ""step return"" is in progress and show the last observed exception if JDIThread#hasExitedWithReturn returns false. But this would only be really useful for the case of empty catch blocks and it could slow things further down.I'll think about it a bit."
7124,0,Patch Set 11:Patch looks great till now. One thing is that to avoid performance slowdown we should allow filters so that we can avoid values from java.lang or other packages if user wants to restrict. ( Similar to Step Filters)
7125,1,"Patch Set 11:Regarding further filters: I have tried a bit and haven't found a way to achieve a notable speedup. Exclusion filters for MethodEntryRequests don't work because nested invocations to other packages would still match and this would really complicate things, so the only thing that might be done would be to not start the observing mechanism for Step-Return when in a filtered package (also when triggered by a MethodEntryRequest for Step-Over), but that hasn't shown a notable effect in my experiments. If you have another idea, I'd like to suggest to create another bug for that, as the current patch is already quite big.Another idea would be to make toggling the displaying of step results easier (maybe a button in the toolbar?), but I think that should be done as another bug, too."
7128,0,Change has been successfully merged into the git repository by Sarika Sinha
7130,1,Patch Set 6:Patch Set 6 contains an optimization for the case that Exception Events are on and a fix (wrong preference key was checked for Exception Events). I'm actually not sure that having a separate preference is a good idea.
7138,1,Patch Set 9:patch set 9 just removes some debug logging (that was non intended to be commited) that broke some tests. reminder to myself: test behaviour of step-over if no line numbers are present
7141,0,"Patch Set 4:While empty catch-blocks may not be that important, having the thrown exception shown in finally block is really great! So I will continue to invest time in this.Note: Patch Set 4 doesn't work correctly if the first catch/finally block is more than one stackframe above the method that where the ""step return"" was triggered. To fix this will need at least some parameter added to some methods  to give JDIStackFrame the information if it is currently the top frame."
7147,0,Change has been successfully merged into the git repository by Christian Halstrick
7157,1,Abandoned
7159,0,Patch Set 3:(2 comments)looks good beside the two unneeded imports
7170,0,Change has been successfully merged into the git repository by Christian Halstrick
7173,0,Change has been successfully merged into the git repository by Christian Pontesegger
7176,0,Change has been successfully merged into the git repository by Matthias Sohn
7179,0,Change has been successfully merged into the git repository by Matthias Sohn
7188,0,Change has been successfully cherry-picked as 0a004264ebdb168e97dad857cafe4942035109a3 by Matthew Khouzam
7196,0,Change has been successfully cherry-picked as 690cef63853993ac777281df98cca7b1ac79c517 by Matthew Khouzam
7200,0,Patch Set 5: Code-Review+2(1 comment)Thanks.
7202,0,Change has been successfully merged into the git repository by Jonathan Nieder
7210,0,Patch Set 2:Is anyone else comfortable with reviewing these changes while Sasa and Matthias are away?
7213,0,Change has been successfully merged into the git repository by Jonathan Nieder
7216,0,Patch Set 1: Code-Review+1Step towards right direction :D
7220,0,Change has been successfully merged into the git repository by Jonathan Nieder
7223,0,Change has been successfully merged into the git repository by Jonathan Nieder
7227,0,Change has been successfully merged into the git repository by Ryan Brooks
7233,0,Change has been successfully merged into the git repository by Jonathan Nieder
7253,0,"Patch Set 1: Code-Review+2 Verified+1I am not a maintainer, so we should wait for Alex on this, but this patch is harmless."
7255,0,Change has been successfully cherry-picked as 8e2d80347abff2ae71980188864efae9ae4c644f by Alexandre Montplaisir
7257,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8940/ : UNSTABLE
7259,0,Change has been successfully merged into the git repository by Thomas Wolf
7263,0,Change has been successfully merged into the git repository by Donald Dunne
7275,0,Change has been successfully merged into the git repository by Ernesto Posse
7281,0,Change has been successfully pushed.
7293,0,Change has been successfully merged into the git repository by Donald Dunne
7296,0,Change has been successfully cherry-picked as 91ceb7f2bcd86ff28233150b0ecf7acbf738555e by Andi Bur
7301,0,Change has been successfully merged into the git repository by Donald Dunne
7310,0,Change has been successfully merged into the git repository by John Misinco
7319,0,Change has been successfully merged into the git repository by John Misinco
7325,0,Change has been successfully merged into the git repository by Steve Monnier
7335,0,"Patch Set 3: Code-Review+1OK for my remarks on the previous version. The code looks fine, but I have not tested it in practice, just gave a look on Gerrit, so +1 only for now."
7342,0,Change has been successfully merged into the git repository by Alois Zoitl
7345,0,Change has been successfully merged into the git repository by Benoit Maggi
7348,0,Change has been successfully cherry-picked as e0062a8b31b136a4020d6dff079a52d4060bc452 by Jeff Johnston
7351,0,Change has been successfully merged into the git repository by David Green
7354,0,Change has been successfully merged into the git repository by Sravan Kumar Lakkimsetti
7357,0,Change has been successfully merged into the git repository by David Williams
7361,0,Change has been successfully cherry-picked as c5f8acb46fc41cc3d7397811ff8371d8cfaf6c8e by Marc-Andre Laperle
7370,0,Change has been successfully merged into the git repository by Benoit Maggi
7374,0,Change has been successfully merged into the git repository by Donald Dunne
7382,0,Change has been successfully merged into the git repository by David Williams
7384,0,"Patch Set 1: Code-Review+2 Verified+1I think this will finish immediate fix. But please also open an enhancement to defined ${UTILITIES_HOME}/equinox/promotion/queue as a variable, so then the variable can be used through-out. There are a number of places we ""repeat"" the use of directory names, etc., (and probably have for a long time) so that is simply a good enhancement."
7385,0,Change has been successfully merged into the git repository by David Williams
7388,0,Change has been successfully cherry-picked as d5b99a89b3b0129c442b4a690f0cb1fd20879156 by Andi Bur
7392,0,Change has been successfully merged into the git repository by David Williams
7397,0,Change has been successfully merged into the git repository by Jacques Bouthillier
7399,0,Change has been successfully merged into the git repository by Jacques Bouthillier
7405,0,Change has been successfully merged into the git repository by Kaloyan Raev
7408,0,Change has been successfully merged into the git repository by Markus Keller
7412,0,Change has been successfully merged into the git repository by Alois Zoitl
7415,0,Change has been successfully merged into the git repository by Jacques Bouthillier
7417,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3030/ : UNSTABLE
7420,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3027/ : UNSTABLE
7425,0,Change has been successfully rebased as 2cb81f1709af11e1e682f0073d96043b4c0cdaf5 by Alexandra Buzila
7427,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3046/ : UNSTABLE
7429,0,Change has been successfully merged into the git repository by Alexandra Buzila
7432,0,Change has been successfully merged into the git repository by Michal Niewrzal
7435,0,Change has been successfully merged into the git repository by Benoit Maggi
7439,0,Change has been successfully rebased as cf5b92d130ca2d62db195d89f144161d8201a7cd by vincent lorenzo
7444,0,Change has been successfully merged into the git repository by Laurent Redor
7477,0,Change has been successfully merged into the git repository by Laurent Redor
7481,0,Patch Set 11:(3 comments)REGENERATE THE HTML FILES!!!
7492,0,Change has been successfully merged into the git repository by Laurent Redor
7501,0,Change has been successfully rebased as e3f486232e80b1b13a88d471a7272bee8b6cbe90 by Thierry BLIND
7509,0,Change has been successfully merged into the git repository by Laurent Redor
7519,0,Change has been successfully merged into the git repository by Benoit Maggi
7523,1,"Patch Set 6: Code-Review-1(1 comment)Good Work, some small remarks:I think it will be safer to keep the != null test in ViewProvider.xtendAlso don't commit Manifest.Mf and plugin.xml, they shouldn't change and it will complicate the report to neon."
7525,1,"Patch Set 2:My bad, I miss that the last file was generated. I'll try to make a sample reproducing the problem"
7529,0,Change has been successfully merged into the git repository by Michal Niewrzal
7536,0,Change has been successfully pushed.
7566,1,"Patch Set 1: Code-Review+1for the website, the problem is due to the vnc...perhaps we could merge anyway?"
7569,0,Change has been successfully merged into the git repository by Benoit Maggi
7571,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8905/ : UNSTABLE
7575,0,Change has been successfully merged into the git repository by Thomas Wolf
7578,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8904/ : UNSTABLE
7581,0,Change has been successfully merged into the git repository by Thomas Wolf
7584,0,Change has been successfully merged into the git repository by Dirk Fauth
7590,0,Change has been successfully merged into the git repository by Donald Dunne
7596,0,Change has been successfully merged into the git repository by Donald Dunne
7599,0,Change has been successfully merged into the git repository by Donald Dunne
7606,0,Change has been successfully merged into the git repository by Donald Dunne
7612,0,Change has been successfully merged into the git repository by Donald Dunne
7618,0,Change has been successfully merged into the git repository by Donald Dunne
7627,0,Change has been successfully merged into the git repository by Donald Dunne
7635,0,Change has been successfully merged into the git repository by Donald Dunne
7646,0,Change has been successfully merged into the git repository by Donald Dunne
7648,1,Patch Set 1:Donald please supply a bug number.
7651,0,Change has been successfully merged into the git repository by Donald Dunne
7663,0,Change has been successfully merged into the git repository by Jonathan Nieder
7681,0,Change has been successfully merged into the git repository by Jonathan Nieder
7686,0,Change has been successfully cherry-picked as 79d8fded9299c63ce3ad266a1890089ac7c170f4 by Alexandre Montplaisir
7688,0,Change has been successfully merged into the git repository by Pascal Rapicault
7695,0,Change has been successfully merged into the git repository by Pascal Rapicault
7699,0,Change has been successfully merged into the git repository by Pascal Rapicault
7715,0,Change has been successfully merged into the git repository by Terry Parker
7718,0,Change has been successfully merged into the git repository by Pascal Rapicault
7722,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8870/ : UNSTABLE
7723,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8871/ : UNSTABLE
7725,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8922/ : UNSTABLE
7727,0,Change has been successfully merged into the git repository by Thomas Wolf
7735,0,Change has been successfully merged into the git repository by Ernesto Posse
7739,0,Change has been successfully merged into the git repository by Christian Pontesegger
7741,0,Change has been successfully merged into the git repository by Silenio Quarti
7746,0,Change has been successfully merged into the git repository by Silenio Quarti
7749,0,Change has been successfully cherry-picked as 157f71224cfc6f2f0783f97c54754882408e370e by Andi Bur
7752,0,Change has been successfully merged into the git repository by Alexander Kurtakov
7756,0,Change has been successfully rebased as 671a7a599bfcb5ea5a6c65d5b8ff71c816829832 by vincent lorenzo
7759,0,Change has been successfully merged into the git repository by vincent lorenzo
7767,0,Change has been successfully pushed.
7771,0,Change has been successfully pushed.
7776,0,Change has been successfully merged into the git repository by vincent lorenzo
7782,0,Change has been successfully merged into the git repository by Shuai Li
7785,0,Change has been successfully merged into the git repository by Remi Schnekenburger
7787,0,Change has been successfully merged into the git repository by Alexander Kurtakov
7791,0,Patch Set 1: Code-Review+1minimal review.will be usefull for all components.
7793,0,Change has been successfully merged into the git repository by Benoit Maggi
7800,0,Change has been successfully merged into the git repository by Sasa Zivkov
7807,1,"Patch Set 2:I think the test error is unrelated - the tests seem a bit flaky recently.Can you retrigger the build?  (I had permission to do that before, but seem to have lost it)."
7808,0,Change has been successfully merged into the git repository by Sasa Zivkov
7812,0,Change has been successfully merged into the git repository by Benoit Maggi
7815,0,Change has been successfully merged into the git repository by vincent lorenzo
7825,0,Change has been successfully merged into the git repository by Jacques Bouthillier
7831,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
7834,0,Patch Set 1: Code-Review-1(2 comments)I propose to also clean up the ExportedParamater implementation to provide a type-safe connection between PParamater and PVariable as part of this change.
7838,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
7846,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
7849,0,Change has been successfully merged into the git repository by Sasikanth Bharadwaj
7853,0,Change has been successfully merged into the git repository by Yvan Lussaud
7860,0,Change has been successfully merged into the git repository by Yvan Lussaud
7863,0,Change has been successfully merged into the git repository by Yvan Lussaud
7873,0,Change has been successfully merged into the git repository by Christian Pontesegger
7877,0,Change has been successfully merged into the git repository by Yvan Lussaud
7881,0,Change has been successfully merged into the git repository by Jonas Helming
7885,0,Change has been successfully rebased as bcf7c9409639094e1d400e3732659785a7c1f768 by vincent lorenzo
7888,0,Change has been successfully merged into the git repository by Yvan Lussaud
7890,1,"Patch Set 2:> https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-CodegenRTS-BuildFrom-gerrit-Master/276/ > : FAILUREI cannot comment on the others, but the codegen build is failing because the UMLRealTimeStateMach profile is missing. I see in the change that all the generated Java files for this profile are being removed. Is this intentional? Is there something that the clients should do?"
7894,0,Change has been successfully rebased as 6fe8a1c4a40923160551ac546c45f4dac618cbfb by Remi Schnekenburger
7899,0,"Patch Set 13: Code-Review+1(7 comments)Sorry for the late review. In general, I am fine with this change, and will support its merge, but I still have a few minor comments (mostly copy of earlier reactions or code style)."
7902,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
7910,1,"Patch Set 1: Code-Review-2(8 comments)Sorry, but in its current form I am strongly against merging this. The main issue is the newly introduced precondition checking in Base: (1) it breaks backwards compatibility, and (2) is inconsistent.We can go for a version 2.0 to have such breaking changes in, so that compatibility itself is not a dealbreaker, but then we should do it consistently, so all method should then check for the minimum indexing level."
7912,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/viatra/job/viatra-gerrit/686/ : UNSTABLE
7918,0,"Patch Set 1: Code-Review+1If ""IProject and IContainer are not interchangeable"" the patch looks good for me."
7920,0,Change has been successfully merged into the git repository by Andrey Loskutov
7923,0,Change has been successfully merged into the git repository by David Williams
7926,0,Change has been successfully merged into the git repository by Alexander Kurtakov
7929,0,Change has been successfully cherry-picked as a7a5b272edd967b36d03c1eb6e4cc8ebba8f0be4 by Jeff Johnston
7939,0,Change has been successfully merged into the git repository by Donald Dunne
7948,0,Change has been successfully merged into the git repository by Stefan Xenos
7957,0,Change has been successfully merged into the git repository by Ernesto Posse
7964,0,Change has been successfully merged into the git repository by Donald Dunne
7974,0,Change has been successfully merged into the git repository by Stefan Xenos
7975,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9994/ : UNSTABLE
7978,0,Change has been successfully merged into the git repository by Alexander Kurtakov
7981,0,"Patch Set 2:Ah, good call! Clearly plenty of bugs to work out for these list of changes. The bump actually needs to happen in the change that sits below this one."
7983,0,Change has been successfully cherry-picked as c9d2341adfbbdb3f701d480d7b6395c2f82f7582 by Roland Grunberg
7985,0,Patch Set 5: Code-Review+1Works great.
7996,0,Change has been successfully merged into the git repository by Donald Dunne
8011,0,Change has been successfully merged into the git repository by Alexander Kurtakov
8032,0,Change has been successfully cherry-picked as 4c715ac69cb774ae1aaa42d5306c727cdfce6d97 by Roland Grunberg
8034,0,"Patch Set 1: Code-Review-1This is still a work in progress. Ideally I'd like to add some tests and clean things up a little.I also still haven't ported over the DockerMachine settings, which I may end up doing in a separate patch.. we'll see."
8038,0,Change has been successfully rebased as 581dfe1f5657859afe7ac40b14fc8977fcfd62ca by Sam Davis
8050,0,Change has been successfully merged into the git repository by Sam Davis
8053,0,Change has been successfully merged into the git repository by Sam Davis
8060,0,Change has been successfully merged into the git repository by Stefan Xenos
8064,0,Change has been successfully merged into the git repository by Ernesto Posse
8069,0,Change has been successfully cherry-picked as aa1b5bc7b5d865524ff98bc91ec2fa029337d9a8 by Roland Grunberg
8073,0,Change has been successfully pushed.
8078,0,"Patch Set 2:thanks, Jeff !"
8081,0,Change has been successfully cherry-picked as ac27648d9721d8a1dc364ce9e0384f5d3c5907a2 by Jeff Johnston
8085,0,Change has been successfully rebased as d52667fbb5483b238ac0b752e151b5184ec5d985 by Thierry BLIND
8092,0,Change has been successfully merged into the git repository by Donald Dunne
8095,0,Change has been successfully merged into the git repository by Bartlomiej Laczkowski
8100,0,Change has been successfully merged into the git repository by Jacques Bouthillier
8101,1,"Patch Set 6:(6 comments)I have a couple concerns with the code (see comments) and the implementation of the feature:- When there are adjacent comments then the next comment action skips one of the comment (e.g. see review 75129, patchset 9)- Next comment should behave like next difference and offer options as to what to do when the last comment is reached (e.g. go back to first comment, go to next comment, ...)"
8108,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1426/ : UNSTABLE
8117,0,Change has been successfully rebased as 19c93331f06f1452647d82d9388c14d1415de3bf by Jaxsun McCarthy Huggan
8118,0,Patch Set 2: Code-Review-1(1 comment)Looks good otherwise.
8121,0,Change has been successfully merged into the git repository by Bartlomiej Laczkowski
8126,0,Change has been successfully rebased as f4b4266449fbf54dd21600698e415433b14a3385 by Ernesto Posse
8135,0,Change has been successfully merged into the git repository by vincent lorenzo
8138,0,Change has been successfully merged into the git repository by Remi Schnekenburger
8140,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Gerrit-master/571/ : UNSTABLE
8144,0,Change has been successfully rebased as ce0b51e736ec18cb0ae69e0806ef689d0a5ec806 by vincent lorenzo
8147,0,Patch Set 4: Code-Review+2 Verified+1Thanks for the contribution!
8148,0,Change has been successfully merged into the git repository by Patrick Tasse
8151,0,"Patch Set 1: Code-Review-1(4 comments)I was able to test it successfully, but some copyright header updates needed, and a question."
8166,0,Patch Set 9: Code-Review+2 Verified+1Reverted back to previous representation. Minor fix to gtk-keybindings property for backwards support of <Gtk3.20. Patch looks good!
8169,0,Change has been successfully merged into the git repository by Alexander Kurtakov
8173,0,Change has been successfully merged into the git repository by Thomas Watson
8177,1,"Patch Set 14:I still have some unanswered comments from AQRC:> Finally, I still think this would be a good idea:> > we can have both methods here in the abstract class, and then imlpementors would have to override one of them.> In other words we could still have the default implementations of the old ensure/isIndexed(key) methods here, as proposed in Path Set 1. That way, ""legacy"" indexer solutions such as MPS can keep overriding the old methods (and have the new methods implemented here convert the new API calls if a query backend already uses them). At the same time, we can update the EMFQRC to override the new methods to distinguish between indexing services (and have the old methods implemented here convert the old API calls made by ""legacy"" query backends such as Rete).>If we choose this route, there should be some ""implementors notice"" explaining the preceding paragraph - e.g. ""implement exactly one of these two methods"".Maybe this would be too complicated, and not needed here, so I do not really mind if the code is submitted as is, but I would like some response / closure here."
8178,1,"Patch Set 14:> I still have some unanswered comments from AQRC: >  > > Finally, I still think this would be a good idea: >  > > > we can have both methods here in the abstract class, and then > imlpementors would have to override one of them. >  > > In other words we could still have the default implementations of > the old ensure/isIndexed(key) methods here, as proposed in Path Set > 1. That way, ""legacy"" indexer solutions such as MPS can keep > overriding the old methods (and have the new methods implemented > here convert the new API calls if a query backend already uses > them). At the same time, we can update the EMFQRC to override the > new methods to distinguish between indexing services (and have the > old methods implemented here convert the old API calls made by > ""legacy"" query backends such as Rete). >  > >If we choose this route, there should be some ""implementors > notice"" explaining the preceding paragraph - e.g. ""implement > exactly one of these two methods"". >  > Maybe this would be too complicated, and not needed here, so I do > not really mind if the code is submitted as is, but I would like > some response / closure here.Having both implementations would result in a direct infinite loop in the abstract implementation (isIndexed(key)->isIndexed(key,Instances)->isIndexed(key)). It is true that this would only cause problems if the implementer would not implement any of the methods, and this way he/she is forced to implement the deprecated method also. What are the other's opinion about this?"
8179,1,"Patch Set 14:We had a discussion with Zolt├ín, and we tried to formalize the requirements regarding the AQRC implementations:We have three involved groups:* Users, whom code we would like to remain compatible* Legacy implementors, whom code we plan to break with the introduction of the abstract implementation, though ideally the migration would be as simple as replacing the implemements IQRC to extends AQRC.* And future implementors who might not want to implement deprecated methods (but still remain compatible with legacy users). For future implementors we should promise that their implementation won't break after 1.4, therefore all future new methods should be optionally implemented (with default implementation).Keeping these viewpoints in mind, we should prvoide default implementations to both set of methods (deprecated and new), possibly in two different abstract classes:* LegacyQRC for legacy implementors to ease migration, it contains default implementations for new methods, already deprecated* AbstractQRC for new implementors which contain default (possibly final) implementations for the deprecated methods.Or alternatively, as G├íbor proposed, we can merge the two abstract implementations in one abstract class and the javadoc should document that exactly one set of methods shall be implemented. Failing to implement them would result in an infinite loop, which would be detected quickly, but can be confusing. Could you suggest a solution?"
8180,1,"Patch Set 14:> We had a discussion with Zolt├ín, and we tried to formalize the > requirements regarding the AQRC implementations: >  > We have three involved groups: >  > * Users, whom code we would like to remain compatible > * Legacy implementors, whom code we plan to break with the > introduction of the abstract implementation, though ideally the > migration would be as simple as replacing the implemements IQRC to > extends AQRC. > * And future implementors who might not want to implement > deprecated methods (but still remain compatible with legacy users). > For future implementors we should promise that their implementation > won't break after 1.4, therefore all future new methods should be > optionally implemented (with default implementation). >  > Keeping these viewpoints in mind, we should prvoide default > implementations to both set of methods (deprecated and new), > possibly in two different abstract classes: > * LegacyQRC for legacy implementors to ease migration, it contains > default implementations for new methods, already deprecated > * AbstractQRC for new implementors which contain default (possibly > final) implementations for the deprecated methods. >  > Or alternatively, as G├íbor proposed, we can merge the two abstract > implementations in one abstract class and the javadoc should > document that exactly one set of methods shall be implemented. > Failing to implement them would result in an infinite loop, which > would be detected quickly, but can be confusing. Could you suggest > a solution?Some more aspect to consider: * For this version, we _have to_ break existing implementors, as we have to add the new methods to the interface (and there was no abstract base class for implementors available earlier)! This means, in this version, we could more-or-less ignore them, and focus on the future, given we provide a very clear migration path. * If we want to maintain compatibility in the future with _all_ three groups, we essentially cannot modify in the future the runtime context interface, except maybe adding _optional_ features to implement where it is the client responsibility to decide whether the method can be called or not.In the current case, I would aim to provide a good API for future implementors that might be incompatible with existing ones as opposed to having a confusing abstract base class implementation (e.g. infinite loop); and think hard whether we need anything else from the runtime context in order to stabilize it for future versions."
8181,1,"Patch Set 14:> In the current case, I would aim to provide a good API for future implementors that might be incompatible with existing ones as opposed to having a confusing abstract base class implementation OK, fine by me.> Users, whom code we would like to remain compatibleActually, those users are just the query backend implementations, Rete and LS. I think the same argument can go for them: we can break compatibility with them if we need to.> think hard whether we need anything else from the runtime context in order to stabilize it for future versions.Shouldn't we still have an AQRC, even an empty one, for adding non-breaking changes in the future? I do have future ideas: Requesting binding-specific indexing services, e.g. requesting that all instances are indexed for retrieval based on the first variable. The point is, it is very cheap to provide this service e.g. for EReferences in the forward direction: the enumeration query can be answered by an eGet(), so the backend might get by without actually indexing edge instances. Of course, somehow the planner should be made aware of this asymmetry in cost, so we probably need some performance indicators in the meta context as well."
8182,1,"Patch Set 14:> > Users, whom code we would like to remain compatible >  > Actually, those users are just the query backend implementations, > Rete and LS. I think the same argument can go for them: we can > break compatibility with them if we need to. And I guess, we want to eventually propagate this API instead of NavigationHelper for users who want to have Base index access, but no pattern matchers... Or do we? > > think hard whether we need anything else from the runtime context > in order to stabilize it for future versions. >  > Shouldn't we still have an AQRC, even an empty one, for adding > non-breaking changes in the future?We will have an AQRC with some basic functionality; but that can only be used to add _new_ functionality with clear default behaviour (e.g. optional features). If we want to remove functionality, or redirect existing ones, the issue will not be so easy. > I do have future ideas: Requesting binding-specific indexing > services, e.g. requesting that all instances are indexed for > retrieval based on the first variable. The point is, it is very > cheap to provide this service e.g. for EReferences in the forward > direction: the enumeration query can be answered by an eGet(), so > the backend might get by without actually indexing edge instances. > Of course, somehow the planner should be made aware of this > asymmetry in cost, so we probably need some performance indicators > in the meta context as well.Can we provide a default implementation for this feature based on current functionality? Can the existing behaviour work further with the new API (e.g. do we want to deprecate the old methods when we use this)? If both question is answered with yes, we can add it later when we plan to use/implement it without breaking existing index implementations."
8183,1,"Patch Set 14:> > Actually, those users are just the query backend implementations, > > Rete and LS. I think the same argument can go for them: we can > > break compatibility with them if we need to. >  > And I guess, we want to eventually propagate this API instead of > NavigationHelper for users who want to have Base index access, but > no pattern matchers... Or do we?Hmm, that's news to me. It does make some sense to offer this generic API that works with any supported matcher scope; but I think for EMF in particular, the NavigationHelper API (or a future version of it) is more user friendly.Even if we promote the IQRC to end-users in the future, that's hardly an argument to breaking compatiblity now. > Can we provide a default implementation for this feature based on > current functionality? I am not sure what to say. The ""seed"" parameter is already there for the enumerate/count/contains methods. The new functionality would just be that indexing services could be requested for specific bitvectors (which parts of the seed will be given?) as opposed to the entire input key. I believe the default implementation could just request that the whole key be indexed - it would be functionally correct, though it would not bring the performance benefits.> Can the existing behaviour work further with the new API (e.g. do we want to deprecate the old methods when we use this)?Yes and maybe. But we could also remove the old methods and change entirely to the more refined ones."
8184,1,"Patch Set 14:Ok, lets step back a bit here: who are the implementors and the users of the IQueryRuntimeContext API? Implementors are the Scope providers, and users backend providers? Is this correct? Rete and LS are not problematic, as they are developed in parallel with this API, so they can keep up with the API.The important question is, do we consider the chance that anyone else would implement some query backend in the future that will not be developed in VIATRA? If there won't be anyone, we should close down this API, and then the entire conversation will be moot, and we should indeed consider only the implementors of scopes.However, and I believe, this is the case, if we want to have an API for externals to provide backend implementations, the IQueryRuntimeContext API should remain compatible for both users and implementors, and appropriate steps should be taken to avoid breakage (e.g. the methods there will be in 1.4 should be stable enough). > Even if we promote the IQRC to end-users in the future, that's > hardly an argument to breaking compatiblity now.We have already broken compatibility. By adding new methods to the interface that was implemented directly by scope providers they have to be updated. The only thing we can do is avoid the users of the interface to break as well. > > Can we provide a default implementation for this feature based on > > current functionality? >  > I am not sure what to say. The ""seed"" parameter is already there > for the enumerate/count/contains methods. The new functionality > would just be that indexing services could be requested for > specific bitvectors (which parts of the seed will be given?) as > opposed to the entire input key. I believe the default > implementation could just request that the whole key be indexed - > it would be functionally correct, though it would not bring the > performance benefits.Ok, this means, if we want to add this feature in the future, we could add this without API breakage. This means, we can wait until somebody explicitly wants to use such a functionality to add it. > > Can the existing behaviour work further with the new API (e.g. do > we want to deprecate the old methods when we use this)? >  > Yes and maybe. But we could also remove the old methods and change > entirely to the more refined ones.That is my main point: we should not remove/change old methods from an API (if it is an API), but should aim not to have to change them."
8193,1,Patch Set 4:(8 comments)Sorry for my belated response. See my comments below.
8195,0,"Patch Set 4:> I know I am a bit late to the party, but I think if we have orthogonal variants of indexing ""levels"" then we shouldn't try to implement it as a scale (none < statistics <? notifications < both < full) and should instead treat them as flags (statistics, notifications, instances).On the indexing API, this does make a lot of sense, and it would definitely be more future-proof. However, on the implementation side (the actual base index), the concerns are not truly orthogonal (e.g. if we have 'instance' indexing, we get stats and notifications practically for free), so there are only really these 5 modes of operation. The nontrivial part of the lattice logic must be provided somewhere (e.g. if matcher backend A requests instance and notification indexing, we do nothing when backend B later requests stats). So with a bit more work, we could probably have ├übel's service flags on the IQRC API, and the indexing level enum or something equivalent in the base index itself. Is it worth it?Also, what's the nicest way to provide the 'flags'? @Data class with three boolean fields? EnumSet for a three-valued enum representing the three services? Constants with values 0b001, 0b010 and 0b100 that can be binary OR-ed, like in the good old times?"
8196,1,"Patch Set 4:> On the indexing API, this does make a lot of sense, and it would > definitely be more future-proof. However, on the implementation > side (the actual base index), the concerns are not truly orthogonal > (e.g. if we have 'instance' indexing, we get stats and > notifications practically for free), so there are only really these > 5 modes of operation.I agree, the indexing API should future-proof and the backend independent interface should not use an enum that is currently defined based on EMF specifics (i.e. how the base index behaves wrt. free notifications with availability of instances). > The nontrivial part of the lattice logic must be provided somewhere > (e.g. if matcher backend A requests instance and notification > indexing, we do nothing when backend B later requests stats). So > with a bit more work, we could probably have ├übel's service flags > on the IQRC API, and the indexing level enum or something > equivalent in the base index itself.Yes, I think the specific Enum can be pushed down to that level (especially considering Gabor's comments about reregistration. > Is it worth it?Regardless of the design, changing IQueryRuntimeContext should be done with extreme care.I think from the user side of the API, we need the following:- is a given input key indexed with the given level?- ensure given key is indexed with the given level! (if I understand correctly, calling this multiple times inside coalesceTraversals will ensure that the actual computation happens at the same timeThis way, the ""user"" (Rete and local search) doesn't care about lattices and joins, it only specifies what levels it wants. Then, if we are 100% sure that these levels are only statistics, notifications and instances, we can have an enum with those three values (without none and both). Otherwise, make it an interface similar to IInputKey (note how a given implementation checks whether a given key is valid for a give context)."
8197,1,"Patch Set 4:> > On the indexing API, this does make a lot of sense, and it would > > definitely be more future-proof. However, on the implementation > > side (the actual base index), the concerns are not truly > orthogonal > > (e.g. if we have 'instance' indexing, we get stats and > > notifications practically for free), so there are only really > these > > 5 modes of operation. >  > I agree, the indexing API should future-proof and the backend > independent interface should not use an enum that is currently > defined based on EMF specifics (i.e. how the base index behaves > wrt. free notifications with availability of instances). >  > > The nontrivial part of the lattice logic must be provided > somewhere > > (e.g. if matcher backend A requests instance and notification > > indexing, we do nothing when backend B later requests stats). So > > with a bit more work, we could probably have ├übel's service flags > > on the IQRC API, and the indexing level enum or something > > equivalent in the base index itself. >  > Yes, I think the specific Enum can be pushed down to that level > (especially considering Gabor's comments about reregistration. >  > > Is it worth it? >  > Regardless of the design, changing IQueryRuntimeContext should be > done with extreme care. > I think from the user side of the API, we need the following: > - is a given input key indexed with the given level? > - ensure given key is indexed with the given level! (if I > understand correctly, calling this multiple times inside > coalesceTraversals will ensure that the actual computation happens > at the same time >  > This way, the ""user"" (Rete and local search) doesn't care about > lattices and joins, it only specifies what levels it wants. Then, > if we are 100% sure that these levels are only statistics, > notifications and instances, we can have an enum with those three > values (without none and both). Otherwise, make it an interface > similar to IInputKey (note how a given implementation checks > whether a given key is valid for a give context).I understand your concerns. It is clear that the API should reflect the services provided by the base indexer, and the IndexingLevel enum approaches this concept from the implementation side. After reading your comments, I think it would be better to use flags on the API, and the indexing level would remain specific to the NavigationHelper. The flags could be unambiguously transformed to the base indexer levels by the IQRC implementation. For flags, using bitfields or @Data classes are either acceptable in my opinion.What do you think about this approach?"
8198,0,"Patch Set 4:Bal├ízs: I'm satisfied with your plan. Do we have the time budget for it? P.S. I would prefer EnumSet over bitfield, with an enum like IndexerService {STATISTICS, NOTIFICATION, INSTANCES}."
8199,1,"Patch Set 4:The problems you are mentioning here are very much inline what I was saying in I398c168fafe5f6c510aa53b8d6068564a3db3f4a about the current state of enum usage.To sum up, clients should request a kind of ""minimum indexing level"", e.g. stats should be available for this and notifications for that, etc. and it should be the indexers responsibility to calculate the correct inner behavior (e.g. if a type is already instance-indexed, the stat indexing status should be true by default). > Also, what's the nicest way to provide the 'flags'? @Data class > with three boolean fields? EnumSet for a three-valued enum > representing the three services? Constants with values 0b001, 0b010 > and 0b100 that can be binary OR-ed, like in the good old times?Lets not do constant values, they are night impossible to use as a client, see SWT... On the other hand, EnumSet seems nice to me."
8200,0,"Patch Set 4:I aggree with using EnumSet, if ├übel has no objections, then it is settled. G├íbor: I believe we must make time for it, a good API is essential. Zolt├ín: Do we want to include the API change in 1.3?"
8205,0,Patch Set 1:(5 comments)I have started writing my comments before Patchset 2 arrived; I have seen those changes and they are fine by me.
8209,0,"Patch Set 13: Code-Review+1Sorry for the late review, looks good to me."
8219,0,"Patch Set 3: Code-Review+1(1 comment)Looks fine by me; I had only one minor formatting issue.However, I would like to hear what G├íbor thinks about this as well."
8230,0,Patch Set 16: Code-Review+1Looks good to me. Thanks for the good work.
8233,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
8238,0,Change has been successfully rebased as 00c7fda46d8093bc0439c0432853485df6cc70f2 by Bartlomiej Laczkowski
8244,1,Patch Set 1:> We should remove EclipseBannerPic and Idea.jpg... Those are 2001-era images.That doesn't mean they are unused.See e.g. https://www.eclipse.org/jdt/core/dev.phpand https://www.eclipse.org/jdt/core/r3.0/main.htmlPlease don't wait another week with restoring these images. You can delete some of them in a separate bug (after searching for references and maybe checking the server logs).
8246,0,Change has been successfully merged into the git repository by Christopher Guindon
8249,0,Change has been successfully merged into the git repository by Sean Muir
8252,0,Change has been successfully merged into the git repository by Tristan Faure
8255,0,Change has been successfully merged into the git repository by Johannes Faltermeier
8258,0,Change has been successfully merged into the git repository by Johannes Faltermeier
8261,0,Change has been successfully merged into the git repository by Johannes Faltermeier
8264,0,Change has been successfully merged into the git repository by Johannes Faltermeier
8267,0,Change has been successfully merged into the git repository by Johannes Faltermeier
8269,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/emfstore/job/gerrit/302/ : UNSTABLE
8271,0,Change has been successfully merged into the git repository by Johannes Faltermeier
8276,0,Change has been successfully merged into the git repository by Brian de Alwis
8279,0,Change has been successfully merged into the git repository by Mickael ADAM
8282,0,Change has been successfully merged into the git repository by Katharine Hirsch
8285,0,Change has been successfully merged into the git repository by Sasa Zivkov
8291,0,Change has been successfully merged into the git repository by Sasa Zivkov
8297,0,Change has been successfully merged into the git repository by Sasa Zivkov
8307,0,Change has been successfully merged into the git repository by Sasa Zivkov
8312,0,Change has been successfully merged into the git repository by Sasa Zivkov
8320,0,Patch Set 1: Code-Review+1may you nmerge this little contribution.usefull for sysml and designer.thanks
8323,0,Change has been successfully rebased as 552bd8e81e0654ab3fa23bef876cad5c0059a6e1 by Shuai Li
8325,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/845/ : UNSTABLE
8328,0,Change has been successfully cherry-picked as 6e883fdabb1f63c34292978ee89258cd22ac410a by Judith Gull
8332,0,Change has been successfully rebased as 62ef2245e1c60f2a0f00fd9ac41c0c9ddb93a688 by Michal Niewrzal
8338,1,"Patch Set 1:Shall I contribute a new patch with joined lines?  After all, this is not code in the first place, and there are so many lines because each attribute is on a separate line. It's silly to waste the IP staff time on this."
8339,1,"Patch Set 1:> Shall I contribute a new patch with joined lines?  After all, this > is not code in the first place, and there are so many lines because > each attribute is on a separate line. It's silly to waste the IP > staff time on this.According to the EclipseLegalProcessPoster.pdf (comment 2), CQ is required for all content including XML files. I think joining the lines to reduce the line count to < 1000 would make the file less readable/maintainable.I'll create a CQ and explain to the IP team what the file is about. This can lower their effort"
8345,0,Change has been successfully merged into the git repository by Lakshmi Shanmugam
8347,0,Change has been successfully pushed.
8350,0,Change has been successfully merged into the git repository by Michal Niewrzal
8353,0,Change has been successfully merged into the git repository by Niraj Modi
8355,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3020/ : UNSTABLE
8358,0,Change has been successfully rebased as 7a5956663478b3a8073338014642e5b4e8fb890f by Johannes Faltermeier
8361,0,Change has been successfully merged into the git repository by Sasa Zivkov
8366,0,Change has been successfully cherry-picked as 79ff8b5cf69ad56a5ab6e65956219bbeee880a22 by Matthias Otterbach
8369,0,Change has been successfully merged into the git repository by Tristan Faure
8371,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3017/ : UNSTABLE
8374,0,Change has been successfully merged into the git repository by Johannes Faltermeier
8377,0,Change has been successfully cherry-picked as 0772b7da068b339d3da4f16fe529d7b663f56022 by Matthias Otterbach
8380,0,"Patch Set 6: Code-Review+1Hi Martin,thanks for the new PS. Looks good! I only did a minor rename and updated the copy-right header in one file. Thanks!"
8383,0,Change has been successfully merged into the git repository by Laurent Goubet
8386,0,Patch Set 1:(2 comments)Thanks for the fix! Looks good! Only a few minor questions inline.
8387,0,"Patch Set 1:(2 comments)Hello Philip,Thank you for your review! I made some changes to address your comments."
8391,0,Change has been successfully pushed.
8399,0,Change has been successfully merged into the git repository by David Miller
8407,1,"Patch Set 2: Code-Review+2 Verified+1well then if we are agree, let's merge! Alex, I will press on submit tomorrow mourning unless there are objections. I think this addresses our concerns, it's clearer and opening up the path for some very interesting features down the road. (re-usable handlers and such)"
8408,1,"Patch Set 2: Code-Review+1lgtmdefault methods sure are useful, that would be a pain to change if it broke the API every time."
8409,0,Patch Set 2:Thank you! New LTTng event matching down the road!
8410,0,Change has been successfully cherry-picked as 35944fc5d7ef2f1a4a2745c94020596fad6f52a0 by Genevieve Bastien
8413,1,"Patch Set 1:(1 comment)It's the way I see it, but I may be wrong..."
8424,0,Change has been successfully merged into the git repository by David Miller
8428,0,Change has been successfully rebased as 4351b5505b4614adcdb1a093ef8f61fba69efc44 by Sam Davis
8430,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1467/ : UNSTABLE
8434,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1469/ : UNSTABLE
8436,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1466/ : UNSTABLE
8437,1,"Patch Set 3:sorry, I misclicked and accidentally rebased."
8438,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1468/ : UNSTABLE
8442,0,Change has been successfully merged into the git repository by Alexander Kurtakov
8445,0,Change has been successfully merged into the git repository by Christian Pontesegger
8450,1,"Patch Set 1:(1 comment)Some comments, I'm sorry I didn't see the review"
8458,1,"Patch Set 3: Code-Review-1(7 comments)Some commentsWorks well for Ctf traces, fails miserably with any other trace type ;-)"
8463,0,"Patch Set 6:I updated the javadocs a bit. But this is getting good! I'll try it with a few traces, just to see if 16 is the right number and not too low in general... anyway..."
8465,0,"Patch Set 7: Code-Review+1 Verified+1Fine with me, for what I tested. 16 may be a bit low now, but I prefer it too low than too high. If someone has a better suggestion for the number, then go ahead, but the functionality is as advertised and it is really cool to have an idea of the progress going on."
8466,0,Patch Set 7: Code-Review+1I am fine with the change.
8468,0,Change has been successfully cherry-picked as 7ea18c7202104839541c937c39b9f17b53981d31 by Matthew Khouzam
8473,0,Change has been successfully merged into the git repository by John Misinco
8476,0,Change has been successfully merged into the git repository by Katharine Hirsch
8479,0,Change has been successfully merged into the git repository by Katharine Hirsch
8482,0,Change has been successfully merged into the git repository by Katharine Hirsch
8485,0,Change has been successfully merged into the git repository by Katharine Hirsch
8488,0,Change has been successfully merged into the git repository by Katharine Hirsch
8491,0,Change has been successfully merged into the git repository by David Williams
8493,0,"Patch Set 4:> > Should there be a test for this? Maybe an existing one can be > > augmented to make sure the channel info is populated? >  > I augmented an existing one, I think this is enough coverage. If > you think otherwise, please let me know :) >  > Also, I was wondering if the fields should be named > numberOfDiscardedEvents and numberOfLostPackets, since we are > storing a numbers and not actual events or packets. The methods > getDiscardedEvents and getLostPackets might be misleading, what do > you think?I think using numberOfDiscardedEvents and numberOfLostPackets is a good idea"
8500,0,Change has been successfully cherry-picked as 7917566259bf19a653312314d33d017f34097f6e by Marc-Andre Laperle
8506,0,Patch Set 6:> I just updated the commit messageThank you! :)
8507,0,"Patch Set 6:I just noticed that there is a section ""Properties View"" in the documentation that could be updated. Could you add the new properties there? Everything else looks good!"
8517,0,Change has been successfully merged into the git repository by David Williams
8520,0,Change has been successfully merged into the git repository by Katharine Hirsch
8524,0,Change has been successfully merged into the git repository by Katharine Hirsch
8527,0,Change has been successfully merged into the git repository by Katharine Hirsch
8530,1,"Patch Set 2:- I'd be OK if the two variants of Utils.drawText() that perform trimming would be changed to trim using an ellipsis.- The averageCharWidth can't be cached in Utils, it is different for every font. But the Utils shouldn't need it, it uses textExtent().- The early exit based on the bounds width should remain in the view implementations, that's what is using the averageCharWidth.- The cached averageCharWidth in the views probably does not take into account the different fonts when zooming vertically, however it's only used as a width treshold, maybe it's OK?- It's much too costly in Linux GTK to get the averageCharWidth (and/or font metrics) from the GC for every drawing operation."
8533,0,"Patch Set 3: Code-Review+1 Verified+1(1 comment)Looks good, minor comment if you wish to update it."
8537,0,"Patch Set 3:I confirm this makes a big difference on the C++ traces I deal with on a daily basis, where templates names can get really really long :)It would be nice to get the bisection implemented to scan in logaritmic time (instead of linear), but maybe that can come later?"
8538,0,"Patch Set 3:it would be great in any case to get this in ASAP, it is very easy to make get TraceCompass on its knees without this patch (scrolling can get as slow as 1 frame every 10 seconds)"
8539,0,"Patch Set 3:> It would be nice to get the bisection implemented to scan in logaritmic time (instead of linear), but maybe that can come later?Sure, that can always be added afterwards. This patch already* adds the ellipsis-adding logic in the Utils class* changes the iteration from backwards to forwardsWhich is already a big change! But future optimizations are always possible."
8544,0,Change has been successfully cherry-picked as 2984a46655de9969a26868a7ba9ff68a1012f590 by Alexandre Montplaisir
8557,1,Patch Set 8:I think it would be good to get this in soonish because it is causing a lot of build failures.
8559,0,Change has been successfully cherry-picked as e9a570ab1c7b11d9633b618d9d2f0aeea7c6c957 by Marc-Andre Laperle
8570,0,Change has been successfully cherry-picked as 1c9b6343d7d3e72643d34f6cad400a4698824230 by Marc-Andre Laperle
8583,0,"Patch Set 4:I can confirm this helps speed up the UI, especially with big traces. Can we get this in? :)"
8588,0,Change has been successfully cherry-picked as 6f8332c4beb8b962b8561b117cd3fb722cc3e507 by Alexandre Montplaisir
8593,0,Change has been successfully merged into the git repository by Abel Hegedus
8596,0,Change has been successfully merged into the git repository by Christian Pontesegger
8600,0,Change has been successfully rebased as bd843a797ea61dcae51076693ca885111a18c92f by Ernesto Posse
8606,0,Change has been successfully merged into the git repository by Lars Vogel
8607,1,"Patch Set 2:Vikas, I don't think that change is responsible for the test failures, as it was successful earlier."
8610,0,Change has been successfully cherry-picked as c23b0c4cd3578cebba8360998160adfab5ec285a by Matthew Khouzam
8614,0,"Patch Set 2:Thanks for the review, I think you are right, the first implementation is the best."
8623,0,Change has been successfully cherry-picked as d9e90ab37d88ba6f2441c860e532a3827e766da5 by Matthew Khouzam
8626,0,Change has been successfully merged into the git repository by Christian Pontesegger
8632,0,Patch Set 1: Code-Review+2 Verified+1Looks good.
8633,0,Change has been successfully merged into the git repository by Patrik Suzzi
8638,0,Change has been successfully merged into the git repository by Marcel Bruch
8645,0,Change has been successfully merged into the git repository by Victor Rubezhny
8648,0,Change has been successfully merged into the git repository by Daniel Tolgyesi
8657,0,Change has been successfully merged into the git repository by Marvin Mueller
8664,0,Change has been successfully merged into the git repository by Johannes Dorn
8667,0,Change has been successfully merged into the git repository by Sasikanth Bharadwaj
8670,0,Change has been successfully merged into the git repository by Daniel Tolgyesi
8675,0,Change has been successfully merged into the git repository by Daniel Tolgyesi
8677,0,Change has been successfully merged into the git repository by Marcel Bruch
8683,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2997/ : UNSTABLE
8688,0,Change has been successfully rebased as 9e97876c13b8abaef6975635da2b0647ae846751 by Jonas Helming
8693,0,Change has been successfully merged into the git repository by Alexander Kurtakov
8700,0,Change has been successfully merged into the git repository by Alexander Kurtakov
8703,0,Change has been successfully merged into the git repository by Daniel Tolgyesi
8707,0,Change has been successfully merged into the git repository by Marvin Mueller
8712,0,Change has been successfully merged into the git repository by Sergey Prigogin
8716,0,Change has been successfully merged into the git repository by Carsten Reckord
8719,0,Change has been successfully merged into the git repository by Christian W. Damus
8722,0,Change has been successfully merged into the git repository by Christian W. Damus
8726,0,Change has been successfully merged into the git repository by Christian W. Damus
8728,0,Change has been successfully merged into the git repository by David Miller
8737,0,Change has been successfully merged into the git repository by John Misinco
8743,0,Change has been successfully merged into the git repository by Ryan Brooks
8748,0,Change has been successfully merged into the git repository by Lars Vogel
8751,0,Change has been successfully merged into the git repository by Alexander Kurtakov
8756,1,"Patch Set 4: Code-Review+2Looks good to me, the ProgressBar test snippets work nicely, and the Eclipse loading bar is functional on both GTK2 and GTK3. No test failures."
8758,0,"Patch Set 4: Code-Review+2Solves the issue for me, takes an approach similar to background colors. Looks good."
8759,0,Change has been successfully merged into the git repository by Eric Williams
8768,0,"Patch Set 1:looks good. Matthew, could you have a second look?"
8770,0,Change has been successfully cherry-picked as 39c6a6bf072808350aea8017eed7d64b6a8ce131 by Matthew Khouzam
8775,0,Change has been successfully merged into the git repository by Christian W. Damus
8778,0,Change has been successfully merged into the git repository by Christian W. Damus
8781,1,"Patch Set 10:> Uploaded patch set 10.This updates the basic uncontrol command to remove the shard annotation, if there is one, from the uncontrolled element/resource.  It also adds JUnit coverage for that and the ShardResourceHelper API which uncontrol, RSA import, and other components all use."
8783,1,"Patch Set 5:> Uploaded patch set 5.This update rebases the patch and fixes a new deadlock scenario, in which deletion of a projectwould deadlock the UI if the current editor's model was in the project being deleted and therefore that editor had to be closed and another Papyrus editor activated that had never previously been loaded in the current Eclipse session."
8788,1,"Patch Set 2: Code-Review+2 Verified+1Previously approved, trivial rebase"
8789,0,Change has been successfully cherry-picked as 0feae9f890502d8033d11867e9f3f00cef85bdcf by Alexandre Montplaisir
8791,1,Patch Set 1: Code-Review+2 Verified+1I think we should consider using a SafeRunner where the table resolves aspects. The consequences are too severe when an exception happens so a pessimistic approach would make sense I think.
8792,0,Change has been successfully cherry-picked as 33c6813eb8d4c7480eaf4bc2584c0345383e35c4 by Alexandre Montplaisir
8795,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9832/ : UNSTABLE
8798,0,Change has been successfully merged into the git repository by Lars Vogel
8799,0,"Patch Set 3:> Change has been successfully merged into the git repository by Lars > VogelLars, I'm wondering what *is* merged? I see no files?"
8803,0,Change has been successfully merged into the git repository by Marcel Bruch
8807,0,Change has been successfully cherry-picked as ccf0e1a644dea63dcf91e2848c2626bb2d1d2448 by Alexandre Montplaisir
8812,0,Change has been successfully merged into the git repository by Lars Vogel
8815,0,Change has been successfully merged into the git repository by Lars Vogel
8817,0,Change has been successfully cherry-picked as f778786a095c96941764ee128c023aa2a1b3da70 by Patrick Tasse
8826,0,Change has been successfully merged into the git repository by Jeff Johnston
8829,0,Change has been successfully cherry-picked as 59c014d73032dd2e8bc96c0f1d2d11ca4fac3301 by Alexandre Montplaisir
8831,0,"Patch Set 4: Code-Review+2 Verified+1Thanks, Philip.  I had added the 'tooling' statement in the exclusions in one project, but not in the inclusions in the other.  It was extra effective for my use case!"
8832,0,Change has been successfully merged into the git repository by Christian W. Damus
8835,0,"Patch Set 2: Code-Review-1(2 comments)Thanks for the update on the developer setup!When testing it, I realized that the compare and compare tests plug-ins won't get imported into the workspace. Looking at the setup file, I think this is because of wrong patterns in the projects import tasks.I'll give it another test and push a new PS that fixes this problem, if it works."
8837,0,"Patch Set 3: Code-Review+1PS3 fixes the patterns. Now it works for me. Christian, can you verify that it works for you too now? Thanks!PS: I didn't mean to change the author of this commit, but since I'm not a committer on this project, I can only push in my name. Please change the author back to yours before merging. Thanks!"
8846,0,Change has been successfully merged into the git repository by Ryan Brooks
8850,0,"Patch Set 7:I am adding Marc-Andre as reviewer, he is really good at spotting issues with the .prefs."
8856,1,Patch Set 1:The patches that depended on it failed. I did a small update to make them work.
8863,0,Change has been successfully cherry-picked as 63c0d83759d6e6916fc083b217b80b0bddf7a146 by Genevieve Bastien
8868,0,Patch Set 3:BTW I always saw few opened .pack files from *different* repositories used during tests on Linux just before the test failed. The problem there is that repository.close() don't close opened object databases because for some reason the internal use count says that nothing is opened (however the pack files were opened!).
8871,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8842/ : UNSTABLE
8873,0,Change has been successfully merged into the git repository by Andrey Loskutov
8876,0,"Patch Set 4:> Ok, just get this in. It is great, we need it!Woops, didn't wait for the tests. Hopefully it's fine!"
8877,0,"Patch Set 3: Code-Review+2 Verified+1Ok, just get this in. It is great, we need it!"
8878,0,Change has been successfully cherry-picked as c7d7e74ef13aa23dd298049032eb47a387ff5b32 by Marc-Andre Laperle
8883,0,Change has been successfully cherry-picked as 3344fad115e5d826c235c21371746f3885682c18 by Patrick Tasse
8890,0,Change has been successfully merged into the git repository by Jonas Helming
8895,0,Change has been successfully merged into the git repository by Ernesto Posse
8899,0,Change has been successfully merged into the git repository by Thomas Watson
8901,0,Patch Set 1:(1 comment)Just a small question :-)
8905,0,Change has been successfully rebased as db6943ca6303052623ee2bc59a2298a00d301ac0 by Alexandra Buzila
8909,0,Change has been successfully merged into the git repository by Eric Williams
8912,0,Change has been successfully merged into the git repository by Leo Ufimtsev
8915,0,Change has been successfully merged into the git repository by Andrey Loskutov
8916,1,"Patch Set 1:Sorry Andrey, I missed this. Belated +1 from me."
8919,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
8922,0,Change has been successfully merged into the git repository by Benoit Maggi
8925,0,Change has been successfully merged into the git repository by Benoit Maggi
8928,0,Change has been successfully merged into the git repository by Benoit Maggi
8932,0,Change has been successfully rebased as f68c766e5c5df1bb5c08fd65bc6f5464d3a58208 by Benoit Maggi
8938,0,Change has been successfully rebased as a47bee0d51e731024be5f4385b5f32ac80ee6be9 by Benoit Maggi
8941,0,Change has been successfully merged into the git repository by Benoit Maggi
8946,0,Change has been successfully merged into the git repository by Benoit Maggi
8949,0,Change has been successfully merged into the git repository by Alexander Kurtakov
8954,0,Change has been successfully cherry-picked as 62700b2fcc8a0cc95edb68be82b1b23487c4f241 by Beat Schwarzentrub
8957,0,Change has been successfully merged into the git repository by Benoit Maggi
8961,0,Change has been successfully merged into the git repository by Benoit Maggi
8968,0,Change has been successfully rebased as a8251b2a6a1770fc7378d92b24f807888ee22cc6 by Jeremie Tatibouet
8970,1,Patch Set 1: Code-Review+1here we have a fault because this patch is not tested...
8972,0,Change has been successfully merged into the git repository by Benoit Maggi
8973,0,"Patch Set 3: Code-Review+2 Verified+1Change looks good, verified the patch with IE11 on Win7."
8974,0,Change has been successfully merged into the git repository by Niraj Modi
8986,0,Change has been successfully merged into the git repository by Jonas Helming
8987,1,Patch Set 17: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9009/ : UNSTABLE
8989,1,"Patch Set 12: Code-Review+1> (1 comment) >  > I spent a bit time looking through the patch.  I won't stand in the > way of this patch, but I found the original code confusing and > these changes don't improve it. >  > My confusion stems from that 'Maximizable Children' isn't really > documented anywhere.  Nor are the special cases that MinMaxAddon > has to handle ÔÇö and how Maximizable Children changes those special > cases.  The special case handling code seems to be inserted > directly into the code, which makes it hard to reason about.  > Especially for whomever comes next to change the behaviour for > another piece. >  > I haven't actually tried running with the changes, but it seems to > me that there's a case that's not tested where a stack within the > MArea is minimized.  What happens if I switch perspectives?  That > minimized stack should be carried across, since the area is shared.Hi Brian,I think the new patch set addresses your comment, do you agree?If so, I would accept this now..."
8996,1,"Patch Set 3:(5 comments)Sounds like an interesting idea ÔÇö but it really needs some tests, and some stylistic practices need to be backed out (i.e., use of Class#isInstance() and Class#cast() is inconsistent with the rest of the code).Have you thought about loosening the restriction from MArea to MGenericTile?  It would be nice to have a M1+M2+'M' that would progressively maximize a part within its PSC ancestry; it could be handy for the Debug perspective, for example."
8997,1,Patch Set 3:I updated the patchset based on your comments.I like the idea to create a generic solution. I would suggest to open a new bug for the more generic solution using the MGenericTile as it will require more time to get it right.
8999,1,"Patch Set 9: Code-Review+2From my point of view, Brians comments have been adressed and tests have been added accordingly. I would accept this now. @Brian: Any objections?"
9000,1,"Patch Set 9:(1 comment)I spent a bit time looking through the patch.  I won't stand in the way of this patch, but I found the original code confusing and these changes don't improve it.  My confusion stems from that 'Maximizable Children' isn't really documented anywhere.  Nor are the special cases that MinMaxAddon has to handle ÔÇö and how Maximizable Children changes those special cases.  The special case handling code seems to be inserted directly into the code, which makes it hard to reason about.  Especially for whomever comes next to change the behaviour for another piece.I haven't actually tried running with the changes, but it seems to me that there's a case that's not tested where a stack within the MArea is minimized.  What happens if I switch perspectives?  That minimized stack should be carried across, since the area is shared."
9006,1,Patch Set 15: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8956/ : UNSTABLE
9011,0,Change has been successfully merged into the git repository by Andrey Loskutov
9014,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8834/ : UNSTABLE
9015,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8835/ : UNSTABLE
9016,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8837/ : UNSTABLE
9017,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8838/ : UNSTABLE
9018,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8839/ : UNSTABLE
9019,0,Change has been successfully merged into the git repository by Matthias Sohn
9023,0,Change has been successfully rebased as 8928a72f873feff3ce355414324bcdb2816e36c8 by Jeremie Tatibouet
9027,0,Change has been successfully merged into the git repository by Andrey Loskutov
9031,0,Change has been successfully merged into the git repository by Alexander Kurtakov
9034,0,Change has been successfully merged into the git repository by Christian Pontesegger
9039,0,Change has been successfully rebased as b9b64da90bdd28798f113a7bbccd4beb7660a23a by Benoit Maggi
9045,0,Change has been successfully merged into the git repository by Lorenzo Bettini
9048,0,Change has been successfully merged into the git repository by Andreas Sewe
9060,0,"Patch Set 6: Code-Review+2 Verified+1Simple fix, thanks!I rebased it on latest master, it had a merge conflict (these methods don't throw AttributeNotFoundException anymore)."
9062,0,Change has been successfully cherry-picked as 30cdc5e5458f2e986dd00e7ec38b908a6c707e55 by Matthew Khouzam
9077,0,Change has been successfully merged into the git repository by Christian Pontesegger
9080,0,Change has been successfully merged into the git repository by Lorenzo Bettini
9083,0,Change has been successfully merged into the git repository by Lorenzo Bettini
9086,0,Change has been successfully merged into the git repository by Christian Pontesegger
9094,0,Change has been successfully merged into the git repository by Andreas Sewe
9098,0,Change has been successfully merged into the git repository by Christian Pontesegger
9101,0,Change has been successfully merged into the git repository by Christian Pontesegger
9105,0,Change has been successfully rebased as e5f04ece6847a5edb2fe4347c8bd4347b7c6aab7 by Patrick Tessier
9109,0,Change has been successfully merged into the git repository by Lucas Koehler
9113,0,Change has been successfully rebased as f2ee67595fc73d09ac839f2ede726605832e76b9 by Patrick Tessier
9118,0,Change has been successfully rebased as bebefef7da3db7d05c0042778211be4e9320edd5 by Patrick Tessier
9124,0,Change has been successfully merged into the git repository by Alexander Kurtakov
9128,0,Change has been successfully merged into the git repository by Patrick Tessier
9132,0,Change has been successfully merged into the git repository by Patrick Tessier
9137,0,Change has been successfully rebased as a54a896819f05282f470b3827b170c2f1fe0d613 by Patrick Tessier
9142,0,Change has been successfully merged into the git repository by Marcel Bruch
9146,0,Change has been successfully merged into the git repository by Andreas Sewe
9154,0,Change has been successfully merged into the git repository by Lucas Koehler
9157,0,Change has been successfully merged into the git repository by Lucas Koehler
9160,0,Change has been successfully merged into the git repository by Lucas Koehler
9163,0,Change has been successfully merged into the git repository by Marvin Mueller
9168,0,Change has been successfully merged into the git repository by Lucas Koehler
9185,0,"Patch Set 7: Code-Review-1(10 comments)Hello Stefan,I didn't have the time to make a full review but I can't continue right now so I publish a partial review. More to come soon (I hope!)"
9186,0,"Patch Set 7: Code-Review-1(8 comments)Thanks for your partial review, Laurent! While doing a review on my own and incorporating your review, I found a problem that when only the UML file is changed, the approach won't work too.I re-investigated this problem and thought about it a while... the nicest way would be to avoid loosing the information on the resources in scope during the minimization; that is, minimizing the scope but storing somewhere which resources had been in scope at the beginning. Then it would be very easy to check if a .di file was in the scope.Ideally, we could change that in the ComparisonScopeBuilder. However, e.g. the EMFModelProvider calls the IdenticalResourceMinimizer before the ComparisonScopeBuilder is even used to create the scope later down the road. Thus, there is no central point that we could change in order to retain the list of original resources in the scope.(On a side note, I stumbled across a potential source if problems: SynchronizationModel.getResources() is created lazily. If getResources() is called before the minimizer is applied to the SynchronizationModel, it'll contains the original set of resources also after the minimization. If it is called afterwards, it won't contain it. Sometimes getResources() it is called before the minimization step, such as in org.eclipse.emf.compare.ide.ui.internal.logical.EMFModelProvider.getOrComputeLogicalModel(IFile, ResourceMappingContext, IProgressMonitor), sometimes it isn't. So we cannot trust that the getResources() is minimal or not. I'll add a task for myself to open a separate BR on that.)So my best remaining idea so far: remove the comparison scope adapter introduced in this review again and instead introduce a postprocessor that checks if any .di file exists for the matched resources and if yes, mark the comparison as a PapyrusComparison.For marking the comparison as a Papyrus, the nicest way would be introducing a context field into the Comparison model. If we don't want to change the comparison model, we again could add an adapter to it in order to mark it. But that's not particularly clean :)What do you think about the above mentioned postprocessor approach? It is not super-efficient, as we theoretically had the information already that we obtain again in the postprocessor. But at least we only do it once for each comparison instead of checking it again and again in the different UI components."
9187,0,"Patch Set 7: -Code-ReviewHello Philip, thank you for your thorough analysis.I think it'd be nice if SynchronizationModel had a method providing the URIS of all the resources that are involved in its non-minimized form.Do you think it would solve the problem?"
9195,0,Change has been successfully merged into the git repository by Laurent Delaigue
9207,0,Change has been successfully merged into the git repository by Lucas Koehler
9210,0,Change has been successfully merged into the git repository by Lucas Koehler
9215,0,Change has been successfully merged into the git repository by Lucas Koehler
9218,0,Change has been successfully merged into the git repository by Lucas Koehler
9221,0,Change has been successfully merged into the git repository by Jad El-khoury
9228,0,Change has been successfully merged into the git repository by Marvin Mueller
9231,0,Change has been successfully merged into the git repository by Alexander Kurtakov
9235,0,Change has been successfully merged into the git repository by Lars Vogel
9237,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
9239,0,Change has been successfully merged into the git repository by Jan Sievers
9242,0,Change has been successfully merged into the git repository by Doug Schaefer
9247,0,Change has been successfully cherry-picked as c7800cc6484b9edea143bfaf6cbe6bc7f4b02a97 by Marc-Andre Laperle
9250,0,"Patch Set 3:> yeah, I was asking not for this patch but in general, thanks.sounds good!"
9253,0,"Patch Set 2:Matthew, does this look good to you as well?"
9255,1,"Patch Set 2:> lgtm. question, should this be it's own function to make sure we > don't forget a line when moving things around?It's pretty standard in SWT code to have one block of code for each [widget creation + setting it up]. We could extract those blocks in functions to reduce complexity but at the same time, I think we'd have to do that all the time otherwise it would be pretty inconsistent. I think maybe it's best to do that just for more complicated widgets like composites with many children, listeners, etc."
9256,0,"Patch Set 2:yeah, I was asking not for this patch but in general, thanks."
9257,0,Change has been successfully cherry-picked as c2120138bb9831150268cad77019f1e9f1959d52 by Matthew Khouzam
9261,0,Change has been successfully merged into the git repository by Shawn Pearce
9264,0,Change has been successfully merged into the git repository by Shawn Pearce
9271,0,Change has been successfully merged into the git repository by Shawn Pearce
9274,0,Change has been successfully merged into the git repository by Christian W. Damus
9278,0,Change has been successfully rebased as 80b6288c1b031c8e95e0b8f46548cab4c4cf45a7 by Christian W. Damus
9281,0,Change has been successfully merged into the git repository by Christian W. Damus
9285,0,Change has been successfully merged into the git repository by Lars Vogel
9293,0,Change has been successfully merged into the git repository by Christian W. Damus
9297,0,Change has been successfully merged into the git repository by Christian W. Damus
9301,0,Change has been successfully merged into the git repository by Christian W. Damus
9304,0,"Patch Set 3:@Alex, I think this patch is in good hands, right?"
9305,0,"Patch Set 3: Code-Review+2 Verified+1Looks good. From my own run of the benchmarks, the vertical scaling presents no problem. And the loading cache brought the most performance impact, this patch in itself has a negligible impact (given most of the nodes are in cache anyway), but it does make sense to synchronize only when needed."
9306,0,Change has been successfully cherry-picked as 4790127ede4326bc6aa2098291823ca62c22b0e5 by Alexandre Montplaisir
9308,0,Patch Set 1:This should be compared to the lru hashmap Loic proposed. It would be interesting to also see the performance gains for concurrent reads.
9312,0,Change has been successfully merged into the git repository by Eric Poirier
9318,0,Change has been successfully merged into the git repository by Shawn Pearce
9326,1,"Patch Set 2:> What would a test exercising this look like?I'm not sure. It might be a smart HTTP kind of transport with the client trying to fetch the commit of a tag while using only advertised validator policy, which isn't reasonable because you can't actually set up that kind of code.This mostly just helps us avoid a small bit of validation work if the client does ask for the commit of an annotated tag."
9327,0,Change has been successfully merged into the git repository by Shawn Pearce
9331,0,Change has been successfully pushed.
9333,0,"Patch Set 1: Code-Review+1Looks good, thanks a lot!"
9335,0,Change has been successfully cherry-picked as 67dcff3af18b97570f7ddf3b162fe2fea7f0c43d by Roland Grunberg
9339,0,Patch Set 2: Code-Review+2Thanks for fixing this!
9340,0,Change has been successfully merged into the git repository by Lars Vogel
9342,0,Change has been successfully merged into the git repository by Laurent Fasani
9356,0,Change has been successfully merged into the git repository by Lars Vogel
9361,0,Change has been successfully merged into the git repository by Maxime Porhel
9365,0,Change has been successfully rebased as 1955272c57020bcd4d1ee9eced957eae6f33746e by Patrick Tessier
9371,0,Change has been successfully rebased as 1ce953849ccd864985549ab07f4d0c29a75f020a by vincent lorenzo
9374,0,Change has been successfully merged into the git repository by Benoit Maggi
9381,0,Change has been successfully merged into the git repository by Uwe Stieber
9386,0,Change has been successfully pushed.
9389,0,Change has been successfully merged into the git repository by Jacques Bouthillier
9397,1,Patch Set 1:(3 comments)I left a few comments.I'll fix the build failure in another commit and then you can rebase on that.  The failure is unrelated to this change
9401,0,Change has been successfully merged into the git repository by Lorenzo Bettini
9402,0,"Patch Set 2:I am fine with this, any reason not to return emptylist instead of null?"
9405,0,Patch Set 2: Code-Review+1code looks fine to me.
9406,0,"Patch Set 2: Code-Review+2Ok, I read the code thouroughly and understand it. It appears to be very nice cleanup and decouples the data from the process, which is good."
9409,0,Patch Set 2:finally got the time to test it!
9411,0,Change has been successfully cherry-picked as d21209962bb402078b01481db075eec3411c320d by Genevieve Bastien
9418,0,Change has been successfully merged into the git repository by Johannes Faltermeier
9422,0,Change has been successfully rebased as e4d184d66cdb52a10b02ab26c2c2f578cd61c06d by Patrick Tessier
9425,0,Change has been successfully rebased as c2a95d4fb294a1b6f94674bd56b366ab2600d356 by Patrick Tessier
9436,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5507/ : UNSTABLE
9437,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5509/ : UNSTABLE
9439,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5510/ : UNSTABLE
9446,0,Patch Set 4: -Code-Review> I have only seen that string in MIConsoleStreamOutputs when starting > a core debugging sessionThat is what I was hoping for.  So this change should not impact other launches.
9451,0,Change has been successfully merged into the git repository by Elena Laskavaia
9453,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5480/ : UNSTABLE
9454,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5482/ : UNSTABLE
9455,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/738/ : UNSTABLE
9458,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/734/ : UNSTABLE
9463,0,Change has been successfully cherry-picked as 5ba1bcdde55ed088e944c924dd328da360ad595e by Andre Wegmueller
9466,0,Change has been successfully merged into the git repository by Jad El-khoury
9468,0,Patch Set 1: Code-Review+1Thank you Benoit for creating the icon so quickly!The icon in the welcome page has now a white circular background making the Papyrus IM logo more visible. Looks good to me!
9470,0,Change has been successfully merged into the git repository by Benoit Maggi
9473,0,Change has been successfully merged into the git repository by Matthias Sohn
9476,0,Change has been successfully merged into the git repository by Johannes Dorn
9480,0,Change has been successfully pushed.
9484,0,Change has been successfully rebased as 5889b18f6aefbade94a4731b567409cbd6d42f94 by florian noyrit
9489,0,Change has been successfully pushed.
9496,0,Change has been successfully pushed.
9498,0,Change has been successfully pushed.
9503,0,Change has been successfully pushed.
9507,0,Change has been successfully pushed.
9511,0,Change has been successfully pushed.
9517,0,Change has been successfully pushed.
9523,0,Change has been successfully pushed.
9526,0,Change has been successfully merged into the git repository by Jeremie Tatibouet
9529,0,Change has been successfully merged into the git repository by Jeremie Tatibouet
9532,0,Change has been successfully merged into the git repository by Jeremie Tatibouet
9536,0,Change has been successfully rebased as a48c48333e21d6fd32bf807d118c6b7631b86a83 by Patrick Tessier
9539,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
9548,0,Change has been successfully rebased as 6b6711c34070ac3d7cbb3917a3014fd4b6e529a6 by Patrick Tessier
9552,0,Change has been successfully rebased as 23e6ab2f7bc66dbbbd08dfc691e793eb1c7537bd by Patrick Tessier
9555,0,Change has been successfully cherry-picked as 48094cdfd63a77baac771853183598eb2f5f179a by Andi Bur
9557,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/750/ : UNSTABLE
9564,0,Change has been successfully merged into the git repository by Vikas Chandra
9573,0,Change has been successfully merged into the git repository by Stephane Begaudeau
9577,0,Change has been successfully merged into the git repository by Vikas Chandra
9578,0,Patch Set 5: Code-Review+2 Verified+1looks good
9583,0,Patch Set 4: Code-Review+2 Verified+1Looks good
9588,0,Change has been successfully merged into the git repository by Benoit Maggi
9591,0,Change has been successfully merged into the git repository by Lorenzo Bettini
9593,0,Change has been successfully merged into the git repository by Marvin Mueller
9597,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/725/ : UNSTABLE
9600,0,Change has been successfully cherry-picked as 7b2160be3924223d02e1703799b611580c84b7c3 by Andi Bur
9602,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/viatra/job/viatra-gerrit/640/ : UNSTABLE
9606,0,Change has been successfully merged into the git repository by Abel Hegedus
9608,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/viatra/job/viatra-gerrit/641/ : UNSTABLE
9612,0,Change has been successfully merged into the git repository by Manoj Palat
9617,0,Change has been successfully merged into the git repository by Patrik Suzzi
9621,0,Change has been successfully rebased as 885b21782145f16de67b570b658ca0d5763ccc9e by florian noyrit
9626,0,Change has been successfully merged into the git repository by Olivier Constant
9629,0,Change has been successfully merged into the git repository by Patrick Tessier
9632,0,Change has been successfully merged into the git repository by Alexander Kurtakov
9636,0,Change has been successfully rebased as 5187372b4cd835119cfef6918a47d8755d713e04 by Patrick Tessier
9643,0,"Patch Set 5:@Alex, do you find time to review this patch? Thanks!"
9652,0,"Patch Set 6:(3 comments)Looks good, could you please review the number of jobs? the other suggestions are optional."
9657,1,"Patch Set 8:Looks good to me, as a disclaimer: I haven't tried if it works :-)"
9658,0,"Patch Set 8:> Looks good to me, as a disclaimer: I haven't tried if it works :-)It works for me ;) Ok, I will fine someone to test it before I will merge it. Thanks for review."
9659,0,"Patch Set 8:@Dawid, please if you will have a moment try this patch with 1-2 larger projects to see if nothing breaks on OSX. Thanks :)"
9660,0,Change has been successfully merged into the git repository by Michal Niewrzal
9663,0,Change has been successfully cherry-picked as 731b68d19826d82bae3afb24b7465696317e2a03 by Andre Wegmueller
9667,0,Change has been successfully merged into the git repository by Marvin Mueller
9672,0,Change has been successfully rebased as 4f71bebe29b180e6f4510365ea52228ea1740fa0 by Benoit Maggi
9675,0,Change has been successfully merged into the git repository by Tristan Faure
9678,0,Change has been successfully merged into the git repository by Alexander Kurtakov
9681,0,Change has been successfully merged into the git repository by Alexander Kurtakov
9684,0,Change has been successfully merged into the git repository by Alexander Kurtakov
9687,0,Change has been successfully merged into the git repository by Manoj Palat
9691,0,Change has been successfully merged into the git repository by Alexander Kurtakov
9694,0,Change has been successfully cherry-picked as 59d8646cba264f6d02c6d755b34940ebe49a4b0e by Matthew Khouzam
9704,0,Change has been successfully cherry-picked as c2fdbfb805924130d5f0f393a6a0846d02f9a553 by Matthew Khouzam
9717,0,Change has been successfully merged into the git repository by Angel Avila
9723,0,Change has been successfully cherry-picked as dd502e25b9f51e4aa1b3e7e0dd8e565efd1a51ba by Bernd Hufmann
9731,0,Change has been successfully cherry-picked as aa5b9bd67fffa91f37d86d37f7b1d16acf108ade by Marc-Andre Laperle
9739,0,Change has been successfully merged into the git repository by Jeff Johnston
9746,0,Change has been successfully merged into the git repository by Roland Grunberg
9749,0,Change has been successfully merged into the git repository by Eric Williams
9756,0,Change has been successfully merged into the git repository by Katharine Hirsch
9758,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5501/ : UNSTABLE
9761,0,Change has been successfully rebased as cf39a8389707d19e60eb96054729bc3761cd60db by Doug Schaefer
9764,0,Change has been successfully merged into the git repository by Pascal Rapicault
9768,0,Change has been successfully rebased as e52031c676b9f9ef37cd795149b8ff6e5a088c31 by Marc Khouzam
9770,0,"Patch Set 1: Code-Review+1(1 comment)Apart from the small change, looks good."
9776,0,Change has been successfully rebased as dc769db3cc878c04fe298d079b621bdf49124352 by Marc Khouzam
9780,0,Change has been successfully rebased as 45b1ecd1c314089504e0900237fbfc479ce10cf6 by Marc Khouzam
9783,0,Patch Set 1:@Romancould you please do some additional testing with the several use cases of the NatCombo on editing and filtering? My tests are looking good and I don't get feedback from the originator. I would like to be sure this is not breaking any case before considering it delivered with the next release.
9784,0,"Patch Set 1: Code-Review+2 Verified+1I was able to reproduce the NPE in GlazedListsFilterExample simply by opening the filter combo on the Gender or Married column and then clicking somewhere else without selecting something int the combo. This patch successfully fixes the problem.Apart from that I tried a variety of other editor/filter configurations, but - so far - couldn't find a problem with the patch. I can't really test it in my current project, since most of the time we use custom editors/filters that do not make use of NatCombo."
9785,0,Change has been successfully merged into the git repository by Dirk Fauth
9791,0,Change has been successfully rebased as 783787af25ca014d0d0ad16d42c242f67cf19a86 by Marc Khouzam
9795,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5499/ : UNSTABLE
9797,0,Change has been successfully merged into the git repository by Doug Schaefer
9801,0,Change has been successfully merged into the git repository by Jacques Bouthillier
9804,0,Change has been successfully merged into the git repository by Katharine Hirsch
9807,0,Change has been successfully merged into the git repository by Katharine Hirsch
9812,0,Change has been successfully merged into the git repository by Guy Perron
9816,0,Change has been successfully merged into the git repository by Silenio Quarti
9819,0,Change has been successfully merged into the git repository by Silenio Quarti
9822,0,Change has been successfully merged into the git repository by Donald Dunne
9831,0,Change has been successfully merged into the git repository by Niraj Modi
9836,0,Change has been successfully merged into the git repository by Marc Khouzam
9839,0,Change has been successfully pushed.
9846,0,Change has been successfully merged into the git repository by Shawn Pearce
9850,0,Change has been successfully merged into the git repository by Shawn Pearce
9854,0,Change has been successfully merged into the git repository by Shawn Pearce
9859,0,Change has been successfully merged into the git repository by Shawn Pearce
9862,0,Change has been successfully merged into the git repository by Eric Poirier
9864,0,"Patch Set 2:(1 comment)Thanks so much, Martin.  We are so close!  Just one last quibble.  While that's in progress, I'll get the CQ started."
9867,0,Patch Set 2:(1 comment)That is great news! Thank you so much for your very fast feedback!
9873,0,Change has been successfully rebased as 0a4fa8933935a3160633e4122eb26a14a0c4aa35 by Christian W. Damus
9876,0,"Patch Set 1:(19 comments)This looks really great.  Clean code, well-thought abstractions in the API, thorough documentation and tests.  Thanks!  It's an excellent contribution.I do have comments, though, about some naming that I don't like (alas, fairly pervasive) and some other quibbles about the details."
9879,0,"Patch Set 1:(2 comments)Let's just set the version to since 1.2.1 and move forward.(Most of since are absent in extension point, or wasn't updated when renaming the plugin) @Martin: Thx for this great contribution"
9880,0,"Patch Set 1:(27 comments)Dear Christian and dear Benoit,Thank you for your kind words and your in-depth reviews. It is really nice to see such an interesting discussion about the different aspects. The code is now adapted according to your feedback. Specifically, I agree that the naming was not perfect before and could have led to confusion. I therefore changed the name to 'ProfileNamespaceURIPattern' as suggested by Christian and also changed some method names. Furthermore, I aligned the message format indices with the indices of the pattern groups and bumped the version to 1.2.1 in the extension point, manifest and pom file."
9884,0,Change has been successfully merged into the git repository by Pascal Rapicault
9890,0,Change has been successfully cherry-picked as 8fbdfac802c74077fc3fa8cc991328eb57e60bab by Francis Giraldeau
9892,0,"Patch Set 1: Code-Review+1I am fine with this, I think Francis should approve."
9897,0,Change has been successfully merged into the git repository by Eric Williams
9900,0,"Patch Set 1: Code-Review+2 Verified+1OK, looks good."
9901,0,Change has been successfully merged into the git repository by Olivier Constant
9906,0,Change has been successfully merged into the git repository by Daniel Tolgyesi
9909,0,Change has been successfully merged into the git repository by Benoit Maggi
9912,0,Change has been successfully merged into the git repository by Marvin Mueller
9919,0,Change has been successfully merged into the git repository by Patrick Tessier
9922,0,Change has been successfully merged into the git repository by Andreas Sewe
9933,0,Change has been successfully merged into the git repository by Patrick Tessier
9936,0,Change has been successfully merged into the git repository by Thomas Watson
9943,0,Change has been successfully merged into the git repository by Pierre-Charles David
9947,0,Change has been successfully merged into the git repository by Marvin Mueller
9953,0,Change has been successfully merged into the git repository by Benoit Maggi
9961,0,Change has been successfully merged into the git repository by Daniel Tolgyesi
9965,0,Change has been successfully merged into the git repository by Marvin Mueller
9976,0,Change has been successfully merged into the git repository by Marvin Mueller
9980,0,Change has been successfully merged into the git repository by Olivier Constant
9983,0,Change has been successfully pushed.
9987,0,Change has been successfully merged into the git repository by Lorenzo Bettini
9989,0,"Patch Set 1: Code-Review+1I works for me, my steps - commit a first model  - modify (remove a class) - save the file  - launch the diff=> no rendering problems@Philip: I think that is would be for the best if you also review this one."
9990,0,"Patch Set 1: Code-Review+1I've now tested it and it works well, thanks!"
9993,0,Change has been successfully rebased as 2a5b752ebd903f42988313d4be4b6ec82190bb63 by Benoit Maggi
9996,0,Change has been successfully merged into the git repository by Alexander Kurtakov
10000,0,Change has been successfully merged into the git repository by Andreas Sewe
10004,0,Change has been successfully merged into the git repository by Andreas Sewe
10008,0,Change has been successfully merged into the git repository by Andreas Sewe
10010,0,Change has been successfully pushed.
10016,0,Change has been successfully rebased as b647a9f71eab6d95bcd31b28d3e378f13e466a13 by Patrick Tessier
10022,0,Change has been successfully rebased as a010efde21904aadf40fa978170554d671049486 by Patrick Tessier
10027,0,Change has been successfully rebased as 811f71e2d32e3b4b1bdbf952600d1dedb6678112 by Patrick Tessier
10033,0,Change has been successfully merged into the git repository by florian noyrit
10039,0,Change has been successfully merged into the git repository by Michal Niewrzal
10042,0,Change has been successfully merged into the git repository by Mickael Istria
10045,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
10047,0,Change has been successfully merged into the git repository by Jan Sievers
10051,0,Change has been successfully cherry-picked as bf6df31c81ce961f12fc9272580be7c5f2fabf41 by Judith Gull
10054,0,Change has been successfully merged into the git repository by Benoit Maggi
10057,0,Change has been successfully merged into the git repository by Benoit Maggi
10060,0,Change has been successfully merged into the git repository by Matthias Sohn
10065,0,Change has been successfully merged into the git repository by Matthias Sohn
10068,0,Change has been successfully merged into the git repository by Michal Niewrzal
10071,0,Change has been successfully merged into the git repository by Jad El-khoury
10074,0,Change has been successfully merged into the git repository by Doug Schaefer
10077,0,Change has been successfully merged into the git repository by Doug Schaefer
10080,0,Change has been successfully merged into the git repository by Pascal Rapicault
10083,0,Change has been successfully merged into the git repository by Pascal Rapicault
10086,0,Change has been successfully merged into the git repository by Thierry BLIND
10088,0,Change has been successfully pushed.
10091,0,Change has been successfully merged into the git repository by Shuai Li
10094,0,Change has been successfully merged into the git repository by Alexander Kurtakov
10097,0,Change has been successfully merged into the git repository by Lars Vogel
10101,0,Change has been successfully merged into the git repository by Ansgar Radermacher
10108,0,Change has been successfully rebased as 6d9a31605c224e36e9e9240ddeab7344a4c9ebd3 by Bartlomiej Laczkowski
10114,0,Change has been successfully cherry-picked as ff6fca9e250926583f72b00344bac921b48e68b3 by Alexander Kurtakov
10118,0,Change has been successfully merged into the git repository by vincent lorenzo
10121,0,Change has been successfully merged into the git repository by vincent lorenzo
10125,0,Change has been successfully merged into the git repository by Alexander Kurtakov
10128,0,Change has been successfully merged into the git repository by vincent lorenzo
10137,0,Change has been successfully rebased as 1b59801d998020b11758b2a2e520173549bb5e94 by vincent lorenzo
10142,0,Change has been successfully merged into the git repository by vincent lorenzo
10149,0,Change has been successfully merged into the git repository by Marvin Mueller
10152,0,Change has been successfully merged into the git repository by Doug Schaefer
10155,0,Change has been successfully merged into the git repository by Doug Schaefer
10157,0,Change has been successfully merged into the git repository by Lars Vogel
10158,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9606/ : UNSTABLE
10163,0,Change has been successfully merged into the git repository by Matthias Sohn
10167,0,Change has been successfully merged into the git repository by Matthias Sohn
10169,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/863/ : UNSTABLE
10171,0,Change has been successfully merged into the git repository by Matthias Sohn
10176,0,Change has been successfully merged into the git repository by Pascal Rapicault
10180,0,Change has been successfully rebased as 0bd96c77efa3d6b5ebbad2d161ca02fe467f8969 by Doug Schaefer
10183,0,Change has been successfully merged into the git repository by Lars Vogel
10186,0,"Patch Set 1:Bernd, do you want to submit this? Bruno has a patch with the same change (and other stuff) so it would be nice to merge yours first so that he can rebase."
10187,0,Change has been successfully cherry-picked as 65635cc8647a9385dbfb38c8fca8ecb0fe3302be by Bernd Hufmann
10190,0,Change has been successfully merged into the git repository by Silenio Quarti
10193,0,Change has been successfully merged into the git repository by Till Brychcy
10196,0,Change has been successfully merged into the git repository by Lars Vogel
10199,0,Change has been successfully merged into the git repository by Lars Vogel
10202,0,Change has been successfully merged into the git repository by Lars Vogel
10206,0,Change has been successfully merged into the git repository by Silenio Quarti
10208,0,Change has been successfully merged into the git repository by Silenio Quarti
10215,0,Change has been successfully merged into the git repository by Ernesto Posse
10219,0,Change has been successfully merged into the git repository by Silenio Quarti
10225,0,Change has been successfully merged into the git repository by Manoj Palat
10229,0,Change has been successfully merged into the git repository by Ernesto Posse
10231,1,"Patch Set 1:Thomas, can I trouble you with a review? Dani, agrees with the change, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=490752#c4"
10232,1,"Patch Set 1:> Thomas, can I trouble you with a review? Dani, agrees with the > change, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=490752#c4I'm probably the wrong person to decide if this should be removed or not.  I'm not against removing it, but I don't think the menu is out of place."
10237,0,Change has been successfully merged into the git repository by Stefan Xenos
10240,0,Change has been successfully merged into the git repository by Alexander Kurtakov
10250,0,Change has been successfully merged into the git repository by Thomas Watson
10253,0,Change has been successfully merged into the git repository by Eric Poirier
10257,0,Change has been successfully merged into the git repository by Eric Poirier
10262,0,"Patch Set 12: Code-Review+2 Verified+1Error on website build is not related to patch. I will merge to add a first IDL support to designer. If there are problems, we can still correct these later."
10263,0,Change has been successfully merged into the git repository by Ansgar Radermacher
10275,0,Change has been successfully merged into the git repository by Thomas Watson
10278,0,Patch Set 3: Code-Review+1Folders/Files structure seems good to me.
10280,0,Change has been successfully merged into the git repository by Benoit Maggi
10284,0,Change has been successfully merged into the git repository by Lars Vogel
10291,0,Change has been successfully rebased as 5183998984a4621c647fe072ba0a455f26203ab8 by Eugen Neufeld
10293,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2912/ : UNSTABLE
10299,0,Change has been successfully rebased as c05caa4e9d6e549b92e5f5a287d547a7190001a1 by Thierry BLIND
10307,0,Change has been successfully cherry-picked as 721081d8af4c7756adc0e0750141efc3d0555d17 by Roland Grunberg
10311,0,Change has been successfully merged into the git repository by Sebastian Struckmann
10314,0,Change has been successfully merged into the git repository by Ralph Mueller
10317,0,Change has been successfully merged into the git repository by Benoit Maggi
10325,0,Change has been successfully merged into the git repository by Marvin Mueller
10327,0,Change has been successfully merged into the git repository by Eric Poirier
10337,0,Change has been successfully merged into the git repository by Eric Poirier
10340,0,Change has been successfully merged into the git repository by Eric Poirier
10343,0,Change has been successfully merged into the git repository by Eric Poirier
10346,0,Change has been successfully merged into the git repository by Benoit Maggi
10349,0,Change has been successfully merged into the git repository by Ralph Mueller
10354,0,Change has been successfully merged into the git repository by Szymon Ptaszkiewicz
10357,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
10362,0,Change has been successfully rebased as d0d5b70b3eaf21ff0d8f1da8b88aa09ea69333de by Shuai Li
10367,0,Patch Set 1: Code-Review+2ok for me. thanks
10368,0,Change has been successfully merged into the git repository by Mickael ADAM
10369,1,Patch Set 1:Please do not push patch without an associated bug.
10371,0,"Patch Set 2:Mickael, can we merge this? I would love to use that feature in my daily work."
10377,0,Change has been successfully merged into the git repository by Mickael Istria
10383,0,Change has been successfully rebased as 80d73785c48beb9dfc093c289f911e742defa143 by Benoit Maggi
10390,0,Change has been successfully pushed.
10397,0,Change has been successfully pushed.
10411,0,Change has been successfully pushed.
10417,0,Change has been successfully pushed.
10422,0,Change has been successfully pushed.
10429,0,Change has been successfully pushed.
10441,0,Change has been successfully pushed.
10454,0,Change has been successfully pushed.
10460,1,Patch Set 3: Code-Review+2Patch set 3 only:* remove System.out* a check not linked to these tests and that is dependent of the OS font.
10462,0,Change has been successfully pushed.
10473,0,Change has been successfully pushed.
10478,0,Change has been successfully cherry-picked as 21ac01dde46826e682fb92449bb2095fa7974bde by Andre Wegmueller
10480,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/699/ : UNSTABLE
10482,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/698/ : UNSTABLE
10486,0,Change has been successfully cherry-picked as 9a3f0ed799d586c4f6c784929b4fac53539421a2 by Marc-Andre Laperle
10491,0,Change has been successfully cherry-picked as efcee3247f1178c118ccee302a087c213a2a1381 by Marc-Andre Laperle
10498,0,Change has been successfully cherry-picked as 5d548ffbcdedb6f5d00b6a4be4e615e2ff29886f by Marc-Andre Laperle
10502,0,Change has been successfully merged into the git repository by Alexander Kurtakov
10510,0,Change has been successfully merged into the git repository by Pascal Rapicault
10513,0,Change has been successfully merged into the git repository by Pascal Rapicault
10517,0,Change has been successfully merged into the git repository by Lars Vogel
10523,0,Change has been successfully rebased as 47ac45578e2fae922bc7244adcac6e2605675917 by Michal Niewrzal
10526,0,Change has been successfully merged into the git repository by Pascal Rapicault
10532,0,Change has been successfully merged into the git repository by Silenio Quarti
10540,0,Change has been successfully cherry-picked as 58bc31eb08e7fb5850ad340c15231822e467d576 by Matthew Khouzam
10546,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2926/ : UNSTABLE
10549,0,Change has been successfully merged into the git repository by Eugen Neufeld
10552,0,Change has been successfully merged into the git repository by Wayne Beaton
10556,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1396/ : UNSTABLE
10560,0,Change has been successfully rebased as 7b6c8404b6eaa24858337cf04ba4d05aa0f4cb3b by Frank Becker
10562,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1349/ : UNSTABLE
10566,0,Patch Set 1: Code-Review+2looks harmless
10573,0,Change has been successfully cherry-picked as 153b25ecf1690061a20696d3cf70ceadd60c60da by Marc-Andre Laperle
10576,0,Change has been successfully merged into the git repository by Doug Schaefer
10582,0,Change has been successfully cherry-picked as 9c034805627963965663b927d0e7c3569b235b98 by Matthew Khouzam
10584,0,Patch Set 1: Code-Review+2This pleases me.
10587,0,Change has been successfully cherry-picked as d66dc2321e7787c5b8e664541c0553ac5b9bd68b by Matthew Khouzam
10593,0,Change has been successfully merged into the git repository by Matthias Sohn
10602,0,Change has been successfully merged into the git repository by Eugen Neufeld
10615,0,Change has been successfully merged into the git repository by Thomas Watson
10619,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2927/ : UNSTABLE
10622,0,Change has been successfully rebased as 52faf81dc4e515a11192669016cbc4fe74eb30cf by Eugen Neufeld
10625,0,Change has been successfully merged into the git repository by Tristan Faure
10628,0,Change has been successfully merged into the git repository by Tristan Faure
10631,0,Change has been successfully merged into the git repository by Tristan Faure
10633,0,Change has been successfully merged into the git repository by Silenio Quarti
10638,0,Change has been successfully merged into the git repository by Tristan Faure
10644,0,Change has been successfully merged into the git repository by Camille Letavernier
10647,0,Change has been successfully merged into the git repository by Ansgar Radermacher
10650,0,Change has been successfully merged into the git repository by Markus Knauer
10653,0,Change has been successfully merged into the git repository by Michael Wenz
10656,0,Change has been successfully merged into the git repository by Matthias Sohn
10660,0,Change has been successfully merged into the git repository by Markus Knauer
10663,0,Change has been successfully merged into the git repository by Andreas Sewe
10671,0,Change has been successfully merged into the git repository by Eugen Neufeld
10675,0,Change has been successfully merged into the git repository by Sergey Prigogin
10679,0,Change has been successfully cherry-picked as a59a4c93cf2eae743bfee43035ceaba28c331898 by Jeff Johnston
10682,0,Change has been successfully cherry-picked as 3bf3b9952f952318ccd13d5ae48e7430c4756b24 by Matthew Khouzam
10686,0,Change has been successfully merged into the git repository by David Williams
10689,0,Change has been successfully merged into the git repository by David Williams
10692,0,Change has been successfully merged into the git repository by Donald Dunne
10710,0,Change has been successfully merged into the git repository by Doug Schaefer
10713,0,Change has been successfully cherry-picked as 6dd4c6e1fc4060e026e88a1b1c74292f1553f036 by Jeff Johnston
10716,0,Change has been successfully merged into the git repository by Jeff Johnston
10719,0,Change has been successfully merged into the git repository by Ernesto Posse
10735,0,Change has been successfully merged into the git repository by Donald Dunne
10738,0,Change has been successfully merged into the git repository by Lars Vogel
10741,0,Change has been successfully merged into the git repository by Lars Vogel
10757,0,Change has been successfully merged into the git repository by Donald Dunne
10760,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1363/ : UNSTABLE
10765,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1380/ : UNSTABLE
10768,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1381/ : UNSTABLE
10774,0,Change has been successfully rebased as 06987bc26647b3a2f7d0af591325daeb75acf4b9 by Sam Davis
10776,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1354/ : UNSTABLE
10781,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1360/ : UNSTABLE
10785,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1362/ : UNSTABLE
10788,0,Change has been successfully cherry-picked as 4d86c7a081b74595b925ffa64c9578e36b0f7374 by Jeff Johnston
10792,0,Change has been successfully merged into the git repository by Stephan Herrmann
10795,0,Change has been successfully cherry-picked as bd824de90728c1e2677064a8f48fd34a9ee1f11d by Patrick Tasse
10805,0,Change has been successfully cherry-picked as 86565890dc30ee6b8af3005354c59eaac1d68377 by Jean-Christian Kouame
10810,0,Change has been successfully cherry-picked as 731df40b1684821cbf9af0c3541135d3d3b2afa5 by Alexandre Montplaisir
10813,0,Change has been successfully merged into the git repository by Donald Dunne
10816,0,Change has been successfully merged into the git repository by Christian W. Damus
10823,0,Change has been successfully merged into the git repository by Donald Dunne
10827,0,Change has been successfully merged into the git repository by Fred Bricon
10836,0,Change has been successfully cherry-picked as 24c0b35e7948e3806be992366057b9203743bffe by Jean-Christian Kouame
10843,0,Change has been successfully cherry-picked as 9b6f1f64406d034fe630f7dab86b26f3f51cc219 by Matthew Khouzam
10845,0,Change has been successfully merged into the git repository by Donald Dunne
10852,0,"Patch Set 4: Code-Review+2 Verified+1Yeah, instanceof could be fixed at the same time as the other fields in that state provider.Thanks for the reviews guys!"
10856,1,"Patch Set 2:(10 comments)It looks good, I had done the similar work in my patch about using has_debug_link/has_build_id.  It should be able to rebase without too much difficulty."
10857,0,"Patch Set 2:I am ok with this if you do what Simon says, but for later, in master, I think UstDebugInfoBinaryAspect should be  UstDebugInfoBinaryAspect and UstDebugInfoPicBinaryAspect... Most of the time we have two code branches for fIsPIC and one for !fIsPIC"
10867,0,Change has been successfully cherry-picked as d89151ba34c29c9667679d7c5b70ee8bd2796b61 by Alexandre Montplaisir
10881,0,Change has been successfully cherry-picked as 7b3400bd1c99cfd700b342a3563bd04ce6d5156e by Patrick Tasse
10884,0,Patch Set 1: Code-Review-1media-wiki is not there!
10885,0,Patch Set 1: Code-Review+1It turns out the user guide was already updated! some merge conflict that flew under the radar (just what we like hearing the day before RC4)
10886,0,Patch Set 1: Code-Review+2 Verified+1Good catch!
10887,0,Change has been successfully cherry-picked as 9538c3d93007e45756780e720abfcc7e45256959 by Matthew Khouzam
10890,0,Change has been successfully cherry-picked as 681b7e6056a129a68e7ca6fe02718a22f03274b0 by Bernd Hufmann
10895,0,Change has been successfully cherry-picked as d709c08bba48b93bc58aec4088d03ad9c7f640ef by Alexandre Montplaisir
10899,0,Change has been successfully cherry-picked as 8a53e9d4fa56059fa14252fdfea12b2714472790 by Alexandre Montplaisir
10902,0,Change has been successfully merged into the git repository by Lars Vogel
10905,0,Change has been successfully merged into the git repository by Lars Vogel
10908,0,Change has been successfully merged into the git repository by Markus Knauer
10913,0,Change has been successfully merged into the git repository by Donald Dunne
10918,0,Change has been successfully merged into the git repository by Jeremie Tatibouet
10923,0,Change has been successfully rebased as 7b0d10e5107ae5a8235b0cebccd9fb880fc5883c by Marc Khouzam
10927,0,Change has been successfully cherry-picked as 9cd9a13cbdd7be319969d6c3811d1fed66a15d19 by Marc-Andre Laperle
10935,0,Patch Set 1: Code-Review+2nice catch!
10936,1,"Patch Set 4:Oops, I thought this was from a committer, sorry all."
10939,0,Change has been successfully cherry-picked as 71788f49dd609663183108ba616eb6e0cdfe94ce by Matthew Khouzam
10941,1,"Patch Set 2:JC, I'm submitting _YOUR_ patch. The power is overwhelming."
10942,0,Change has been successfully cherry-picked as 8d630e0e4fde6c8e2d303e5f28f3482833dec39c by Matthew Khouzam
10950,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1376/ : UNSTABLE
10952,0,Change has been successfully merged into the git repository by Jaxsun McCarthy Huggan
10956,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1369/ : UNSTABLE
10959,0,Change has been successfully merged into the git repository by Andreas Sewe
10962,0,Change has been successfully cherry-picked as 0304c4400e45ccad152f3eea62bdca967ab67642 by Patrick Tasse
10965,0,Change has been successfully cherry-picked as 85e2856dd394a2dde2fb09b6c1c1570b34c58b19 by Judith Gull
10967,0,Change has been successfully merged into the git repository by Silenio Quarti
10975,0,Change has been successfully merged into the git repository by Silenio Quarti
10978,0,Change has been successfully merged into the git repository by Matthias Sohn
10980,1,"Patch Set 1:Positing a fix for the current broken Gerrit build in the Codegen component:  the target platform includes the 'nightly' repository, which is so out-of-date as to still require the CPP Profile from the days before the Papyrus Designer repository."
10983,0,Change has been successfully merged into the git repository by Christian W. Damus
10988,0,Change has been successfully merged into the git repository by Matthias Sohn
10991,0,Change has been successfully merged into the git repository by Katharine Hirsch
10995,0,Change has been successfully cherry-picked as 9abbb7c1ad670feaa3fd2229948672051eaf8ef2 by Patrick Tasse
10998,0,Change has been successfully merged into the git repository by Francois Aissaoui
11001,0,Change has been successfully merged into the git repository by Markus Knauer
11004,0,Change has been successfully merged into the git repository by Katharine Hirsch
11011,0,Change has been successfully pushed.
11014,0,Change has been successfully merged into the git repository by Markus Knauer
11017,0,Change has been successfully cherry-picked as 6974d7b6459e3b0905081f05e5ed478f30874d01 by Patrick Tasse
11022,0,Change has been successfully cherry-picked as b181e542108373930d5e41c72e5d42b78cc14be7 by Patrick Tasse
11027,0,Change has been successfully merged into the git repository by Laurent Goubet
11030,0,Change has been successfully merged into the git repository by Arthur van Dorp
11033,0,Change has been successfully merged into the git repository by Markus Knauer
11037,0,Change has been successfully merged into the git repository by Markus Knauer
11041,0,Change has been successfully merged into the git repository by Martin Oberhuber
11044,0,Change has been successfully merged into the git repository by Matthias Sohn
11047,0,Change has been successfully merged into the git repository by Doug Schaefer
11051,0,Change has been successfully rebased as ed2a5b1926d74ca92c4530f5acbbfbe1e6583b22 by Camille Letavernier
11053,1,Patch Set 1: Code-Review+1==Code Review==ok for me==Regression tests==test verified: - oep.diagram.sequence.tests.bug.m7.TestTooltip_402964.testSynchronousMessage - oep.diagram.sequence.tests.bug.pro20130916.MessageStereotypesTest.testSynchronousMessagewithout fix : Failedwith fix    : Passed => ok for me
11057,0,"Patch Set 1:Looks like a good candidate for a test rule, because it's something that needs to happen before and after each test."
11058,1,"Patch Set 1:> Looks like a good candidate for a test rule, because it's something that needs to happen before and after each test.Probably, but actually, I wonder how these tests would behave if we had an expansion model contributed via an extension point. This currently happens only in extra/non-Papyrus plug-ins I think, so we don't have this scenario in our test suite. But this could definitely happen, and I'd expect this to cause a lot of chaos"
11059,0,Change has been successfully merged into the git repository by Camille Letavernier
11062,0,Change has been successfully merged into the git repository by Matthias Sohn
11065,0,Change has been successfully merged into the git repository by Johannes Faltermeier
11068,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
11071,0,Change has been successfully merged into the git repository by Matthias Sohn
11077,0,Change has been successfully merged into the git repository by Ryan Brooks
11079,0,Change has been successfully merged into the git repository by Laurent Delaigue
11086,0,Change has been successfully merged into the git repository by Ryan Brooks
11093,0,Change has been successfully pushed.
11103,0,Change has been successfully cherry-picked as 6d2b7ea14885bec35dd23f48a6427132b25a5071 by Matthias Villiger
11105,0,Change has been successfully merged into the git repository by Ryan Brooks
11120,1,"Patch Set 7: Code-Review-1(2 comments)A tiny tiny detail + need to update a test suite probably, don't you? Sorry for not noticing that earlier..."
11121,0,"Patch Set 7:(2 comments)Ah yes, thank you very much for your very fast review!"
11126,0,Change has been successfully merged into the git repository by Laurent Delaigue
11127,0,"Patch Set 4: Code-Review-1(8 comments)Nice work!I only mentioned some minor style nitpicks inline. Thanks!After you addressed those, I'll +2 this change."
11128,1,"Patch Set 4:(1 comment)Sorry, forgot saving one remark."
11129,0,Patch Set 4:(9 comments)Thank you for your detailed review!
11130,1,"Patch Set 6: Code-Review-1(2 comments)I'm not sure the fiw really takes the best solution.Plus, I think this is the perfect case to start using the new testing framework so that we make sure the 2 conflict detectors behave the same here!"
11131,0,"Patch Set 6:(2 comments)Hi Laurent,Thanks for your in-depth review! I made the changes you suggested and agree that they yield more consistent results."
11138,0,Change has been successfully rebased as 309e20bb9e69b1e9e456a1876c37577966986eeb by Camille Letavernier
11143,0,Change has been successfully cherry-picked as 2239b3fdf37e1644cef0f81b6199e8b5d894242d by Matthias Villiger
11146,0,Change has been successfully merged into the git repository by Michael Wenz
11149,0,Change has been successfully cherry-picked as 9ba8530885db6dc894467fb2dfddb376c5004daf by Matthias Villiger
11153,0,Change has been successfully rebased as 0dcb217612414132683352e0f4302c0edffb7c88 by Camille Letavernier
11156,0,Change has been successfully merged into the git repository by Michael Wenz
11159,0,Change has been successfully cherry-picked as 825e916a5cd3cdfe8e3c4a8ffb7d6bc79fb60d41 by Matthias Villiger
11168,0,Change has been successfully rebased as 060c40f5970250c5f7482ccd8da0d08b89985186 by Camille Letavernier
11170,0,Change has been successfully pushed.
11173,0,Change has been successfully merged into the git repository by Eugen Neufeld
11176,0,Change has been successfully merged into the git repository by Eugen Neufeld
11184,0,Change has been successfully merged into the git repository by Ryan Brooks
11192,0,Change has been successfully merged into the git repository by Matthias Sohn
11195,0,Change has been successfully merged into the git repository by Sean Muir
11199,0,Change has been successfully merged into the git repository by Niraj Modi
11200,1,Patch Set 10: Code-Review+2 Verified+1A good start to add more critical path swtbot tests! Thank you!
11201,0,Change has been successfully cherry-picked as f9159c02fd805877e1194b211b0a823039b7d816 by Matthew Khouzam
11207,1,"Patch Set 5: Code-Review+2 Verified+1I'll open a separate bug for the Critical Path view bug. The test alone works correctly.To be sure it had no other issue, I hacked it so that it always follows the first entry first then the other one that was already tested. That way the selection always changes."
11218,1,"Patch Set 4:To be clear, this is a bug with the code being tested, not the code in this patch, right?"
11219,1,"Patch Set 4: -Verified> To be clear, this is a bug with the code being tested, not the code > in this patch, right?Yes, so I think we should go forward with this."
11222,1,"Patch Set 7:(2 comments)Nice, I hadn't seen this one for critical path view. Maybe the bugs fixed for neon can be added to this case.Some comments here, I'll let others appreciate your change in the time graph combo, but for the critical path, it looks almost good to me."
11236,0,Change has been successfully merged into the git repository by Silenio Quarti
11237,0,"Patch Set 3:> Looks good :) in future we should change at least label from > ""Class"" to ""Type"". We can also think about dividing into > class/interface/trait with separate highlighting but let's leave > more advanced refactoring for neon.1. You can create bugzilla issue > to not forgot about this :)Ok I'll do it ! Thank you for the review ;)"
11239,0,"Patch Set 2:Michal, if it's ok for you, I would like to merge this patch today, to package it for RC3 ;)I think we could rework ClassHighlighting later to split it (for example) as ClassHighlighting, TraitHighlighting and InterfaceHighlighting (maybe even AbstractClassHighlighting), so we could use different highlighting colors (like java highlighters do for classes and interfaces). What do you think about this idea?"
11241,0,"Patch Set 2: Code-Review+2 Verified+1Looks good :) in future we should change at least label from ""Class"" to ""Type"". We can also think about dividing into class/interface/trait with separate highlighting but let's leave more advanced refactoring for neon.1. You can create bugzilla issue to not forgot about this :)"
11244,0,Change has been successfully rebased as 6d9b7bceb68648036581ac536d4012ca5506b705 by Dawid Pakula
11250,0,Change has been successfully merged into the git repository by Donald Dunne
11258,0,Change has been successfully rebased as af76fd75124a10803f2cbd4d8282212da34af6b4 by Celine Janssens
11261,0,"Patch Set 2:Yeah, I noticed that haha. I'm working on it.> Good catch! How did you find this one, static analysis?Yes, it was found it SonarQube."
11263,0,"Patch Set 1: Code-Review+1 Verified+1Welcome to gerrit Gabriel!This indeed works. I added Alex to this review just so he checks that this font height, that now works, is really the intended size. Having a smaller error label reduces the size of the dialog..."
11265,0,Patch Set 1:Great catch!
11266,1,"Patch Set 1: Code-Review-1Good catch! How did you find this one, static analysis?However, tbqh, I think it is too small now. I preferred the default size. What do you think?If you'd like you could keep the same explanation of this patch, but just remove the fd.setHeight() line instead."
11268,0,"Patch Set 3: Code-Review+2Looks good, thanks!"
11271,0,Change has been successfully cherry-picked as b08f668427e7061cb55fe4b9eb712aa89832520d by Genevieve Bastien
11275,0,Change has been successfully merged into the git repository by Alois Zoitl
11278,0,Change has been successfully merged into the git repository by Alois Zoitl
11281,0,Change has been successfully merged into the git repository by Sebastian Struckmann
11287,0,"Patch Set 1:(1 comment)Looks good to me, modulo a null check."
11291,0,Patch Set 2: Code-Review+1This works fine in Linux (Ubuntu 16.04)and in Windows 10
11293,0,Change has been successfully merged into the git repository by Brian de Alwis
11296,0,Change has been successfully merged into the git repository by Eike Stepper
11301,0,Change has been successfully rebased as e5df5a83d297170df2e2367a9b9a857472bd1cd5 by Jeremie Tatibouet
11306,0,Change has been successfully rebased as 5178c30ca16a62a112adf22551a5ef2bea09869d by Jeremie Tatibouet
11310,0,Change has been successfully merged into the git repository by Jeremie Tatibouet
11314,0,Change has been successfully merged into the git repository by Jeremie Tatibouet
11317,0,Change has been successfully merged into the git repository by Christian Pontesegger
11320,0,Change has been successfully merged into the git repository by Christian Pontesegger
11323,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8664/ : UNSTABLE
11326,0,Change has been successfully merged into the git repository by Matthias Sohn
11329,0,Change has been successfully merged into the git repository by Christian Pontesegger
11334,0,"Patch Set 11:Good news, things seem better on the codegen side! Waiting for feedback on the tooling area (which should not be impacted)"
11337,0,Change has been successfully rebased as 9f761e2bcd91e2ecbdcb2de1f3c89e364cf2121f by Remi Schnekenburger
11341,1,"Patch Set 4:(2 comments)Hello, The pom hierachy is not respected, that is why the CODEGEN job fails. All the core bundles should be added into the plugins/umlrt/core/pom.xml as child module. The releng/core/pom.xml will be in charge of builing plugins/umlrt/core/pom.xmlIf you have other question related to the new pom hierarchy please let me know, I could maybe help."
11344,0,"Patch Set 7:What is the status of this Gerrit change? I am trying to verify https://bugs.eclipse.org/bugs/show_bug.cgi?id=476984 and https://bugs.eclipse.org/bugs/show_bug.cgi?id=479635 but I cannot get the C++ primitive types to show in the popup menu (as it did when testing the fixes for those Bugzillas in my development environment). When looking a bit closer, the problem seem to be that the C++ plugin is not installed, which I see seem to be fixed in this Gerrit change, i.e. the C++ feature has now been updated to reference the correct plugin. So it would be good if this one could be merged if possible, so that I can continue testing those two Bugzillas."
11347,0,"Patch Set 10: Code-Review+1Thanks, R├®mi!"
11348,1,Patch Set 9:The org.eclipse.papyrusrt.umlrt.cpp.tests project needs to be moved to    /tests/umlrt/cpp/org.eclipse.papyrusrt.umlrt.cpp.tests/it is currently at    /tests/umlrt/core/org.eclipse.papyrusrt.umlrt.core.cpp.tests/(wrong component and wrong folder name)Why is the CreateConnectorTests class being deleted?  It has many more test cases than CreateConnectorTest.
11356,0,Change has been successfully merged into the git repository by Marc Khouzam
11359,0,Change has been successfully merged into the git repository by Markus Knauer
11363,0,Change has been successfully rebased as b15c127800fdcbeb5820617a28f5268a4a816c58 by Johannes Faltermeier
11367,0,Change has been successfully merged into the git repository by Manoj Palat
11370,0,Change has been successfully merged into the git repository by Lorenzo Bettini
11373,0,Change has been successfully merged into the git repository by Johannes Faltermeier
11374,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/emfstore/job/gerrit/294/ : UNSTABLE
11377,0,Change has been successfully merged into the git repository by Eugen Neufeld
11380,0,Change has been successfully merged into the git repository by Eugen Neufeld
11383,0,Change has been successfully merged into the git repository by Eugen Neufeld
11386,0,"Patch Set 3: Code-Review+1Its good to have this much documentation, but not sure most users would see it! (If I understand it correctly). Seems it deserves to be in the actual user docs also?"
11393,0,Change has been successfully merged into the git repository by Thomas Watson
11398,0,Change has been successfully cherry-picked as 02bbb95416a1b894a15785479909ff2c7b3cdaa7 by Patrick Tasse
11401,0,Change has been successfully merged into the git repository by Matthias Sohn
11404,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8641/ : UNSTABLE
11408,0,Change has been successfully cherry-picked as bc1de5354db836c3e1e1d0ff6938b29996333c78 by Bernd Hufmann
11410,0,Change has been successfully merged into the git repository by Christian W. Damus
11416,0,Change has been successfully merged into the git repository by Lorenzo Bettini
11419,0,Change has been successfully merged into the git repository by Lorenzo Bettini
11423,0,Change has been successfully merged into the git repository by Johannes Faltermeier
11426,0,Change has been successfully merged into the git repository by Manoj Palat
11432,0,Change has been successfully merged into the git repository by Andreas Sewe
11435,1,"Patch Set 2:My previous patch for bug 495022 was valid, but i wanted to rework it a little bit : what we really want is to retrieve character before cursor, so do it consistently ;)"
11438,0,Change has been successfully rebased as 27f72c825559a7e4a63b64a1248a66bf910c3a0b by Thierry BLIND
11444,0,Change has been successfully merged into the git repository by Kaloyan Raev
11449,0,Change has been successfully merged into the git repository by Benoit Maggi
11456,0,Change has been successfully merged into the git repository by Jeremie Tatibouet
11460,0,Change has been successfully rebased as 351cb12a72bfc69260111399f2b4ac16e6482b99 by Camille Letavernier
11463,0,Change has been successfully merged into the git repository by Jeremie Tatibouet
11467,0,Change has been successfully merged into the git repository by Andreas Sewe
11471,0,Change has been successfully merged into the git repository by Markus Knauer
11475,0,Change has been successfully merged into the git repository by Lorenzo Bettini
11480,0,Change has been successfully merged into the git repository by Lorenzo Bettini
11484,0,Change has been successfully merged into the git repository by Lorenzo Bettini
11487,0,Change has been successfully merged into the git repository by Lorenzo Bettini
11490,0,Change has been successfully merged into the git repository by Markus Keller
11493,0,Change has been successfully merged into the git repository by Uwe Stieber
11498,1,Patch Set 2: Code-Review+1I've built locally and verified that the Migration feature (and source feature) are now properly integrated to the P2 Repository
11502,0,Change has been successfully merged into the git repository by Remi Schnekenburger
11505,0,Change has been successfully merged into the git repository by Andreas Sewe
11513,0,Change has been successfully rebased as 33cbc1b143ccb1f5b7c5aa00c120d654a381dd48 by vincent lorenzo
11520,0,Change has been successfully rebased as bd94625084693fb3336ad98d530f65bb5e220569 by vincent lorenzo
11525,0,Change has been successfully rebased as cb638be830c61a708e32431cf3204eb7e4417008 by vincent lorenzo
11530,0,Change has been successfully merged into the git repository by Pierre-Charles David
11533,0,Change has been successfully cherry-picked as 492f8f3931410e1e2d2027cf21683729d9969353 by Daniel Wiehl
11538,0,Change has been successfully cherry-picked as b0d02a96f515316ddf5c4de0be9d2b6cc135ee5a by Judith Gull
11541,0,Change has been successfully merged into the git repository by Michael Wenz
11544,0,Change has been successfully merged into the git repository by Michael Wenz
11548,0,Change has been successfully rebased as 5b76a3e8a81637ab1fd78e834d71e247164fa611 by Michal Niewrzal
11551,0,Change has been successfully merged into the git repository by Lars Vogel
11554,0,Change has been successfully merged into the git repository by Lars Vogel
11557,0,Change has been successfully merged into the git repository by Lars Vogel
11560,0,Change has been successfully merged into the git repository by Michael Wenz
11563,0,Change has been successfully merged into the git repository by Patrick B??nziger
11567,0,Change has been successfully merged into the git repository by Vasili Gulevich
11569,0,Change has been successfully pushed.
11572,0,Change has been successfully merged into the git repository by Jeff Johnston
11575,0,Change has been successfully merged into the git repository by Fred Bricon
11578,0,Change has been successfully cherry-picked as 314ad268c05adc1347b171124232959ef06dad0c by Jeff Johnston
11581,0,Change has been successfully cherry-picked as 57308c432ac5deb38203848bd0137a3f7bce3ba3 by Jeff Johnston
11587,0,Change has been successfully merged into the git repository by Donald Dunne
11597,0,Change has been successfully cherry-picked as adc69a671ff438fbf80b29475f0d52b99b7ff290 by Jeff Johnston
11602,0,Change has been successfully cherry-picked as 2c14d05584442b5cd00108276287dfc2c74f251d by Jeff Johnston
11608,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
11612,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
11615,0,Change has been successfully rebased as e4aa97081b76085c3287cae678130741da398574 by Jan Sievers
11618,0,Change has been successfully cherry-picked as 9bda82edbd3110eb80ec68b544f71c8715d5910f by Jeff Johnston
11621,0,Change has been successfully pushed.
11623,0,Change has been successfully pushed.
11625,0,"Patch Set 1: Code-Review+1 Verified+1Does this require an @since? I like it and my tool is not complaining, but it does probably make the API different. Thoughts?+1 verified, my eclipse didn't complain and pcap traces still work here."
11627,0,Change has been successfully cherry-picked as 1ad849b8ebf8c33b682f5a7999c133208915e2d4 by Matthew Khouzam
11632,0,Change has been successfully cherry-picked as ac52feb8c7e7dbc3caa69207c1df59b841a7012d by Matthew Khouzam
11639,0,Change has been successfully merged into the git repository by Donald Dunne
11647,0,Change has been successfully merged into the git repository by Terry Parker
11675,0,Patch Set 3: Code-Review+1Tested and result looked positive.
11677,0,Change has been successfully pushed.
11680,1,"Patch Set 1:> Uploaded patch set 1.In a constraint the text of a hyperlink to a template needs to be the Business Name in the model - and no other text. So that it matches the title (heading) that the hyperlink targets.Examplea. SHALL contain exactly one substanceAdministration [1..1], where its type is Medication InstructionThe above hyperlink includes ""Medication Instruction"" which we do not want, instead of the Business Name ""Known Medication"" which we do want."
11683,0,Patch Set 1: Code-Review+1Result looked positive.
11684,0,Change has been successfully pushed.
11689,0,Patch Set 13:Alexmonthy is looking at the patch and should give some comments soon and we will go from there regarding merging.Thanks Patrick for the review!
11712,1,Patch Set 14:Btw I approve the changes done by Alex since we have discussed IRL about each and in the end are mostly trivial changes (style etc).
11713,0,"Patch Set 14: Code-Review+2Thanks Jonathan for the patch, and thanks Patrick for the review!"
11714,0,Change has been successfully cherry-picked as 5b973e7c65f168e79139fdc0045dda56ff71f650 by Alexandre Montplaisir
11733,0,Patch Set 9:Btw no need to click -1 each time I'll wait for your approval and it will save you a click and mouse movement :P
11738,0,Change has been successfully cherry-picked as 36993c181dc0db3024f02f7c0010b8811600003b by Jeff Johnston
11741,0,Change has been successfully merged into the git repository by Donald Dunne
11749,1,Patch Set 1:Warning message still invalidates the other preference pages.  Try info message instead.
11752,0,Change has been successfully cherry-picked as 0eb102607073159b42c36893b9df80266af59c5b by Jeff Johnston
11755,0,Change has been successfully merged into the git repository by Stephan Herrmann
11758,0,Change has been successfully pushed.
11762,0,Patch Set 4: Code-Review+1Tested and result looked positive.
11763,0,Change has been successfully pushed.
11766,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8668/ : UNSTABLE
11767,1,Patch Set 2:That build failure is strange. I thought I had that fixed in https://git.eclipse.org/r/#/c/73895/ which is a grand-parent of this change. Apparently not...
11773,0,Change has been successfully merged into the git repository by Matthias Sohn
11778,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8673/ : UNSTABLE
11779,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8678/ : UNSTABLE
11780,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8679/ : UNSTABLE
11782,0,Change has been successfully merged into the git repository by Matthias Sohn
11787,0,Change has been successfully merged into the git repository by Matthias Sohn
11789,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8615/ : UNSTABLE
11794,0,Change has been successfully merged into the git repository by Marc-Andre Laperle
11799,0,Change has been successfully cherry-picked as 4c770ef3f44fc616c9de0edf46888409e7292350 by Matthias Otterbach
11802,0,Change has been successfully merged into the git repository by Christian W. Damus
11808,0,Change has been successfully merged into the git repository by Christopher Guindon
11812,0,Change has been successfully merged into the git repository by Christopher Guindon
11817,0,Change has been successfully merged into the git repository by Pierre-Charles David
11824,0,Change has been successfully merged into the git repository by Matthias Sohn
11827,0,Change has been successfully merged into the git repository by Arthur van Dorp
11830,0,Change has been successfully merged into the git repository by Jeremie Tatibouet
11834,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
11837,0,Patch Set 1: Code-Review+1(2 comments)Looks good to me.  I added two suggestions.
11838,0,Patch Set 3: Code-Review+2I addressed the changes as suggested. Thanks!
11840,0,Change has been successfully merged into the git repository by Patrik Suzzi
11845,0,Change has been successfully merged into the git repository by Remi Schnekenburger
11848,0,Change has been successfully merged into the git repository by Matthias Sohn
11851,0,Change has been successfully merged into the git repository by Stephane Begaudeau
11854,0,Change has been successfully merged into the git repository by Stephane Begaudeau
11858,1,"Patch Set 8:Sorry Sravan, I didn't see that you uploaded a patch set as well. I made the suggested change to set indexMark = 0."
11862,0,Change has been successfully merged into the git repository by Sravan Kumar Lakkimsetti
11867,0,Patch Set 6: Code-Review+1 Verified+1the change looks good to me.
11872,0,Patch Set 1: Code-Review+2 Verified+1Looks good.  Thanks.
11873,0,Change has been successfully merged into the git repository by Scott Lewis
11877,0,Change has been successfully rebased as 02c19d1f577cdcbf3a3a08f54b8456629d4f5f43 by Benoit Maggi
11880,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2834/ : UNSTABLE
11881,1,Patch Set 1: Verified+1first build is unstable due to neon target update
11882,0,Change has been successfully merged into the git repository by Eugen Neufeld
11886,0,Patch Set 2: Code-Review+2 Verified+1Very nice feature! Looks good to me.
11887,0,Change has been successfully merged into the git repository by Daniel Strueber
11890,0,Change has been successfully merged into the git repository by Christian Pontesegger
11893,0,Change has been successfully merged into the git repository by Silenio Quarti
11896,0,Change has been successfully merged into the git repository by Carsten Reckord
11899,0,Change has been successfully merged into the git repository by Benoit Maggi
11905,0,"Patch Set 4:> Yes, no objections.Ok thank you!"
11908,0,Change has been successfully rebased as 51c741cf33989fa398a0dac304e34e8eed13eff6 by Thierry BLIND
11911,0,"Patch Set 1:Sure, feel free to modify it :)"
11914,1,"Patch Set 3:arg, sorry, I was too confident in my ""optimization"", I revert to your original patch. Maybe you should re-upload this patch, or I will stay as author and commiter, I don't want to get the credits for your work ;)"
11918,0,Change has been successfully merged into the git repository by Thomas Watson
11921,0,Change has been successfully merged into the git repository by Matthias Sohn
11924,0,Change has been successfully merged into the git repository by Matthias Sohn
11927,0,Change has been successfully merged into the git repository by Matthias Sohn
11929,0,Patch Set 1: Code-Review+2 Verified+1Thanks for that fix! Bank example now really produces the result within in repository.
11935,0,Change has been successfully merged into the git repository by Daniel Strueber
11936,0,"Patch Set 2: Code-Review+2 Verified+1Code changes looks good to me, verified the change on Win7 with IE11."
11939,0,Change has been successfully merged into the git repository by Niraj Modi
11943,0,Patch Set 3: Code-Review+2 Verified+1fully inspected and tested - looks good to me.
11944,0,Change has been successfully merged into the git repository by Daniel Strueber
11949,0,Change has been successfully merged into the git repository by Stephane Begaudeau
11955,0,Change has been successfully merged into the git repository by Jeremie Tatibouet
11964,0,Change has been successfully merged into the git repository by Jeremie Tatibouet
11973,0,Change has been successfully merged into the git repository by Sebastian Struckmann
11976,0,Change has been successfully merged into the git repository by Andreas Sewe
11979,0,Change has been successfully merged into the git repository by Matthias Sohn
11982,0,Change has been successfully merged into the git repository by Stephane Begaudeau
11987,1,Patch Set 18: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2833/ : UNSTABLE
11990,0,Change has been successfully rebased as 7bf17b05cceab7d4e9a07da63dff298fa1e1ec32 by Eugen Neufeld
12002,1,Patch Set 17: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2832/ : UNSTABLE
12009,0,Change has been successfully merged into the git repository by Sebastian Struckmann
12013,0,Change has been successfully merged into the git repository by Christian Saad
12016,0,"Patch Set 2: Code-Review+1Looks good to me, although if this was in GDB, you would have to split it in two patches, since it addresses two different issues :)"
12018,0,Change has been successfully merged into the git repository by Alvaro Sanchez-Leon
12021,0,"Patch Set 1:(2 comments)It fixes my problem, thanks!"
12025,0,"Patch Set 1:(3 comments)See clarifications in inline comments, patch set 2, reflects the resulting updates, Thanks Simon and Wainer !"
12028,0,Change has been successfully merged into the git repository by Andreas Sewe
12032,0,Change has been successfully merged into the git repository by Patrick Tessier
12035,0,Change has been successfully merged into the git repository by Eugen Neufeld
12038,0,Change has been successfully merged into the git repository by Stephane Begaudeau
12041,0,Change has been successfully merged into the git repository by Stephane Begaudeau
12043,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8628/ : UNSTABLE
12044,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8629/ : UNSTABLE
12047,0,Change has been successfully merged into the git repository by Matthias Sohn
12050,0,Change has been successfully merged into the git repository by Marcel Hein
12054,0,"Patch Set 6: Code-Review-1Change looks fine, but it must not be merged before the 2.3.2 release"
12058,0,Change has been successfully merged into the git repository by Johannes Dorn
12063,1,Patch Set 3: Code-Review-1To get the list of current repositories I need access to an object of the Repositories class. I cannot inject this into the GitBasedRepositoryConfigurationWizard (causes errors).The only classes which have a copy of this object are ui objects such as PreferencePage or View classes.I cannot inject the Repositories object into the SnippetRcpPreferences class as a SnippetRcpPreferences object is already being injected into the Repositories class.
12066,0,Change has been successfully merged into the git repository by Johannes Dorn
12072,0,Change has been successfully merged into the git repository by Michal Niewrzal
12075,0,Change has been successfully merged into the git repository by Camille Letavernier
12078,0,Change has been successfully merged into the git repository by Carsten Reckord
12080,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8618/ : UNSTABLE
12086,0,Change has been successfully merged into the git repository by Matthias Sohn
12088,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8622/ : UNSTABLE
12092,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8635/ : UNSTABLE
12093,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8636/ : UNSTABLE
12094,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8638/ : UNSTABLE
12097,0,Change has been successfully merged into the git repository by Matthias Sohn
12100,0,Change has been successfully merged into the git repository by Camille Letavernier
12103,0,Patch Set 2:Thanks Makena!
12104,0,Patch Set 2:Thanks Makenna!
12105,0,Change has been successfully merged into the git repository by Wim Jongman
12111,0,Change has been successfully merged into the git repository by Dani Megert
12119,0,Change has been successfully merged into the git repository by Stephan Born
12122,0,Change has been successfully merged into the git repository by Michal Niewrzal
12124,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8631/ : UNSTABLE
12125,0,Change has been successfully merged into the git repository by Matthias Sohn
12131,0,Change has been successfully cherry-picked as f5f22c6194e1280f3ff966ba880a54431756bd65 by Jeff Johnston
12134,0,Change has been successfully merged into the git repository by Fred Bricon
12137,0,Change has been successfully merged into the git repository by Marc Khouzam
12141,0,Change has been successfully rebased as b73b588611cc30824fb07da6df3ca70d1679f7b8 by Sergey Prigogin
12145,0,Change has been successfully cherry-picked as 3ac2542cf497785d611002a428310440b2fe7bef by Alexandre Montplaisir
12149,0,Change has been successfully cherry-picked as 805374b117e3aa7cb8f8ea8e3b8038e0bb46ade0 by Alexandre Montplaisir
12153,0,Change has been successfully cherry-picked as 66aa2abfbb22fc532c2d7405cb82f4537f2869d6 by Alexandre Montplaisir
12157,0,Change has been successfully cherry-picked as af944cc9ca0cc8944704e3e8b59837d346d50edf by Alexandre Montplaisir
12161,0,Change has been successfully cherry-picked as 0ce8ae02dd28436f81ea8534845b3aa9192aca60 by Alexandre Montplaisir
12165,0,Change has been successfully cherry-picked as 11f09587d40fe9c323d66d1bd6f0e09f16f332ce by Jeff Johnston
12168,0,Change has been successfully merged into the git repository by Jeff Johnston
12171,0,Change has been successfully merged into the git repository by Ansgar Radermacher
12174,0,Change has been successfully merged into the git repository by Stephan Herrmann
12177,0,Change has been successfully merged into the git repository by Sergey Prigogin
12179,0,Change has been successfully cherry-picked as 38abc8f723002c96f6ce4a517e5d880d9856db8a by Jeff Johnston
12186,0,Change has been successfully cherry-picked as 104b675c0c2c377686382214bc6b21066c500e55 by Xavier Coulon
12188,0,"Patch Set 12: Verified-1The change look pretty good so far from a usage perspective.One issue so far : Change the connection URI/location in any way and the change persists on a restart, as expected. However if you edit just the connection name, or the connection name in combination with the URI/location the changes are not persisted."
12195,1,"Patch Set 13:Thanks for the review, Roland. I found the bug and added some tests to verify that the connection is saved when the name and/or settings are changed."
12203,0,Change has been successfully merged into the git repository by Greg Watson
12206,0,Change has been successfully cherry-picked as 6af8d0735271fac232d15d865775e5c941c4aa8f by Patrick Tasse
12209,0,Change has been successfully merged into the git repository by Markus Knauer
12216,1,"Patch Set 4:We need a separate class because there is a requirement to use PlatformUI to watch the DockerExplorerView.  If put in the core class, then core relies on ui which is a very bad thing to do.  You want to have core installable without ui being present."
12217,0,"Patch Set 4: -Code-ReviewThat's right, I did not realize that, but my point was: let the DockerExplorerView implement the ISelectionListener interface and set the current connection in the DockerConnectionManager upon changes. In that case, there's no need to introduce the DockerConnectionWatcher.But if you want to keep the current selection apart from the DockerConnectionManager (to separate the concerns), then I guess that's fine."
12219,0,Change has been successfully cherry-picked as 9550e9314d1a77979efe694d479ea40b2c899418 by Jeff Johnston
12223,0,Change has been successfully merged into the git repository by Markus Knauer
12227,0,Change has been successfully rebased as 568ef45802488798387ec70449dacb2cafae45bc by Sergey Prigogin
12228,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5228/ : UNSTABLE
12230,0,Change has been successfully merged into the git repository by Sergey Prigogin
12238,0,Change has been successfully rebased as 5a1850d0ca029d7c8219775a26629956a002bb7f by Michal Niewrzal
12242,0,Change has been successfully rebased as f5991ae4b6263b23f70097ed0733bc575559a6cd by Michal Niewrzal
12246,0,Change has been successfully rebased as 881972f1be174d9924ccfd3fb9ece05c3e111af6 by Marc Khouzam
12248,1,"Patch Set 1:I reworked previous patch for bug 494328, because it was just a ""dirty"" workaround at the end. I found strange that we needed to change the ""document.getLength() != astRoot.getEnd()document.getLength() != astRoot.getEnd()"" test. In fact, the returned AST was an outdated one, and call to getASTProvider().aboutToBeReconciled(...) / getASTProvider().reconciled(...) in class PHPStructuredEditor didn't work anymore as expected. Simply revert the code part that should have been left untouched, ASTProvider's locking and sharing system is really a fragile code path..."
12250,0,Change has been successfully merged into the git repository by Thierry BLIND
12253,0,Change has been successfully merged into the git repository by Pascal Rapicault
12261,0,Change has been successfully merged into the git repository by Niraj Modi
12266,0,Patch Set 1: Verified+1(1 comment)This looks good but need to check the java docs
12270,0,Change has been successfully merged into the git repository by Niraj Modi
12273,0,Change has been successfully rebased as 95f5c4a01aa0dabe2d91cfc07c74519b69ad9886 by Remi Schnekenburger
12276,0,Change has been successfully merged into the git repository by Markus Knauer
12278,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/832/ : UNSTABLE
12283,0,Change has been successfully rebased as e87c55cc85e806550b8b9e5d0989759ed370b67a by David Green
12286,0,Change has been successfully merged into the git repository by Matthias Sohn
12289,0,Change has been successfully merged into the git repository by Matthias Sohn
12293,0,Change has been successfully rebased as 65899f3420d471eb0780043eafeb206b58dcec58 by Christian W. Damus
12299,0,Change has been successfully merged into the git repository by Ryan Brooks
12303,0,Change has been successfully merged into the git repository by Jeff Johnston
12307,1,"Patch Set 1:I see the need to reduce memory footprint of system call. At least with an in-memory backend, but do we really want to get rid of the args and return value?"
12309,0,"Patch Set 1:Yes, that's perfectly legit. But we're losing bytes AND information. If you're going to drown, you get rid of the steel toe and the wool jacket, but are we drowning here? that is my question... or can we just get a life vest and keep it all (see https://git.eclipse.org/r/#/c/72925/)"
12316,1,"Patch Set 5: Code-Review+1 Verified+1I'm ok with this. We were not using those fields, I was mistaking them with those of the XML syscall analysis, so we're not losing anything."
12318,0,Change has been successfully cherry-picked as 137512b371037d75a1a3589b0e043716ce408f5c by Matthew Khouzam
12323,0,Change has been successfully cherry-picked as a05d1af8e1ec19bcff770b7256bfe32e5088a3fe by Genevieve Bastien
12325,0,Change has been successfully cherry-picked as eb038f24c1613fd716f1a44d4fecc0daf9339e52 by Stephan Merkli
12328,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/649/ : UNSTABLE
12330,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/648/ : UNSTABLE
12333,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/654/ : UNSTABLE
12337,0,Change has been successfully merged into the git repository by Remi Schnekenburger
12340,0,Change has been successfully merged into the git repository by Dani Megert
12341,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9454/ : UNSTABLE
12348,0,Change has been successfully cherry-picked as b09800d28b4ca231d9ef6ea41568a9b376cb322e by Andi Bur
12351,0,Change has been successfully cherry-picked as 6037ec34b2da44e2d4df1115493b649ea2af7fcd by Andi Bur
12355,0,Change has been successfully merged into the git repository by Markus Keller
12359,0,"Patch Set 2:+1 to consider this fix for RC2.Markus or Stephan (whoever is faster), please provide the second +1 and review. Thanks!"
12364,0,Change has been successfully rebased as 616fb881c633e9ce2492c53a18c38326576e9134 by Johannes Faltermeier
12366,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2785/ : UNSTABLE
12371,0,Change has been successfully merged into the git repository by Thomas Watson
12375,0,Change has been successfully merged into the git repository by Arun Thondapu
12379,0,Change has been successfully rebased as 846d6aa0491704ff2a28a7e38bae17f12d045763 by Johannes Faltermeier
12382,0,Change has been successfully merged into the git repository by Carsten Reckord
12389,0,Patch Set 7: Code-Review+1Change looks good to me.
12396,0,Change has been successfully merged into the git repository by Arun Thondapu
12400,0,Change has been successfully rebased as eaa04445723078d714756878731042d48ec2e9c3 by Eugen Neufeld
12405,0,Change has been successfully merged into the git repository by Laurent Delaigue
12409,0,"Patch Set 6: Code-Review+1Looks good to me, thanks"
12411,0,"Patch Set 5: Code-Review-1(1 comment)Looks good, just one last remark on the settings file.Thanks"
12416,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2781/ : UNSTABLE
12418,0,Change has been successfully rebased as 78e12c87ab8ab47e8650118487f14355a81e0c07 by Eugen Neufeld
12421,0,Change has been successfully merged into the git repository by Lorenzo Bettini
12426,0,Change has been successfully merged into the git repository by Mark Russell
12429,0,Change has been successfully merged into the git repository by Kaloyan Raev
12433,0,Change has been successfully rebased as cd79214dce280714192bfcf3d53f05cb7a64d135 by Eugen Neufeld
12436,0,Change has been successfully merged into the git repository by Stephane Begaudeau
12441,0,Change has been successfully rebased as f1933675f0e471a64b53943d683d034cc5daa7c2 by saadia dhouib
12446,0,Change has been successfully merged into the git repository by Lorenzo Bettini
12450,0,Change has been successfully merged into the git repository by Eugen Neufeld
12452,0,Change has been successfully merged into the git repository by Laurent Goubet
12458,1,"Patch Set 2: Code-Review+1I can't open the Xtext editor when I apply it on a transition with incomplete specification, e.g. trigger has call event with no operation. I don't think it is related to this bug though."
12461,0,Change has been successfully rebased as 5747e9c848b0434f5c56152b6a6da298dc7e9283 by Ansgar Radermacher
12464,0,Change has been successfully merged into the git repository by Arthur van Dorp
12467,0,Change has been successfully merged into the git repository by Camille Letavernier
12470,0,Change has been successfully merged into the git repository by Eike Stepper
12474,0,Change has been successfully merged into the git repository by Dani Megert
12476,0,Change has been successfully merged into the git repository by Gregoire Dupe
12480,0,Change has been successfully merged into the git repository by Pierre-Charles David
12489,0,Change has been successfully pushed.
12492,1,Patch Set 1: Code-Review+2 Verified+1I want merge this for RC1. Any objections?
12493,0,Patch Set 1:No :)
12495,0,Change has been successfully rebased as de4d92fe1b2c8a6f6c3ecf5f5eed6d262ccbdfa4 by Dawid Pakula
12498,0,Change has been successfully merged into the git repository by Anton Leherbauer
12501,0,Change has been successfully merged into the git repository by Kaloyan Raev
12504,0,Change has been successfully merged into the git repository by Kaloyan Raev
12508,0,Change has been successfully rebased as 99f9fd9d8d581b822e38431eb0c0e8db0ecdb4ca by Bartlomiej Laczkowski
12512,0,Change has been successfully rebased as 92413b882fee204b115adcc732c483ef0d3861b9 by Michal Niewrzal
12515,0,Change has been successfully merged into the git repository by Eugen Neufeld
12518,0,Change has been successfully merged into the git repository by Cedric Brun
12524,0,Change has been successfully rebased as ec0ee9410c4639c47ac1a4400c0342889241cb37 by saadia dhouib
12528,0,Change has been successfully rebased as 6b2bd986067a4f1b0b78a3b1fbc00c6b9b8b8491 by Ansgar Radermacher
12531,0,Change has been successfully merged into the git repository by Andreas Sewe
12534,1,"Patch Set 15: -Code-Review@Christian, Based on the different TPD, The goal is to have 3 different steps of Papyrus to build on:* The most stable - which is the release (neon)* A bit less stable but more recent (milestone)* The most unstable but the most recent (nightly)Maybe the unqualified TPD is not clear enough and should end with *release. We would like to have an overview of the stability/quality of our project based on the different milestone of Papyrus.And in the following weeks we'll create another TPD based on Oxygen.Would you have another way to do so ?"
12536,0,"Patch Set 14:This looks pretty good.  I'd still like to hear from the other reviewers what they think of having the entire repository be an Eclipse project with everything else that already is a project being ""nested"" projects.  I'm not keen on it.Also, what is the practical or intended difference between the ""Papyrus milestone"" TPD and the TPD without the Papyrus qualifier?  I thought at first that maybe the Papyrus milestone and nightly targets would include the unqualified target to get all of the other base dependencies and just add their own flavour of Papyrus onto that.  But they don't, and the unqualified TPD also includes Papyrus from the Neon simultaneous release which basically makes it the same as the ""Papyrus milestone"" TPD because the Neon repository includes the Papyrus milestones."
12537,0,"Patch Set 14:(1 comment)Thanks for the work! Looks good, except for the minor nitpick about the project in the root of the repo. I pushed a new change on top of this change to add EMF Compare dependencies and rebased the change that adds the EMF Compare customizations.The EMF Compare related tests fail but that is probably not because of the target platform but because of the test models seem to have gotten out of date with respect to how Papyrus-RT models should look like in the latest version."
12538,0,"Patch Set 14:I do agree also on not having the .project at the root of the project. I discussed this morning with Celine to have this .project removed.Otherwise, patch seems to be good. @C├®line: can you modify the contribution with Benoit comments and give feedback to Christian about the Milestones and plain Papyrus target? DSML plugin was released in the previous extra, so it should not be an issue of integrating it in the target"
12545,0,Change has been successfully merged into the git repository by Celine Janssens
12549,1,"Patch Set 6:> It would be so handy to have the build generated the target platform from the TPD ...Not really; that would actually defeat the purpose of the Target Platform for Tycho, which is mostly to speed up the build by precomputing the dependencies as much as possible (And also to have a stable compilation target, to avoid accidentally picking any unexpected artifact in your build, with exact location and version number/qualifier)Generating the target platform at build time would be pretty much equivalent to building against http://download.eclipse.org/staging/neon (aka. ""pick whatever you need from the latest version of the entire world""). Easy to maintain, but highly unsafeThe TPD itself is usually not as detailed as the actual target platform (Although it could be, I guess), and fills some gaps in the editor and features (Especially the include directive)There would still be some benefits in going this way, but also much more issues in my opinion. BTW, Bug 492723 has been completed today, the new updater is now available in the Papyrus Developer tools"
12552,0,Patch Set 4:(3 comments)This looks promising!  The commit comment mentions a plugin that generates the target platform from a TPD file.  Is that a maven plug-in?  I didn't see any sign of it.  It would be so handy to have the build generated the target platform from the TPD ...
12554,0,"Patch Set 4:(3 comments)Thanks for your responses, C├®line."
12567,0,"Patch Set 26: Code-Review+1Looks great!  Thanks, C├®line."
12575,0,"Patch Set 21:> @Christian, >  > Based on the different TPD, The goal is to have 3 different steps > of Papyrus to build on: >  > * The most stable - which is the release (neon)Okay, so that will be the release in June, but it isn't yet.  So far, it tracks the milestones and is equivalent to the milestone TPD.  If this TPD is meant to live on in the Oxygen stream, then this will work as expected, so that's fine by me. > * A bit less stable but more recent (milestone) > * The most unstable but the most recent (nightly) >  >  > Maybe the unqualified TPD is not clear enough and should end with > *release.I agree.  :-)Note that there will be Neon releases (.1, .2, etc.) during the Oxygen stream, so I think it makes sense to name this TPD clearly as *.neon.papyrusrelease.tpd. > Would you have another way to do so ?Nope, this looks good (modulo the change to qualify the release TPD name).  Thanks!"
12581,0,Change has been successfully pushed.
12586,0,Change has been successfully merged into the git repository by Ed Merks
12589,0,Change has been successfully pushed.
12596,0,Change has been successfully pushed.
12602,0,Change has been successfully pushed.
12610,0,Change has been successfully merged into the git repository by Pascal Rapicault
12614,0,Change has been successfully merged into the git repository by Pascal Rapicault
12617,0,Change has been successfully merged into the git repository by Greg Watson
12623,0,Change has been successfully cherry-picked as f95c93454d70abf864521c8b9415528f45da30bc by Alexandre Montplaisir
12638,0,Change has been successfully pushed.
12643,0,Change has been successfully merged into the git repository by Sergey Prigogin
12651,1,"Patch Set 1:Although the refactoring of progress monitors here looks good, I don't see how this addresses the bug:- I can't find any code path that would log the exception in the new version that wouldn't have also logged it in the old version.- The new version will still abort the for loop after the first occurrence of a SOE.Now: Aborting the search after an SOE actually makes sense to me, since it's likely a problem with the regex and we could easily get a SOE in every file. However, the bug explicitly requested that the search continue for subsequent files. Why the change?"
12653,1,Patch Set 1:The error is shown to the user in a dialog. It wasn't happening before because the job group finished with cancel status instead of the error one.
12656,0,Change has been successfully merged into the git repository by Sergey Prigogin
12659,0,Change has been successfully merged into the git repository by Silenio Quarti
12664,0,Change has been successfully pushed.
12668,0,Change has been successfully merged into the git repository by Andreas Sewe
12674,0,Change has been successfully merged into the git repository by Silenio Quarti
12677,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8573/ : UNSTABLE
12680,0,"Patch Set 1:I've never used p2.inf files before, so I don't really know if this does what it should, nor how to test it. Would be good if somebody who knows this stuff could look at it."
12681,1,Patch Set 1:I guess we'll keep seeing this SmartImportWizardTest failure until Mickael's fix for bug 493606 is in the Neon staging repo :-(Perhaps we should @ignore this test until then.
12686,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8586/ : UNSTABLE
12688,0,"Patch Set 5: Code-Review+2works nicely, tried with old importer installed in Mars.2 and in Neon M6"
12690,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8587/ : UNSTABLE
12691,0,Change has been successfully merged into the git repository by Matthias Sohn
12693,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8572/ : UNSTABLE
12694,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8579/ : UNSTABLE
12696,0,Change has been successfully merged into the git repository by Matthias Sohn
12703,0,Change has been successfully cherry-picked as 664dac59a1316a74ac3d8705796cafe77b37f97b by Alexandre Montplaisir
12712,0,Change has been successfully cherry-picked as 83c0fa848ee2581ffe304540c610dba97216ae55 by Jeff Johnston
12715,0,Change has been successfully merged into the git repository by Markus Knauer
12719,0,Change has been successfully pushed.
12725,0,Patch Set 1: Code-Review+1I tested this fix and the result looked positive.
12727,0,Change has been successfully merged into the git repository by Sean Muir
12731,0,Change has been successfully rebased as c19e9db6be5eeb9f3202afb235a1a648b9d8e719 by Michal Niewrzal
12740,0,Change has been successfully merged into the git repository by Sam Davis
12741,1,Patch Set 6:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1312/ : UNSTABLE
12742,1,Patch Set 6:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1321/ : UNSTABLE
12751,0,Change has been successfully merged into the git repository by Philip Wenig
12754,0,Change has been successfully merged into the git repository by Silenio Quarti
12764,0,Change has been successfully pushed.
12768,0,Change has been successfully merged into the git repository by Amine Ouraiba
12770,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5191/ : UNSTABLE
12773,0,Change has been successfully rebased as 758110471e5884e84ac0bd97236da64f9f19fd04 by Doug Schaefer
12776,0,Change has been successfully merged into the git repository by Lars Vogel
12783,0,Change has been successfully merged into the git repository by Doug Schaefer
12787,0,Change has been successfully rebased as d68ef1908013a846b139a8474d265a89e543b1a1 by Greg Watson
12790,0,Change has been successfully pushed.
12795,0,Change has been successfully cherry-picked as 066b02aaad4a3d68bc54d0b23e33f4e05c116497 by Marc-Andre Laperle
12806,0,Change has been successfully cherry-picked as d8c10187871dba9759a4d200e6afdc95aa2ed3ca by Marc-Andre Laperle
12809,0,Change has been successfully merged into the git repository by Greg Watson
12812,0,Change has been successfully merged into the git repository by Alois Zoitl
12816,1,"Patch Set 2: Code-Review+1I was waiting for gerrit to approve, I had my doubts about the SystemCall -> BasicSegment change. But if it works, it's unit tests, I don't mind"
12819,0,Change has been successfully cherry-picked as 660d4ed9bd22ac357b49953bad1f11f5893747de by Matthew Khouzam
12823,0,"Patch Set 1:(2 comments)Really cool, not super easy to read."
12826,0,"Patch Set 2: Code-Review+1 Verified+1It works! I'm really happy about it, unit tests appear to cover it all. Unless someone says there is ideological objection, this pattern is used for something else, etc. I think this is a great improvement to the custom parsers."
12829,0,Change has been successfully cherry-picked as 2d27500ba90b0f29fe3157fc0cb7748d8f7b3e3f by Patrick Tasse
12836,0,Change has been successfully pushed.
12838,1,"Patch Set 5: Code-Review+2 Verified+1Previously approved, trivial rebases since."
12839,0,Change has been successfully cherry-picked as 83d1b60e3a59a7dc6335224c97474667b549f01d by Alexandre Montplaisir
12859,0,Change has been successfully cherry-picked as d69a6555d4e065fc423b42b030d6aa4fe39e4b01 by Genevieve Bastien
12886,1,"Patch Set 2:> What about instead having two separate wrapper classes, a reader and a writer one?Do we want this wrapper to be used only for custom state value or would it be useful anywhere else? If only for custom state values, then a reader and a writer makes sense. The flipping can turn one into the other.> Can this be internal, that way we can make this into an eierlegende wollmilchsau progressively as need be?That means keeping the custom state values internal and x-friending anyone who needs it. That's good for Neon, but I'd put it public as soon as the O branch is available.Anyway, the IO analysis will not use custom state value for Neon. And the critical path on disk is not that critical, the whole graph does not take that much space in RAM, as it stores only timestamps and an edge type enum. So it would be just the segment store"
12890,0,Patch Set 6: Code-Review+2 Verified+1Thanks for the reviews!
12891,0,Change has been successfully cherry-picked as bad519099946d6bf2e4470d1e501566d312d378a by Genevieve Bastien
12894,1,"Patch Set 3:Can this be internal, that way we can make this into an eierlegende wollmilchsau progressively as need be? I think we should keep this as dumb and simple as possible for now."
12895,0,"Patch Set 3:> Do we want this wrapper to be used only for custom state value or would it be useful anywhere else?Well considering it is in the ""statevalue"" package, I'm assuming this will be a wrapper specific to state values.After suggesting the flip() method, I realized that reading/writing logic that will call flip() will have access to the real ByteBuffer, so won't need it for the wrapper. The wrapper will be sent only to the custom state value, and it will be either for a read OR write operation. Never the same wrapper for both.So I would tend to think two separate wrapper classes would be even simpler (and no need for a flip() then). What do you think?"
12902,0,Change has been successfully pushed.
12905,0,Change has been successfully merged into the git repository by Jacques Bouthillier
12909,0,Change has been successfully merged into the git repository by Johannes Dorn
12914,0,Change has been successfully pushed.
12919,1,"Patch Set 8:(1 comment)Thanks for the updates, I'll have to revert the signal hash changes because it breaks the table synchronization. We can check that part separately afterwards."
12928,1,"Patch Set 9:Kept most of the changes, thanks again! I've also rebased it on a patch that disables the constantly-failing test."
12930,0,"Patch Set 9: Code-Review-1(2 comments)We've gotten to the meat of the review, I am happy."
12936,0,"Patch Set 20: Code-Review+1 Verified+1It works for me, the bug I had is gone, my comments were addressed or won't be now ;-) afaic this is good enough to go in!"
12937,0,"Patch Set 20: Code-Review+2Thanks all, woohoo!"
12938,0,Change has been successfully cherry-picked as 4208b5106c351e981b78b5f93d336d39e46f4bbd by Alexandre Montplaisir
12944,1,"Patch Set 3:> Basically, I understand: if you put something in ""internal provisional"", it is future API.""API"" applies only to public things. OSGi is a layer on top of base Java to restrict exposing public things, so that they can be internal, or x-friends with their friends. If something is public AND non-internal, then it becomes a OSGi API.But non-public things have never been considered API, they are completely inaccessible from things outside their own package. This is restricted at the compiler level.Our compiler settings don't enforce javadoc for default and private members, because those are necessarily invisible from outside their package.Tbh, I don't think it's a bad idea to put Javadoc on all classes, more information is always good. But we never enforced it on anything (non-public) before, so I wonder what we absolutely have to start NOW, on a patch that is already quite time-critical. I think we should have least have the same standards as we have elsewhere."
12955,0,"Patch Set 1:(9 comments)> (9 comments) >  > Some comments. >  > I am doing a night-time drive by, this is by no means a final > review of your code, I just have some guidelines to strongly > suggest about items I think are very important. >  > A- Exceptions: it's not hard to write a message in them now, it's > hard to debug them later with no help.We will address it when all other concern are out of the way. Thanks for pointing it out. > B- There is a fair amount of repetition in your code, so the > comments may repeat also. > C- There appears to be a lot of re-implementation of many things > here, such as LamiInteger, I assume it is due to the json object > mapper or something similar? if so, document it.Not sure what you mean ? What about LamiInteger ? > D- The signal with a hashset is pretty cool as an idea, the > hashcode? not sure why you need it. please explain it.See inline comment. > E- Please be sure you have all the authors correctly down... if > France is also an author, that's awesome. >  > I'm not the main reviewer. I am just trying to help.Cheers"
12970,1,"Patch Set 17:(1 comment)More details on the error I gotAlso, I have a bug with the bar chart. Here are the steps to reproduce:1- Use trace: http://secretaire.dorsal.polymtl.ca/~gbastien/traces/trace_jc.tar.gz2- Run lttng-cputop3- With the biggest table returned (the one with PID among other, the column is empty), do new custom bar chart4- Take the PID as X axis and anything for Y and press OKAn exception is thrown, the view appears empty and when you click clean custom views, these viewers do not disappear."
12975,1,"Patch Set 17:> (1 comment) >  > More details on the error I got >  > Also, I have a bug with the bar chart. Here are the steps to > reproduce: >  > 1- Use trace: http://secretaire.dorsal.polymtl.ca/~gbastien/traces/trace_jc.tar.gz >  > 2- Run lttng-cputop >  > 3- With the biggest table returned (the one with PID among other, > the column is empty), do new custom bar chart >  > 4- Take the PID as X axis and anything for Y and press OK >  > An exception is thrown, the view appears empty and when you click > clean custom views, these viewers do not disappear.I was able to reproduce the exception.Looks like swtchart does not handle well series with empty sets (X,Y) since the exception is from within swtchart. A simple fix is not to add any series with empty sets.Thanks for reporting this."
12976,1,"Patch Set 17: Code-Review-1(2 comments)Thanks, got it working with only that one following patch rebased.Found more problems unfortunately ;("
12986,1,"Patch Set 18:About the bug with logscale, we looked into that Friday. There are some many little bugs in SWTChart, it's terrible...If you have a log scale, you need all series to have the same amount of entries. So if you have values with ""null"", we have to provide a dummy value. But the dummy can't be zero, because logscale doesn't support 0. So we can compute a minimal value > 0 that is still smaller than all the values in the series. But then if we set the axis to start at that value, we lose all the ticks on the axis...We'll try to figure out a solution by the end of today. Could be to outright disable log scales under the circumstances we know it'll break."
12991,1,"Patch Set 2:Reviewing this is probably unnecessarily difficult, why can't you split this into : lami datatypes/lami parsing/Lami aspects/Lami views?"
12996,0,"Patch Set 2:> Reviewing this is probably unnecessarily difficult, why can't you split this into : lami datatypes/lami parsing/Lami aspects/Lami views?I agree it is a big patch, but I don't think splitting it further will help much overall. It will be just as long to review the 3-4 patches.Splitting is very nice if you can get the first patches in, then continue focusing on only the rest. But here all this block goes together : a comment on let's say the aspects may require fixing the base Lami types, and so on.It's a new feature, it is a big block no matter how you look at it ;)"
13000,0,"Patch Set 4: Code-Review-1Many of my previous comments were not addressed, this looks like all the 2016s are fixed though, so that's nice."
13002,1,"Patch Set 4:(8 comments)Most comments were addressed, I looked at the first comment and it wasn't then I looked at another... I was unlucky with 100% of my samples. So yeah, most of the comments were addressed, thanks."
13005,0,"Patch Set 13:(8 comments)Thanks for the comments. I'm fine with the changes in PS 12 and 13, I'll just update 13."
13009,0,"Patch Set 14: Code-Review-1(11 comments)Some comments on the .ui part.Also, generally speaking, in the very UI classes (viewers, views, etc), there are methods that are very big. Maybe that's just me, but UI classes tend to be less readable by their very nature of having to configure widgets and stuff. So, splitting the methods in smaller, well-scoped methods would greatly improve readability.But I really look forward to having those viewer generators available for all types of analyses!"
13011,0,Patch Set 14:(5 comments)Thanks for the review
13018,1,"Patch Set 14:(4 comments)Sorry I was slowly going through my old comments on the abandoned patch and adding new ones, took a while...One comment just not to forget, that maybe we want to implement an open handler for running an analysis and opening a report with Enter or double-click."
13027,0,"Patch Set 5:Ok, I am fine with this now I think... I can garanty that this still has bugs in it. But we should be able to solve them as bug fixes later."
13031,0,"Patch Set 19:Alright, seems like a working solution was found, woot!"
13034,1,"Patch Set 19:> I have no errors in my Eclipse... and this code doesn't change, yet future patches build fine. You don't? In the LamiBarChartViewer and LamiScatterViewer, I have a few dead codes and mismatch Nullable stuff. I think it's the stream stuff that was added. What target are you using? I'm with eStaging"
13037,1,"Patch Set 19:I've got it failing with Maven, ok, I'll try to respin the patch so at least Maven likes it."
13044,0,Change has been successfully merged into the git repository by Johannes Faltermeier
13047,0,Change has been successfully merged into the git repository by Brian de Alwis
13053,1,"Patch Set 3: Code-Review+1The fix solves the problem, the code looks good to me, and the tests are working."
13058,0,Change has been successfully merged into the git repository by Stephane Begaudeau
13064,0,Change has been successfully rebased as bb5f25e3f931dcf9fb7baec4a87b4413712c71aa by Mickael ADAM
13068,0,Change has been successfully rebased as 77b0773855922adcf5ddd8ad42fc5e47238f4129 by Eugen Neufeld
13071,0,Change has been successfully merged into the git repository by Eugen Neufeld
13074,0,Change has been successfully merged into the git repository by Eugen Neufeld
13077,0,Change has been successfully merged into the git repository by Laurent Redor
13080,0,Change has been successfully merged into the git repository by Ansgar Radermacher
13083,0,Change has been successfully merged into the git repository by Jay Arthanareeswaran
13095,0,Change has been successfully merged into the git repository by Benoit Maggi
13103,0,Change has been successfully cherry-picked as f3b9a19a7d8b18a32c94ab1a8477c93a6f04147f by Alexander Kurtakov
13106,0,Change has been successfully merged into the git repository by Matthias Sohn
13109,0,Patch Set 1:(1 comment)this works nicely :-)
13113,0,Change has been successfully merged into the git repository by Donald Dunne
13119,0,Patch Set 1: Code-Review+1Looks good. Haven't tried it
13123,0,Change has been successfully cherry-picked as fb4e9adc1e3c06ed22b9e28ed6876eed68cb5592 by Bernd Hufmann
13125,0,Change has been successfully merged into the git repository by Ryan Brooks
13131,0,Change has been successfully merged into the git repository by Ryan Brooks
13139,0,Change has been successfully merged into the git repository by Elson Yuen
13143,0,Change has been successfully rebased as cabb38f9ccda84b76a83375499777a07271ab9fb by Ernesto Posse
13146,0,Change has been successfully cherry-picked as 19c3ea2e2daaf6936eeae006c3d571127e4fc258 by Jeff Johnston
13148,0,Patch Set 2:For now I just moved AbstractPDTTTest to performance tests. Let me know if you have something against :)
13151,0,Change has been successfully rebased as bf7a0479e41a4971ffc16788bc73ad45eec8f5fc by Michal Niewrzal
13153,1,"Patch Set 1:I forgot about performance test. They aren't used (bug 386543), but are compiled and deployed."
13154,0,"Patch Set 1:Yes, me too :) I never check what is going on there. I will take a look later at this."
13158,0,Change has been successfully rebased as 2bce3bb6981d65c8afe026ce2b043f7816d34858 by Michal Niewrzal
13162,0,Change has been successfully pushed.
13168,0,Change has been successfully merged into the git repository by Eric Poirier
13171,0,"Patch Set 1: Code-Review+2 Verified+1Works, let's go!"
13176,0,Change has been successfully cherry-picked as e5bf3c0392de351d0e7e2d6dcc96e2a262e6ec99 by Genevieve Bastien
13180,0,Change has been successfully rebased as 2c4921bca0925a343ba88f5fec731d6a463fd55e by Doug Schaefer
13183,0,Change has been successfully merged into the git repository by libing wang
13195,0,Patch Set 3: Code-Review+1It's good: same behavior as the old resolveVariable plus it resolves theme-specific resources.
13199,0,Change has been successfully merged into the git repository by Brian de Alwis
13202,0,"Patch Set 2:Hmm, you're right: although it didn't return the path, it returned the original value being resolved."
13206,0,Change has been successfully rebased as 0feb0483ecc2ab6fd45a5b1d9a04fe2569d9b058 by Christian W. Damus
13209,0,Change has been successfully merged into the git repository by David Williams
13213,1,Patch Set 2: Code-Review+2 Verified+1Ok I found another patch that failed because of this: https://git.eclipse.org/r/#/c/72325/  So it's not just my patch ;)
13214,0,Change has been successfully cherry-picked as 7e829ded7d9f92dacd0786628d2c524d3f09e94d by Alexandre Montplaisir
13215,0,"Patch Set 2:(1 comment)Looks good, just a suggestion about reducing the number of new methods"
13216,0,"Patch Set 2:(1 comment)Thank you for your review, Eugen!"
13219,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2728/ : UNSTABLE
13223,0,Change has been successfully rebased as 19201d29bef73dc2576186096ac460537bb7e43c by Eugen Neufeld
13232,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2722/ : UNSTABLE
13235,0,Change has been successfully merged into the git repository by Laurent Redor
13238,0,Change has been successfully merged into the git repository by Amine Ouraiba
13243,0,Change has been successfully merged into the git repository by Young-Soo Roh
13245,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/emfstore/job/gerrit/282/ : UNSTABLE
13247,0,Change has been successfully merged into the git repository by Johannes Faltermeier
13260,0,Change has been successfully merged into the git repository by Laurent Delaigue
13264,0,"Patch Set 8:(3 comments)Laurent, thanks for your review. I have addressed your comments."
13267,0,Change has been successfully merged into the git repository by Katharine Hirsch
13270,0,Change has been successfully cherry-picked as 3c92349eaacb30bb4a57f3be01d400db54a8242a by Matthew Khouzam
13277,0,Change has been successfully merged into the git repository by Doug Schaefer
13281,0,Change has been successfully merged into the git repository by Pascal Rapicault
13283,0,"Patch Set 1:Adjusted code when it seems there is no base yet in the git structure.  Wehad an index out of bounds  and later, the workspace was generating a NPE and when changing to workspace,the Patch Set selected was remaining  to its current value. So the PatchSet selector indicated ""Workspace"" and the code was showing ""PatchSet 1"""
13290,0,Change has been successfully merged into the git repository by Maxime Porhel
13293,0,Change has been successfully cherry-picked as 1ad8252b0f62209ed9bbfd5b9e98588e1fe98baa by Arthur van Dorp
13294,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/630/ : UNSTABLE
13297,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/638/ : UNSTABLE
13299,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/623/ : UNSTABLE
13303,0,Change has been successfully cherry-picked as 065e6c3f48c3bf79785500550c9c5d9d1d3eae8f by Claudio Guglielmo
13309,0,Change has been successfully rebased as 846244a53eb1c2c25a8602cfa24456e94d1c776a by saadia dhouib
13313,0,Change has been successfully merged into the git repository by Stephane Begaudeau
13317,0,Change has been successfully merged into the git repository by Stephane Begaudeau
13322,0,Change has been successfully merged into the git repository by Stephane Begaudeau
13327,0,Change has been successfully merged into the git repository by Stephane Begaudeau
13330,0,Change has been successfully merged into the git repository by Christopher Guindon
13336,0,Change has been successfully merged into the git repository by Sravan Kumar Lakkimsetti
13338,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4953/ : UNSTABLE
13341,0,"Patch Set 2: Code-Review+2 Verified+1I am ok with this change as soon as it passes the verification build, Thanks Marc D.!"
13343,0,Change has been successfully rebased as 49e921843f89b9b2ce4ba38004d197428d4dc8cc by Marc Dumais
13345,1,"Patch Set 3:Jonah, I have reviewed org.eclipse.cdt.internal.core.settings.model.ResourceChangeHandler.RcMoveHandler.checkRemove(IPath, ICSourceEntry[]) and agree that it does appear to cover all bases (including bug 311189). I see no issues in limited testing.Shall I submit an alternative patchset which simply removes org.eclipse.cdt.internal.core.model.PathEntryManager.updatePathEntryFromDeleteSource(ISourceRoot) and cleans up its caller as appropriate?"
13350,0,Change has been successfully rebased as cb16dfda33d116ed284fad19f6c26017202f141e by Jonah Graham
13352,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4946/ : UNSTABLE
13354,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4948/ : UNSTABLE
13357,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4842/ : UNSTABLE
13360,0,"Patch Set 4:Not sure how to reproduce, but the added protection makes sense.Thanks Marc !"
13363,0,Change has been successfully rebased as 9655088708bc5f5c3277d9ddc3c224b3a27320f8 by Marc Khouzam
13367,0,Change has been successfully pushed.
13370,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2723/ : UNSTABLE
13373,0,Change has been successfully merged into the git repository by Eugen Neufeld
13376,0,Change has been successfully merged into the git repository by Dani Megert
13381,0,Change has been successfully rebased as f8ab763da7ca7c8878cd1c82b5794a5c58c31ba0 by Benoit Maggi
13385,0,Change has been successfully merged into the git repository by saadia dhouib
13388,0,Change has been successfully merged into the git repository by Laurent Redor
13393,0,Change has been successfully merged into the git repository by Laurent Redor
13398,0,Change has been successfully pushed.
13401,0,Change has been successfully merged into the git repository by Elena Laskavaia
13405,0,Change has been successfully merged into the git repository by Dani Megert
13407,0,Change has been successfully merged into the git repository by Christian W. Damus
13415,0,Change has been successfully merged into the git repository by Benoit Maggi
13418,0,Change has been successfully merged into the git repository by Uwe Stieber
13421,0,Change has been successfully merged into the git repository by Eugen Neufeld
13424,0,Change has been successfully merged into the git repository by Uwe Stieber
13428,0,Change has been successfully merged into the git repository by Sebastian Struckmann
13432,0,Change has been successfully merged into the git repository by Dani Megert
13434,0,Change has been successfully merged into the git repository by Sebastian Struckmann
13440,0,Change has been successfully pushed.
13443,0,Change has been successfully merged into the git repository by Marvin Mueller
13445,0,Change has been successfully pushed.
13448,0,Change has been successfully merged into the git repository by Laurent Redor
13457,0,Change has been successfully rebased as 54467b896d34ba62d7a87164ef2572c85eec3728 by Camille Letavernier
13460,0,Change has been successfully merged into the git repository by Laurent Delaigue
13473,1,"Patch Set 4: Code-Review-1The code looks okay to me, I don't want to merge it now since I'd prefer to have more tests but I know more tests are blocked by another bug. So we''l resolve the other bug and come back here afterwards."
13478,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9383/ : UNSTABLE
13483,1,"Patch Set 1: Code-Review-2This is the wrong approach.Please use PreferencePage.createNoteComposite(Font, Composite, String, String)"
13485,1,"Patch Set 1:> This is the wrong approach. >  > Please use PreferencePage.createNoteComposite(Font, Composite, > String, String)Dani, I think this is the good approach. The PreferencePage.createNoteComposite doesn't allow to set the appropriate layout data for the message. Furthermore, it exists a gap between the note part and the message part, causes by the bold style. With my approach the gap doesn't exists anymore."
13487,0,Change has been successfully merged into the git repository by Dani Megert
13491,0,Change has been successfully rebased as c482d11e474f14a9ac87570719d01673d69a053b by Ivan Furnadjiev
13495,0,Change has been successfully rebased as ecd82f23e4891f3cf535dc7ba9ee6c6c1b8a1d7f by Ivan Furnadjiev
13498,0,Change has been successfully merged into the git repository by Olivier Constant
13503,0,Change has been successfully merged into the git repository by Dani Megert
13505,0,"Patch Set 5:Last patch set: the if (!parentsToRefresh.isEmpty()) block was in the false scope, so the async refresh code block was not executed on project deletion. Interestingly, this doesn't broke anything, I could not reproduce the bug with this. Why?"
13508,1,"Patch Set 9:I may have found a corner case that fails with this patch (and with previous ones most likely): From a project such as jbosstools-arquillian, if one deletes ""bundles"". ""features"" and ""tests"" projects simultaneously, it seems like not all children are shown under the folders."
13509,1,"Patch Set 9:> I may have found a corner case that fails with this patch (and with > previous ones most likely): From a project such as > jbosstools-arquillian, if one deletes ""bundles"". ""features"" and > ""tests"" projects simultaneously, it seems like not all children are > shown under the folders.Works fine here."
13513,0,"Patch Set 9:Dumb site. It's just a good old .avi, no need to require Windows Media Player... Anyway, I enabled a download link on this same page (in the Details, beside name and size of the file). You can try to download it and watch it with regular media player on any OS."
13519,0,"Patch Set 4:(1 comment)Looks good (haven't tested in debugger yet), and one question left, see below."
13522,1,"Patch Set 11: Code-Review+1> Dumb site. It's just a good old .avi, no need to require Windows > Media Player... Anyway, I enabled a download link on this same page > (in the Details, beside name and size of the file). You can try to > download it and watch it with regular media player on any OS.Now I've finally saw what you meant.There was a bug in the code which used *project* location of selected element to check the direct children. It should use *container* location instead. I've fixed this now."
13523,0,Patch Set 11: Code-Review+2 Verified+1I tested it and it works fine. Thanks!I let you push the Submit button if you think it's ready.
13524,0,Change has been successfully merged into the git repository by Andrey Loskutov
13526,0,"Patch Set 8: Code-Review+1 Verified+1I tried this patch and it works.The code looks good to me, and refreshing everything seems simpler and efficient enough."
13536,1,"Patch Set 7:> What do you mean with ""not reappear""? The report, as I understand it is let's assume project A with a child B and a child C. A, B and C are projects.With the project layout as hierarchical, bug 461266 reports that if one deletes B, then the folder ""B"" doesn't reappear without a refresh, so folder B and child project C are not visible.With patch set 5. 6 and 7, it seems to me that there in no change regarding this issue: B would still be invisible as a folder upon project deletion.>  The refresh for this never occurred, just put the breakpoint in the actual refresh call: asyncExec() is never called from this PRE_DELETE path.I wouldn't affirm that the code fully works as expected, but with patch set #4, the issue explained above and in the bug report seems to be fixed.The purpose is NOT to refresh on PRE_DELETE but to populate the parentsToRefresh on PRE_DELETE with the parent of the deleted project, then, once the deletion is performed, actually refresh parent on POST_CHANGE."
13537,1,"Patch Set 7:And actually, Patch Set #3 and #4 are most likely wrong too. If we want to populate and consume the parentsToRefresh as part of multiple invocations of resourceChanged (PRE_DELETE and POST_CHANGE), it seems like it has to be a field and connot be a method variable."
13541,1,Patch Set 6:Patch set 6 is radically reduced but still works.
13547,0,Change has been successfully merged into the git repository by Camille Letavernier
13551,0,Change has been successfully merged into the git repository by Camille Letavernier
13554,0,Change has been successfully merged into the git repository by Benoit Maggi
13558,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8535/ : UNSTABLE
13562,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8536/ : UNSTABLE
13563,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8537/ : UNSTABLE
13565,0,Change has been successfully merged into the git repository by Thomas Wolf
13567,1,Patch Set 2:PS1 failure was expected: contained only the new test. Fix added in PS2.
13572,0,Change has been successfully merged into the git repository by Matthias Sohn
13574,0,Change has been successfully merged into the git repository by Christian W. Damus
13584,1,"Patch Set 2:(2 comments)I admit I have no idea how to deal with cancelling the wait should something bad happen to the tid module in the meantime (it's still considered running, but the event request died a tragic death) or the caller cancels."
13585,1,"Patch Set 2:> (2 comments) >  > I admit I have no idea how to deal with cancelling the wait should > something bad happen to the tid module in the meantime (it's still > considered running, but the event request died a tragic death) or > the caller cancels.I tried a few things to implement the cancellation of the blocking call. I'll update a patch on top of this patch for demonstration purposes. If it is ok, then we can update the patch chain to it."
13587,1,"Patch Set 4:> > (2 comments) > > > > I admit I have no idea how to deal with cancelling the wait > should > > something bad happen to the tid module in the meantime (it's > still > > considered running, but the event request died a tragic death) or > > the caller cancels. >  > I tried a few things to implement the cancellation of the blocking > call. I'll update a patch on top of this patch for demonstration > purposes. If it is ok, then we can update the patch chain to it.See patch set https://git.eclipse.org/r/#/c/71815/"
13590,1,Patch Set 7: Code-Review-1(1 comment)Found an impediment for the cancelling.
13596,0,Patch Set 9: Code-Review+2 Verified+1(1 comment)Looks good to me!
13599,0,Change has been successfully cherry-picked as 7858428e8f9736a7c77e96fc338af04589e41341 by Genevieve Bastien
13610,0,Change has been successfully cherry-picked as e2f5644360b0ff9198f406f36416f255f43a1a08 by Genevieve Bastien
13618,1,"Patch Set 1:> you can say you really do care about receiving the right information and are ready to wait for it if necessary or if null will be enough for you.Ok, presented this way it's more fitting. ""You may wait on something, somewhere, maybe"", and the caller doesn't have to know what exactly.Another question: how would callers know if a particular aspect is a BlockingAspect or not. They have to do an instanceof check? Would it be possible/desirable to just put the blocking version of the method in the main interface too (and have a default implementation that defers to not blocking) ?"
13619,1,"Patch Set 1:I was thinking that if they use the aspect directly, then they know if it's blocking or not. Otherwise, they typically would call TmfTraceUtils.resolveAspectBlaBlaBla and there we would add a blocking parameter. They instanceof check would be done there, so no need to bother the base interface with an additional method.What would be less costly? A default method in the base interface that calls the other method for all aspect classes, or an instanceof check at runtime?"
13620,1,"Patch Set 1:Instanceof check implies all callers have to know about it, so I would prefer the alternative.We just have to make sure what makes sense as a default setting (to block or not to block), and analysis that don't really care can just call the standard resolve(event);"
13634,0,Change has been successfully cherry-picked as 1add07ef9bf1a919993397267da8e29056086b4f by Genevieve Bastien
13639,0,Change has been successfully merged into the git repository by Donald Dunne
13650,0,Change has been successfully merged into the git repository by Matthias Sohn
13658,0,Change has been successfully rebased as 643aeb5ab9160b97b1f6188d7fa8ff8fff6b28f4 by Christian W. Damus
13662,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8492/ : UNSTABLE
13664,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8491/ : UNSTABLE
13674,0,Change has been successfully merged into the git repository by Matthias Sohn
13678,0,Change has been successfully cherry-picked as 0b49411f2ee6f08b7eccee93fb69b485af0d2bf2 by Alexandre Montplaisir
13681,0,Patch Set 1:Thanks for the reviews!
13682,0,Change has been successfully cherry-picked as 562bbba8c5bec46b5bc0e04ddd8c97641b3965f3 by Alexandre Montplaisir
13684,0,Patch Set 2:looks good. How can I test this? Is there an easy way to strip line numbers but keep file names?
13685,1,"Patch Set 2:I think I got this when recompiling a binary possibly with a different compiler version, but not retaking the trace. So the file would still be found (we don't do build_id matching check yet :( ) but the offset would not make perfect sense."
13686,1,"Patch Set 2:> I think I got this when recompiling a binary possibly with a > different compiler version, but not retaking the trace. So the file > would still be found (we don't do build_id matching check yet :( ) > but the offset would not make perfect sense.can you paste here a sample of the addr2line output, I'll just hardcode it in code to test it."
13687,1,"Patch Set 2:I don't have the exact binary anymore unfortunately, but the line that blew up was of the form ""/home/alexandre/src/program/file.c:?""Here is another one using a ""valid"" address that does not map to symbols in the file:    __GNU_EH_FRAME_HDR    :?"
13690,0,Change has been successfully cherry-picked as 1da28b13e6d9d7d5dd4f7b83ae6bc765417c0189 by Alexandre Montplaisir
13694,0,Change has been successfully merged into the git repository by Amine Ouraiba
13697,0,Change has been successfully merged into the git repository by Amine Ouraiba
13702,0,Change has been successfully merged into the git repository by Laurent Redor
13707,0,Change has been successfully merged into the git repository by Laurent Redor
13710,0,Change has been successfully merged into the git repository by Mickael ADAM
13714,0,Change has been successfully rebased as 9bdd416e3021c3b202bf968309de7b088febe1fc by Ivan Furnadjiev
13719,0,Change has been successfully merged into the git repository by Kaloyan Raev
13722,0,Change has been successfully merged into the git repository by Markus Knauer
13728,0,Change has been successfully merged into the git repository by Markus Knauer
13736,0,Change has been successfully merged into the git repository by Donald Dunne
13739,0,Change has been successfully merged into the git repository by Greg Watson
13745,0,Change has been successfully merged into the git repository by Stefan Xenos
13752,0,Change has been successfully merged into the git repository by Silenio Quarti
13755,0,Change has been successfully merged into the git repository by Greg Watson
13758,0,Change has been successfully pushed.
13765,0,Change has been successfully merged into the git repository by Ryan Brooks
13769,1,"Patch Set 5:(1 comment)We have the build ID information, and it will get put into this object, so it will be ""used"". However right now the UI does not allow selecting multiple different files that have the same path. So for now the information will be there but redundant.But once we do support multiple files with the same path, we won't have to go back and modify this object."
13771,0,Patch Set 5:Thanks for the review!
13772,0,Change has been successfully cherry-picked as c84cc3ccdb3a7d4ee78a270b398f2783b8db13a6 by Alexandre Montplaisir
13786,0,Change has been successfully merged into the git repository by Silenio Quarti
13792,0,Change has been successfully pushed.
13794,0,Change has been successfully pushed.
13800,0,Change has been successfully pushed.
13811,0,Change has been successfully merged into the git repository by Matthias Sohn
13819,1,Patch Set 13:This one?> I found that the problem doesn't happen if we add a check for equality of classes (not just instanceof) in the base TmfProjectModelElement.equals(). Then you can even have a '.views' trace in an experiment and the Views element is independent. Do you want to fix it in this patch?It's related to TmfProjectModelElement not this patch...
13821,0,"Patch Set 13:> > LTTng-Analyses scripts would usually be used before the ""Views"" > like CFV/RV, because they can be used to narrow down on interesting > locations in a trace. >  > _Never_ assume anybody's workflow ;-)As we discussed in person, let's try to get it in as is and decide whether we change the name or add a sorter to have the views folder on top in the project meeting.No gain to continue discussing this here further :-)"
13826,1,"Patch Set 13:> OK, so what was presented at the meeting had ""Views"" first. So I better understand why Bernd is now surprised that Views comes last in the list.> So I guess keeping lexicographical order was not discussed at that meeting then, perhaps this aspect was overlooked.1- Gerrit please don't reformat this!2- It was discussed, and the thought was it should be like photoshop/code block/qt creator/audacity/eclipse's plugins menu: external stuff below the built-in. We actually wondered if out of alphabetical order was going to make the users experience off and concluded that changing the convention set up by many other applications would be far worse.3- Notice the question mark next to views? that was there in the wiki, we didn't come to a conclusion on that point. It was more of a ""We can't think of anything better, let's put this here then update it"" item.4- The main conclusion (according to my memory) was the #2 was the proposal to take. We moved on to other topics after, we did not spend 3 hours on this one point.I think the amount of responses though is good, it shows that we all care about the users getting the best trace analysis experience possible. Tomorrow we shall discuss this and come to a reasonable understanding, I am certainAlso, memory is malleable, I think we need to take better minutes for all that is user facing. I personally considered the wiki the standard to test against."
13828,0,"Patch Set 13: Code-Review+2Thanks for the reviews and comments all!I'm fine with potentially re-ordering the elements in this tree. But please all keep in mind that:* Alphabetical ordering makes it easier to find specific options when the tree contains several (5+) elements. It's only at 3 now, but others could be added in the future.* Changing the name to continue respecting alphabetical ordering may work now, but again, new elements may be added, like ""Aweseome stuff"", and will end up sorted first.* Internationalization may change the names completely.I'm open to do some tweaks, but we have to be very careful with this, and be sure that ""putting Views first"" is more important than all the points above."
13829,0,Change has been successfully cherry-picked as 5c727157f22f0299163c40ed1e189467fcbb788c by Alexandre Montplaisir
13834,1,"Patch Set 1: Code-Review-1Seems like a genuine failure, test cases will have to be updated."
13841,0,"Patch Set 11:(6 comments)Thanks for the comments all, I had some questions, I'll update the other stuff for now.> But would it be possible/desirable to automatically expand the views element when expanding the parent trace?Would make sense, in fact we could look at auto-expanding many things, like the Project (if it's the only one), and both ""Experiments"" and ""Traces"". If it's possible..."
13854,0,Patch Set 2: Code-Review-1The Help messages are not reported correctly anymore (getParent() does not return the trace element!). Next push will have the fix.
13859,0,Change has been successfully merged into the git repository by Stefan Xenos
13861,0,Patch Set 1: Code-Review+2 Verified+1Great catch!
13862,0,Change has been successfully cherry-picked as cd655e55d84b4a0e9bc6321c6bc544a13c4ba0c9 by Bernd Hufmann
13865,0,Change has been successfully cherry-picked as 1f761da853fa55483de517914a67e3e4b7aadb0a by Jeff Johnston
13869,0,Change has been successfully rebased as ed02dace3b024be692341d925e65caf06f57144b by Shuai Li
13878,0,Change has been successfully merged into the git repository by Cedric Brun
13883,0,Change has been successfully cherry-picked as bb22321667dc282c11204aacbd82051c4c2c0b71 by Jeff Johnston
13894,0,Change has been successfully cherry-picked as 266dc922f16911f77ddb283b5aac4847b9d4d70c by Matthew Khouzam
13895,0,Patch Set 3: Code-Review+1 Verified+1This is still good
13897,0,Change has been successfully merged into the git repository by Brian de Alwis
13900,0,Change has been successfully merged into the git repository by Dani Megert
13902,0,"Patch Set 1: Code-Review+1The change works as expected: the autosave countdown suspends when showing a menu in a view (or main menu), and restarts when the menu is hidden again. The code looks good to me."
13910,0,Change has been successfully rebased as 8cbc706919d1f69aa676d3407ae0c34ac7e24fb8 by vincent lorenzo
13913,0,Change has been successfully merged into the git repository by Alex Panchenko
13916,0,Change has been successfully merged into the git repository by Kit Lo
13919,0,Change has been successfully merged into the git repository by Benoit Maggi
13923,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/ecoretools.gerrit/54/ : UNSTABLE
13925,0,Change has been successfully merged into the git repository by Cedric Brun
13926,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/sirius/job/ecoretools.gerrit/55/ : UNSTABLE
13928,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/ecoretools.gerrit/53/ : UNSTABLE
13933,0,Change has been successfully merged into the git repository by Donald Dunne
13937,0,Change has been successfully merged into the git repository by Thierry BLIND
13940,0,Change has been successfully merged into the git repository by Christian Pontesegger
13942,0,Change has been successfully merged into the git repository by Brian de Alwis
13945,0,"Patch Set 1: Code-Review+1I tested the change on ""create new"", and it looks really good. see http://i.imgur.com/ktpuI5h.png"
13949,0,Change has been successfully merged into the git repository by Brian de Alwis
13952,0,Change has been successfully merged into the git repository by Christian Pontesegger
13955,0,Change has been successfully merged into the git repository by Christian Pontesegger
13959,0,"Patch Set 1:(2 comments)Looks like a good idea, please check some comments:"
13963,0,Change has been successfully merged into the git repository by Andrey Sobolev
13967,0,Change has been successfully merged into the git repository by Christian Pontesegger
13970,0,Change has been successfully merged into the git repository by Alois Zoitl
13980,0,Change has been successfully merged into the git repository by Alois Zoitl
13985,0,Change has been successfully merged into the git repository by Thomas Watson
13990,0,Change has been successfully merged into the git repository by Alois Zoitl
14005,0,Change has been successfully merged into the git repository by Alois Zoitl
14012,0,Change has been successfully merged into the git repository by Alois Zoitl
14024,0,Change has been successfully merged into the git repository by Alois Zoitl
14035,0,Change has been successfully merged into the git repository by Alois Zoitl
14044,0,Change has been successfully merged into the git repository by Alois Zoitl
14052,0,Change has been successfully merged into the git repository by Alois Zoitl
14060,0,Change has been successfully merged into the git repository by Alois Zoitl
14066,0,Change has been successfully rebased as 8ee61487c5321371e4f612a8d53f1d21d79ee6d7 by Remi Schnekenburger
14070,0,Change has been successfully cherry-picked as e2e730965ec7612b41afb18a6b3fd266be93c26e by Patrick Tasse
14074,0,Change has been successfully merged into the git repository by Benoit Maggi
14078,0,Change has been successfully merged into the git repository by Eric Poirier
14083,0,Change has been successfully rebased as f1f5da69e164ec9c6867db1fa24e8c47a6b0066d by vincent lorenzo
14088,0,Change has been successfully rebased as 383ce11295ca54a4f00298ba60e294351cfbadf4 by vincent lorenzo
14093,0,Change has been successfully rebased as 91841ef05ae54bee5f93ee0ea12e8e794eceeca1 by Remi Schnekenburger
14100,0,Change has been successfully rebased as e7a3c3ce7d26cd2fbd850f95fcdfcbaeff5fe297 by vincent lorenzo
14107,1,"Patch Set 8: Code-Review-1Hi,I would prefer to avoid adding the dependence to the RcpTT library in this patch.The first step is to make the test pass (standalone) then the refactor (adding the use of the library) should be done in step 2 (Bug 492226)Regards,Benoit"
14113,0,Change has been successfully merged into the git repository by Benoit Maggi
14117,0,Change has been successfully merged into the git repository by Olivier Constant
14118,0,Patch Set 1:No CQ is needed any longer since the author has become a committer on the project. :)
14123,0,Change has been successfully merged into the git repository by Marcel Hein
14136,0,Change has been successfully rebased as bf80a8cb11fd449f9d57094e6330491fd2456988 by vincent lorenzo
14142,1,Patch Set 2:> - Undo rename so difference can be compared more easily:> .widgets.richtext renamed back to .widgets.epf.richtext for project> folder and packages.We should actually get this right as soon as possible. Let's use final names and location
14143,1,"Patch Set 2:>We should actually get this right as soon as possible. Let's use final names and locationOk, I will revert back but try to get a more comparable patch."
14149,1,"Patch Set 3:We don't need specific releng options anymore, so let's remove richtext/.project and richtext/pom.xml (And change the parent of the plug-in to be top-pom-extras)Apparently I can't comment directly on the files, so I'll push some changes directly (Especially for the properties view integration, which was already incorrect for the previous version of the widget) after the releng is fixed"
14165,0,Change has been successfully cherry-picked as bc65d02fd88c2ef62a7bd8d630b0d1fe5e1f9c4f by Andi Bur
14175,0,Change has been successfully merged into the git repository by Steve Monnier
14193,0,Change has been successfully merged into the git repository by Steve Monnier
14200,0,Change has been successfully merged into the git repository by Marvin Mueller
14203,0,Change has been successfully merged into the git repository by Olivier Constant
14207,0,Change has been successfully merged into the git repository by Sebastian Struckmann
14209,0,Change has been successfully merged into the git repository by Marvin Mueller
14215,0,Change has been successfully merged into the git repository by Marcel Hein
14220,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/588/ : UNSTABLE
14223,0,Change has been successfully cherry-picked as 7e787deb93e07aba3503bafec0d5b199c39e5b60 by Andi Bur
14242,0,Change has been successfully merged into the git repository by Steve Monnier
14245,0,Change has been successfully merged into the git repository by Dani Megert
14247,1,"Patch Set 15: Code-Review-2- The bundle dependencies are incorrect for this view: such a generic view should depend neither on GMF nor on UML2/SysML. When developing this kind of view, you should ask yourself following questions: What happens if we select the element in the model explorer or in the tables? What happen if we use UML-RT models?- The plugin is not integrated in a feature, thus cannot be distributed with Papyrus, even if the doc is.- Some icons can probably be shared with some other components: exapnd all, collapse, go to. I would be surprised that they are redefined in each plugin that needs them- the references plugin do not have api tooling preferences set, not some of the other preferences."
14269,0,Change has been successfully rebased as dbfc46bf0d3bfcc3a8a4a7eb09093ad0bc223996 by Remi Schnekenburger
14274,0,Change has been successfully merged into the git repository by Sebastian Struckmann
14282,0,Change has been successfully merged into the git repository by Andreas Sewe
14298,0,Change has been successfully merged into the git repository by vincent lorenzo
14301,0,Change has been successfully merged into the git repository by Arun Thondapu
14303,1,"Patch Set 1: Code-Review+2The change resolves the actual problem, a missing command, and the solution works perfectly. The code is good to me, and it is ready to go to Master."
14304,0,Change has been successfully merged into the git repository by Patrik Suzzi
14306,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1123/ : UNSTABLE
14308,0,Change has been successfully merged into the git repository by Andrey Sobolev
14310,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1122/ : UNSTABLE
14319,1,Patch Set 4:> Does anyone know why org.eclipse.dltk.ruby.formatter is failing > during the build?There is a change in core master which Ruby module requires. As other modules but the one the gerrit is for is always using master and your patch was against older rev they got out of sync. Simply rebasing your patch on top of dltk.core master was enough.
14320,0,"Patch Set 4:(3 comments)Nice. A few simple comments for now, will check some more later tonight."
14326,1,Patch Set 2:(10 comments)Nothing important just my quest for cleaner codebase. A read through the code no functional testing. It would be nice to add project specific compiler settings so we all see same errors/warnings. As this is going to Java 7 maybe removing redundant type arguments is sane default to start with.
14327,0,"Patch Set 2:(1 comment)All the classes are exported currently, might be some could be moved to ""internal"" package? e.g. SearchMatch looks like a good candidate, it could have ""public static final"" fields then, without getters.It would be quite nice to have tests for this code."
14329,0,Patch Set 2:(19 comments)Some replies of course :-)
14332,1,"Patch Set 5:Well, I still would like to have a deeper look here, unfortunately was too busy last week, sorry about that."
14340,0,Change has been successfully merged into the git repository by Alex Panchenko
14343,0,Change has been successfully merged into the git repository by Thierry BLIND
14350,0,Change has been successfully merged into the git repository by Thierry BLIND
14352,0,Change has been successfully pushed.
14355,0,Change has been successfully merged into the git repository by Jad El-khoury
14358,0,"Patch Set 3: Code-Review+2Thanks Doug, Thanks Marc-Andre !"
14359,0,Change has been successfully merged into the git repository by Alvaro Sanchez-Leon
14362,0,"Patch Set 3:Upps, I thought you were done with the testing, I am glad it's now working for you, I will wait for your vote next time :-) Thanks !!"
14366,0,Patch Set 1: Code-Review+2Awesome. Thanks Alvaro.
14372,0,Patch Set 2: Code-Review+2That is super clever!
14373,0,Change has been successfully cherry-picked as df0d516959d4c77c1695d0d43b7f1b52cd212e83 by Marc-Andre Laperle
14375,0,"Patch Set 2:Dawid, Michal, could somebody just have a little look at my patch to be sure I don't break anything? Thank you!"
14382,0,Change has been successfully merged into the git repository by Thierry BLIND
14389,0,Change has been successfully merged into the git repository by Matthias Sohn
14391,0,Change has been successfully cherry-picked as c2364c0dfc14d0955990b04cf2d2a55ae1e211fc by Roberto Oliveira
14397,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
14403,0,Change has been successfully merged into the git repository by David Green
14408,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-incubator/82/ : UNSTABLE
14414,0,Change has been successfully merged into the git repository by Sam Davis
14418,0,Change has been successfully merged into the git repository by Sam Davis
14421,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-incubator/80/ : UNSTABLE
14422,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-incubator/81/ : UNSTABLE
14425,0,Change has been successfully merged into the git repository by Christian W. Damus
14429,0,Change has been successfully cherry-picked as 7a976efdb2847457450b1863473d6ddac51dc1b6 by Roland Grunberg
14432,0,Change has been successfully merged into the git repository by Vikas Chandra
14436,0,Change has been successfully merged into the git repository by Doug Schaefer
14440,0,Change has been successfully rebased as 1f95c6cd61c4c8024128b903bd40cca5a572a551 by Doug Schaefer
14444,0,Change has been successfully merged into the git repository by Ryan Brooks
14447,0,Change has been successfully merged into the git repository by Dirk Fauth
14450,0,Change has been successfully merged into the git repository by Dirk Fauth
14452,0,"Patch Set 1:Olivier, hope you don't mind if I ask you to review this minor change. Thanks and Best Regards"
14453,1,"Patch Set 1: Code-Review+1Hello Patrick ! I can review it, but unfortunately, I am not committer on this project !"
14456,0,Change has been successfully merged into the git repository by Vikas Chandra
14457,0,Patch Set 1:Thanks to you all!
14463,0,Change has been successfully merged into the git repository by Dani Megert
14468,0,Change has been successfully merged into the git repository by Dani Megert
14472,0,Change has been successfully merged into the git repository by Dani Megert
14481,0,Change has been successfully merged into the git repository by Dani Megert
14487,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2676/ : UNSTABLE
14490,0,Change has been successfully rebased as 7a99f6f3b4cbd71d62ccce8621cd9aa5ceeaa1a0 by Eugen Neufeld
14493,0,Change has been successfully merged into the git repository by Eugen Neufeld
14500,0,Change has been successfully merged into the git repository by Stephan Herrmann
14504,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8430/ : UNSTABLE
14506,0,Change has been successfully merged into the git repository by Matthias Sohn
14510,0,Change has been successfully pushed.
14512,1,"Patch Set 1:Could you please explain the test cases - testMethodRef2 and testMethodRef3? There seem to be too many methods in the test classes which make them look confusing. Also, adding comments to the test files would be useful for debugging/fixing them in future."
14516,1,"Patch Set 1:Explanation for tests: testMethodRef2 and testMethodRef3Each of the these tests contains 7 SAM interfaces corresponding to 7 different method reference variations. (I've tried to split them into 2*7=14 Testcases, but this would push the patch size above 1000 lines)Each variation is named by a method in Util.java.If you want to isolate a single variation for debugging, look up the SAMn interface used in its method and remove all other SAM interfaces and related methods and invocations from main to get a small test case.The difference between testMethodRef2 and testMethodRef3 is that in testMethodRef2 the input is usually passed in output, while in testMethodRef3, the input is ignored and new X instances are created, which means that in testMethodRef3, more occurrences of X can be replaced by I."
14517,1,"Patch Set 1:Example:Reduced test for variation ""static_method"" from testMethodRef2 would be:class X {  String value;  public X(String value) {    this.value = value;  }  public String m1() {    return value;  }  public String m2() {    return value;  }  public static X staticMethod(X x) {    return x;  }}interface SAM1 {  X apply(X x1);}public class Util {  String static_method(X x1) {    SAM1 sam1 = X::staticMethod;    return sam1.apply(x1).m2();  }  public static void check(String expected, String actual) {    if (!expected.equals(actual)) {      System.out.println(expected + "" != "" + actual);    } else {      System.out.println(""OK: "" + expected);    }  }  public static void main(String[] args) {    Util util = new Util();    check(""static_method"", util.static_method(new X(""static_method"")));  }}"
14520,0,Change has been successfully merged into the git repository by Sergey Prigogin
14530,0,Change has been successfully merged into the git repository by Stefan Xenos
14534,0,Change has been successfully cherry-picked as 434f84d26a416358bed77ce0ba1ca2f4fabb0de4 by Jeff Johnston
14541,0,Change has been successfully merged into the git repository by Sasikanth Bharadwaj
14555,0,Change has been successfully cherry-picked as c61fcbabb1114355724177061f3d4f6de2df4b89 by Matthew Khouzam
14563,0,Change has been successfully cherry-picked as c6c7b9b2a6a014d538b47b5048f7674c16ceb0ff by Roland Grunberg
14575,0,Change has been successfully merged into the git repository by Sergey Prigogin
14578,0,Change has been successfully merged into the git repository by Thomas Watson
14583,0,Change has been successfully merged into the git repository by Maxime Porhel
14589,0,Change has been successfully merged into the git repository by Sergey Prigogin
14594,1,"Patch Set 6: -Code-Review> > > I think we should not have any specific assumption for the > Oomph > > > setup in our code. > > > > +1. Plus, in general it should not be required to add such a lot > of > > code to set the default. >  > I'm not sure I understand what the ""+1"" above meant.Me neither :-)I'm removing my -2, but the bad feeling of changing this so late remains."
14608,0,Change has been successfully rebased as 796002f12efd8046df2b775695b9413b7559beb2 by Ernesto Posse
14610,0,Change has been successfully merged into the git repository by Markus Keller
14616,0,Change has been successfully merged into the git repository by Stefan Xenos
14619,1,"Patch Set 2:Sergey, this test is asserting the wrong result. We need to disablethe test before pushing the fix. After the fix goes in, I'llre-enable the test with the correct result."
14623,0,Change has been successfully merged into the git repository by Silenio Quarti
14628,0,Change has been successfully merged into the git repository by Sergey Prigogin
14631,0,Patch Set 2:(1 comment)Thanks. One minor style nit
14634,0,Change has been successfully merged into the git repository by Maxime Porhel
14636,1,Abandoned
14644,0,Change has been successfully merged into the git repository by Jacques Bouthillier
14648,1,"Patch Set 1:Thanks for the review! I checked the default implementation: It  can handle both windows and dialogs. (see http://i.imgur.com/FOjaaIa.png). Therefore, I'm changing bindings accordingly. Plus, for Mac, I'm going to use M4 instead of M1. Therefore, I'm splitting this into several bindings:for win32, gtk: next: M1+TAB (prev: M1+M2+TAB)for carbon, cocoa: next: M4+TAB (prev: M4+M2+TAB)I will add one binding per platform, only for the four platforms mentioned above. As per one of the previous discussion with Lars, I assume motif and photon are not supported anymore. Please tell me if I'm wrong."
14651,0,Patch Set 3: Code-Review+2 Verified+1Perfect!  Thanks Patrik.  I hadn't realized that the tab actions don't wrap.
14652,0,Change has been successfully merged into the git repository by Brian de Alwis
14656,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
14657,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
14660,0,Change has been successfully rebased as e1505355083546a016606161d092cb21f6c0a6a9 by Martin Schreiber
14663,0,Change has been successfully merged into the git repository by Tristan Faure
14668,1,"Patch Set 2:The article would benefit from a discussion of ticks. What is a ""tick""? It might be helpful to include some discussion regarding how you decide how many ticks you need. i.e. you need to determine how many chunks of work you have to do. If some of those chunks of work are bigger than others, you may want to assign more than one tick to those chunks of work...It might be helpful to wrap code inside the text with <code></code>. I was initially confused by the first sentence in section 2.1 (""...overloads for convert and..."" reads better, I think, if we make it more obvious that convert is a method).It's not clear to me from the article how cancelling works with the split() method.I don't like the term ""callee"" (maybe that's a personal preference thing). Isn't the callee just the implementation? Maybe that misses a subtlety."
14686,0,Change has been successfully merged into the git repository by Wayne Beaton
14709,0,Change has been successfully merged into the git repository by Laurent Redor
14711,0,Change has been successfully merged into the git repository by Laurent Redor
14721,0,Change has been successfully merged into the git repository by Laurent Redor
14728,0,"Patch Set 1:This looks fine to me, and the tooling seems to work fine."
14729,0,Change has been successfully cherry-picked as 43e9ef733dd476a8f40bf508aa68977413acd035 by Roland Grunberg
14732,0,Change has been successfully merged into the git repository by Andrey Sobolev
14733,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1115/ : UNSTABLE
14737,0,Change has been successfully merged into the git repository by Andrey Loskutov
14743,0,Change has been successfully merged into the git repository by Laurent Redor
14747,0,Change has been successfully merged into the git repository by Laurent Redor
14754,0,Change has been successfully cherry-picked as f5ed8325270f93e44c6a7206456ddfb3208f9011 by Oli Schmid
14757,0,Change has been successfully merged into the git repository by Andrey Loskutov
14760,0,Change has been successfully merged into the git repository by Tristan Faure
14762,0,Change has been successfully merged into the git repository by Eric Williams
14769,0,Change has been successfully merged into the git repository by Yvan Lussaud
14773,0,Change has been successfully merged into the git repository by Jacques Bouthillier
14778,0,Change has been successfully merged into the git repository by Benoit Maggi
14782,0,Change has been successfully merged into the git repository by Jacques Bouthillier
14785,0,Change has been successfully cherry-picked as 4c70be19bd4fe7c14e4ac395c79f600561e57b40 by Hannes Mueller
14788,0,"Patch Set 2: Code-Review+1==Code Review==Looks good to me==Smoke Tests==Creation of a Composite diagram: OKAdd a Class: OKAdd Port on Class: OKCreation of a CSS file: OKSet the StyleSheet on the diagram: OK==Functional Tests==- In the CSS, set the portPosition parameter for the Port to :    *'inside': OK   *'outside': OK   *nothing: Ok- Resize the port: OK- In the CSS, customize the Class to (isPackage: true, isOval:true;), the Port follow the border: OK==Boundaries Tests==- Set (shadow:true) to the Port: OK- Set (isOval:true) to the Port: OK"
14791,0,Change has been successfully rebased as f83683ebc8a27729fdd53f12fdb92f851c0f4c19 by Remi Schnekenburger
14795,0,Change has been successfully merged into the git repository by Jacques Bouthillier
14802,0,Patch Set 1: Code-Review+2 Verified+1Looks good.
14803,0,Change has been successfully merged into the git repository by Philip Wenig
14805,0,"Patch Set 1: Code-Review+1(1 comment)Thanks! This fixes all of the Model Explorer problems, as well as duplication of elements in the browse dialogs.  I would give it a +2 except I have a question about what looks like a potential resource leak (see file comments)."
14806,1,"Patch Set 1:The queries are instantiated only once, so there is no need to dispose the label provider, or at least a dispose mechanism should be also implemented for Queries.In this special case, it seems that the class is not used anymore. I will check that more in detail."
14810,0,Change has been successfully rebased as 1c69a0fcd8a966a3fb5c91d93cb3da3ac7944dfe by Remi Schnekenburger
14814,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/957/ : UNSTABLE
14816,0,Change has been successfully merged into the git repository by Laurent Goubet
14818,0,Change has been successfully merged into the git repository by Ed Merks
14822,0,Change has been successfully pushed.
14827,0,Change has been successfully cherry-picked as dbae61184081f664f87d144a33875c0ebb8c58f2 by Bernd Hufmann
14830,0,Change has been successfully merged into the git repository by Eyrak Paen
14833,0,Change has been successfully merged into the git repository by Matthias Sohn
14841,0,Change has been successfully rebased as 88dd4220dc29d7e5b3a187a3d43f1f457afe7bc7 by Ivan Furnadjiev
14845,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
14850,0,Change has been successfully merged into the git repository by Laurent Redor
14854,0,Change has been successfully merged into the git repository by Marcel Hein
14856,0,Change has been successfully merged into the git repository by Laurent Redor
14876,0,"Patch Set 2:(3 comments)Dear Mr. Olaf, I updated the change as your comments, thank you."
14879,0,Patch Set 5:(1 comment)Looks good except for one nit (see comment).
14880,1,"Patch Set 5:(1 comment)Dear Mr. Olaf, sorry for my mistake and late update. I updated the change as your comment, thank you."
14883,0,"Patch Set 6: Code-Review+1I haven't downloaded it and tried to build, but on inspection, the changes look great."
14885,0,Change has been successfully merged into the git repository by Olaf Bergmann
14889,0,Change has been successfully pushed.
14896,0,Change has been successfully merged into the git repository by Benoit Maggi
14903,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/956/ : UNSTABLE
14907,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/1072/ : UNSTABLE
14909,0,Change has been successfully merged into the git repository by Laurent Goubet
14912,0,Change has been successfully merged into the git repository by Michael Wenz
14916,0,Change has been successfully merged into the git repository by Sergey Prigogin
14921,0,Change has been successfully merged into the git repository by Sergey Prigogin
14922,0,Patch Set 2: Code-Review+2 Verified+1Thanks for your patch Nick!
14923,0,Change has been successfully merged into the git repository by Fred Bricon
14930,0,Change has been successfully merged into the git repository by Sergey Prigogin
14935,0,Change has been successfully rebased as ccbab86d6cd5f9c6c6a2e53cd6505a95b45d6f30 by Sergey Prigogin
14940,0,Change has been successfully merged into the git repository by David Green
14946,0,Change has been successfully merged into the git repository by Donald Dunne
14950,0,Change has been successfully merged into the git repository by Donald Dunne
14960,0,Change has been successfully merged into the git repository by Sergey Prigogin
14966,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
14970,0,Change has been successfully merged into the git repository by Sam Davis
14972,0,Change has been successfully merged into the git repository by Megumi Telles
14984,0,Change has been successfully merged into the git repository by Stephan Herrmann
14991,0,Change has been successfully merged into the git repository by Stephan Herrmann
15002,0,Change has been successfully merged into the git repository by Ernesto Posse
15004,0,Change has been successfully merged into the git repository by Stephan Herrmann
15018,0,Change has been successfully merged into the git repository by Lars Vogel
15023,0,Change has been successfully merged into the git repository by Nathan Ridge
15025,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5038/ : UNSTABLE
15028,0,Change has been successfully rebased as 8a2fd3307b261c0452f3ea08235a7d898a11a7b8 by Jeff Johnston
15031,0,Change has been successfully merged into the git repository by Jacques Bouthillier
15041,0,Change has been successfully merged into the git repository by Lars Vogel
15049,0,Change has been successfully merged into the git repository by Sam Davis
15053,0,Change has been successfully rebased as bf8e20ec445b8927fcb6c0da09fc0136802d3fe4 by Sam Davis
15056,0,Change has been successfully merged into the git repository by Michal Niewrzal
15059,0,Change has been successfully cherry-picked as 182e9b8fbfc925ac36b536806865b9dea24048b8 by Marc-Andre Laperle
15078,0,Change has been successfully cherry-picked as 8b5167225f2211bae5310374d371fc47987667e7 by Bernd Hufmann
15092,0,Change has been successfully cherry-picked as ee96206fc119baa23e5a4a1c2b87106be5c13587 by Bernd Hufmann
15098,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8397/ : UNSTABLE
15100,0,Change has been successfully merged into the git repository by Matthias Sohn
15105,1,Patch Set 5: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4883/ : UNSTABLE
15107,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4878/ : UNSTABLE
15109,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4875/ : UNSTABLE
15112,1,Patch Set 11: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4955/ : UNSTABLE
15114,1,Patch Set 6: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4893/ : UNSTABLE
15116,1,Patch Set 7: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4902/ : UNSTABLE
15122,0,Change has been successfully rebased as 6e1b9b408de9c7854c9f7434089c920dbad2b9ad by Doug Schaefer
15125,1,Patch Set 10: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4951/ : UNSTABLE
15129,0,Change has been successfully cherry-picked as f7b76689cf4b7465587c2a161f0af8b00645d877 by Alexander Kurtakov
15132,0,Change has been successfully cherry-picked as 2dccabbf86cc91b96078c79579cb9c93f49f4131 by Alexander Kurtakov
15135,0,Change has been successfully merged into the git repository by Thomas Watson
15138,0,Change has been successfully cherry-picked as e7cad8c7b5f64f6c5ab2d42104b11513ddd9884d by Alexander Kurtakov
15143,0,Change has been successfully merged into the git repository by Alexander Kurtakov
15149,1,Patch Set 4: Code-Review+1No objections
15150,0,Change has been successfully cherry-picked as 93206da9f08137b677092121640ebd45a1afaea7 by Matthew Khouzam
15156,0,Change has been successfully cherry-picked as 5e4a5f15c7bd5d85d0f3058de489176d65da8ef3 by Roberto Oliveira
15159,0,Change has been successfully merged into the git repository by Lars Vogel
15161,0,"Patch Set 2: Code-Review+2 Verified+1Updated commit message, thanks"
15162,0,Change has been successfully cherry-picked as 1d58a53cb619f02840b441e9cca980fd0272d5b7 by Alexandre Montplaisir
15166,0,Change has been successfully merged into the git repository by Pascal Rapicault
15169,0,Change has been successfully merged into the git repository by Eric Poirier
15175,0,Change has been successfully merged into the git repository by Jonas Helming
15180,0,Change has been successfully merged into the git repository by Sergey Prigogin
15183,0,Change has been successfully merged into the git repository by Eugene Tarassov
15191,0,Change has been successfully cherry-picked as 206243fca36517dedb5f2a3b3ec7bad20c4df135 by Matthew Khouzam
15200,0,Change has been successfully merged into the git repository by Pascal Rapicault
15203,0,Change has been successfully merged into the git repository by Sean Muir
15207,0,Change has been successfully merged into the git repository by Pascal Rapicault
15211,0,Change has been successfully cherry-picked as 622acf0254cb97c536d75e1d6a9da4dc488f4f8b by Alexandre Montplaisir
15214,1,Patch Set 3:Nothing broke.
15216,0,Patch Set 3:Thanks for the fixes Raph!
15226,0,Change has been successfully cherry-picked as 5dbb9ef2d1f9277f149f64f38b56f72cf6fadbcf by Alexandre Montplaisir
15230,0,"Patch Set 4:The thread maintains its priority even when it is not running. This can be useful, for example to point out: ""Hey this high-priority is not running very often! What's going on?""."
15236,0,Change has been successfully cherry-picked as 5c209c22e755ae3d44dc6513d62ccb63366d1b7e by Alexandre Montplaisir
15247,0,Change has been successfully merged into the git repository by Eugen Neufeld
15249,0,Change has been successfully pushed.
15256,0,Change has been successfully merged into the git repository by Sean Muir
15261,0,Change has been successfully merged into the git repository by Laurent Redor
15264,0,Change has been successfully cherry-picked as eeff806b38531e9d07bdcdc9cca78f3242f6d10b by Bernd Hufmann
15273,0,Change has been successfully merged into the git repository by Sean Muir
15278,0,Change has been successfully merged into the git repository by Eric Poirier
15282,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
15285,0,Change has been successfully merged into the git repository by Eugen Neufeld
15289,0,Change has been successfully rebased as 560483c3396e6790985001bc051f1a1f7c23f723 by Benoit Maggi
15296,1,Patch Set 4:For information I am not able to reproduce the failure on my machine with a mvn clena install -Pproduct.
15304,0,Change has been successfully merged into the git repository by Doug Schaefer
15314,1,"Patch Set 2: Code-Review-1do not merge,there is a problem"
15318,0,Change has been successfully merged into the git repository by Benoit Maggi
15322,0,Patch Set 1:I somehow cannot submit this!?
15326,0,Change has been successfully merged into the git repository by Lars Vogel
15328,0,"Patch Set 2:(1 comment)Thanks, minor suggestion"
15332,0,Change has been successfully merged into the git repository by Benoit Maggi
15347,0,"Patch Set 4: Code-Review-1(22 comments)updating the API for variables support is a good idea.Code needs some updates, see inline comments.Further your test fragment was not added to the master pom, so it is not part of the build"
15355,0,Change has been successfully merged into the git repository by Christian Pontesegger
15370,0,Change has been successfully merged into the git repository by Eugen Neufeld
15373,0,Change has been successfully cherry-picked as 8b131c41b2caf73584d39e4a69f831b888dc3ae8 by Bernd Hufmann
15379,0,Change has been successfully merged into the git repository by Roxanne Joncas
15382,0,Change has been successfully merged into the git repository by Roxanne Joncas
15387,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8648/ : UNSTABLE
15389,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9096/ : UNSTABLE
15395,0,Change has been successfully merged into the git repository by Lars Vogel
15402,0,Change has been successfully merged into the git repository by Christian Pontesegger
15411,0,Change has been successfully pushed.
15414,0,Change has been successfully merged into the git repository by Christian Pontesegger
15417,0,Change has been successfully merged into the git repository by Alexander Kurtakov
15421,0,Change has been successfully merged into the git repository by Christian Pontesegger
15427,0,Change has been successfully merged into the git repository by Christian Pontesegger
15437,0,Change has been successfully merged into the git repository by Tristan Faure
15440,0,Change has been successfully merged into the git repository by Christian Pontesegger
15443,0,Change has been successfully merged into the git repository by Alexander Kurtakov
15447,0,Change has been successfully merged into the git repository by Eugen Neufeld
15449,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2616/ : UNSTABLE
15454,0,Change has been successfully merged into the git repository by Lars Vogel
15456,0,Patch Set 1:Looks good. C
15458,0,Change has been successfully merged into the git repository by Jonas Helming
15461,0,Change has been successfully merged into the git repository by Alexander Kurtakov
15467,0,Change has been successfully merged into the git repository by Sasikanth Bharadwaj
15472,0,Change has been successfully merged into the git repository by Benoit Maggi
15474,0,Change has been successfully merged into the git repository by Sarika Sinha
15481,1,Patch Set 1:I would like to have your advice on this patch.My major concerns is: may we add the papyrus extension point for pathmap in the root plugin?Thanks for your quick answer.
15485,0,Change has been successfully merged into the git repository by Benoit Maggi
15490,0,Change has been successfully merged into the git repository by Alexander Kurtakov
15496,0,Change has been successfully merged into the git repository by Laurent Redor
15501,1,Patch Set 2: Code-Review-2During test I notice that the concern has been mistakenly removed.
15504,0,Change has been successfully merged into the git repository by Sasikanth Bharadwaj
15513,0,Change has been successfully rebased as 9af9ef498ef619563ec52dbfa78202dd8000a5f9 by Benoit Maggi
15516,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9081/ : UNSTABLE
15517,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9083/ : UNSTABLE
15522,0,Change has been successfully merged into the git repository by Jonas Helming
15530,0,Change has been successfully merged into the git repository by Alexander Kurtakov
15533,0,Change has been successfully merged into the git repository by Christian Pontesegger
15538,0,Change has been successfully merged into the git repository by Christian Krause
15541,0,Change has been successfully merged into the git repository by Sarika Sinha
15546,0,Change has been successfully merged into the git repository by Christian Krause
15548,0,Change has been successfully merged into the git repository by Alexander Kurtakov
15553,0,Change has been successfully merged into the git repository by Sergey Prigogin
15556,0,Change has been successfully merged into the git repository by Sergey Prigogin
15561,0,Change has been successfully pushed.
15562,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/384/ : UNSTABLE
15564,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/380/ : UNSTABLE
15567,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/362/ : UNSTABLE
15569,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/383/ : UNSTABLE
15570,0,Change has been successfully pushed.
15572,1,Patch Set 1:Commit message is missing a bug id. Otherwise LGTM.
15573,1,"Patch Set 1:> Commit message is missing a bug id. Otherwise LGTM.Do you enforce the bug-commit mapping? Some other projects such as GitHub don't make that mandatory, and I find it quite convenient."
15576,0,Change has been successfully pushed.
15577,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/382/ : UNSTABLE
15578,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/345/ : UNSTABLE
15582,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/331/ : UNSTABLE
15583,0,"Patch Set 2:(5 comments)Did a code review but could not really try. I think I need a SSE with the correct fix? Shouldn't this version dependency updated to Manifest.mf. Also it is good to considerm how will this work with html editor, if it will conflict or not?"
15589,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/329/ : UNSTABLE
15591,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/378/ : UNSTABLE
15593,0,Change has been successfully pushed.
15594,1,Patch Set 5:Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/381/ : UNSTABLE
15599,0,Change has been successfully rebased as 77fda006a5627ac0fff431bb38512fd68aa1bb45 by Doug Schaefer
15602,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/372/ : UNSTABLE
15607,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/368/ : UNSTABLE
15609,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/377/ : UNSTABLE
15611,0,Change has been successfully pushed.
15612,1,Patch Set 5:Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/379/ : UNSTABLE
15614,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/369/ : UNSTABLE
15619,0,Change has been successfully pushed.
15624,0,Change has been successfully pushed.
15627,0,Patch Set 6: Code-Review+1+1 Looks good to me
15631,0,Change has been successfully pushed.
15633,1,"Patch Set 1: Code-Review+1Adding my +1.  I have also asked Alina to add more detail of the fixes when she gets back in.  As she has indicated, this is a work in progress, and in some scenarios, reverts back to the full model refresh Victor had supplied.  I have also seen a few model notifier problems where the outline isn't picking up all changes, but these will be handled with followup bug fixes in M7."
15640,0,Change has been successfully cherry-picked as 8d5d4aa449fbb38f65b714a4394a5903b7a0b330 by Patrick Tasse
15642,1,Patch Set 1:(1 comment)This needs a comment I think to avoid accidental optimizations... by me.
15644,0,Change has been successfully cherry-picked as f8f46a524251008dd9f55bfc3c87445a0c490758 by Patrick Tasse
15648,1,"Patch Set 5: Code-Review+2This makes sense. People who speak to me know how I had issues with entry/events and would mess up the terms, but this is much clearer to me. I assume outsider will benefit from this even more!"
15653,0,"Patch Set 2: Code-Review-1(7 comments)This is great, some nits"
15659,0,Change has been successfully cherry-picked as 9afd04ae193f1d08a2bff6abcc1da72bdb3c8786 by Marc-Andre Laperle
15675,0,"Patch Set 5: Code-Review+1 Verified+1OK then, I'm fine with this this."
15686,0,Change has been successfully cherry-picked as 6d28f3e811a00bfb4bda9282fbb095040da9674d by Marc-Andre Laperle
15694,0,Change has been successfully merged into the git repository by Johannes Dorn
15696,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/374/ : UNSTABLE
15698,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/376/ : UNSTABLE
15700,0,Change has been successfully pushed.
15704,0,Change has been successfully merged into the git repository by Eric Williams
15708,0,Change has been successfully merged into the git repository by Katharine Hirsch
15712,0,Change has been successfully merged into the git repository by Katharine Hirsch
15715,0,Change has been successfully merged into the git repository by Katharine Hirsch
15720,0,Change has been successfully merged into the git repository by Katharine Hirsch
15725,0,Change has been successfully cherry-picked as 9a869f27883255582a805c7001118eb7a0d07c79 by Marc-Andre Laperle
15730,0,Change has been successfully merged into the git repository by David Miller
15735,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4923/ : UNSTABLE
15737,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4933/ : UNSTABLE
15741,0,Change has been successfully merged into the git repository by Jonah Graham
15751,0,"Patch Set 14:Jean-Christian, could you rebase this and resolve the conflicts? Thanks!"
15752,0,"Patch Set 14:> Jean-Christian, could you rebase this and resolve the conflicts? > Thanks!I'll do it."
15757,0,"Patch Set 18: Code-Review+1 Verified+1This looks good to me, we need another reviewer."
15761,0,Change has been successfully cherry-picked as 362994252683e3cd5594ed0e607836abd12c2c09 by Matthew Khouzam
15771,0,Patch Set 4:(36 comments)Great work for that amount of time!Here are my initial comments. They are based on batch set 4 but apply still.We will have another round of review later after the updates for these comments.
15779,1,"Patch Set 11: Code-Review-1(14 comments)It works well. CallStackEntry needs to override the matches method to be able to search for function names.Besides, I would prefer that you rearrange the code to avoid new APIs in the AbstractTimeGraphView class. This you can achieve by moving the code from the internal package to the package where the AbstractTimeGraphView is and make the relevant methods package visible.I tried a few things and was able to remove the additional API in AbstractTimeGraphView. I'll upload the changes so that you don't need to do it."
15785,1,Patch Set 3:> (1 comment) >  > Will fix upFixed up! Sorry for the mistake :)
15793,0,"Patch Set 5:Thanks Matthew for the reviews, I think this branch is good to go now."
15794,0,Change has been successfully cherry-picked as 94c57af7ec5a1651804ac53a9acb45920aae97f6 by Alexandre Montplaisir
15798,0,Change has been successfully merged into the git repository by Tristan Faure
15801,0,Change has been successfully merged into the git repository by Tristan Faure
15806,1,"Patch Set 4:> Abandoned >  > Gerrit has been benefiting from this problem (cache never closing > repositories) performance wise. I have concerns about the > performance impact of this change series. For now, I abandon them I > will restore them once I assessed the performance impact on our > production servers.I fixed the different areas that suffered performance degradation because of this series of changes.I did testing to make sure those changes would no longer have performance impacts on our production, we can proceed with them."
15811,0,Change has been successfully merged into the git repository by Matthias Sohn
15813,1,"AbandonedGerrit has been benefiting from this problem (cache never closing repositories) performance wise. I have concerns about the performance impact of this change series. For now, I abandon them I will restore them once I assessed the performance impact on our production servers."
15819,0,Change has been successfully merged into the git repository by Balazs Grill
15826,1,"Patch Set 5:> Abandoned >  > Gerrit has been benefiting from this problem (cache never closing > repositories) performance wise. I have concerns about the > performance impact of this change series. For now, I abandon them I > will restore them once I assessed the performance impact on our > production servers.I fixed the different areas that suffered performance degradation because of this series of changes.I did testing to make sure those changes would no longer have performance impacts on our production, we can proceed with them."
15830,0,Change has been successfully merged into the git repository by Matthias Sohn
15832,1,"AbandonedGerrit has been benefiting from this problem (cache never closing repositories) performance wise. I have concerns about the performance impact of this change series. For now, I abandon them I will restore them once I assessed the performance impact on our production servers."
15833,1,Patch Set 4:Wow - this was really close. I tested this on Windows and already typed in my +2 message. Only picking up one cup of coffee saved us from accidentily submitting this
15834,1,"Patch Set 4:> Wow - this was really close. I tested this on Windows and already > typed in my +2 message. Only picking up one cup of coffee saved us > from accidentily submitting thisI still think this fix is the right thing to do, not closing resource is never a good idea but this change is defeating the RepositoryCache creator original intent, which I think was to keep stuff around as long as possible by using SoftReference.I tested this series and so far the memory consumption drastically improved because the RepositoryCache is no longer slowly growing but I can see that the disk IO increased and performance degraded in operations involving many repositories, like listing projects in Gerrit (ls-projects command).Relying on the SoftReference mechanism to evict old unused repository is not a good idea because the eviction becomes unpredictable. For example, our Gerrit master JVM heap is set to 58GB, the old generation space(Tenured Generation) is 44GB which leaves 14GB for the eden and survivor spaces. The old generation space eventually becomes full (mostly by the caches including the unbound RepositoryCache) and then the application starts slowing down because GC keeps kicking in. The SoftReference are still not being collected at that point because the buffer of available memory is not bellow the threshold that would make GC consider the SoftReference.All this to say that I will do more testing on our production server but if it turns out that the performance impact is too big, I(we) will need to consider reimplementing the RepositoryCache to achieve the goal of keeping repository in memory but without being forever (I am not sure yet what would be the eviction criteria)."
15844,1,Abandoned
15846,0,Change has been successfully pushed.
15848,0,"Patch Set 1: Code-Review+2 Verified+1Hi Flo,it looks good, but you don't need necessarily ""this"" in getter methods:return this.ion;return ion;would work too."
15849,0,Change has been successfully merged into the git repository by Philip Wenig
15851,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/579/ : UNSTABLE
15854,0,Change has been successfully cherry-picked as aa485580f1bb3429426e3dede46bf1b754de963b by Ivan Motsch
15866,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
15870,0,Change has been successfully rebased as 5df37a81b7f4ae85b68c68796746f1a21e90471e by Mickael ADAM
15873,0,Change has been successfully merged into the git repository by Stephane Begaudeau
15877,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2586/ : UNSTABLE
15882,0,Change has been successfully merged into the git repository by Eugen Neufeld
15885,1,Patch Set 1:> What's up now? findbugs crashed...While struggling with https://git.eclipse.org/r/#/c/69099/ to finally switch the build to compile against neon I switched the build to java 8 and the findbugs version we currently use doesn't support Java 8. There are some bundles in neon which can't be unpacked by Java 7's unpack200 since they have been packed using Java 8 and Java 7 is unable to unpack them and p2 is too dumb to use the corresponding jar as a fallback :-(I switched back the egit.gerrit job to use Java 7 and retriggered the buildI am now first trying to find the cause for the problems I currently face with running egit core tests from maven (also using mars target platform). So I am now first bisecting these problems before tackling the additional problems caused by the switch to neon
15887,0,Change has been successfully merged into the git repository by Matthias Sohn
15890,0,Change has been successfully merged into the git repository by Alexander Kurtakov
15894,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
15898,0,Change has been successfully merged into the git repository by Markus Tiede
15903,0,Change has been successfully merged into the git repository by Lars Vogel
15908,0,Change has been successfully merged into the git repository by Jonas Helming
15911,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
15913,0,Change has been successfully merged into the git repository by Jan Sievers
15917,1,"Patch Set 2: Code-Review+1The hello world template no longer shows up in the dialog, which I believe addresses bug 491193"
15919,0,Change has been successfully merged into the git repository by Lars Vogel
15921,0,Change has been successfully pushed.
15931,0,Change has been successfully merged into the git repository by Donald Dunne
15937,0,Change has been successfully merged into the git repository by Celine Janssens
15945,0,Change has been successfully rebased as 2d186539cadb1a99eacecc53d549e8e9eaeadbcf by florian noyrit
15954,0,Change has been successfully merged into the git repository by Donald Dunne
15957,0,Change has been successfully merged into the git repository by Benoit Maggi
15968,0,Change has been successfully merged into the git repository by Donald Dunne
15971,0,Change has been successfully merged into the git repository by Ed Merks
15975,0,Change has been successfully merged into the git repository by Jay Arthanareeswaran
15979,0,Change has been successfully merged into the git repository by Markus Knauer
15984,0,Change has been successfully cherry-picked as a19e7bb2b195e83a15f70caad757c69609482594 by Alexandre Montplaisir
15989,0,Change has been successfully merged into the git repository by Donald Dunne
16001,0,Change has been successfully merged into the git repository by Donald Dunne
16007,0,Change has been successfully merged into the git repository by Amine Ouraiba
16010,1,"Patch Set 2:Note that you can still get help from the schema itself; you don't need (and shouldn't have!) a template to encourage you to do the wrong thing. In any case, there are plenty of existing actionSet examples in the Eclipse projects themselves for anyone who needs to create one."
16011,0,Patch Set 2: Code-Review+2 Verified+1Ok. I'm convinced. Thanks Alex.
16012,0,Change has been successfully merged into the git repository by Lars Vogel
16014,1,Patch Set 1: Code-Review-1I think this is the wrong fix. We should remove the references to this template instead.
16018,0,"Patch Set 2:Matthias, I'm good it with. One thing I was wondering if it should also provide the XZ compressed variants?https://bugs.eclipse.org/bugs/show_bug.cgi?id=471693"
16019,0,"Patch Set 2:> Matthias, I'm good it with. One thing I was wondering if it should > also provide the XZ compressed variants? >  > https://bugs.eclipse.org/bugs/show_bug.cgi?id=471693I think this would be possible if we can either* use python 3.3 which includes bindings for liblzma* or can install the backports.lzma package which backports this to python 2see Bindings > Python in http://tukaani.org/xz/"
16020,0,Change has been successfully merged into the git repository by Gunnar Wagenknecht
16024,0,Change has been successfully merged into the git repository by Christian W. Damus
16029,0,Change has been successfully merged into the git repository by Elson Yuen
16032,0,Change has been successfully merged into the git repository by Amine Ouraiba
16039,0,Change has been successfully merged into the git repository by Ryan Brooks
16042,0,Change has been successfully merged into the git repository by Amine Ouraiba
16045,0,Change has been successfully merged into the git repository by Amine Ouraiba
16048,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16052,0,Change has been successfully merged into the git repository by Lars Vogel
16055,0,Change has been successfully merged into the git repository by Lars Vogel
16057,0,Change has been successfully cherry-picked as 9ee366e2cdd84599be81af3c175ac9381c76e9d7 by Matthew Khouzam
16061,1,"Patch Set 1:FYI, can you also revert a merged Gerrit review, via Gerrit (revert on the old review, have to +2 and merge the new review for the revert)"
16064,0,Change has been successfully merged into the git repository by Stefan Xenos
16068,0,Change has been successfully cherry-picked as c4f9456f2c0430124e998b59e3b03542b511dae5 by Genevieve Bastien
16072,0,"Patch Set 2: Code-Review+1These are damn fine tests. +1 for now, +2 when io analysis comes in."
16075,1,Patch Set 2: Code-Review-1(18 comments)First pass. Please check all integers and make sure they shouldn't be ints... I kinda got tired of commenting near the end.
16077,0,Patch Set 2:(5 comments)Thanks for the review. I checked all Integer/int and Long!
16081,0,Patch Set 3: Code-Review+1 Verified+1(1 comment)Good to go
16083,0,Change has been successfully cherry-picked as 6d02c5c1779cd9f9cf2b3a37bca68408b7d4129a by Genevieve Bastien
16085,0,Change has been successfully merged into the git repository by Lars Vogel
16093,1,"Patch Set 1:(4 comments)Various small errors and one suggestion.Also I suggest to add a screenshot, that is usefully much nicer for such developments."
16097,0,Change has been successfully merged into the git repository by Lars Vogel
16098,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8884/ : UNSTABLE
16103,0,Change has been successfully cherry-picked as f20f0966622e3797ff2a5426ea45e5f27dd73be3 by Matthew Khouzam
16112,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8750/ : UNSTABLE
16116,0,Change has been successfully merged into the git repository by Lars Vogel
16119,0,Change has been successfully merged into the git repository by Donald Dunne
16130,0,Change has been successfully merged into the git repository by Andreas Sewe
16135,0,"Patch Set 3:> Patch Set 3: Published edit on patch set 2This one addresses the first two concerns. The third one I want to explicitly mention the API, as it might be useful to people using it."
16138,0,Change has been successfully merged into the git repository by Sopot Cela
16144,0,Change has been successfully merged into the git repository by Shuai Li
16159,0,Change has been successfully rebased as 39507c0d322af147497a7b2d3fd375f1abc4afe3 by Shuai Li
16163,0,Change has been successfully merged into the git repository by Shuai Li
16180,0,Change has been successfully merged into the git repository by Donald Dunne
16186,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4177/ : UNSTABLE
16188,1,Patch Set 5: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4882/ : UNSTABLE
16192,0,Change has been successfully rebased as e44726097ce0c3ae808136206ace4e789c2ab4d8 by Doug Schaefer
16197,0,Change has been successfully merged into the git repository by Matthias Sohn
16200,0,Change has been successfully merged into the git repository by Celine Janssens
16206,1,"Patch Set 9:>  > However, since then, I have created a Papyrus-RT Oomph setup model > for developers: >  > https://git.eclipse.org/r/#/c/68693/ Well, in fact, you can't use this as is because it needs the Master build already to have published a Neon-based build.  Otherwise, Oomph won't be able to create a complete and correct PDE Target.You could use this, but first you would have to (temporarily) remove the Papyrus-RT features from the requirements in the ""Papyrus-RT Main Plug-ins"" and ""Papyrus-RT Codegen and Runtime Plug-ins"" targlets in the root Papyrus-RT project.  They are only needed if you import only a subset of the source projects from git; if you import them all, then your workspace will have all of the RT bundles and so you won't need them in the PDE target (which, of course, won't be possible until there's a neon build)."
16208,1,"Patch Set 10:> Uploaded patch set 10.This rebases the patch set onto a neon branch that is fast-forwarded onto the latest from master, which includes some changes in core POMs and the deletion of an obsolete RCPTT project."
16215,0,Patch Set 8:Well done ! Tell me if it is ok for you and I will try to fetch your patch on my IDE. Is there any specifications that your patch required to work in my IDE ?
16216,1,"Patch Set 8:> Well done ! > Tell me if it is ok for you and I will try to fetch your patch on > my IDE. > Is there any specifications that your patch required to work in my > IDE ?Hi, C├®line,When I took over this patch from R├®mi, I simply imported the Neon branch of the Papyrus project from Oomph and then just added all of the source projects from the Papyrus-RT git repo into my workspace.However, since then, I have created a Papyrus-RT Oomph setup model for developers:    https://git.eclipse.org/r/#/c/68693/You might trying importing the master branch of that with the Neon platform selection, which should bring in the appropriate Neon versions of dependencies.  Note that you do actually also need the base Papyrus project from the Papyrus setup model also."
16222,0,Change has been successfully merged into the git repository by Greg Watson
16230,0,Change has been successfully merged into the git repository by Greg Watson
16239,0,Change has been successfully merged into the git repository by Andreas Sewe
16241,0,Patch Set 3: Code-Review+2 Verified+1Cool. Thanks Mickael.
16242,0,Change has been successfully merged into the git repository by Lars Vogel
16247,0,Change has been successfully merged into the git repository by Matthias Sohn
16252,0,Change has been successfully merged into the git repository by Sebastian Struckmann
16256,0,Change has been successfully merged into the git repository by Andrew Johnson
16260,0,Change has been successfully rebased as 925bc234de9e44402bdb5ec195f234af5b480adf by Mickael ADAM
16265,0,Change has been successfully cherry-picked as 83779eeb52ee97b92709142712d13949752c4344 by Ivan Motsch
16269,1,"Patch Set 1: Code-Review-1(1 comment)I can confirm this patch fixes the bug.Unfortunately with this patch applied it seems that Group.setBackgroundColor() doesn't work. To test this, launch ControlExample from the org.eclipse.swt.examples package. Navigate to the ""Group"" tab, and set a background color. The Group's background stays gray."
16270,0,"Patch Set 1:(1 comment)Hi Eric, thank you for the review! I checked this with the ControlExample with gtk2 and gtk3 and the background seems to be correctly set: https://imgur.com/a/8OGj2Am I missing something? I noticed that the color selection dialog is a bit strange (selecting a color using the color wheel doesn't actually select the color until you drag the tiny circle on it). Could it be that the color was not selected, and that's why the background remained gray?"
16273,0,"Patch Set 3:> (1 comment) >  > Hi Eric, thank you for the review! I checked this with the > ControlExample with gtk2 and gtk3 and the background seems to be > correctly set: https://imgur.com/a/8OGj2 > Am I missing something? I noticed that the color selection dialog > is a bit strange (selecting a color using the color wheel doesn't > actually select the color until you drag the tiny circle on it). > Could it be that the color was not selected, and that's why the > background remained gray?So I think I know what the issue is: what version of GTK3 is installed on your system?If you'll notice in Group.setBackgroundColor() there is a version split: GTK3.16 and above sets its background color differently than versions of GTK below 3.16. I'm testing on GTK3.18 and it doesn't work, but when I test on 3.14 it does. Is it possible your system GTK is below 3.16?"
16278,0,"Patch Set 6: Code-Review+2 Verified+1Looks good to me, nice patch.I just added the ""/*int*/"" comment again for the paintHandle() method since it looks like it got lost between patch set 3 and 4. Not a big deal."
16279,0,Change has been successfully merged into the git repository by Eric Williams
16282,0,Change has been successfully merged into the git repository by Amine Ouraiba
16287,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
16290,0,Change has been successfully merged into the git repository by Amine Ouraiba
16293,0,Change has been successfully merged into the git repository by Amine Ouraiba
16302,0,Change has been successfully merged into the git repository by Eric Williams
16304,0,Patch Set 7: Code-Review+1 Verified+1Tested and it looks good to me. Please push.
16308,0,Change has been successfully merged into the git repository by Amine Ouraiba
16317,0,Change has been successfully rebased as a328acd1afcd4f281a5b06962b22089c6e83683e by Ivan Furnadjiev
16324,0,Change has been successfully merged into the git repository by Sopot Cela
16329,0,Change has been successfully merged into the git repository by Marvin Mueller
16333,0,"Patch Set 1: Code-Review+1 Verified+1(1 comment)Looks good, see comments. Thanks!"
16338,0,Change has been successfully merged into the git repository by Thierry BLIND
16342,0,Patch Set 4: Code-Review+2Manual tests from the OSGi console and with p2 were successful. See bug 490922 for details.
16343,0,Change has been successfully merged into the git repository by Markus Knauer
16351,0,Change has been successfully pushed.
16356,0,Change has been successfully merged into the git repository by Ansgar Radermacher
16359,0,Change has been successfully merged into the git repository by Amine Ouraiba
16362,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16365,0,Change has been successfully merged into the git repository by Amine Ouraiba
16367,0,Change has been successfully merged into the git repository by Andreas Sewe
16376,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
16377,0,Patch Set 2: Code-Review+1I like this change; we should additionally deprecate the existing TestingLogAppender class; otherwise I am fine with this.
16384,0,Change has been successfully merged into the git repository by Andreas Sewe
16387,0,Change has been successfully merged into the git repository by Eugen Neufeld
16390,0,Patch Set 7: Code-Review+1(2 comments)Looks good. I like the changes of the explicit Integer.valueOf to the implicit ones. Thanks.
16392,0,Change has been successfully merged into the git repository by Jay Arthanareeswaran
16404,0,Change has been successfully merged into the git repository by Sebastian Struckmann
16407,0,Change has been successfully merged into the git repository by Mickael Istria
16411,0,Change has been successfully rebased as 35902dc73fab05cebd1c4570597dfe3998a6f95a by Shuai Li
16414,0,Change has been successfully merged into the git repository by Noopur Gupta
16417,0,Change has been successfully cherry-picked as d40359cd541c521122c962a23be90d8490deea83 by Mat Booth
16421,0,Change has been successfully merged into the git repository by Johannes Dorn
16424,0,Change has been successfully merged into the git repository by Sebastian Struckmann
16426,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16431,0,Change has been successfully merged into the git repository by Sarika Sinha
16434,0,Change has been successfully cherry-picked as e3e12782c7ee3c257ca9ff812f22b1850cca6a14 by Marc-Andre Laperle
16442,0,Patch Set 14:(2 comments)I would never veto tests and improvements from refactoring!
16451,0,Change has been successfully merged into the git repository by Jonas Helming
16460,0,Change has been successfully merged into the git repository by Andreas Sewe
16463,0,Change has been successfully cherry-picked as 147bf3726f665ac8120deb19b37e1410fa819d97 by Marc-Andre Laperle
16468,0,Change has been successfully rebased as dfab55e73b2ffda69df732b73e6d570c755e13e8 by Patrick Tessier
16477,0,Change has been successfully rebased as 6cc6ef0722ce2b3a989c32f95699a21e9a29906c by Eugen Neufeld
16479,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2561/ : UNSTABLE
16481,0,Change has been successfully merged into the git repository by Eugen Neufeld
16483,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/318/ : UNSTABLE
16484,0,Patch Set 1:(1 comment)This is wonderful. Can you add a few tests for the new scanner?
16486,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/321/ : UNSTABLE
16488,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/323/ : UNSTABLE
16490,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/324/ : UNSTABLE
16493,0,Change has been successfully pushed.
16494,1,Patch Set 5:Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/332/ : UNSTABLE
16496,0,Change has been successfully merged into the git repository by Jacques Bouthillier
16501,0,Change has been successfully pushed.
16505,0,Change has been successfully merged into the git repository by Jacques Bouthillier
16509,0,Change has been successfully merged into the git repository by Lars Vogel
16512,0,Change has been successfully merged into the git repository by Pierre-Charles David
16518,0,Change has been successfully cherry-picked as 3ddee1bf672de09be83e74edb0e9edb574490025 by Claudio Guglielmo
16524,0,Change has been successfully merged into the git repository by Melanie Bats
16526,0,"Patch Set 4: Code-Review+1 Verified+1Patrick, can you just make sure that my updated commit message is good for you?"
16531,0,Change has been successfully cherry-picked as 675b124966f266dab3244a8b47f56ccdbb999023 by Patrick Tasse
16535,1,"Patch Set 3:> can you add more detail how to reproduce this? I added a Thread.sleep in the MaximizePartHandler but it didn't fail FilterColorEditorTest, for example.Whatever delay you add on the maximize handler, add an even longer delay in between getCellBounds() and grabImage() at the beginning of FilterColorEditorTest.testHighlight(), for example. The failure depends on the bounds before and after, though, e.g. if the old location doesn't have any foreground color after the maximize."
16541,0,Change has been successfully merged into the git repository by Melanie Bats
16550,0,Change has been successfully rebased as e6a006c84c0365a341404629c2e5ec1c946720f9 by Patrick Tessier
16553,0,Change has been successfully merged into the git repository by Pascal Rapicault
16555,0,Change has been successfully merged into the git repository by Marc Khouzam
16557,1,"Patch Set 3:The commit message explains the change, but it basically is a change in terminology to move away from using 'trace' and use 'reverse debug' more.  Although those classes are not user-visible, I felt they made the code harder to understand for someone not used to it.  I hope the proposed changes help make it clearer (so easier to maintain).The only functional change is different error messages when toggling reverse debugging fails."
16565,0,Change has been successfully cherry-picked as ee46222aeabd1cb6aacb93adda76f4105f2da415 by Roberto Oliveira
16567,0,Change has been successfully pushed.
16575,1,Patch Set 4: Code-Review+2> I did not reproduce the problem you describeMe neither. Probably a problem in my runtime
16576,0,Change has been successfully merged into the git repository by Florian Barbin
16581,0,Change has been successfully merged into the git repository by Dani Megert
16587,1,Patch Set 5:Can this patch be reviewed? If there is an issue with it let me know. But there are enough bugs in SWT itself to be even blamed for other projects bugs.
16590,1,Patch Set 5:This makes it look very ugly under Windows. See screenshots on the bug report.
16593,0,Change has been successfully merged into the git repository by Uwe Stieber
16597,0,Change has been successfully merged into the git repository by Christopher Guindon
16601,0,Change has been successfully cherry-picked as 9542c43f83d15acff51347c5c5ff597362b0c038 by Ivan Motsch
16605,0,Change has been successfully merged into the git repository by Marvin Mueller
16607,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/325/ : UNSTABLE
16609,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/326/ : UNSTABLE
16612,0,Change has been successfully pushed.
16613,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/330/ : UNSTABLE
16617,0,Change has been successfully merged into the git repository by Lars Vogel
16621,0,Change has been successfully merged into the git repository by Lars Vogel
16624,0,Change has been successfully merged into the git repository by Ansgar Radermacher
16626,0,Change has been successfully merged into the git repository by Marvin Mueller
16636,0,Change has been successfully merged into the git repository by Camille Letavernier
16643,0,Change has been successfully merged into the git repository by Niraj Modi
16647,0,Change has been successfully pushed.
16649,0,Change has been successfully pushed.
16651,0,Patch Set 1: Code-Review+1looks good. Thanks.
16653,0,Change has been successfully merged into the git repository by Jay Arthanareeswaran
16656,0,Change has been successfully merged into the git repository by Philip Wenig
16659,0,Change has been successfully merged into the git repository by Philip Wenig
16662,0,Change has been successfully merged into the git repository by Sergey Prigogin
16663,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4838/ : UNSTABLE
16667,0,Change has been successfully merged into the git repository by Sergey Prigogin
16670,0,Change has been successfully merged into the git repository by David Williams
16672,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/328/ : UNSTABLE
16673,0,Change has been successfully pushed.
16676,0,"Patch Set 2: Code-Review+2 Verified+1Going from 0.3 to 2.0? That seems odd, but assume it is correct since it validates.. Thanks."
16677,0,Change has been successfully merged into the git repository by David Williams
16681,0,Change has been successfully rebased as b1f7f7f7f132d2207d430732f939ddd897a8d96c by Sergey Prigogin
16686,0,Change has been successfully merged into the git repository by Sergey Prigogin
16697,0,Change has been successfully merged into the git repository by Ryan Brooks
16709,0,Change has been successfully merged into the git repository by Ryan Brooks
16712,0,Change has been successfully cherry-picked as d1709ceda78c03b2aa2725ac82b8c3e82b5bdc0e by Patrick Tasse
16717,0,Change has been successfully merged into the git repository by Dani Megert
16720,0,Change has been successfully merged into the git repository by Markus Knauer
16723,0,Change has been successfully merged into the git repository by Markus Knauer
16725,0,Change has been successfully merged into the git repository by Thierry BLIND
16727,1,"Patch Set 1:This patch should definitely solve the problem, but as it changes actual logic, it would be nice to have some additional review ;)"
16732,0,Change has been successfully merged into the git repository by Noopur Gupta
16735,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16739,0,Change has been successfully merged into the git repository by Thierry BLIND
16743,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16746,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16749,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16752,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16755,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16758,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16761,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16764,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16767,0,"Patch Set 1: Code-Review+2They're PDE projects and although we could remove the JDT nature and .classpath, it doesn't really hurt to have them there.  Thanks Stefan."
16768,0,Change has been successfully merged into the git repository by Brian de Alwis
16770,0,Change has been successfully pushed.
16773,0,"Patch Set 1: Code-Review+2 Verified+1Hi Flo, it looks good. But please remove those paths that are use locally only, e.g. ""/Users/fe22st/Desktop/""."
16774,0,Change has been successfully merged into the git repository by Philip Wenig
16777,0,Change has been successfully merged into the git repository by Pascal Rapicault
16780,0,Change has been successfully merged into the git repository by Pascal Rapicault
16784,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7053/ : UNSTABLE
16787,0,Change has been successfully merged into the git repository by Matthias Sohn
16790,0,"Patch Set 6:The copyright headers need to be updated, I guess, and the commit message could be a bit more descriptive (e.g. unchanged/deleted _files_, distinguish where, etc.). But aside from these minors, the change seems fine to me."
16796,1,"Patch Set 7:(17 comments)Hello Matthias,Thank you for your review and sorry for the delay of reaction on my side, I've been unable to work on that earlier.Here is a new patch set with fixes according to your comments. I tried to improve the ThreeWayDiffEntry.scan() method a bit, please tell me if it's ok for you."
16798,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/320/ : UNSTABLE
16799,0,Change has been successfully pushed.
16801,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/317/ : UNSTABLE
16805,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/314/ : UNSTABLE
16807,0,Change has been successfully pushed.
16811,0,Change has been successfully merged into the git repository by Jonathan Nieder
16814,0,Change has been successfully merged into the git repository by Pascal Rapicault
16822,0,Change has been successfully merged into the git repository by Laurent Redor
16825,0,"Patch Set 12: Code-Review+1Tested it out, works like a charm. Thanks Lars!"
16827,0,Change has been successfully merged into the git repository by Lars Vogel
16835,0,"Patch Set 5:Yes, the Boolean is reversed - it actualLu means ""do not generate activator"" if true. I created a minimal patch first of all but I'm happy to reword this to make more sense if you would be happy to approve a slightly bigger delta."
16836,0,"Patch Set 5:I'm not a PDE committer, so I cannot say what will be approved or not, but unless this symbol is API, renaming it to S_SKIP_GENERATE_ACTIVATOR seems to be a nice addition to that change.Or you can just assume it means ""generate activator"" and stop negating the value. The only affected people would be those who already have this set in the dialog settings, that would see there setting reversed after an update. I imagine it's also an acceptable difference that wouldn't hurt too bad since it is easy to troubleshoot (it's easy to remove or add an activator after the fact)."
16839,1,"Patch Set 8: Code-Review-1From memory this does the wrong thing because I did a similar implementation last time. The difference is what the default is if the string is missing in the configuration. If there is no configuration then the settings.getBoolean() will return false (IIRC) which means that you can't tell the difference between someone who hasn't set this value and someone who has explicitly disabled the setting. In fact I think this will have the opposite behaviour in that skipGeneration will now explicitly be false and thus always generate it in the case of a missing value. At least that is the case if getBoolean returns a boolean (as opposed to a Boolean). That said if you've tested it and done all the cases (running with a clean workbench without Oomph modifying the setting behind your back, checking the default works of not set, it persists once you have set it etc.) then I'm happy to withdraw my -1"
16854,0,"Patch Set 11:What happens in the case where you're running against an older workspace where this field has already been set? Doesn't this invert the meaning of previously stored configuration? As much as I like the cleaned up code more I haven't thought about it sufficiently to know if that's an issue (or if it is, whether it's something we can live with). If we're going to invert the setting then we should probably use a different setting for the dialog, and then upgrade it from old to new on first run."
16855,1,"Patch Set 11:> What happens in the case where you're running against an older workspace where this field has already been set? I don't think that is a really bad scenario. Creating a plug-in via the wizard or via the MANIFEST is super simple. And if they set it once, it will work again as before. But I definitely will add this to the N&N to inform people about the change."
16859,0,Change has been successfully merged into the git repository by Stephan Herrmann
16864,0,Change has been successfully merged into the git repository by Jacques Bouthillier
16866,0,Change has been successfully merged into the git repository by Jacques Bouthillier
16870,0,Change has been successfully merged into the git repository by Sergey Prigogin
16879,0,Change has been successfully merged into the git repository by Jacques Bouthillier
16882,0,"Patch Set 7: Code-Review+2 Verified+1Thanks for the rebase, this should apply fine now..."
16883,0,Change has been successfully cherry-picked as c422f500d4622e1aa822a09067e7bbfcbbb6b936 by Alexandre Montplaisir
16887,0,"Patch Set 6: Code-Review+1Great, thanks. I also fixed a typo in the commit msg."
16888,0,"Patch Set 6: Code-Review+2(1 comment)I've hit the same bug, I will abandon my patch with pleasure that's somewhere in my git."
16897,0,"Patch Set 1: Code-Review-1(1 comment)Good catch! Indeed I have a  #define TASK_STATE_MAX     2048on my 4.4 kernel now...Small things, see inline comment, and also KernelStateProvider#VERSION should be bumped to force a rebuild of any existing state system file on disk."
16898,0,Patch Set 1:(1 comment)Thanks for the comments. The new patch addresses the comments and includes an additional assert into existing unit test.
16899,1,"Patch Set 4: Code-Review+1OK, the last failure was a glitch in UI tests. This is good to go."
16905,1,"Patch Set 1:> Hmm, this won't work on Maven until Tycho updates its JDT too.Do you want to open a bug in Tycho so that they update JDT around the time that 4.6 is out? So that we get null annotation fixes"
16906,0,"Patch Set 1:You mean, for 4.6 M6 or 4.6 final? There are indeed a few new nice things coming in M6, including the big fix for Bug 461268."
16907,0,"Patch Set 1:> You mean, for 4.6 M6 or 4.6 final? There are indeed a few new nice > things coming in M6, including the big fix for Bug 461268.I don't know, I guess it depends when they want to release. I just don't want the next Tycho release to stay with 4.5.1 if no want asks for an upgrade."
16911,0,Change has been successfully cherry-picked as 5b3fe39a8d05c26ef78ba634f53e356ca0460fdc by Alexandre Montplaisir
16914,0,Change has been successfully merged into the git repository by Jacques Bouthillier
16929,0,Change has been successfully merged into the git repository by Alexander Kurtakov
16935,0,Change has been successfully merged into the git repository by Jacques Bouthillier
16943,0,Change has been successfully merged into the git repository by Dani Megert
16950,0,Change has been successfully merged into the git repository by Dani Megert
16953,0,Change has been successfully merged into the git repository by Laurent Goubet
16959,0,Change has been successfully merged into the git repository by Melanie Bats
16967,0,Change has been successfully cherry-picked as 26e4a48bb47dd20287ea6e6c1e61fe4500abd2c2 by Marc-Andre Laperle
16979,0,Change has been successfully merged into the git repository by Florian Barbin
16984,0,Change has been successfully merged into the git repository by Andreas Sewe
16993,0,Change has been successfully merged into the git repository by Thomas Watson
16996,0,Change has been successfully merged into the git repository by Thomas Watson
17000,0,Change has been successfully merged into the git repository by Thomas Watson
17003,0,Change has been successfully cherry-picked as a504d79f37ec4e8d9d57782fbaa9925fbad80e84 by Mat Booth
17006,0,Change has been successfully merged into the git repository by Niraj Modi
17009,0,Change has been successfully merged into the git repository by Melanie Bats
17015,0,Change has been successfully merged into the git repository by Donald Dunne
17017,0,Change has been successfully merged into the git repository by Donald Dunne
17023,0,Change has been successfully merged into the git repository by Donald Dunne
17029,0,Change has been successfully merged into the git repository by Donald Dunne
17047,0,Change has been successfully merged into the git repository by Donald Dunne
17057,0,Change has been successfully merged into the git repository by Donald Dunne
17062,0,Change has been successfully merged into the git repository by Yves YANG
17063,0,Patch Set 4: Code-Review-1Comments on previous patchset.How come you're pushing patches at 1 AM on a Sunday? :P
17069,0,"Patch Set 5: Code-Review+2 Verified+1Ok, sounds like a good approach!"
17070,0,Change has been successfully cherry-picked as 085af484cc7f626f6bae5ed57f36ecfbc8dd7d80 by Marc-Andre Laperle
17076,0,"Patch Set 2:I missed this one,  Thanks Marc !"
17077,0,Change has been successfully merged into the git repository by Alvaro Sanchez-Leon
17080,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17083,0,Change has been successfully merged into the git repository by Matthias Sohn
17086,0,Change has been successfully merged into the git repository by Jad El-khoury
17089,0,Change has been successfully merged into the git repository by Jad El-khoury
17098,0,Change has been successfully merged into the git repository by Marc Khouzam
17104,1,Patch Set 6: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4764/ : UNSTABLE
17105,1,Patch Set 6: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4765/ : UNSTABLE
17107,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
17110,0,Change has been successfully cherry-picked as b68eec3c17defb940f0618490d9aa0c865935c7a by Marc-Andre Laperle
17114,0,Change has been successfully merged into the git repository by Sergey Prigogin
17121,0,"Patch Set 4:>  Perhaps you could change all of them in another patch.Yeah that's what I meant, if we could switch all our Messages classes to that pattern, so they don't break if we move them to another package. I'll look into that next time I'm bored enough ;)Thanks for the update and review!"
17122,0,Change has been successfully cherry-picked as 0f7a12d321f8c42b8389533f41df51ffa08882d8 by Alexandre Montplaisir
17126,1,Patch Set 12: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4665/ : UNSTABLE
17129,0,Change has been successfully merged into the git repository by Marc Khouzam
17132,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4047/ : UNSTABLE
17135,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
17137,1,Patch Set 13: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4669/ : UNSTABLE
17141,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3981/ : UNSTABLE
17143,1,Patch Set 17:I'm too tired tonight.  I'll get to this tomorrow.
17144,0,Patch Set 17:(3 comments)Thanks for the update!
17147,1,"Patch Set 3:I have tested Patch Set 3 on Windows 32-bit with Mingw gcc version 4.8.1 and gdb version 7.6.1. The tests were both manual and running SourceLookupTest_7_6.I still need to test Windows/Linux crosses properly. However, I haven't come up with a plan to automate it yet unfortunately. I expect to use QEMU on Arm as with launchpad toolchain (https://launchpad.net/gcc-arm-embedded) as it provides windows, linux and mac toolchains prebuilt. Unfortunately, I don't have access to any mac hardware to run mac tests."
17149,1,Patch Set 9: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4635/ : UNSTABLE
17154,0,"Patch Set 14:(10 comments)Change 15, just pushed is not mergable with head because of test suite changes. But I wanted to resolve the issues raised here first. I am now going to rebase on head and fix up the test mods I made in this gerrit."
17158,1,Patch Set 11: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4638/ : UNSTABLE
17159,1,Patch Set 11:> Build Unstable >  > https://hudson.eclipse.org/cdt/job/cdt-verify/4638/ : UNSTABLEThe only test failure was:    org.eclipse.cdt.core.model.tests.CModelBuilderBugsTest.testModelBuilderBug262785which I can't see how it could be possibly related to these changes so must be intermittent?
17172,0,Change has been successfully rebased as 8d4ea57654a6454b43686678db0363ce74a29fab by Marc Khouzam
17178,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17180,0,"Patch Set 1: Code-Review+1(4 comments)Hi Stefan,in general, it looks good to me. Just some small comments / questions. Please check if they make sense or not.Cheers,Christian"
17183,0,Patch Set 1:(3 comments)> What about the apply transformation wizard? Do you need to change > this as well depending on the kind of parameter?Good point. I added a filter to the transformation wizard that removes parameter configurations that refer to a var or in parameter.
17185,0,Change has been successfully merged into the git repository by Matthias Tichy
17188,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17193,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17196,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17199,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17202,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17204,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4643/ : UNSTABLE
17209,1,"Patch Set 8: Code-Review+2Finally, the build passed.This change is pretty big in terms of API impact.  However, if we don't do it, we are setting ourselves up for a big problem when we need to use GDB's breakpoint id which is already not always a integer.  I'll push this.  I will also document the broken APIs."
17210,0,Change has been successfully merged into the git repository by Marc Khouzam
17212,1,Patch Set 6: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4754/ : UNSTABLE
17213,1,Patch Set 6: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4759/ : UNSTABLE
17217,0,"Patch Set 3: Code-Review+1 Verified+1It looks good to me, a couple of copyright year updates missing but talking to Marc D, we can skip those as he's address them via an script just before the release.Thanks Marc D."
17223,0,Change has been successfully merged into the git repository by Marc Khouzam
17226,0,Change has been successfully cherry-picked as d8dafe76153afe9ba3d87f2b2698fc7564ccb76d by Ivan Motsch
17234,0,Change has been successfully merged into the git repository by Lars Vogel Unavailable until 21.03.2016
17237,0,Change has been successfully merged into the git repository by Lars Vogel Unavailable until 21.03.2016
17241,0,Change has been successfully cherry-picked as 7c60233da0ba6bf81ad109461226044f662fc3cc by Alexandre Montplaisir
17246,0,Change has been successfully merged into the git repository by Marc Khouzam
17248,0,Patch Set 2: Code-Review+2looks good
17249,1,Patch Set 2: Code-Review+2 Verified+1Build failure was the standalone RCP
17250,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
17254,0,Change has been successfully rebased as 1cb7faae953912caa69a40a5be543380eca1b21b by Marc Khouzam
17258,0,Change has been successfully rebased as 25023542e843f327fef8e24d1d647bf38ad06097 by Marc Khouzam
17264,0,Change has been successfully merged into the git repository by Pascal Rapicault
17268,0,Change has been successfully merged into the git repository by Stephan Herrmann
17270,0,"Patch Set 10: -Code-Review> > I mean that Gerrit should not say you changed 150 lines in > > GDBPatternMatchingExpressionsTest.java.  It should say you > changed > > 4 or 5.  That is the change you actually made, no?  Same for the > > other 18 or 19 files that changed. >  > You've done a valuable improvement for our tests, so I'll fix this > last issue myself.Done with patchset 10.  I also removed a couple of @ignores in StepIntoSelectionTest.java which looked wrong.What do you think?"
17274,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4695/ : UNSTABLE
17276,1,Patch Set 5: Code-Review-2Could you please please please turn off your reformatter?  It makes it very hard for us to follow the changes that are made.  We already painful a difficult merge in the MIBreakpointsTest that you had completely reformatted.
17279,1,Patch Set 7: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4701/ : UNSTABLE
17283,0,"Patch Set 7:> > I am not redoing anything. I don't know what are you talking > about? > > Trailing whitespaces? >  > I mean that Gerrit should not say you changed 150 lines in > GDBPatternMatchingExpressionsTest.java.  It should say you changed > 4 or 5.  That is the change you actually made, no?  Same for the > other 18 or 19 files that changed.You've done a valuable improvement for our tests, so I'll fix this last issue myself."
17288,1,"Patch Set 15:I rebased and disable LaunchConfigurationAndRestartTest.testStopAtOtherWithReverseRestartbunch of these tests not working properly, I don't know proper waiting conditions for that, tests they just do wait(1000) (which is pretty much sleep since nobody notifies then) and it is bad for performance and for random failures. Somebody should look at it and unIgnore then after M6"
17291,0,Patch Set 15:> Please somebody push it when its done testing I may not be near computer todayThanks for your efforts Elena!  It will be smoother for all involved thanks to you.
17293,1,Patch Set 15: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4718/ : UNSTABLE
17294,0,"Patch Set 15:There is a single test failure, which seems unrelated.We're good!"
17296,0,Change has been successfully merged into the git repository by Marc Khouzam
17297,1,"Patch Set 15:(2 comments)> I think we  should go ahead with this one so that the new file > structure is in place for M6. >  > I think there are probably some oversights in this change that it > would be nice to fix, so I would like to take the time to do a more > thorough review, but this will have to wait until after M6.  I can > do the review post-commit.Is there a place for doing this review post-commit?I have marked a couple of examples of where comments have been lost, I am happy to add them back in for SourceLookup, but I won't have a chance until next week. Are these comments still valueable?"
17303,1,Patch Set 11:Woops author is wrong.  Sorry.
17306,0,"Patch Set 13: Code-Review+2I think we  should go ahead with this one so that the new file structure is in place for M6.I think there are probably some oversights in this change that it would be nice to fix, so I would like to take the time to do a more thorough review, but this will have to wait until after M6.  I can do the review post-commit."
17307,1,Patch Set 13: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4709/ : UNSTABLE
17308,1,Patch Set 13: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4711/ : UNSTABLE
17309,1,Patch Set 8: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4702/ : UNSTABLE
17313,1,Patch Set 6: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4699/ : UNSTABLE
17319,0,Change has been successfully merged into the git repository by Marc Khouzam
17324,0,Change has been successfully merged into the git repository by Stephan Herrmann
17327,0,Change has been successfully merged into the git repository by Marc Khouzam
17334,0,Change has been successfully merged into the git repository by Ryan Brooks
17336,0,Patch Set 1: Code-Review+1looks good
17338,1,Patch Set 2: Code-Review+2 Verified+1The build failure is something with the Standalone Debugger RCP.  But all the tests past and everything else in the build succeeded.  I will commit this and fix the Sandalone RCP after.
17339,0,Change has been successfully merged into the git repository by Marc Khouzam
17342,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17345,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17354,0,Change has been successfully merged into the git repository by Patrick Tessier
17358,0,Change has been successfully cherry-picked as 074945b3e05398b7107d2fac2d8c8cf0e901e941 by Jeff Johnston
17362,0,Change has been successfully merged into the git repository by Jeff Johnston
17367,0,Change has been successfully merged into the git repository by Donald Dunne
17372,0,Change has been successfully merged into the git repository by Donald Dunne
17378,0,Patch Set 2: Code-Review+1 Verified+1looks good
17381,0,Change has been successfully rebased as 58081e64ef1370f65614c269bd29bee2ad687ef9 by Marc Khouzam
17390,1,"Patch Set 3:> Jonah, I have tried to follow the history of this patch, to > complete it according to your suggestions. Can you have a quick > look at see if what I did looks ok? >  > I am not sure if you thought that we should deprecate more than I > did?(I don't have access to my main dev machine right now, so I can't properly verify the following, I will later today)For me the one that is not there is the org.eclipse.cdt.launch.remote.tabs.RemoteCMainTab, which is still (correctly) referenced by plugin.xml. The problem is that tab and org.eclipse.cdt.launch.remote.tabs.RemoteCDSFMainTab do the same thing, but the latter for debug and the former for run. With the two different tabs for Main we end up in this situation that if you open Debug or Run launch ui, you end up with different UI on screen. I can better explain (with a screenshot if needed) when I get back to my desk.BTW if we don't deprecate RemoteCMainTab, we should not deprecate org.eclipse.cdt.launch.ui.CMainTab either. Final note, what I meant by:>  I don't think I will have time before M6/API freeze to rework this properly.is that I won't have time to refactor/review the code to be able to simply remove CMainTab and all children (including RemoteCMainTab) as that removal needs further updating the plugin.xml. So I do appreciate you deprecating the classes for now.As a final note, I know of at least a few extenders of CMainTab outside of CDT, including TCF, Renesas e2studio and another one."
17391,0,Patch Set 5: Code-Review+2Looks good!
17393,1,"Patch Set 5: -Code-Review> I was just reviewing the class hierarchy of org.eclipse.cdt.launch.ui.CMainTab. > It really should go at some point because it is part of what causes > different looking UI in Run and Debug. However, as CDT's > org.eclipse.cdt.launch.remote.tabs.RemoteCMainTab and TCF's > org.eclipse.tcf.internal.cdt.ui.launch.RemoteCMainTab still are > extenders I recommend we simply deprecate this entire hierarchy for > now and progress with removing the plugin.xml stuff.Thanks Jonah for bringing up this inconsistency in the UI.I have pushed review 68799 which move our remote launch to use the DSFMainTab instead of the old CDI one.I will do another commit to cleanup the CMainTab hierarchy.  We can work with the TCF folks to adapt them, althoug the change is a one-line to change RemoteCMainTab to RemoteCDSFMainTab."
17396,0,Change has been successfully rebased as 6fc6c3c67169d6f5bb6ab1a8336cb06a9320cad0 by Marc Dumais
17399,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4723/ : UNSTABLE
17408,0,Change has been successfully merged into the git repository by Donald Dunne
17413,0,Change has been successfully rebased as 8dc65b6a0787f8eb11fce9cab5bf4b29db59b609 by Patrick Tessier
17424,0,Change has been successfully rebased as d163f7ed2be95a4b4bd1c392f6341c4ede04acde by Patrick Tessier
17426,0,Patch Set 1: Code-Review-1 Verified+1(1 comment)Looks pretty good !A minor inline comment to address.
17428,0,"Patch Set 1:(1 comment)Thanks for the review, Alvaro. I have pushed a new patch to address your comment."
17433,0,Change has been successfully rebased as 16ed5ea2085848d89bb4d63a6e508d96568a12af by Marc Dumais
17434,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4547/ : UNSTABLE
17441,0,Change has been successfully cherry-picked as e47e5ab64361ed1a2b66bceb2583ad6f4e70cf91 by Patrick B??nziger
17444,0,Change has been successfully cherry-picked as 9ea5bda53a8e9e4249a47303acc71d7d3148d894 by Patrick B??nziger
17450,0,Change has been successfully cherry-picked as 7d3361d8f7d10b6a440d8fa3b0325a9fa0c7ed7c by Patrick B??nziger
17464,0,Change has been successfully merged into the git repository by Donald Dunne
17468,0,Change has been successfully rebased as e3a5acb7612417e8b342e0f2b7f7e62e51499a60 by Alvaro Sanchez-Leon
17471,0,Change has been successfully merged into the git repository by Johannes Faltermeier
17474,0,Change has been successfully merged into the git repository by Michael Wenz
17478,0,Change has been successfully merged into the git repository by Philip Wenig
17481,0,Change has been successfully merged into the git repository by Johannes Faltermeier
17483,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2513/ : UNSTABLE
17487,0,Change has been successfully merged into the git repository by Johan Hardy
17491,0,Change has been successfully pushed.
17495,0,Change has been successfully pushed.
17500,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17504,1,Patch Set 3: Code-Review+2 Verified+1Fixed the wrong copyright update.
17505,0,Change has been successfully merged into the git repository by Dani Megert
17508,0,Change has been successfully merged into the git repository by Eric Poirier
17515,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17518,0,Change has been successfully cherry-picked as 1357abc50c2a31b099db88cd35bf1f0eda193b16 by Jeff Johnston
17521,0,Change has been successfully merged into the git repository by Johan Hardy
17524,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17529,0,Change has been successfully cherry-picked as d7704d1f85aa6213af7cf3cd988b4bd36e7ecb60 by Patrick Tasse
17535,0,Patch Set 1: Code-Review+1 Verified+1This is good conditionnaly that the patch underneath does not change.
17538,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17544,0,Change has been successfully merged into the git repository by Carsten Reckord
17550,0,Change has been successfully merged into the git repository by Gregoire Dupe
17555,0,Change has been successfully merged into the git repository by Noopur Gupta
17560,0,Change has been successfully merged into the git repository by Johan Hardy
17562,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4687/ : UNSTABLE
17566,0,Change has been successfully rebased as e977bb49533a75a44ac3386bd6973cb90b6d1401 by Marc Khouzam
17569,0,Change has been successfully merged into the git repository by Lars Vogel Unavailable until 21.03.2016
17574,1,Abandoned
17575,1,"RestoredSimon, correctly, complained that he issued that entry before the deadline but it was not picked up by the Platform UI project lead."
17581,0,Change has been successfully merged into the git repository by Lars Vogel Unavailable until 21.03.2016
17585,0,Change has been successfully merged into the git repository by Gregoire Dupe
17589,0,Change has been successfully merged into the git repository by Lars Vogel Unavailable until 21.03.2016
17595,0,Patch Set 3: Code-Review+2 Verified+1Looks like Markus missed this one for the N&N. I adjusted the entry a little bit an validated it via https://validator.w3.org/check. Looks fine to me.
17596,0,Change has been successfully merged into the git repository by Lars Vogel Unavailable until 21.03.2016
17599,0,Change has been successfully merged into the git repository by Alexander Kurtakov
17609,0,Change has been successfully cherry-picked as d5997aaf589043220fb3ae785f5a3c5575454ba1 by Patrick Tasse
17611,1,Patch Set 3:What should I do for 'Cannot Merge- Edit Topic'? Please let me know guidelines for the same. I set it to some value but still the error in red is appearing.
17617,0,"Patch Set 4: Code-Review+1The change looks good to me, but I think Mickael was hoping for unit tests to validate the fix?"
17619,0,Change has been successfully merged into the git repository by Mickael Istria
17621,0,"Patch Set 2:The patch looks fine. However, do you think you could manage to write an automated tests with steps to reproduce the initial issue and validate this patch fixes it?"
17627,0,Change has been successfully merged into the git repository by Sergey Prigogin
17634,0,Change has been successfully cherry-picked as 494c9b221aad8eb5b7920c537e59edff9f5cce64 by Patrick Tasse
17648,0,Change has been successfully cherry-picked as 0a08e17dc6c08b51fa06e296a8980ed983b94c86 by Patrick Tasse
17654,0,Change has been successfully merged into the git repository by Wayne Beaton
17658,0,Change has been successfully merged into the git repository by Sergey Prigogin
17663,0,Change has been successfully merged into the git repository by Donald Dunne
17673,0,Change has been successfully merged into the git repository by Sam Davis
17677,0,Change has been successfully merged into the git repository by Sam Davis
17679,1,"Patch Set 2:Thanks for the review Frank, I think you're right. I'll revert those changes in https://git.eclipse.org/r/#/c/68730/"
17683,0,Change has been successfully rebased as e4fdfc2ae245551c73ddd8d78adbbac62caef595 by Michael Vorburger
17686,0,Change has been successfully merged into the git repository by Eugen Neufeld
17689,0,Change has been successfully merged into the git repository by Jad El-khoury
17692,0,Change has been successfully cherry-picked as efe86ac883254766f452f852fcf1320f44156852 by Ivan Motsch
17695,0,Change has been successfully merged into the git repository by Sebastian Struckmann
17699,0,Change has been successfully rebased as 720f783c7d43f25213d58b6601146df5e5e4ba1b by Patrick Tessier
17703,0,Change has been successfully merged into the git repository by Manoj Palat
17712,0,Change has been successfully cherry-picked as dff70ccd8f00c718528c3f351f5de898520a4e89 by Alexandre Montplaisir
17718,0,Change has been successfully merged into the git repository by Sam Davis
17720,0,Change has been successfully merged into the git repository by Donald Dunne
17730,0,Change has been successfully merged into the git repository by Sean Muir
17734,0,Change has been successfully merged into the git repository by Sean Muir
17742,0,Change has been successfully merged into the git repository by Donald Dunne
17746,0,Change has been successfully merged into the git repository by Donald Dunne
17753,0,Change has been successfully merged into the git repository by Ansgar Radermacher
17762,0,Change has been successfully merged into the git repository by Donald Dunne
17767,0,Change has been successfully merged into the git repository by Donald Dunne
17773,1,Patch Set 7:The change is good in general but there is some cleanup needed. I will do it myself to avoid ping pong and will push it as a new patch set for this change.
17781,1,Patch Set 3:The test failure is expected as it actually highlight but 485227 that's not fixed so far.
17788,0,Change has been successfully merged into the git repository by Szymon Ptaszkiewicz
17791,0,Change has been successfully cherry-picked as b4be6e9b3f4beba71d4f44a658f2a0445270d151 by Daniel Wiehl
17793,0,Change has been successfully merged into the git repository by Donald Dunne
17799,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/526/ : UNSTABLE
17802,0,Change has been successfully cherry-picked as 1d1b1ca732b4d7f12f3ac1c4cb2efeb89b3413b4 by Claudio Guglielmo
17807,0,Patch Set 4: Code-Review+2 Verified+1Let's try it! Welcome to the Sim. Release. (Don't forget to sign-up to be a committer -- see docs).
17808,0,Change has been successfully merged into the git repository by David Williams
17811,0,"Patch Set 2: Code-Review+1 Verified+1Looks good to me, from a technical point of view. One question, though. Is this a NEW contribution for Neon? If so, I assumed you declared your intent to be in Neon before M4? But were not ""in the build"" until now? If that is all true, you need to go through the ""exception process"" to join after M4. I think at this point it would be easy to get such an exception ... but I would prefer to understand all that aspect before I ""completely approve"". Thanks."
17812,0,"Patch Set 2:Hi David,yes, this is a new contribution for Neon, announced on Dec.17 (https://dev.eclipse.org/mhonarc/lists/cross-project-issues-dev/msg12846.html) as requested (Opt-in deadline was Dec.18)Given that should we go through the Exception Process?Thank youVincenzo Caselli > though. Is this a NEW contribution for Neon? If so, I assumed you > declared your intent to be in Neon before M4? But were not ""in the > build"" until now? If that is all true, you need to go through the > ""exception process"" to join after M4. I think at this point it > would be easy to get such an exception ... but I would prefer to > understand all that aspect before I ""completely approve"". Thanks."
17815,0,"Patch Set 3: Code-Review+1David, I rebased our change with the master.One note: someone had introduced this architecture ppc64le which is not valid according to b3, so I removed that one during the rebase.I don't think I can approve the change myself.Please have a look and if it is fine, please approve it :)"
17822,0,Patch Set 9: Code-Review+2Looks very good. I will focus on tests now and will submit when both changes are ready.
17826,0,Change has been successfully merged into the git repository by Szymon Ptaszkiewicz
17833,1,"Patch Set 6:Well, and now that the tests have been removed, can you please reconsider your vote?That's the issue with -2, it's still here despite the last patch set fixes the expressed concerns."
17834,1,"Patch Set 6:> Well, and now that the tests have been removed, can you please > reconsider your vote? > That's the issue with -2, it's still here despite the last patch > set fixes the expressed concerns.As I mentioned earlier, I will do more detailed review after we are done with M5. Right now, the existing -2, although it's stale after you adjusted the patch, does not harm anyone, especially that the patch cannot be merged due to the test week. It does not mean -2 is still valid, but that this is the last valid review for which I had time. I don't plan to update my review votes each time new patch set comes in without having time to actually review the patch. There is nothing wrong with the patch, you just need to be patient to allow me to review it again. Thanks for understanding."
17835,0,"Patch Set 6:And by the way, to give a more concrete example, right now we are having a lot more urgent UI bugs to tackle which put in risk our Mars.2 RC2 and Neon M5 releases, so if you guys have free cycles, I would really like to ask you to help there - see bug 486804 and recent emails on the releng and ui mailing lists. We are now trying to release from 2 streams at the same time so it's not an easy task if unexpected things happen and we don't have enough people (read: committers) involved in helping with the release. Thank you again for you help."
17840,0,"Patch Set 4:What makes it wrong to have this test inside eclipse.core.runtime repo? I don't see the benefit of removing it from here to have it into resources. However, I'm fine with putting a copy of this test into resources, additionally to having it there. The value here is that builds using the -Pbuild-individual-bundles profile, such as gerrit validation job, will run this test when test for eclipse.core.runtime are ready to be run with tycho-surefire-plugin."
17842,1,"Patch Set 4:Note that although I'd like to have this test available in that same repository as the change, I'm ok with duplicating it to the resources repository as well if it makes sense, until we can build eclipse.platform.runtime repository individually (requires bug 486478 to be resolved)."
17843,1,"Patch Set 4:Duplication is wrong. Simply add the test where the rest of content type tests are located. When/If there will be need to move content type tests, then we will move them all together instead of merging from different locations."
17844,1,"Patch Set 4:Given how bug 486478 is a blocker for test automation, I'll do as you suggest; because it seems to be the only way to get that test running with Tycho at the moment."
17850,0,Change has been successfully rebased as 1f5bb5cff0ca7d5bea462d98add4ca33ff57a4e6 by Patrick Tessier
17859,0,Change has been successfully merged into the git repository by Patrick Tessier
17866,0,Change has been successfully cherry-picked as a903bec423eb8f5051e9329da1a0e47557d2fd40 by Claudio Guglielmo
17869,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/521/ : UNSTABLE
17871,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/518/ : UNSTABLE
17875,0,Change has been successfully merged into the git repository by Greg Watson
17880,0,Change has been successfully merged into the git repository by Greg Watson
17883,0,Change has been successfully merged into the git repository by Christian Pontesegger
17886,0,Change has been successfully merged into the git repository by Greg Watson
17889,0,Change has been successfully merged into the git repository by Greg Watson
17892,0,Change has been successfully merged into the git repository by Lorenzo Bettini
17896,0,Change has been successfully merged into the git repository by Thomas Watson
17900,0,Change has been successfully rebased as 80ee1b0d6284e13ca29acf2481dc451f9e8bc85d by Patrick Tessier
17903,0,"Patch Set 1:> The issue is more complex. We want to format whole document on save > but for manual formatting (ctr+shift+f) we still want to format > only selection if exists.ok, now I understand better why this wasn't fixed earlier ;) It seemed an easy issue, but that's not the case. I'll have a look at it later again. Thank you for your review Michal."
17906,0,"Patch Set 4:(1 comment)> Works ok for me.Thank you for your review Michal ;) I just added a comment, I think it's worth to know it."
17907,0,"Patch Set 4:Ok, thanks for clarification :)"
17910,0,Change has been successfully rebased as 403b4bfe66bdef98cece438a0797d60c5a9ba740 by Thierry BLIND
17919,0,Change has been successfully merged into the git repository by Szymon Ptaszkiewicz
17924,0,Change has been successfully merged into the git repository by Michal Niewrzal
17929,0,Change has been successfully merged into the git repository by Sebastian Struckmann
17934,0,Change has been successfully merged into the git repository by Marvin Mueller
17936,0,"Patch Set 2: Code-Review+1 Verified+1Looks fine to me, I don't know why this should be faster but I trust Sonar, Mickael and Sergey. Also the code is better readable."
17937,0,"Patch Set 2:It's faster because:* for (entry:map.entrySet()) entry.getValue(); simply used the returned values without computing nor resolving anything* for (key:map.keySet()) map.get(key); computes the hashCode and resolves in the map.So it saves as many lookups as there are element on the map.With Groovy shell CLI, I tried an example: a Map<String, int> where the key is the String representation of the number and the value is the value (such as ""0"":0, ""1"",1, ""432432"":432432...), and made this map from 0 to 10000000.Then I iterated on that map to comupte the sum of all the values.Iterating with keySet and looking up for value cost me about 5 seconds; iterating on entrySet cost me less than 1 second."
17941,0,Change has been successfully merged into the git repository by Mickael Istria
17943,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8566/ : UNSTABLE
17945,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8576/ : UNSTABLE
17951,0,Change has been successfully merged into the git repository by Marc Khouzam
17952,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4548/ : UNSTABLE
17956,0,Change has been successfully rebased as b4623ab7456afffe3530d8aa756afef22edf4140 by Ansgar Radermacher
17958,0,Change has been successfully merged into the git repository by Lars Vogel
17966,0,Change has been successfully merged into the git repository by Lars Vogel
17968,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8561/ : UNSTABLE
17973,0,Change has been successfully merged into the git repository by Lars Vogel
17978,0,Change has been successfully merged into the git repository by Lars Vogel
17986,0,Change has been successfully merged into the git repository by Lars Vogel
17987,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8582/ : UNSTABLE
17992,0,Change has been successfully merged into the git repository by Lars Vogel
17995,0,Change has been successfully merged into the git repository by Uwe Stieber
18027,0,Change has been successfully merged into the git repository by Laurent Fasani
18035,0,Change has been successfully merged into the git repository by Michael Wenz
18038,0,Change has been successfully merged into the git repository by Lorenzo Bettini
18041,0,Change has been successfully merged into the git repository by Sasikanth Bharadwaj
18044,0,Change has been successfully merged into the git repository by Vikas Chandra
18046,0,"Patch Set 3: Code-Review+2Great!  Thanks, Ansgar."
18048,0,Change has been successfully rebased as b521f37f6ec0522f876241c4d0cf53e04393c577 by Ansgar Radermacher
18052,0,Patch Set 2:> Thanks for the comments. I'll check out the getUsages method. > (and I should install the API/Version tooling ...)Oomph already installed it for you!  :-D
18054,1,Patch Set 1: Code-Review-1(14 comments)I have some concerns in the in-line comments on various files.  My most serious concern (actually a bunch of questions but the main reason for the -1) is in the comments on the NotationHashMap class.
18057,0,Change has been successfully merged into the git repository by Simon Scholz
18060,0,Change has been successfully merged into the git repository by Greg Watson
18063,0,Change has been successfully merged into the git repository by Greg Watson
18066,0,Change has been successfully merged into the git repository by Greg Watson
18069,0,Change has been successfully pushed.
18072,0,"Patch Set 1:> This fixes 482471Could you please up load a path set with an updated commit message (with ""Bug 482471 - codeformatter extension point is not used"" as the first line of commit message in order to make Gerrit change and Bugzilla issue to be tight to each other)?Thanks in advance."
18075,0,Change has been successfully pushed.
18081,0,Change has been successfully merged into the git repository by Donald Dunne
18086,0,Change has been successfully merged into the git repository by Eugen Neufeld
18090,0,Change has been successfully rebased as e4ca64d9818d3f6919a59542fe401816e5970bf6 by Remi Schnekenburger
18091,0,"Patch Set 2: Code-Review+1I will also ask Patrick Tessier to have a look on this one, but fix seems to be OK.Thanks Peter!"
18095,0,Change has been successfully rebased as d41fc633b6a4c0cd8f5c9627c8dabbe324a8d1a8 by Remi Schnekenburger
18099,1,"Patch Set 4:The RCPTT test match on the label... here is the problem:[INFO] Fail 1 (9) processed. 1 failed. spent: 0:20, 0:46 mins remaining. CallEvent_10_CallEventCreationTest. time: 20254ms  Cause: The Window ""Create a new Out Protocol Message"" could not be found.So if you modify the window title the RCPTT is not able to match.If you modify the lable you should modify the test RCPTT as well. We are looking for another way to match windows with RCPTT than the Title. Regards"
18100,1,"Patch Set 4:> The RCPTT test match on the label... here is the problem:[snip]I suggest that we continue the discussion of this problem in the Bugzilla. It became so confusing to have the same discussion in two places, and since I started to comment on your response in the Bugzilla lets keep it there. https://bugs.eclipse.org/bugs/show_bug.cgi?id=477560"
18105,0,Change has been successfully rebased as 1c7435fef230ee6a3c1d53b0859708d97c1794e8 by Remi Schnekenburger
18109,0,Change has been successfully pushed.
18111,0,Patch Set 2:> (8 comments) >  > Just noted some keywords that has creept in from Java. I think this > is a good opportunity to clean them up too.I've cleaned up these keywords.  It seems that the assert keyword is being discussed (http://wiki.ecmascript.org/doku.php?id=strawman:assert) but has not made it to the spec yet.  I've also updated the copyright year as Victor requested and added my author line.
18114,0,"Patch Set 1: Code-Review+1Shane,could you please update the 'year of last change' in header comment to be 2016 (instead of 2010).Thanks in advance!"
18115,0,Patch Set 1:(8 comments)Just noted some keywords that has creept in from Java. I think this is a good opportunity to clean them up too.
18126,0,Change has been successfully rebased as b1ffae4a0af781309e05bfdd129d0f3c984096f2 by Remi Schnekenburger
18133,0,Change has been successfully rebased as a96ade184f41127dcf6b4ea2345b0b9a4eddbf8a by Remi Schnekenburger
18139,0,Change has been successfully rebased as 9d83142da7ffccc7b1da5b79045be59e510710a9 by Eugen Neufeld
18141,0,Patch Set 12: Code-Review+1 Verified+1Just updated some javadoc. This looks good to me
18142,0,"Patch Set 12:Still not a fan of getBackendForBuilding/getBackendForQuerying, but Genevi├¿ve mentioned she has a series of upcoming test that would fit well into that. In that case, I'm cool with giving it a try and seeing what the full range of tests will look like."
18147,1,"Patch Set 6:Thanks for the update, I doubt Patrick is up at this time. I am sure he'll get back on the patch while you are afk."
18148,1,"Patch Set 6:(8 comments)I will update my patch with the changes I agree with, but not with the ones I consider to be a regression from my earlier patch set. I think this is fair."
18154,0,"Patch Set 9: Code-Review-1(3 comments)Y├®├®! I like this! More unit tests for the backendsI'm writing tests to test the different state value types in the backends, so these comments take into account what is coming."
18164,0,Change has been successfully cherry-picked as 60cabb56d9027d3cbc030fc78b9e55e3610e90e5 by Patrick Tasse
18167,1,Patch Set 10: Code-Review-1I agree with Genevi├¿ve's point it's weird to maintain one backend object in the base class. It should be the sub-classes responsibility.I'll push a proposal.
18172,0,"Patch Set 7: Code-Review-1I still don't agree on the following:* ""allowNulls"", the design of the state system is that there should be no null values when returning from a query. It's not explicitely enforced in the backends' runtime code, but it could be. Testing this means testing cases that are not supposed to happen.* The two ""abstract"" methods (getBackendForBuilding/getBackendForQuerying). The concept of ""reopening"" only applies to the HistoryTreeBackend, this notion should remain in that test class, not in the -Base. Parameters and the ""reopen"" constructor parameter is a nice way to offer both alternatives.The abstract method I'm suggesting tells the implementation to ""create a backend and insert these intervals"". This is a clear initialization step.The pattern of an abstract method to set a protected field is used in other tests. It should be kept as consistent as possible."
18173,0,"Patch Set 7:> ""allowNulls"", the design of the state system is that there should be no null values when returning from a query. It's not explicitely enforced in the backends' runtime code, but it could be. Testing this means testing cases that are not supposed to happen.When used along with a StateSystem, the query does not return null because the StateSystem first fills the interval list with a subset of the intervals and the backend fills it with the remaining subset, and both subsets complete each other and are mutually exclusive. So it is perfectly valid and expected in our runtime implementation that a backend does not fill some of the elements in the interval list. I could easily foresee test cases asserting that some elements must be null in the result of a query. These assertions could be checked after executing testDoQuery() which should therefore complete without failing.> The two ""abstract"" methods (getBackendForBuilding/getBackendForQuerying). The concept of ""reopening"" only applies to the HistoryTreeBackend, this notion should remain in that test class, not in the -Base. Parameters and the ""reopen"" constructor parameter is a nice way to offer both alternatives.Any backend could support reopening and then should override getBackendForQuerying(). Those backends that don't support it don't have to do anything. I think this is perfectly fine. My solution has the advantage to reduce code duplication. In the context of unit test code, I believe this is more important than conceptual considerations.> The abstract method I'm suggesting tells the implementation to ""create a backend and insert these intervals"". This is a clear initialization step.This clear initialization method is implemented in a final protected method that performs these steps in the base class in my patch. I think it is much better.> The pattern of an abstract method to set a protected field is used in other tests. It should be kept as consistent as possible.I hope you are not suggesting that forcing all subclasses to implement a method that can more easily be provided by the base class is preferable for reasons of consistency.I therefore respectfully disagree with your remaining objections. I think this patch is now way, way above the review threshold for unit test code. Thank you for your constructive feedback along the way."
18175,0,"Patch Set 4:Alex, I'm ready to merge it tomorrow (friday) at 4:00 pm. I consider these tests to be elegant and adequate. You can speak up or propose (in another patchset) an alternative. We could also test in two ways."
18176,0,"Patch Set 4:(8 comments)Looking good. Having both the -Base and a HistoryTreeBackendTest separates nicely what is specific to all backends (like the backend fixture), while HistoryTreeBackendTest owns what is specific to that backend, like the temp file.Good idea about splitting testDoQuery too, it will make it easy to re-use for different interval sets.I'd keep InMemoryBackendTest for another patch. We could move the tests in that class into the new base class to have them run on other backends.I'd also prefer to stick it to one abstract class that sets the backend. This pattern is used in other test classes in the tree. Each test would have to run prepareBackend(something), but then they don't have to worry about disposing it.New patchset inc."
18182,0,"Patch Set 3:(1 comment)Looks good to me, Alex?"
18184,0,"Patch Set 2:(2 comments)So I am fine with this, I think we need Alex to give an all clear though. I put one comment but honestly, this is a test case and not worth the effort of changing more than that. As far as I am concerned it is a write once, never execute by a human but use with ci to make sure we didn't break nothing kind of code."
18186,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8568/ : UNSTABLE
18190,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8567/ : UNSTABLE
18192,0,Change has been successfully merged into the git repository by Stefan Xenos
18194,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2486/ : UNSTABLE
18198,0,Change has been successfully merged into the git repository by Johannes Faltermeier
18200,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2487/ : UNSTABLE
18204,0,Change has been successfully merged into the git repository by Johannes Faltermeier
18206,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2482/ : UNSTABLE
18210,0,Change has been successfully rebased as deb7ba9ac57e2276f2d8ccc42fffe29e92ec53e7 by Johannes Faltermeier
18212,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8328/ : UNSTABLE
18218,0,Change has been successfully merged into the git repository by Lars Vogel
18221,0,Change has been successfully merged into the git repository by Greg Watson
18227,0,Change has been successfully merged into the git repository by Megumi Telles
18230,0,Change has been successfully merged into the git repository by Sergey Prigogin
18234,0,Change has been successfully merged into the git repository by Lars Vogel
18237,0,Change has been successfully merged into the git repository by Lars Vogel
18242,0,Change has been successfully merged into the git repository by Megumi Telles
18249,0,Change has been successfully merged into the git repository by Lars Vogel
18258,0,Change has been successfully merged into the git repository by Lars Vogel
18262,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8538/ : UNSTABLE
18263,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8544/ : UNSTABLE
18266,0,Change has been successfully merged into the git repository by Lars Vogel
18269,0,Change has been successfully merged into the git repository by Michael Vorburger
18272,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8526/ : UNSTABLE
18273,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8540/ : UNSTABLE
18276,0,Change has been successfully merged into the git repository by Lars Vogel
18282,0,Change has been successfully merged into the git repository by Christian Pontesegger
18285,0,Change has been successfully merged into the git repository by Christian Pontesegger
18290,0,Change has been successfully merged into the git repository by Lars Vogel
18293,0,Change has been successfully merged into the git repository by Jacques Bouthillier
18296,0,Change has been successfully cherry-picked as 261a8cde846fd231e241e56654458f5a38152acb by Patrick B??nziger
18299,0,Change has been successfully merged into the git repository by Christian Pontesegger
18302,0,Change has been successfully merged into the git repository by Christian Pontesegger
18309,0,Change has been successfully merged into the git repository by Eric Williams
18312,0,Change has been successfully merged into the git repository by Christian Pontesegger
18317,1,"Patch Set 1: Code-Review+1> John, are you ok with this?The code looks reasonable, but I'm not a SWT expert. If you have confirmed that it fixes the problem, then that is good enough for me."
18320,0,Change has been successfully rebased as fe82146ef29a05658fb6a8af1ddb3f3d36d508f0 by Greg Watson
18323,0,Change has been successfully merged into the git repository by Christian Pontesegger
18326,0,Change has been successfully merged into the git repository by Christian Pontesegger
18335,0,"Patch Set 8: Verified+1Some of the  code will have to be updated when the multiplicity will be modified for the replication field. In fact, there are some casts in the code that assume that lower and upper values are literal integer and unlimited natural, which is  not always true.Code will be accepted in the  meantime, as the code for hash pattern seems to be good."
18337,0,Change has been successfully rebased as 33541dfb4f82fd80d105ff7c81cf0ee917b9b3b5 by Remi Schnekenburger
18344,0,Change has been successfully merged into the git repository by Ansgar Radermacher
18350,1,Patch Set 7:(14 comments)Made some comments on the code itself but the patch is quite big and risky(considering) gtktree complexity. So please split the patch in two pieces - one for 3.14 and one for 3.16 to make it easier to investigate possible problems.
18358,0,Change has been successfully merged into the git repository by Alexander Kurtakov
18361,1,"Patch Set 11:> I don't like the other changes to NumberPreference that much. Can't > you do it by using an observable?I'm open to suggestions. From what I gathered, the observable would have to duplicate the min-max value checking as there is no way to see if the error was raised. And we don't want to see the blank-lines info override the max-value error, right?Another solution would be to override IndentationTabPage.updateStatus() and keep track of current status in an additional field..."
18364,1,"Patch Set 8:> Just to add to Dani's, if the option works if > number of lines separating the groups <= no of blank lines to be > preservedYeah, but that's not clear to the user, especially since out of the box we only preserve 1 line.This new options directly depends on the number of preserved blank lines. Any value bigger than the preserved lines is not working as the user might expect.Some possible solutions:1. Remove the power to specify the number of lines that define a group. Just use a boolean that tells whether to group if there is at least one blank line.2. Only allow a number that is not bigger than the number of preserved lines. The error in the status bar can explain why a bigg er value is not allowed."
18365,1,"Patch Set 8:> 2. Only allow a number that is not bigger than the number of preserved lines. The error in the status bar can explain why a bigg er value is not allowed.Setting a bigger value is required if you never want to group fields. I thought it would be simpler than having an additional checkbox (and a property in API).Also, it's possible to have more blank lines if there are comments between them. I think it's a nice feature.How about just adding a warning in the option's label, like (mind 'Bblank lines to preserve'!)"
18366,1,"Patch Set 8:> > 2. Only allow a number that is not bigger than the number of > preserved lines. The error in the status bar can explain why a bigg > er value is not allowed. >  > Setting a bigger value is required if you never want to group > fields. I thought it would be simpler than having an additional > checkbox (and a property in API).Yes, simpler for you but not for the user ;-). We don't need API. We can just set the value accordingly. But not 99. It would be Int.max, since 99 is arbitrary. > Also, it's possible to have more blank lines if there are comments > between them. I think it's a nice feature.Do we count comments as blank lines or just skip?  > How about just adding a warning in the option's label, like (mind > 'Bblank lines to preserve'!)Yes, but it should only appear if the value is bigger than the preserved lines."
18368,0,"Patch Set 8:> > We don't need API. We can just set the value accordingly. > That will work, but the selected value will be lost when the > checkbox is unticked, it will always go to 1 when it's ticked > again.That can be prevented - at least while in the dialog (remember the value). > > Do we count comments as blank lines or just skip? > I don't remember, but I think only actual blank lines are counted. > Is that OK?Yep"
18370,0,"Patch Set 1:> > I don't like the other changes to NumberPreference that much. > Can't > > you do it by using an observable? >  > I'm open to suggestions. From what I gathered, the observable would > have to duplicate the min-max value checking as there is no way to > see if the error was raised. And we don't want to see the > blank-lines info override the max-value error, right? >  > Another solution would be to override IndentationTabPage.updateStatus() > and keep track of current status in an additional field...Overwriting updateStatus() should work (didn't test). If the status is null you call super with the info, otherwise you pass on the non-null status to super.updateStatus()."
18375,0,Change has been successfully merged into the git repository by Dani Megert
18388,0,Change has been successfully merged into the git repository by Gregoire Dupe
18391,0,Change has been successfully merged into the git repository by Christian Pontesegger
18397,0,Change has been successfully merged into the git repository by Johannes Dorn
18402,0,Change has been successfully merged into the git repository by Laurent Redor
18405,0,Change has been successfully merged into the git repository by Laurent Delaigue
18410,0,Change has been successfully rebased as 64986e20ae9981616097876112abb5f1e6d68bec by Michal Niewrzal
18415,0,Change has been successfully merged into the git repository by Sebastian Struckmann
18423,0,Change has been successfully merged into the git repository by Matthias Sohn
18426,0,Change has been successfully merged into the git repository by Michael Wenz
18429,0,Change has been successfully merged into the git repository by Marc Khouzam
18433,0,Change has been successfully merged into the git repository by Stephan Herrmann
18434,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8220/ : UNSTABLE
18436,0,Change has been successfully merged into the git repository by Thomas Wolf
18438,1,Patch Set 1:This should fix the unstable test FeatureFinishSquashHandlerTest.testFeatureFinishSquash (for instance in build 8216).[1] The screenshot[2] shows that the test did not wait until the viewer was refreshed.[1] https://hudson.eclipse.org/egit/job/egit.gerrit/8216/[2] https://hudson.eclipse.org/egit/job/egit.gerrit/8216/artifact/org.eclipse.egit.ui.test/target/screenshots/testFeatureFinishSquash%28org.eclipse.egit.ui.gitflow.FeatureFinishSquashHandlerTest%29.jpeg
18445,0,Change has been successfully merged into the git repository by Thomas Wolf
18448,0,Change has been successfully merged into the git repository by Stephan Herrmann
18454,0,Change has been successfully merged into the git repository by Stephan Herrmann
18459,0,Change has been successfully merged into the git repository by Christian Pontesegger
18465,0,Change has been successfully rebased as 21e303d976c8c2c260d906784e19e3456cacabe7 by Marc Khouzam
18469,0,Change has been successfully rebased as 3ec5060d54e259c419a4d388f1019b40877f74cf by Doug Schaefer
18473,0,Change has been successfully rebased as 93cdb07d8c802a7224c24317d28ca4ab60771618 by Doug Schaefer
18478,0,Change has been successfully merged into the git repository by Matthias Sohn
18482,0,Change has been successfully merged into the git repository by Matthias Sohn
18489,0,"Patch Set 1:Thomas, if you have the patch in the IDE right now, can you update and push? Thanks for reviewing!"
18493,0,Change has been successfully merged into the git repository by Matthias Sohn
18496,0,Change has been successfully merged into the git repository by Matthias Sohn
18500,0,"Patch Set 4:Some more occurrences for consideration:AbstractProviderTest:159TmfNanoTimestamp:52TmfTimestamp:316TmfTraceManager:287TmfTraceManager:288Next step (separate patch) is to find all the places where we use TmfTimeStamp(value, NANOSECOND_SCALE) instead of TmfNanoTimestamp..."
18502,0,"Patch Set 6:Patrick, as for replacing new tmfTimestamp(x, -9) with new TmfNanotimestamp... I have one better... TmfTimsetampfactory#create. cached and all!"
18504,0,Change has been successfully cherry-picked as 16801c72d947260f2c9e16afe569704773645c01 by Matthew Khouzam
18506,0,Patch Set 5: Code-Review+2 Verified+1This is great
18514,0,Change has been successfully rebased as a2681d26de3adecbf6950d109be2447da2076603 by Kaloyan Raev
18517,0,Change has been successfully merged into the git repository by Kaloyan Raev
18519,0,Change has been successfully merged into the git repository by Mark Macdonald
18523,0,Patch Set 5: Code-Review+2nice :-)
18527,0,Change has been successfully merged into the git repository by Thomas Wolf
18529,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8093/ : UNSTABLE
18535,1,Patch Set 3:> (1 comment)bug 484795 was mainly caused by the fact that ~/.gitconfig was located on a remote disk causing much larger latency for file system accesses
18536,1,Patch Set 3:> bug 484795 was mainly caused by the fact that ~/.gitconfig was > located on a remote disk causing much larger latency for file > system accessesI know. But at least the last-modified time stamp of ~/.gitconfig is accessed every time in FileRepository.getConfig().
18537,1,Patch Set 3:> > bug 484795 was mainly caused by the fact that ~/.gitconfig was > > located on a remote disk causing much larger latency for file > > system accesses >  > I know. But at least the last-modified time stamp of ~/.gitconfig > is accessed every time in FileRepository.getConfig().maybe we could instead use the URIs (RepositorySelectionPage.UsedUris) stored in <workspace>/.metadata/.plugins/org.eclipse.egit.ui/dialog-settings.xml to find already known git servers or add another explicit cache of known git servers
18543,0,Change has been successfully merged into the git repository by Andrew Johnson
18546,0,Change has been successfully merged into the git repository by Thierry BLIND
18550,0,"Patch Set 2: Code-Review+2 Verified+1That's great, thanks for your patience."
18551,0,Change has been successfully merged into the git repository by Roger Light
18555,0,Change has been successfully rebased as 69562ae63e0fb6e8f055aeb20eddfd34ad91e8d7 by Sergey Prigogin
18559,0,Change has been successfully merged into the git repository by Mark Macdonald
18562,0,Change has been successfully merged into the git repository by Sergey Prigogin
18565,0,Change has been successfully merged into the git repository by Amine Ouraiba
18571,0,Change has been successfully merged into the git repository by Christian W. Damus
18574,0,Change has been successfully merged into the git repository by Amine Ouraiba
18577,0,Change has been successfully merged into the git repository by Matthias Sohn
18579,1,"Patch Set 14: Code-Review-1(3 comments)I'm confused by the inconsistencies with what exceptions are being caught/thrown in OpenRepositoryTaskJob, perhaps it should be simplified."
18592,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1208/ : UNSTABLE
18594,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1197/ : UNSTABLE
18595,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1198/ : UNSTABLE
18604,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1196/ : UNSTABLE
18607,0,Patch Set 11:(3 comments)This looks great! The method naming is arguably just my preference but it will be consistent with searchByTaskKey in the connector.
18613,0,Change has been successfully rebased as 3965aae570d82102f6befe14dac0d56d99f74c1c by Sam Davis
18617,0,Patch Set 8:Thanks for the clarification. I don't know what my brain was thinking earlier.
18622,0,Change has been successfully merged into the git repository by Ansgar Radermacher
18625,0,Change has been successfully merged into the git repository by Yves YANG
18628,0,Change has been successfully merged into the git repository by Yves YANG
18630,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8190/ : UNSTABLE
18633,0,Change has been successfully merged into the git repository by Matthias Sohn
18640,0,Change has been successfully merged into the git repository by Matthias Sohn
18643,0,Change has been successfully merged into the git repository by Yves YANG
18645,1,Patch Set 1:This change should resolve the problem of compatibility with the Eclipse Infocenter.I moved the intro content from the infra.doc bundle to the uml.diagram.wizards bundle because that one actually provides the action that is contributed to the Welcome dashboard.  It's unfortunate that the New Model wizard is defined in the UML Layer; this will just be another thing to move when that wizard is (eventually) promoted to the Infra Layer.
18649,0,Change has been successfully rebased as 387d1f9462ab95dd485b80197a7fdf32c0bf051b by Christian W. Damus
18652,0,Change has been successfully merged into the git repository by Yves YANG
18657,0,Change has been successfully pushed.
18660,0,Change has been successfully merged into the git repository by Yves YANG
18662,1,"Patch Set 2:I don't normally use Windows, but I fired this up in a Windows VM and I don't see any difference in behaviour.  I expected to see pulsing or progress shown on the task bar icons on startup (mirroring the splash progress), and on job progress (I repeatedly tried cleaning all projects to trigger a rebuild).What are some definite ways to trigger this behaviour?"
18663,1,"Patch Set 2:I would like to confirm the functionality myself, but when I'm trying to test my attached test program (see bug 471310) this won't start the legacy workbench at all (Regardless whether I have performed changes or not), it just starts a very empty application without activating the workbench configurer. If you cannot confirm this non-functionality of the legacy application startup: Could you please provide me a specific way against which target platform I should try to start the test application?"
18664,1,"Patch Set 2:> I would like to confirm the functionality myself, but when I'm > trying to test my attached test program (see bug 471310) this won't > start the legacy workbench at all (Regardless whether I have > performed changes or not), it just starts a very empty application > without activating the workbench configurerI was seeing this too, and I see *nothing* on the console <sigh>.  I haven't tried delving into the issue, but I found that loading in all of the bundles in platform-ui seemed to solve the problem."
18665,0,"Patch Set 2:Alex: I tried to do the same, but when trying to do so, I got an NPE in org.eclipse.e4.ui.internal.workbench.ResourceHandler. The @Inject c'tor gets called, but not the @PostConstruct method. Within the getResource method the resourceSetImpl field is null, if called by E4Application.loadApplicationModel. Could you successfully start my test program and if so, could you explain me, which other bundles you did got from any other git project? I'll give it a second try during this weekend, but any hints from you before that would be very much appreciated."
18666,1,"Patch Set 2:Brian: (My apologies for the inappropriate ""Alex"") I checked now also the project eclipse.platform.runtime out which seemed to solve my startup problems and I can now run my test program. Two relevant observations from my Windows 7 machine:(a) The tool bar contribution (""Task!"") runs now and triggers the system task bar as expected. This fixes my most serious concern in regard to honoring the IProgressConstants2.SHOW_IN_TASKBAR_ICON_PROPERTY flag.(b) I can confirm that the system task bar is *not* yet triggered during the RCP startup process, there exists two reasons for this:(b.1) Previous 3.x Workbench code did enter in WorkbenchAdvisor.openWindows() a different code branch, because the lineIStatus status = myConfigurer[0].restoreState();could give a not-OK-status, this is no longer possible, because now WorkbenchConfigurer.restoreState() *always* returns OK_STATUS.(b.2) Now Workbench.createAndRunWorkbench does not wrap the splash handlers progress monitor using TaskBarDelegatingProgressMonitor.(b.3) My test program omits to set SHOW_PROGRESS_ON_STARTUP=true in the plugin_customization.iniTherefore my action items for this week end are:- Upload an improved test program that ensures that the startup presents progress on startup- Try to fix the second unwrapped progress monitorMy most serious concerns for this issue are fixing to honor IProgressConstants2.SHOW_IN_TASKBAR_ICON_PROPERTY. If I fail to complete my tasks during that weekend I would suggest to split the missing startup progress report using the system task bar into a second issue. Does that sound like a feasible approach?"
18668,0,Patch Set 5: Code-Review+2 Verified+1Thanks Daniel!
18674,0,Change has been successfully pushed.
18683,0,Change has been successfully merged into the git repository by Yves YANG
18685,0,Change has been successfully pushed.
18687,0,Change has been successfully pushed.
18691,0,Change has been successfully merged into the git repository by Marc-Andre Laperle
18696,0,Change has been successfully merged into the git repository by Thomas Watson
18698,0,Change has been successfully merged into the git repository by Donald Dunne
18712,0,Change has been successfully cherry-picked as d97502b08fc82e2aaf9ae5c7c76ebe018aa6e3c0 by Roland Grunberg
18716,0,"Patch Set 1:Sure, I've always had fun with bit banging! This is all too explicit for the commit message though.Ok, you start and you have a state, these states are bitmasks... the bitmask therefore can have 2 or N states at once.An example EXIT_TRACE == EXIT_ZOMBIE | EXIT_DEAD would not qualify as EXIT_DEAD... even though it should.with a switch, you would be forced to enumerate the powerset of the N values, so 1024 possible cases... this is not super testable.So we can check each bit one at a time. To do that, we make individual masks. A mask is a simple 1 shifted to the right position. Then you BITWISE and function between the said mask and the value. If this is 0, it means the bit was not present.I will update the commit message with an example, but I don't want to be this verbose in there unless you think it's necessary."
18717,0,"Patch Set 1:Yeah I understand bitmasks and such, thanks for the explanation though! :)Indeed, if these states are ""flags"", which means more than one can be active at the same time, it'd be better to use masks than a case/switch.I'm just saying the patch should be clear about what behaviour is being changed here. It's not clear if it's just a refactor or a bug fix."
18721,0,"Patch Set 3:Alex, does this look good to you now with the added comment?"
18723,0,"Patch Set 3:Thanks for pointing it out, I did forget about it!Hmm, I didn't note it before, but adding new methods for things used in just one place doesn't seem really worth it, especially since it's just one line... You could just put a comment above each check:  /* Check if the thread is running */  if (state == 0) {    ...  /* Check if the thread is waiting */  } else if ((state & (LinuxValues.TASK_INTERRUPTIBLE |                       LinuxValues.TASK_UNINTERRUPTIBLE)) != 0) {    ...  /* Check if thread is dead */  } else if ((state & LinuxValues.TASK_DEAD) != 0;) {    ...  /* Unknown/unsupported state */  }┬áelse {    ...  }would be less function-call-spaghetti"
18724,0,"Patch Set 3:> adding new methods for things used in just one place doesn't seem really worth it, especially since it's just one line...Adding new methods that can be eventually ported to the interface as default methods and are reflecting the Linux kernel file structure IMO is totally justifiable.Also, I very much disagree with adding comments to unclear code instead of making clear code. * The JVM is pretty smart, it will inline this, and the performance will be identitical.* These are private statics, you don't have to worry about inheritance surprises or whatnot. And if anyone ever does, we can re-use the checks. * It's also easier to follow a check like this."
18726,0,Patch Set 3: Code-Review+2Such small utility functions are quite common in the linux code base. I like it.
18728,0,Change has been successfully cherry-picked as 978a610e3c3fff4b49ac9b1e300ac4686c3ca3ce by Matthew Khouzam
18731,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8198/ : UNSTABLE
18733,0,Change has been successfully merged into the git repository by Andrey Loskutov
18734,0,"Patch Set 2:Thanks, Thomas!"
18740,0,Change has been successfully merged into the git repository by Amine Ouraiba
18744,0,Change has been successfully merged into the git repository by Marc-Andre Laperle
18749,0,Change has been successfully merged into the git repository by Dani Megert
18755,0,Change has been successfully merged into the git repository by Dani Megert
18760,0,Change has been successfully merged into the git repository by Mark Macdonald
18762,0,Change has been successfully merged into the git repository by Mark Macdonald
18766,0,Change has been successfully merged into the git repository by Mark Macdonald
18771,0,Change has been successfully merged into the git repository by Ansgar Radermacher
18774,0,Change has been successfully merged into the git repository by Benoit Maggi
18777,0,Change has been successfully merged into the git repository by Maxime Porhel
18780,0,Change has been successfully merged into the git repository by Markus Knauer
18783,0,Change has been successfully merged into the git repository by Eric Williams
18786,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2438/ : UNSTABLE
18789,0,Change has been successfully rebased as 24d2142b2f4cde1b856cc2614a79ba2691507750 by Eugen Neufeld
18791,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2434/ : UNSTABLE
18796,0,Change has been successfully cherry-picked as 2f7d888d41e101e3af50566af6843a5abb9e2ef8 by Roland Grunberg
18801,0,Change has been successfully merged into the git repository by Thomas Watson
18805,0,Change has been successfully merged into the git repository by Lars Vogel
18811,0,Change has been successfully merged into the git repository by Gregoire Dupe
18813,0,Change has been successfully merged into the git repository by Marc Dumais
18815,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4354/ : UNSTABLE
18817,0,"Patch Set 1: Verified+1Looks good to me, Thanks Marc D. !!"
18828,0,Change has been successfully cherry-picked as 150ae90e825600e06d655545b38165a6dbaeced0 by Bernd Hufmann
18842,0,Change has been successfully cherry-picked as 45fc1883d214b4d3214fb570cbc23bdf25ec4ea2 by Bernd Hufmann
18847,0,Change has been successfully pushed.
18851,0,Change has been successfully rebased as 76b0ba1e142bfbbce46051ae8d9341639a179c1a by Eugen Neufeld
18853,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2430/ : UNSTABLE
18855,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2431/ : UNSTABLE
18862,0,Change has been successfully rebased as 250cd9bca0d24b62bd89b91d048e8f176c2cad17 by Remi Schnekenburger
18868,0,Change has been successfully merged into the git repository by Andreas Sewe
18872,0,Change has been successfully merged into the git repository by Andreas Sewe
18879,0,Change has been successfully merged into the git repository by Andreas Sewe
18883,0,Change has been successfully merged into the git repository by Lars Vogel
18886,0,Change has been successfully merged into the git repository by Michael Wenz
18892,0,Change has been successfully merged into the git repository by Eric Poirier
18900,0,Change has been successfully merged into the git repository by Jacques Bouthillier
18902,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2433/ : UNSTABLE
18904,0,Change has been successfully merged into the git repository by Eugen Neufeld
18907,0,Change has been successfully merged into the git repository by Christian Halstrick
18911,0,Change has been successfully merged into the git repository by Jacques Bouthillier
18914,0,Change has been successfully merged into the git repository by Michael Wenz
18917,0,Change has been successfully cherry-picked as 6cd84ff78144b6c7c7e84446d2f5b271043835f3 by Andi Bur
18920,0,Change has been successfully cherry-picked as 93d0c9cbd745c72118bed81cdeb2d6c1a4a501ca by Andi Bur
18923,0,Change has been successfully merged into the git repository by Ansgar Radermacher
18927,0,Change has been successfully cherry-picked as 6a5056c2d4392be62bde51f674459592612c3423 by Roland Grunberg
18930,0,"Patch Set 1: Code-Review+1The icons seem fine, Looks good to me."
18933,0,Change has been successfully rebased as 4c731e0fa761108f6076747e1fb93a25c2a3e09b by Marc Khouzam
18936,0,Change has been successfully cherry-picked as 2e05763b206bc20f930c352fc1206a502d07142d by Judith Gull
18938,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/480/ : UNSTABLE
18942,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/481/ : UNSTABLE
18944,1,"Patch Set 4:Yes, it's true. My main motivation was to be able to use the bundle provided by Orbit and to slowly fade out the annoying extra-dependencies repository. But now it looks like it is more complicated than expected...I was quickly looking into the MANIFEST.MF, and if I'm not really mistaken the required package is exported:Export-Package: about_files,org.mozilla.classfile,org.mozilla.javascri pt,org.mozilla.javascript.annotations,org.mozilla.javascript.ast,...So... the question remains, why is the build really failing?"
18945,1,"Patch Set 4:(In reply to comment #11)> So... the question remains, why is the build really failing?Caused by: java.lang.NoSuchMethodError: org.mozilla.javascript.Parser.parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ast/AstRoot;"
18947,1,"Patch Set 4:I think I got it. In ""org.eclipse.rap.rwt\pom.xml"" there is a reference:<dependency>   <groupId>rhino</groupId>   <artifactId>js</artifactId>   <version>1.6R7</version>   <scope>compile</scope></dependency>the latest version in http://repo.maven.apache.org/maven2/rhino/js/ is 1.7R2, but it also throws the same error. There is no 1.7.5 available there."
18952,1,Patch Set 5:OK... the problem now is well known: Failed to create a temp file on /home/hudson/genie.rap/.hudson/jobs/rap-head-runtime-gerrit/workspace :-(
18954,0,"Patch Set 5:(In reply to comment #17)> Patch Set 5:> > As a manual verification, would it make sense to compare the output of the> compressor before and after the change?I've already did that before pushing the change - the client.js file is identical. Controls Demo works fine."
18956,0,"Patch Set 5: Code-Review+2 Verified+1I checked a local build on my notebook and compared the output with a build from the master branch, including the output of the compressor. Everything looked good to me."
18957,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
18959,1,"Patch Set 2:The failure is because of AstRoot class, which is in not exported package ""org.mozilla.javascript.ast"". I fixed this in .classpath and it's working in IDE... but obviosly not with Maven build."
18966,0,Change has been successfully merged into the git repository by Sasikanth Bharadwaj
18972,0,Change has been successfully cherry-picked as a47099ea823f95e9fd1dc3ca36e63ed5b12e957b by Matthias Villiger
18975,0,Change has been successfully merged into the git repository by Jad El-khoury
18978,0,Change has been successfully cherry-picked as 562625168b72e660075e8ee77624bcb4620d3b0e by Matthias Villiger
18985,0,Change has been successfully merged into the git repository by Lars Vogel
18989,0,Change has been successfully merged into the git repository by Lars Vogel
18993,0,Change has been successfully merged into the git repository by Dirk Fauth
18996,0,Change has been successfully merged into the git repository by Dirk Fauth
18999,0,Change has been successfully merged into the git repository by Lars Vogel
19004,0,Change has been successfully merged into the git repository by Johannes Faltermeier
19006,0,Change has been successfully pushed.
19010,0,Change has been successfully merged into the git repository by florian noyrit
19012,0,Change has been successfully merged into the git repository by Pierre-Charles David
19018,0,Change has been successfully merged into the git repository by Dani Megert
19026,0,Change has been successfully merged into the git repository by Mikael Barbero
19029,0,Change has been successfully merged into the git repository by Alexander Kurtakov
19032,0,Change has been successfully merged into the git repository by Alexander Kurtakov
19036,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1218/ : UNSTABLE
19038,0,Change has been successfully merged into the git repository by Sam Davis
19043,0,Patch Set 1: Code-Review-1(2 comments)Nice and straightforward
19053,0,Change has been successfully cherry-picked as 42e6242bd834b2c1a4f7bba9502d48d54b94f9a5 by Patrick Tasse
19069,0,Change has been successfully cherry-picked as 5f152b9905ec59806e725716f7a4996e7c76638b by Patrick Tasse
19072,0,Change has been successfully merged into the git repository by Donald Dunne
19078,0,Change has been successfully merged into the git repository by Matthias Sohn
19081,0,Change has been successfully merged into the git repository by Thierry BLIND
19087,0,Change has been successfully merged into the git repository by Donald Dunne
19096,0,Change has been successfully merged into the git repository by Thomas Watson
19099,0,Change has been successfully merged into the git repository by Alexander Kurtakov
19102,0,Change has been successfully merged into the git repository by Stephan Herrmann
19106,0,Change has been successfully merged into the git repository by Ernesto Posse
19109,0,Change has been successfully merged into the git repository by Alexander Kurtakov
19120,0,Change has been successfully rebased as 966ef1dfd27b9a41dad4229ab50f999e7c10a575 by Satoru Yoshida
19124,0,Change has been successfully merged into the git repository by Ernesto Posse
19127,0,Change has been successfully merged into the git repository by Alexander Kurtakov
19130,0,Change has been successfully merged into the git repository by Alexander Kurtakov
19133,0,Change has been successfully merged into the git repository by Dave Carlson
19136,0,Change has been successfully merged into the git repository by Lars Vogel
19139,0,Change has been successfully merged into the git repository by Lars Vogel
19144,0,Patch Set 5: Code-Review+2 Verified+1I restart the CQ process. Thanks Peter
19146,1,Patch Set 8:Build failure are only test errors. See https://bugs.eclipse.org/bugs/show_bug.cgi?id=468461
19148,0,Change has been successfully merged into the git repository by Lars Vogel
19155,0,"Patch Set 3:(7 comments)Looks good, super minor comments inlined.As PDE uses the Eclipse formatter, maybe you also want to switch to the Eclipse formatter?In general this functionality would also require tests, are you planning to add also a test bundle for this?"
19156,0,"Patch Set 3:> As PDE uses the Eclipse formatter, maybe you also want to switch to > the Eclipse formatter?Do you mean to reformat using Eclipse formatter? I have Formatter set to Eclipse but don't automatically reformat changes. > In general this functionality would also require tests, are you > planning to add also a test bundle for this?Yes, I'm working on the unit tests -- thanks!"
19158,1,"Patch Set 1:Q: The annotations are also included in org.eclipse.osgi.services bundle. Would that be sufficient at runtime? AFAIK it's in all Eclipse distributions.I also think that including the annotations source might require a separate CQ. Could be an easy (re-use, subset) one, though."
19159,1,"Patch Set 1:> Q: The annotations are also included in org.eclipse.osgi.services > bundle. Would that be sufficient at runtime? AFAIK it's in all > Eclipse distributions. >  > I also think that including the annotations source might require a > separate CQ. Could be an easy (re-use, subset) one, though.You're right -- this entire bundle isn't needed if org.eclipse.osgi.services can be used. I just have to figure out how to add that package (and only that package) to the permanent build path. I think modifying the Plug-in Dependencies container (in org.eclipse.pde.core) would do the trick. That can be handled after initial contribution.I'm going to remove org.eclipse.pde.ds.annotations.lib from the changeset."
19166,0,Change has been successfully merged into the git repository by Angel Avila
19169,0,Change has been successfully merged into the git repository by Johannes Dorn
19173,1,Patch Set 1: Code-Review-1 Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4345/ : UNSTABLE
19176,0,Change has been successfully merged into the git repository by Doug Schaefer
19179,0,Change has been successfully merged into the git repository by Stephan Herrmann
19182,0,Change has been successfully merged into the git repository by Alexander Kurtakov
19185,0,Change has been successfully merged into the git repository by Alexander Kurtakov
19189,0,Change has been successfully merged into the git repository by Dirk Fauth
19194,0,Change has been successfully merged into the git repository by Lorenzo Bettini
19197,0,Change has been successfully cherry-picked as 936b51948f5f2406d965e2e103bfe1a0eab2917f by Alexandre Montplaisir
19200,1,"Patch Set 1:> does it work instead by adding it do the tycho-eclipserun dependencies?It's not the tycho-eclipserun goal that fails, it's the ""generate-documentation"" one, which uses maven-antrun-plugin.(Btw there is still a warning about ""task.properties cannot be found"", but I think that's due to the tycho-eclipserun goal, since we don't define compile_classpath for that one. However since the build.index target doesn't need that property so it doesn't break anything).Unless you are talking about adding a <dependency> block like the others that are already there for the maven-antrun plugin? As far as I can tell these are ""base Maven"" dependencies, not p2 ones. The wikitext.core.ant we need is in a p2 repo. I did find some wikitext stuff in Maven central, but it's at version 0.9.something so I'm guessing this is just a very old version we shouldn't use anymore."
19205,0,Change has been successfully cherry-picked as fc4f65722c1b594ec1c380ba229ab1c5bd426015 by Alexandre Montplaisir
19208,0,Change has been successfully merged into the git repository by Lorenzo Bettini
19212,0,Change has been successfully merged into the git repository by Doug Schaefer
19215,0,Change has been successfully merged into the git repository by Ernesto Posse
19218,0,Change has been successfully merged into the git repository by Lorenzo Bettini
19221,0,Change has been successfully rebased as 01202e23241dd2801b5e30a5646d7352d1717fdf by Benoit Maggi
19224,0,Patch Set 1:waiting a review from Fanch to check the backport works fine on streams/1.1-maintenance
19227,0,Change has been successfully rebased as fcf5d27791a4c6ef8c6f1aaa247d7ced7d9bc03d by vincent lorenzo
19231,0,Change has been successfully merged into the git repository by Stephan Herrmann
19235,0,Change has been successfully rebased as 67febc7a93f31faca8efaace1bebb315cf046d47 by Eugen Neufeld
19238,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2415/ : UNSTABLE
19241,0,Change has been successfully merged into the git repository by Eugen Neufeld
19247,0,Change has been successfully merged into the git repository by Stephane Begaudeau
19253,0,Change has been successfully merged into the git repository by Denis Roy
19260,0,Change has been successfully merged into the git repository by Anton Leherbauer
19263,0,Change has been successfully merged into the git repository by Stephane Begaudeau
19271,0,Change has been successfully pushed.
19275,0,Change has been successfully merged into the git repository by Ralph Mueller
19278,0,Change has been successfully merged into the git repository by Ralph Mueller
19281,0,Change has been successfully cherry-picked as dd1129428bb6aff1298ebdc2f4e4d8bf0231a093 by Matthias Villiger
19284,0,Change has been successfully merged into the git repository by Thomas Watson
19291,0,Change has been successfully merged into the git repository by Maxime Porhel
19298,0,Change has been successfully merged into the git repository by Sergey Prigogin
19300,1,"Patch Set 1: Code-Review-1The cache activation in Neon might impact all CNF users and not only Sirius. I think the change should be documented and also the fact that if a triggerPoint/possibleChildren expression uses propertyTester which are dynamic, CNF extenders will have to listen to their changes in order to invalidate the cache. This appear like a regression to us: we use a CNF extension point and nothing tells us that property tester cannot be dynamic. When we use  org.eclipse.ui.menus extension point, there is nothing to do to keep this dynamic aspect of property tester(used in visibleWhen expressions for example)I still wonder if this a good idea to cache test expression results and ask implementers/extenders to invalidate the cache. Might you decide to invalidate the cache on refresh/update of the CommonViewer ? Then between to update/refresh, the test evaluation result should be consistent and stay cached."
19301,1,"Patch Set 1:> Might you decide to invalidate the cache on refresh/update of the CommonViewer ?Invalidating the cache on refresh is a possibility, but to preserve cache effectiveness it should probably be limited to the refresh of the viewer input. Invalidating cache on update is probably not a good idea since update is intended to be lightweight operation."
19304,1,"Patch Set 1:Hi Sergey, I launched our failing tests with CommonViewer modified to call the cache invalidation at the beginning of the refresh and they are ok. Then I tried some fast manual checks and everything lokked good."
19308,0,Change has been successfully merged into the git repository by Dani Megert
19311,0,Change has been successfully pushed.
19319,0,Change has been successfully pushed.
19337,0,Change has been successfully pushed.
19344,0,Change has been successfully pushed.
19348,0,Change has been successfully pushed.
19350,0,Patch Set 1: Code-Review+1==Code Review==OK==Smoke tests==diagram creation: okproperties view: okmodel creation: ok==Functional tests==Test of message sort change on all available message type in palette: ok==Boundaries tests==created message have the good sort type.
19353,0,Change has been successfully rebased as e2d0c80fff055142c365c35a34bd2b5de71f5896 by Patrick Tessier
19359,0,Change has been successfully merged into the git repository by Thomas Watson
19361,0,Change has been successfully pushed.
19365,0,Change has been successfully merged into the git repository by Gregoire Dupe
19368,0,Change has been successfully merged into the git repository by Melanie Bats
19371,0,Change has been successfully merged into the git repository by Melanie Bats
19374,0,Change has been successfully merged into the git repository by Jonas Helming
19375,1,Patch Set 3: Code-Review+1==Code Review==Code looks good to me.==Smoke tests==Create project and model.Create a class.Associate css to an object.==Functional tests==Manage the Oval css style with link lf.==Remarks==This resolve JUnit tests failed.
19378,0,Change has been successfully rebased as 873d80da18a2dcd62e9b352055c2a82d0e616dc8 by Camille Letavernier
19380,1,Patch Set 1: Code-Review-1(12 comments)==Code Review==Some code refactor needed.==Smoke tests==Create project and model.Create a class.Associate css to an object.==Functional tests==Manage the Oval css style with link lf.==Remarks==This resolve JUnit tests failed.
19387,0,Change has been successfully rebased as 42519e5017f327886d638c8b186356d9b740a561 by vincent lorenzo
19401,0,Change has been successfully cherry-picked as 0462db58a28ee2a2fc32e1aef0c6c57eebf07018 by Claudio Guglielmo
19406,0,Change has been successfully merged into the git repository by Stephan Herrmann
19414,0,Change has been successfully rebased as 7ba44c7a4107388464ddbea256ed6072a063b1a6 by vincent lorenzo
19419,0,Change has been successfully rebased as eafc678424ae191001198ed376162ab6b22d2db1 by vincent lorenzo
19425,0,Change has been successfully cherry-picked as 4412ce8f492de0f23cf19f322e0bd342c3284765 by Claudio Guglielmo
19429,0,Change has been successfully merged into the git repository by Jeremie Bresson
19432,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
19434,0,Patch Set 1: Code-Review+1==Code Review==Code is ok to me.==Smoke tests==project creation: okdiagram creation: okproperties view: oktable creation: ok==Functional tests==error reproduce without patch can be with it: ok==Boundaries tests==assign value: ok
19439,0,Change has been successfully rebased as a9fe08a26226520edbf4ff449e1eb1429fe96ad0 by vincent lorenzo
19441,0,Change has been successfully merged into the git repository by vincent lorenzo
19448,0,Change has been successfully rebased as 2e8c94439179dff0a141c446b82cac403cb68a4b by Benoit Maggi
19453,0,Change has been successfully rebased as d6f8fe89db66a50c625de083baeab80f32a3bb64 by vincent lorenzo
19455,0,"Patch Set 2: Code-Review+1==Code Review==Code is ok, must work fine. No need to be tested.==Functional tests==nothing to test."
19458,0,Change has been successfully rebased as aa2547d92c26a840aae1594e07b70b04b2baf586 by vincent lorenzo
19465,0,Change has been successfully rebased as 311dc7873510ce1c46bc2c25bc7930e238021c4b by vincent lorenzo
19470,0,Change has been successfully rebased as 73fa5454deec407a76c9ee9a9e473dcba7d8bc8a by vincent lorenzo
19475,0,Change has been successfully rebased as acd34bce063e21ec565dd1682e348d005635f960 by vincent lorenzo
19482,0,Change has been successfully merged into the git repository by David Miller
19491,0,Change has been successfully merged into the git repository by Pierre-Charles David
19493,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
19499,0,Change has been successfully merged into the git repository by Young-Soo Roh
19505,0,"Patch Set 1: Verified+1Hi Teodor,Very nice, thanks for this contribution."
19507,0,Change has been successfully rebased as eb24d01ad92dd7c1281fbbf814fd8d2bb3718fb8 by Teodor Madan
19514,0,Change has been successfully merged into the git repository by Sergey Prigogin
19516,0,Change has been successfully pushed.
19519,0,Change has been successfully merged into the git repository by Lars Vogel
19524,1,Patch Set 1:Thanks Dani. This one was flagged as [WIP] (work in progress) to avoid reviews. I wanted to avoid the feedback from the word_selection before finishing this one.
19526,1,"Patch Set 2:Still WIP, I think we should have an example which does not result in a compile error. See https://bugs.eclipse.org/bugs/show_bug.cgi?id=486903#c18"
19529,0,Change has been successfully merged into the git repository by Lars Vogel
19532,0,Change has been successfully merged into the git repository by Lars Vogel
19541,0,Change has been successfully merged into the git repository by Donald Dunne
19545,0,Change has been successfully merged into the git repository by Judith Gull
19548,0,Change has been successfully merged into the git repository by Young-Soo Roh
19555,0,Change has been successfully cherry-picked as 283a98522424f8e8211a6924bac1ecb15d6dffa3 by Beat Schwarzentrub
19559,0,Change has been successfully merged into the git repository by Marcel Bruch
19561,0,Patch Set 6: Code-Review+1much better!thanks for have made all changesdo you have any idea why the hudons job has not been trigger ?
19563,1,"Patch Set 5:We should only create a folder to anything if said anything can be released alone, without dependencies on the rest. It should be done sometime in the future, but for now I would keep it like this due to release schedule constraints."
19568,0,Change has been successfully merged into the git repository by Shuai Li
19574,0,"Patch Set 4: -Code-ReviewJust to react to Ansgar,I have putted benoit in the gerrit.To my point of view, it is not the number of plugins that is a threshold in the decision to make or not a separate/folder pom.A separate pom/folder means that it is a set of plugins that belong to the same namespace, unit of work. They could be released alone or replaced by another set of plugins that share the same interfaces.With intermediate poms, we should be able to build only a dedicated level and not the whole infra.To be discuss again surely but we need to kep it in mind!"
19581,0,Change has been successfully rebased as 9f0dccd90b00ccd5ee9dde1b7e13d3f9682de86f by Juan Cadavid
19584,0,Change has been successfully merged into the git repository by Eric Poirier
19589,0,Change has been successfully merged into the git repository by Donald Dunne
19592,0,Change has been successfully merged into the git repository by Markus Knauer
19595,0,Change has been successfully merged into the git repository by Gunnar Wagenknecht
19598,0,Change has been successfully merged into the git repository by Gunnar Wagenknecht
19601,0,Change has been successfully merged into the git repository by Remi Schnekenburger
19603,0,Change has been successfully merged into the git repository by Yvan Lussaud
19614,0,Change has been successfully merged into the git repository by Sebastian Struckmann
19617,0,Change has been successfully merged into the git repository by Eugen Neufeld
19619,0,Change has been successfully merged into the git repository by Sebastian Struckmann
19623,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2386/ : UNSTABLE
19625,0,Change has been successfully merged into the git repository by Eugen Neufeld
19629,0,Change has been successfully merged into the git repository by Yvan Lussaud
19634,1,Patch Set 1: Code-Review-2This is a wip that still misses the validation fixes.This change replaces https://git.eclipse.org/r/#/c/64339/ that was mistakenly pushed
19637,0,Change has been successfully merged into the git repository by Christian Krause
19642,0,Change has been successfully rebased as 73ce2bc7a5580100928f67a054b5fcd771525e59 by Ivan Furnadjiev
19647,0,Change has been successfully merged into the git repository by Gunnar Wagenknecht
19650,0,Change has been successfully merged into the git repository by Gunnar Wagenknecht
19653,0,Change has been successfully merged into the git repository by Gunnar Wagenknecht
19656,0,Change has been successfully merged into the git repository by Marcel Bruch
19660,0,Change has been successfully pushed.
19665,0,Change has been successfully pushed.
19673,0,Change has been successfully merged into the git repository by Marcel Bruch
19676,0,Change has been successfully merged into the git repository by Alexander Kurtakov
19678,0,Change has been successfully merged into the git repository by Arun Thondapu
19685,0,Change has been successfully merged into the git repository by Michal Niewrzal
19689,0,Change has been successfully pushed.
19694,0,Change has been successfully merged into the git repository by Sebastian Struckmann
19698,0,Change has been successfully merged into the git repository by Sebastian Struckmann
19709,0,Change has been successfully merged into the git repository by Sebastian Struckmann
19713,0,"Patch Set 2: Code-Review-1I'd like to see two things changed before submitting this:1. the JsonImporter has infrastructure to generate new UUIDs during import. This looks like a 1:1 implementation to the previous mechanism and is implicitly used when e.g. using ""Save As..."" for a project. However I can't see where this has been actually removed from the old XMLImporter. I'd like to see that infrastructure only being available at a single location.2. In addition to that I'd like to see a unified implicit usage of the ***Importer / ***Exporter for all ITE actions: currently ""Save As..."" is using the new Importer; ""Create new version..."" is still using the old one."
19723,0,Change has been successfully merged into the git repository by Sebastian Struckmann
19726,1,"Patch Set 1: Code-Review+2 Verified+1Looks good, override hudson (fails because it waits for some of these changes)"
19727,0,Change has been successfully cherry-picked as cf238ee58b9e3984879a4442cd96ed21b84f6516 by Patrick B??nziger
19730,0,Patch Set 1: Code-Review+2 Verified+1Looks good. Override hudson (waits for some of those changes)
19731,0,Change has been successfully cherry-picked as 8dea25d8ac0193ea9f1ba6ef292cf407a1e3ae76 by Patrick B??nziger
19734,0,Change has been successfully merged into the git repository by Alexander Kurtakov
19737,0,Change has been successfully merged into the git repository by Anton Leherbauer
19742,0,Change has been successfully rebased as a356ccc0c0e999ed560e19e69b9bf71f802881d1 by Ivan Furnadjiev
19747,0,Change has been successfully rebased as 78a666232e4dbafbccdd9bc84baea9c2fb8e0f7a by Ivan Furnadjiev
19750,0,Change has been successfully merged into the git repository by Pierre-Charles David
19753,0,Change has been successfully cherry-picked as dc31c914598c39d7c8ec602a2f8ae16129edafab by Patrick B??nziger
19755,0,Change has been successfully merged into the git repository by Alexander Kurtakov
19759,1,"Patch Set 5: Code-Review-1(8 comments)lack javadoc and explanation.I is very important in order how to use, why we have to use it?"
19771,0,Change has been successfully rebased as eeccb08c415e2091bce608043aeaff14bd7f6690 by Benoit Maggi
19777,1,Patch Set 1: Code-Review-1(1 comment)This code would crash with a dynamic mapping due to a very small mistake :)
19781,0,Change has been successfully merged into the git repository by Stephane Begaudeau
19786,0,Change has been successfully cherry-picked as 4b7e2737bab8e3c86b47e907eaa1f5527257b782 by Patrick B??nziger
19791,0,Change has been successfully merged into the git repository by Marc-Andre Laperle
19794,0,Change has been successfully merged into the git repository by Andreas Sewe
19797,0,Change has been successfully merged into the git repository by Johannes Faltermeier
19806,0,Change has been successfully cherry-picked as e14c1f714a84692e206d6818a4c3ca735e572e63 by Matthew Khouzam
19810,1,"Patch Set 4:Sorry Matthew, I hijacked your patchset. If you do not like it, you can just revert and push back yours of course. But there won't be circular dependencies this way."
19815,0,"Patch Set 1: Code-Review-1(3 comments)I don't like the dependencies this creates. We should make the critical path view more extensible so analyses implementing it, like the LttngKernelGraph, can easily add extra information to the view, without having to reimplement it...But I'm really happy to see this being used with other analyses in mind!"
19818,0,Change has been successfully cherry-picked as 446638fc4bffcbda4801cf865c01270c788b0068 by Matthew Khouzam
19822,0,Change has been successfully cherry-picked as c5ff6bf3a02120452fba7f8a308cba8be91bf025 by Matthew Khouzam
19825,1,"Patch Set 1:Francis, as you have implemented the critical path analysis. Could you please tell me if this goes against your vision of things, I want to add thread priorities to the tooltips so that we may use this as a thread priority inversion view too."
19835,0,Change has been successfully merged into the git repository by Jay Arthanareeswaran
19839,0,Change has been successfully merged into the git repository by Sam Davis
19849,0,Change has been successfully merged into the git repository by John Misinco
19857,0,Change has been successfully rebased as 15436d74df437bc2942450a3cce328ebb91e5119 by Elena Laskavaia
19860,0,Change has been successfully merged into the git repository by Matthias Sohn
19863,0,Change has been successfully merged into the git repository by Matthias Sohn
19866,0,Change has been successfully merged into the git repository by Matthias Sohn
19869,0,Change has been successfully merged into the git repository by Matthias Sohn
19872,0,Change has been successfully merged into the git repository by Matthias Sohn
19875,0,Change has been successfully merged into the git repository by Matthias Sohn
19878,0,Change has been successfully merged into the git repository by Matthias Sohn
19881,0,Change has been successfully merged into the git repository by Matthias Sohn
19884,0,Change has been successfully merged into the git repository by Matthias Sohn
19887,0,Change has been successfully merged into the git repository by Matthias Sohn
19890,0,Change has been successfully merged into the git repository by Matthias Sohn
19893,0,Change has been successfully merged into the git repository by Matthias Sohn
19896,0,Change has been successfully merged into the git repository by Matthias Sohn
19899,0,Change has been successfully merged into the git repository by Matthias Sohn
19902,0,Change has been successfully merged into the git repository by Matthias Sohn
19905,0,Change has been successfully merged into the git repository by Matthias Sohn
19908,0,Change has been successfully merged into the git repository by Matthias Sohn
19911,0,Change has been successfully merged into the git repository by Matthias Sohn
19914,0,Change has been successfully merged into the git repository by Matthias Sohn
19917,0,Change has been successfully merged into the git repository by Matthias Sohn
19920,0,Change has been successfully merged into the git repository by Matthias Sohn
19923,0,Change has been successfully merged into the git repository by Angel Avila
19929,0,Change has been successfully merged into the git repository by Vincenzo Caselli
19933,0,Change has been successfully merged into the git repository by Jeff Johnston
19936,0,Patch Set 2:Bump. Does this need another +1? I was hoping this would get applied to 4.5.2 as well but maybe I'm being too optimistic given the time line ;)
19939,0,Change has been successfully merged into the git repository by Sravan Kumar Lakkimsetti
19940,0,Patch Set 3:Thank you!
19944,0,Change has been successfully merged into the git repository by Doug Schaefer
19949,0,Change has been successfully rebased as 44599764f00c7538a94cdc95e1fe158a22191372 by Doug Schaefer
19953,0,Change has been successfully cherry-picked as 141f9d1c81ab14f94f6ec8cb889b1de91407ffed by Bernd Hufmann
19956,0,Change has been successfully merged into the git repository by Ernesto Posse
19959,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
19969,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1194/ : UNSTABLE
19971,0,Change has been successfully merged into the git repository by Sam Davis
19976,0,Patch Set 5:Summary was one of those special fields where ignoreKind was set to true
19981,0,"Patch Set 6:I didn't realize that! I don't think there is a reason for it, but let's keep the misspelling (in the test class too) to avoid breaking clients that depend on it."
19984,1,"Patch Set 6:(1 comment)Sorry if I'm misunderstanding the second AC, but are you asking me to give links a kind in the Bridge or add special handling in Mylyn?"
19998,1,"Patch Set 3:Indeed, I never personnally managed to make synchronization work with those events (the formula is erroneous after a few ms), so we might as well suggest to use synchronization using TCP packets. oh wait! That too uses Francis' github... or my own [now old] lttng-module version with variants and structs... %$""/""&*("
20002,0,"Patch Set 3:I am ok with this, I hope lttng updates their modules soon."
20004,0,Change has been successfully cherry-picked as 726b0b91ba86521de3061f4e89b2a704b4e0edb2 by Genevieve Bastien
20007,0,Change has been successfully merged into the git repository by Eric Poirier
20010,0,Change has been successfully merged into the git repository by Jeff Johnston
20012,0,Patch Set 1: Code-Review+1I like this a lot. Let's see the build time!
20014,0,Change has been successfully cherry-picked as d06be69db302dffb0de05fd4c2b69a01819b24b7 by Marc-Andre Laperle
20017,0,Change has been successfully merged into the git repository by Christian W. Damus
20021,0,Change has been successfully merged into the git repository by Jeff Johnston
20028,0,Change has been successfully cherry-picked as 29d632c478f528b247375e921fc0d3e7bc8bf061 by Marc-Andre Laperle
20038,0,Change has been successfully cherry-picked as 48072ae3db7358b66570cacc2ab690e259aa082c by Patrick Tasse
20040,0,"Patch Set 1: Code-Review+2 Verified+1This is usefull for single pixel ticks, like in the resource view."
20041,0,Change has been successfully cherry-picked as a644614def5ab57601538bf89785c92abcd1a686 by Patrick Tasse
20043,0,Patch Set 1: Verified+1 Code-Review+1How did this take so long to be noticed?!?
20045,0,Change has been successfully cherry-picked as 38f7712bff3f2f3def619c9b78c034eb475932da by Patrick Tasse
20048,0,Change has been successfully cherry-picked as 6e32530e7658ef944a902a1c935ce0d2b898309e by Jeff Johnston
20051,0,Change has been successfully merged into the git repository by Fred Bricon
20054,0,Change has been successfully merged into the git repository by Marc-Andre Laperle
20057,0,Change has been successfully merged into the git repository by Marc-Andre Laperle
20060,0,Change has been successfully cherry-picked as c392855e6e3b31efaa9cf4f9bfd8c6531f580a09 by Alexander Kurtakov
20063,0,Change has been successfully cherry-picked as 7b87b9aa9a4f27062ef09976839b325b0b6167c9 by Alexander Kurtakov
20066,0,Change has been successfully merged into the git repository by Thomas Watson
20068,0,Change has been successfully pushed.
20071,0,Change has been successfully merged into the git repository by Philip Wenig
20073,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2354/ : UNSTABLE
20077,0,Change has been successfully rebased as 6aa8bb740740bfd149f133cfb06722577f651e24 by Jonas Helming
20080,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2353/ : UNSTABLE
20084,0,Change has been successfully rebased as 4641f8a864a09d6661214a9a47ffe98d7ec77912 by Jonas Helming
20087,0,Change has been successfully merged into the git repository by Thomas Watson
20089,0,Patch Set 2: Code-Review+2 Verified+1still looks good
20090,0,Change has been successfully cherry-picked as 234838b22077261930335bd7bc8ec671d6992122 by Genevieve Bastien
20095,0,Change has been successfully merged into the git repository by Jacques Bouthillier
20104,0,Change has been successfully merged into the git repository by Laurent Fasani
20107,0,Change has been successfully merged into the git repository by Markus Knauer
20109,0,Patch Set 3: Code-Review+1Nice !!
20110,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4253/ : UNSTABLE
20117,0,Change has been successfully rebased as e0d3dc82baf352213c69aa99efcc1b717c94cd86 by Marc-Andre Laperle
20119,0,Patch Set 1: Code-Review+1Seems like valuable improvement
20120,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4231/ : UNSTABLE
20124,0,Change has been successfully merged into the git repository by vincent lorenzo
20127,0,Change has been successfully merged into the git repository by Philip Wenig
20129,0,Patch Set 1: Code-Review+1==Code Review==Code is ok to me==Smoke tests==Test that main features work: project creation: okdiagram creation: okproperties view: ok...==Functional tests==Use case works fine.
20134,0,Change has been successfully rebased as 34a59b0d47da1e9c12c10bbdcd9a9ab5d7d2f353 by vincent lorenzo
20140,0,"Patch Set 2: Code-Review+2Yes, I was trying to do a run instead of a build.  All is fine."
20141,0,Change has been successfully cherry-picked as b60ce926a544c3e986e9df172a4318b92a70a773 by Jeff Johnston
20144,0,Change has been successfully merged into the git repository by Markus Knauer
20147,0,Change has been successfully merged into the git repository by Markus Knauer
20150,0,Change has been successfully merged into the git repository by Markus Knauer
20153,0,Change has been successfully cherry-picked as a30419130b56cfbf0171819a4ca0a9950430279a by Bernd Hufmann
20155,0,Change has been successfully merged into the git repository by Laurent Delaigue
20161,0,Change has been successfully merged into the git repository by Philip Wenig
20164,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2356/ : UNSTABLE
20169,0,Change has been successfully merged into the git repository by Eugen Neufeld
20172,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2355/ : UNSTABLE
20175,0,Change has been successfully rebased as b5630a0b50c2673c58779f9ec944e5bd9a0dd964 by Eugen Neufeld
20177,0,Patch Set 2: Code-Review+2 Verified+1Good to go!
20179,0,Change has been successfully cherry-picked as ad4abd7df7d755087775b55872da72b5b499ac36 by Bernd Hufmann
20182,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2307/ : UNSTABLE
20184,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2313/ : UNSTABLE
20187,0,Change has been successfully merged into the git repository by Eugen Neufeld
20189,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2298/ : UNSTABLE
20194,0,Change has been successfully merged into the git repository by Marcel Bruch
20197,0,Change has been successfully merged into the git repository by Marcel Bruch
20202,0,Change has been successfully merged into the git repository by Marcel Bruch
20207,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/421/ : UNSTABLE
20212,0,Change has been successfully cherry-picked as 51757f421969e7b2603d71564c23875118e4e548 by Beat Schwarzentrub
20220,1,"Patch Set 2:The third bug (Select content in Excel --> 'Copy'. Key 'Esc' on the keyboard, the clipboard is empty. In the ClassTreeTable, right clic and 'Paste'. An error is displayed) was not corresponding to this correction, A new bug was filled in the bugzilla: https://bugs.eclipse.org/bugs/show_bug.cgi?id=484632"
20223,0,"Patch Set 5: Code-Review-1Please, change the resize column behavior + fix alignment of cell and header : header -> centeredcell content ok, excepted boolean in center it will be better+ please, try to understand why the boolean are not displayed as in the table catalog + make the fix!"
20227,0,Change has been successfully rebased as c8e552daf57bf096d2a97313f306dfba0c299271 by vincent lorenzo
20230,0,Change has been successfully merged into the git repository by Sebastian Struckmann
20233,0,Change has been successfully merged into the git repository by Pierre-Charles David
20239,0,Change has been successfully merged into the git repository by Ansgar Radermacher
20245,0,Change has been successfully merged into the git repository by Marcel Bruch
20247,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2350/ : UNSTABLE
20250,0,Change has been successfully rebased as 913fe2e8e1a92dea69ea6e431400e98fef966a39 by Eugen Neufeld
20252,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2349/ : UNSTABLE
20254,0,Change has been successfully merged into the git repository by Eugen Neufeld
20257,0,Change has been successfully merged into the git repository by Sebastian Struckmann
20266,0,Change has been successfully rebased as 2a2f09e8f12e0215c7571af55992a041de218259 by vincent lorenzo
20269,0,Change has been successfully merged into the git repository by Marcel Bruch
20270,0,Patch Set 2:can you provide a use case to test it ?thanks
20272,1,Patch Set 2: Code-Review+1==Code Review==code is ok to me.==Smoke tests==project creation: okdiagram creation: okproperties view: ok==Functional tests==Use case is ok.==Boundaries tests==test 2 properties on the 2 stereotype with same name: KO but it's ko on properties view too not only nattable. It's another bug.
20275,0,Change has been successfully rebased as 9e0207f837b89dd00b907ad3f1c63979a2506c5a by vincent lorenzo
20280,0,Change has been successfully merged into the git repository by Michael Wenz
20283,0,Change has been successfully merged into the git repository by Laurent Goubet
20285,0,"Patch Set 3: Code-Review+2I am fine with this, are you? Fixed a blank space."
20288,0,Change has been successfully cherry-picked as 68471013a53d0cbee919fadd312c58ad535bf8cc by Bernd Hufmann
20293,0,Change has been successfully merged into the git repository by Marcel Bruch
20296,0,Change has been successfully merged into the git repository by Sergey Boyko
20299,0,Change has been successfully merged into the git repository by Marcel Bruch
20304,0,Change has been successfully rebased as c9a998ee14b4f4f8da218c356fec83ca3f79bffb by vincent lorenzo
20307,0,Change has been successfully merged into the git repository by Michael Wenz
20315,0,Change has been successfully merged into the git repository by Marcel Bruch
20318,0,Change has been successfully merged into the git repository by Marcel Bruch
20323,0,Change has been successfully merged into the git repository by Yvan Lussaud
20325,0,Change has been successfully merged into the git repository by Marcel Bruch
20329,0,Change has been successfully merged into the git repository by Marcel Bruch
20336,0,Change has been successfully merged into the git repository by Marcel Bruch
20339,0,Change has been successfully merged into the git repository by Christian Pontesegger
20343,0,Change has been successfully merged into the git repository by Marcel Bruch
20346,0,Change has been successfully merged into the git repository by Laurent Goubet
20349,0,Change has been successfully merged into the git repository by Marcel Bruch
20358,0,Change has been successfully rebased as 14dfa59604f06a92c816385a395898d4a8f79e52 by Markus Knauer
20362,0,Change has been successfully merged into the git repository by Philip Wenig
20365,0,Change has been successfully merged into the git repository by Markus Knauer
20367,0,Change has been successfully merged into the git repository by Melanie Bats
20374,0,Change has been successfully merged into the git repository by Melanie Bats
20380,0,Change has been successfully merged into the git repository by Yvan Lussaud
20383,1,Patch Set 1: Code-Review+2 Verified+1Already accepted on master. failure is due to building time.
20384,0,Change has been successfully merged into the git repository by Remi Schnekenburger
20386,0,Change has been successfully merged into the git repository by Lars Vogel
20391,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8172/ : UNSTABLE
20394,0,Change has been successfully merged into the git repository by Michael Vorburger
20397,0,Change has been successfully cherry-picked as 0dfa78f5c7dfb550761bc1efe5cb3881c7f09911 by Hannes Mueller
20401,0,Change has been successfully rebased as 2c65614259b9a870138ac06af6bf2cc387a9f741 by Benoit Maggi
20405,0,Change has been successfully merged into the git repository by Michael Wenz
20409,0,Change has been successfully merged into the git repository by Christian Pontesegger
20411,0,Change has been successfully pushed.
20415,0,Change has been successfully pushed.
20422,0,Change has been successfully merged into the git repository by Christian Pontesegger
20424,0,Change has been successfully merged into the git repository by Johannes Faltermeier
20435,0,Change has been successfully merged into the git repository by Stephane Begaudeau
20442,0,Change has been successfully merged into the git repository by Lars Vogel
20445,0,Change has been successfully merged into the git repository by Johannes Faltermeier
20450,0,Change has been successfully merged into the git repository by Lars Vogel
20453,0,Change has been successfully merged into the git repository by Lars Vogel
20459,0,Change has been successfully merged into the git repository by Melanie Bats
20463,0,Change has been successfully merged into the git repository by Ralf Sternberg
20467,0,Change has been successfully merged into the git repository by Ralf Sternberg
20473,0,Change has been successfully merged into the git repository by Christian Pontesegger
20478,0,Change has been successfully rebased as b7a494a8e1f028563c4e38e1d7088f2f529b60d1 by Juan Cadavid
20481,0,Change has been successfully merged into the git repository by Gregoire Dupe
20487,0,Change has been successfully merged into the git repository by Stephan Herrmann
20490,0,"Patch Set 1: Code-Review+2Thanks Alex, let's wait for hudson!I've implemented the same thing and was slow on the git push. :)"
20491,1,"Patch Set 1: Verified+1Thanks for ze quick review!I tested with the trace attached in the bug, now the compat_sycall_exit events trigger a syscall exit correctly."
20492,0,Change has been successfully cherry-picked as 01f2a5074ceebbc1ceaf2643c1aff5168a61ed4b by Alexandre Montplaisir
20497,0,Change has been successfully cherry-picked as 3c3795b85b6f98f52e865eb58b0d9f0e286262d3 by Alexandre Montplaisir
20500,0,Change has been successfully cherry-picked as 1604d8dee38b98550b1996569262ef6829ee2d52 by Alexander Kurtakov
20503,0,Change has been successfully cherry-picked as fd6ff358e48e1ba3fc414d505f40d7ab44d18247 by Alexander Kurtakov
20506,0,Change has been successfully merged into the git repository by Jad El-khoury
20516,0,Change has been successfully cherry-picked as 840c846f41adf0f1ad689d217159b56e7bfa50ac by Marc-Andre Laperle
20523,0,Change has been successfully merged into the git repository by Pierre-Charles David
20526,0,Change has been successfully merged into the git repository by Jacques Bouthillier
20530,0,Change has been successfully merged into the git repository by Christopher Guindon
20533,0,Change has been successfully merged into the git repository by Christopher Guindon
20537,0,Change has been successfully merged into the git repository by Sam Davis
20541,0,Change has been successfully rebased as 4fafaeaf10cf01679377dcea41780204ee3ca9af by Sergey Prigogin
20543,0,Change has been successfully merged into the git repository by Brian de Alwis
20546,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1170/ : UNSTABLE
20548,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1171/ : UNSTABLE
20551,0,Change has been successfully merged into the git repository by Sam Davis
20558,0,Change has been successfully cherry-picked as a0f5482638de2592c7ff5605d25a4c6588e6faa7 by Marc-Andre Laperle
20562,0,Change has been successfully cherry-picked as 29fe791136c4dc0921e5c3f6bf593317ea16fb45 by Marc-Andre Laperle
20564,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4183/ : UNSTABLE
20565,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4184/ : UNSTABLE
20566,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4187/ : UNSTABLE
20567,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4189/ : UNSTABLE
20569,0,"Patch Set 1:> Oh, thanks Marc-Andre for looking at this carefully. I shouldn't > have rushed the merge.No worries, it's mostly cosmetic anyway"
20571,0,Change has been successfully rebased as 8c96317ae86331b32a22ea07327a7cbba53a12ca by Marc-Andre Laperle
20575,0,Change has been successfully rebased as 00f3ff688838ab5e60e6f9735efbc1fca88c1367 by Juan Cadavid
20578,0,Change has been successfully merged into the git repository by Lars Vogel
20581,0,Change has been successfully merged into the git repository by vincent lorenzo
20583,0,Patch Set 1: Code-Review-1(2 comments)Is this from a Sonar warning? Quite nice. Tiny comments though.
20590,0,Change has been successfully cherry-picked as 866b99766ff4dfb7f8d45f76e6e5244dfbf86a9d by Matthew Khouzam
20594,0,Change has been successfully cherry-picked as 1337fefc3a27b8b8842e7d63c4e8e9e797992d55 by Matthew Khouzam
20597,0,Change has been successfully cherry-picked as 658e0268ed41526cf4723b1cfa4d10724e25105e by Matthew Khouzam
20602,0,Patch Set 6: -Code-Review -VerifiedOops. thought this was an alexis patch. :)
20612,0,Change has been successfully cherry-picked as 330dc8ac08d504121ccd9c165b0662bc47af36cb by Matthew Khouzam
20615,0,"Patch Set 13:Matthew, the patch looks good to me but I'd prefer waiting for the tests to be ready to merge"
20618,0,"Patch Set 3: Code-Review-1(5 comments)This is great, a few nits"
20624,0,Change has been successfully cherry-picked as 0c85f6f28194bae576e94f45a771886fbdf70f60 by Matthew Khouzam
20628,0,Patch Set 6: Code-Review+2 Verified+1Looks great to me!
20636,0,Patch Set 11:wow! thanks!
20640,1,Patch Set 5: Code-Review-1(1 comment)please revert to patchset 4
20644,0,Change has been successfully pushed.
20647,0,Change has been successfully pushed.
20652,0,Change has been successfully pushed.
20656,0,Change has been successfully merged into the git repository by Lars Vogel
20662,0,Change has been successfully cherry-picked as 675594e6dd12a45531e8ce994840de7706801988 by Matthias Villiger
20666,0,"Patch Set 6:> I've asked on stackoverflow [1] and run some snippets like this:I think unless we have docs stating that it, for safety we should assume there is one true instance.  Otherwise why would anybody bother with restoring the accessible flag?"
20667,1,"Patch Set 6:> I think unless we have docs stating that it, for safety we should > assume there is one true instance.The doc for setAccessible() states that it sets the accessible flag  ""for *this object*"", not for the reflected object.This developerworks article on reflection [1] says that the setAccessible method ""lets you turn the access checks on or off for an *instance* of one of these classes"" (i.e. Constructor, Field, and Method). > Otherwise why would anybody bother with restoring the accessible flag?Interestingly, I couldn't find any reference that recommends restoring the accessibility state. Maybe it was just a misconception.Moreover, the fact that you could write a set of unit tests that show the actual effect of setAccessible, and the central role of this method in the reflection API, makes me think that any change in this regard would be a breaking change. Hence I'd tend to consider the actual behavior as a contract.[1] http://www.ibm.com/developerworks/library/j-dyn0603/#N101FA"
20670,1,"Patch Set 4:Oh dear, how did I miss those errors."
20679,0,Change has been successfully pushed.
20693,0,Change has been successfully rebased as ca864406ba87adfd192fdeab1e24cbc3e1f508a7 by vincent lorenzo
20701,0,Patch Set 2: Code-Review+2 Verified+1Works like a charm!
20703,0,Change has been successfully merged into the git repository by Mickael Istria
20711,0,Change has been successfully merged into the git repository by Laurent Goubet
20715,0,Change has been successfully rebased as 9f9c54764c041e7340503c04879e5f3dad17d45f by Marc Dumais
20721,0,Change has been successfully rebased as ceb9741c6c9ca56ac6ba81718ec88b487a07543f by vincent lorenzo
20732,0,Change has been successfully cherry-picked as 518cad290c7adf017237c8e5e6be9b5630ead334 by Alexander Kurtakov
20736,0,Change has been successfully rebased as f42c7123f672622f9bd51cf597bb05f5d096883a by Ansgar Radermacher
20739,0,Change has been successfully cherry-picked as b0efd3ebae29de16550afd293a8a19930eaa8c40 by Alexander Kurtakov
20741,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2287/ : UNSTABLE
20744,0,Change has been successfully merged into the git repository by Eugen Neufeld
20748,0,Patch Set 3: Code-Review-2 Verified+1Looks good. Put a -2 to avoid accidental submission before the other change goes in.
20750,0,Change has been successfully merged into the git repository by Dani Megert
20753,0,Change has been successfully merged into the git repository by Dani Megert
20754,0,Patch Set 6: Verified+1(9 comments)Looks good overall.Please update the copyright date in all files.
20764,0,Patch Set 3:(2 comments)Thank you for your valuable feedback. I will propose a new version of this patch. I have 2 questions for the implemenation.
20766,0,Patch Set 3:(1 comment)I have submitted version 4 of this change. Thank you for your feedback.
20780,0,Change has been successfully rebased as 4d70da8c0df33a7fd6a20933bda10261d378a304 by Patrick Tessier
20784,0,Change has been successfully merged into the git repository by Sebastian Struckmann
20788,0,Change has been successfully cherry-picked as 8014b15ab193c12c2430996d749dc1b7e94ed375 by Alexander Kurtakov
20791,0,Change has been successfully merged into the git repository by Eugen Neufeld
20796,1,Patch Set 2:hmm I guess it's a legit failure?
20799,0,Change has been successfully merged into the git repository by Mickael Istria
20807,0,"Patch Set 4: Code-Review+2 Verified+1Dani indicated that he will not have the time to review. Change looks good to me and build is successful. Pom changes should not be necessary, as the increase was triggered by Bug 474264."
20808,0,Change has been successfully merged into the git repository by Lars Vogel
20812,0,Change has been successfully merged into the git repository by Niraj Modi
20816,0,Change has been successfully merged into the git repository by Sebastian Struckmann
20821,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
20824,0,Change has been successfully merged into the git repository by Eugen Neufeld
20826,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
20828,0,Change has been successfully merged into the git repository by Jan Sievers
20835,0,Change has been successfully merged into the git repository by Laurent Goubet
20838,0,Change has been successfully merged into the git repository by Yvan Lussaud
20841,0,Change has been successfully cherry-picked as 9b5150eb5f0d886e4dd62a7b8d81aa59020e04d3 by Matthias Villiger
20844,0,Change has been successfully cherry-picked as 8722dfba41228ec4d89841ec11b86b424a3867f1 by Daniel Wiehl
20847,0,Change has been successfully cherry-picked as 1caebd6894b48079335a3b5397af9fd42edef2e0 by Daniel Wiehl
20850,0,Change has been successfully cherry-picked as 86d8a152a6f5a3cdaa6a40aa287698d01c068d9f by Daniel Wiehl
20853,0,Change has been successfully cherry-picked as 5594f032fd60c74cb57abe0f40432483a4753f98 by Daniel Wiehl
20856,0,Change has been successfully cherry-picked as 83534e9c1e41385ab331ac24ac821b722827682a by Daniel Wiehl
20859,0,Change has been successfully cherry-picked as 49c497a3faa0801d71403d0560ecccfa077d9816 by Daniel Wiehl
20869,0,Change has been successfully merged into the git repository by Marvin Mueller
20873,0,Change has been successfully merged into the git repository by Thomas Guiu
20878,0,Change has been successfully rebased as 1d46897ad0353a806b0497c27847f81bfee30e97 by Nathan Ridge
20881,0,Change has been successfully merged into the git repository by Matthias Sohn
20883,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4188/ : UNSTABLE
20885,0,Change has been successfully merged into the git repository by Sergey Prigogin
20887,1,"Patch Set 1:This change doesn't model constant expressions of aggregate types, but solves the use case in bug 486149 and makes a small step towards solving the more general problem."
20889,0,Change has been successfully merged into the git repository by Sergey Prigogin
20895,0,Change has been successfully merged into the git repository by Lina Kemmel
20900,0,Change has been successfully merged into the git repository by Matthias Sohn
20903,0,Change has been successfully merged into the git repository by Matthias Sohn
20906,0,Change has been successfully merged into the git repository by Pierre-Charles David
20909,0,Change has been successfully merged into the git repository by Matthias Sohn
20912,0,Change has been successfully merged into the git repository by Matthias Sohn
20915,0,Change has been successfully merged into the git repository by Matthias Sohn
20918,0,Change has been successfully merged into the git repository by Matthias Sohn
20921,0,Change has been successfully merged into the git repository by Matthias Sohn
20924,0,Change has been successfully merged into the git repository by Matthias Sohn
20927,0,Change has been successfully merged into the git repository by Matthias Sohn
20930,0,Change has been successfully merged into the git repository by Matthias Sohn
20934,0,Change has been successfully merged into the git repository by Matthias Sohn
20936,1,"Patch Set 1:with this change rebased on current origin/master I get the following maven build error (on Mac/Java 7)[INFO] Resolving dependencies of MavenProject: org.eclipse.egit:org.eclipse.egit.ui.importer:4.2.0-SNAPSHOT @ /Users/d029788/src/git/egit/org.eclipse.egit.ui.importer/pom.xml[INFO] {osgi.ws=gtk, osgi.os=linux, osgi.arch=x86, org.eclipse.update.install.features=true}[ERROR] Cannot resolve project dependencies:[ERROR]   Software being installed: org.eclipse.egit.ui.importer 4.2.0.qualifier[ERROR]   Missing requirement: org.eclipse.e4.ui.importer 0.2.0.v20151123-1229 requires 'bundle org.eclipse.core.jobs 3.7.0' but it could not be found[ERROR]   Cannot satisfy dependency: org.eclipse.egit.ui.importer 4.2.0.qualifier depends on: bundle org.eclipse.e4.ui.importer 0.1.0"
20937,0,"Patch Set 1:> [ERROR]   Cannot satisfy dependency: org.eclipse.egit.ui.importer > 4.2.0.qualifier depends on: bundle org.eclipse.e4.ui.importer 0.1.0That's a bug in org.eclipse.egit.ui.importer/META-INF/MANIFEST.MF, which asks for the precise version 0.1.0. It should have a more relaxed version range, if any at all."
20938,1,"Patch Set 1:> > [ERROR]   Cannot satisfy dependency: org.eclipse.egit.ui.importer > > 4.2.0.qualifier depends on: bundle org.eclipse.e4.ui.importer > 0.1.0 >  > That's a bug in org.eclipse.egit.ui.importer/META-INF/MANIFEST.MF, > which asks for the precise version 0.1.0. It should have a more > relaxed version range, if any at all.Scratch that; I misread  the version spec. It's minimum version 0.1.0.I also get that with 4.3.0-SNAPSHOT. Without this change, the maven build went and downloaded Eclipse Mars bundles. With this change, it downloaded Kepler bundles. Also strange that on MacOS, it would suddenly fall back to OS ""linux""..."
20942,0,Change has been successfully merged into the git repository by Matthias Sohn
20946,0,Change has been successfully cherry-picked as 9e40d478d6ba65c4da23b16b6994a1feec44b8b3 by Jeff Johnston
20950,0,Change has been successfully merged into the git repository by Brian de Alwis
20953,0,Change has been successfully merged into the git repository by Eugen Neufeld
20956,1,"Patch Set 4:We don't want the CLI presentation which is limited due to printing one line at a time.  You must have a fix that is not in the git repo as I am seeing multiple entries appearing stacked for the image id as before.  The full repo/tag is shown for each tag.  If I have an image with 6 tags for the fedora repo let's say I see this in a single fat row where the repo tags column has 6 entries on top of each other.  If I then add a new tag: jjohnstn/fedora:latest, I see 7 repo tags for the image id, but I also get a repeat of the image id where again I see 7 repo tags for the image id.  I want the fix to make this one image row with 7 repo tags.  The user gets to see all tags in easy to read format and there is one row, however fat."
20957,1,"Patch Set 4:Can you show me how it renders on your machine, because on MacOS X, the row only displays the first tag for a given image. All other tags are hidden because the row does not expand vertically.Also, this patch fixes the problem where the image with multiple repo/tags only appears with the first repo (and all tags) in the Docker Explorer.Without the patch applied, here are how the Docker Explorer and Docker Images view look like here: https://www.dropbox.com/s/zb001upd5senab4/Screenshot%202016-01-14%2008.52.22.png?dl=0This is clearly wrong because the second repo name does not appear anywhere, and the Docker Images view seem to show a duplicate line."
20960,0,Change has been successfully cherry-picked as bdffc9ce9f73c38f723f9fe780ff053dff1dd9bd by Jeff Johnston
20964,1,"Patch Set 5:I did some research.  There is a bug with Table on MacOSx and Windows.  The cell height cannot be changed.  On Linux, the cell height is dynamic and expands as needed to show the text with multiple lines.  There apparently are Table alternatives such as KTable, but there isn't time to get these passed into Orbit.  A solution that works for all three would be use a TableEditor to add a drop-down Combo which shows all the tags in their full form in the DockerImages View.  How you handle the DockerExplorer View is your call."
20965,1,"Patch Set 5:So I spoke to Eric for a bit and I like his suggestion of turning our tables into trees. It should be possible to preserve the look/feel as-is with one slight change : There would be a drop-down arrow to the left of the 'ID' label.We could do the following :- If an image has multiple repo/tags, we have a child item called 'Repo/Tags that' lists the entries under it.- If an image has a parent image, we could have a child item called 'Parent' and list the image ID that was used as a base."
20968,1,"Patch Set 6:Roland: using your patch, I have this result (without my patch applied): https://www.dropbox.com/s/uuck2wi1yx4qfrq/Screenshot%202016-01-21%2011.46.23.png?dl=0So technically, the ""Repo Tags' columns effectively shows all values, but the vertical alignment is incorrect amongst all columns. Is there a way to fix this ? How does it render on Linux ?In the mean time, I'll rework on my patch to remove the DockerImage duplication but still make sure they all appear in the Docker Explorer view."
20974,0,Change has been successfully merged into the git repository by Brian de Alwis
20978,0,Change has been successfully merged into the git repository by Brian de Alwis
20982,0,Change has been successfully merged into the git repository by Eugen Neufeld
20984,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2283/ : UNSTABLE
20986,0,"Patch Set 4:If we're happy with the direction that these changes are taking, I shall start authoring the Migration Guide.  But I wouldn't publish that on the wiki before any changes are pushed to master.Any comment on this UI refactoring for the org.eclipse.papyrus.infra.tools and org.eclipse.papyrus.infra.core bundles?"
20989,0,Change has been successfully pushed.
20991,1,"´┐¢  the edit advices dealing with the IPageManager (e.g., for closing pages when> > diagrams are deleted) are moved from the org.eclipse.papyrus.infra.emf> bundle into org.eclipse.papyrus.infra.uiThe risk with removing these advices in headless mode is that manipulating diagrams while ensuring consistency will become much less easy. It is not as critical as it used to be when the DI Model contained many information about the opened pages, but you'll still end up with an invalid tab if you delete a diagram in headless mode. And I think the PageManager is also used to export diagrams as images (Which could be done in e.g. an automated document generation task in headless mode)"""
20992,1,"´┐¢  the edit advices dealing with the IPageManager (e.g., for > closing pages when > > > > diagrams are deleted) are moved from the org.eclipse.papyrus.infra.emf > > bundle into org.eclipse.papyrus.infra.ui >  > The risk with removing these advices in headless mode is that > manipulating diagrams while ensuring consistency will become much > less easy. It is not as critical as it used to be when the DI Model > contained many information about the opened pages, but you'll still > end up with an invalid tab if you delete a diagram in headless > mode. And I think the PageManager is also used to export diagrams > as images (Which could be done in e.g. an automated document > generation task in headless mode)Good points.  It seems the IPageManager API, then, actually needs to be factored out of the UI bundle that it's in now (core.sasheditor) which is all mixed up with the actual MultiPageEditor implementation."""
21003,0,"Patch Set 11:Ok fine. I just wanted to be sure this didn't cause or highlight any confusionWe might indeed consider implementing this interface for other kinds of contexts, if needed, but I'm not sure that's required. As long as the various ServiceUtils can find the current registry with or without an editor, that's fine"
21011,0,Change has been successfully pushed.
21016,0,"Patch Set 9:> > because these tree elements are also EObjects but are not > interesting in themselves >  > We removed the TreeElement -> EObject generalization some time ago > (Although there is still an Ecore metamodel/genmodel, the code has > been replaced)Oh!  I completely missed that fact.  I'll try a more sensible ordering of the code, then (as it was before)."
21021,0,"Patch Set 4:> > IEMFFacetContentProviderResolver is used by the headless > EMFHelper >  > It shouldn't be useful anymore, as EMF Facet TreeElements now > properly implement IAdaptable (And are not EObjects anymore). We > can simply remove the EMF Facet-specific code from EMFHelperAh, interesting.  I'll test that.(although it does seem odd to me that these tree nodes should adapt to an interface that they implement Java-wise by returning some other object)"
21024,0,Change has been successfully pushed.
21026,1,"Patch Set 6:Patch set 6 fixes a problem introduced by the extraction of a UI-dependent advice from the out of the extendedtypes.emf bundle.  The problem was that the utility method (repeated in several places, now consolidated) used to load classes had two limitations:* it only considered the very long since deprecated Eclipse-LazyStart bundle manifest header in determining whether a class was safe to load from an inactive bundle* it can only load classes that are actually located in the bundle that defines the element-type extension; it cannot load them from anywhere on that bundle's classpathThe first problem is fixed; the second is worked around by moving a few more classes into the UI bundle."
21027,0,"Patch Set 6:Oh, great.  Now our Gerrit builds are failing because the Webtools milestone is missing."
21036,0,"Patch Set 3:(20 comments)Thanks, Fran├ºois, for your review.  I've made some changes and answered your questions as well as I can.  I hope those answers are satisfactory."
21040,1,Patch Set 1:This third change (which builds on 63777 and 64168) completes the essential UI refactorings in the Infra Layer.  It covers the following bundles:* infra.constraints* infra.elementtypesconfigurations[.*]* infra.extendedtypes[.*]* infra.onefile* infra.services.edit
21047,0,Change has been successfully pushed.
21051,0,Change has been successfully pushed.
21055,0,Change has been successfully rebased as e5647f87f2d289148a4e5aa13ecb67d8f7546301 by Sam Davis
21060,0,Change has been successfully cherry-picked as 4742d8178aedd81d40670298e82a2e1cb661fdef by Matthew Khouzam
21063,0,Change has been successfully cherry-picked as 00c15db6f5612119ed0502463c8abb74abed63ce by Matthew Khouzam
21066,0,Change has been successfully merged into the git repository by Donald Dunne
21075,0,Change has been successfully merged into the git repository by Pierre-Charles David
21078,0,Change has been successfully merged into the git repository by Christopher Guindon
21085,0,Change has been successfully pushed.
21088,0,Change has been successfully merged into the git repository by Christopher Guindon
21092,0,Patch Set 1:https://git.eclipse.org/r/#/c/45500/ this guy!
21094,0,Patch Set 2:> https://git.eclipse.org/r/#/c/45500/ this guy!I know! :p
21096,1,"Patch Set 2:I am ok with this. For the record, there is a regression test for this: the Windows test for CTFTraceGrowingTest."
21099,0,Change has been successfully cherry-picked as 1f615911c53e0ebd5f9e12194d1e36742dab8f7e by Marc-Andre Laperle
21104,0,Change has been successfully cherry-picked as fdff60b92be42499fb7393929abe965964c71ce6 by Marc-Andre Laperle
21108,0,Change has been successfully merged into the git repository by Christopher Guindon
21112,0,Change has been successfully merged into the git repository by Christopher Guindon
21115,0,Change has been successfully cherry-picked as a2ca2d314e725b6244fcd10c48793e2531e65fe7 by Marc-Andre Laperle
21119,0,Change has been successfully cherry-picked as d4a0dd3596d731af0bcc630575b336a46392fc5b by Matthew Khouzam
21130,0,Change has been successfully merged into the git repository by Christopher Guindon
21146,0,Change has been successfully merged into the git repository by Steffen Pingel
21149,0,Change has been successfully merged into the git repository by Marc Khouzam
21155,0,Change has been successfully merged into the git repository by Michael Rennie
21158,0,Change has been successfully merged into the git repository by Alexander Kurtakov
21160,0,Change has been successfully cherry-picked as 0a03290b076819c83377b6c62aa3950f2cd66e25 by Jeff Johnston
21165,0,Change has been successfully merged into the git repository by Alexander Kurtakov
21168,0,Change has been successfully cherry-picked as 4efe6175fba2ee2d8d62cbc51c5957a04d109d7f by Jeff Johnston
21173,0,Change has been successfully merged into the git repository by David Green
21177,0,Change has been successfully cherry-picked as 640a4b1e557d05396950e50cf0029d2b1d834ed1 by Jeff Johnston
21181,0,Change has been successfully merged into the git repository by Gregoire Dupe
21185,0,Change has been successfully merged into the git repository by Thomas Watson
21187,0,Change has been successfully cherry-picked as 5c50e284b3caca68f5dc73ccb09f2c49add75146 by Matthew Khouzam
21192,0,Change has been successfully cherry-picked as 4055c3a1f00e5d71fca0ad042151bb5d1aa0cbb7 by Matthew Khouzam
21199,0,Change has been successfully merged into the git repository by Jacques Bouthillier
21206,0,Change has been successfully merged into the git repository by vincent lorenzo
21210,0,Patch Set 1:The build is ok locally for me... This change must be applied with a change on eclipse.platform.ui.tools (there is a link with x-friend bundles)
21214,0,Patch Set 1:Anyway the x-friend change is in another review : https://git.eclipse.org/r/#/c/64544/
21216,0,Change has been successfully merged into the git repository by Olivier Prouvost
21219,0,Change has been successfully merged into the git repository by Jonas Helming
21221,0,"Patch Set 1:For this change, I got changes in java code due to code formatting again. the main change is located in MANIFEST for the x-friend stuff"
21224,1,"Patch Set 1:Hi Jonas, I know.. it is a problem of code formatting I guess.. I will remove it :)"
21231,0,Change has been successfully merged into the git repository by Cedric Brun
21238,0,Change has been successfully rebased as e9dfee4f37e814b1d9f74a677544e7468930dfa0 by Eugen Neufeld
21240,0,Change has been successfully pushed.
21248,0,Change has been successfully merged into the git repository by Christopher Guindon
21282,0,Change has been successfully merged into the git repository by Laurent Goubet
21285,0,Change has been successfully merged into the git repository by Christopher Guindon
21305,0,Patch Set 1: Code-Review+1A small review/merge to enable the good display of the prototype website.
21307,0,Change has been successfully merged into the git repository by Benoit Maggi
21310,0,Change has been successfully pushed.
21312,0,Change has been successfully pushed.
21316,0,Change has been successfully merged into the git repository by Johannes Faltermeier
21319,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
21324,0,Change has been successfully merged into the git repository by Laurent Goubet
21326,0,Change has been successfully merged into the git repository by Esteban DUGUEPEROUX
21335,0,Change has been successfully merged into the git repository by Benoit Maggi
21337,0,Change has been successfully merged into the git repository by Markus Keller
21339,0,Change has been successfully merged into the git repository by Laurent Goubet
21346,0,Change has been successfully merged into the git repository by Laurent Goubet
21350,0,Change has been successfully merged into the git repository by Laurent Goubet
21352,0,Patch Set 1: Code-Review+1JS code looks good
21355,0,Change has been successfully rebased as e6b261f75d3f6a0ff4e898337183491f13a91588 by Ivan Furnadjiev
21360,0,Change has been successfully merged into the git repository by Laurent Goubet
21364,0,Change has been successfully rebased as 2bc120b5cffb97eec41b8a78ec6aabac49981c70 by Eugen Neufeld
21368,0,Change has been successfully rebased as f7624c1c3c07a3712f6e87d09957b3d7a411bae5 by Eugen Neufeld
21371,0,Change has been successfully merged into the git repository by Ralf Sternberg
21375,0,Change has been successfully rebased as 6df90d7ca2af8950dc5f76db18f56ff95723e30f by Johannes Faltermeier
21376,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2243/ : UNSTABLE
21378,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2193/ : UNSTABLE
21380,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2226/ : UNSTABLE
21389,1,Patch Set 2: Code-Review-1I still get an error with a primitive type:Class Condition from OS_AL used to have the following #include (since it has an attribute of type PrimitiveTypes::Boolean):/* Owner package header include                             */#include <root/UMLPrimitiveTypes/Pkg_UMLPrimitiveTypes.h>...This #include is missing and the code does not compile any more
21393,1,Patch Set 2:Anyway the problem isn't with the header but rather the fact that folders like PrimitiveTypes/ aren't generated. Furthermore some classes aren't generated either. I will investigate.
21395,0,"Patch Set 2:Okay it's fixed in patch set 3. Somehow I introduced a condition to only include a primitive if it's stereotyped <<Typedef>>. I removed the condition so it's fine now. The full list of changes in patch set 3 are:- Fix not including primitive types that are not stereotyped <<Typedef>>- Add a requiredClassifiers method in ClassUtils so we can compute therequired classifiers during generation. This method was the oldincludedClassifiers method, which didn't separation includes from declarations. This means we now generate declared classifiers, even if they aren't required. I think it's better because the user probably wants to have a look at the declared classes."
21396,1,"Patch Set 2:Btw, for the following kind of errors:::OS_AL::Time::TimeVal is undefinedIt's because we generate the model root element name (here ""OS_AL"") in the namespace of type TimeVal. But in TimeVal.h, we have:namespace Time {  class TimeVal {    ...  }}The problem is well-known and mentioned here:https://bugs.eclipse.org/bugs/show_bug.cgi?id=480441https://git.eclipse.org/r/#/c/58746/But I think you don't have this problem if you generate code from a class model that was generated from a component model, via Qompass."
21399,0,Change has been successfully pushed.
21403,0,Change has been successfully merged into the git repository by Laurent Goubet
21409,0,Change has been successfully merged into the git repository by Esteban DUGUEPEROUX
21412,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2245/ : UNSTABLE
21415,0,Change has been successfully rebased as c64db44e2aa1b41400f4b5b430f81e2d7ca8a4bd by Eugen Neufeld
21421,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2231/ : UNSTABLE
21428,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2242/ : UNSTABLE
21430,0,"Patch Set 6: Code-Review+1I think we should copy our regular settings to this bundle, since the project specific settings also contain the warning levels for the manifest and other bundle related files. Besides that the commit is fine in my opinion."
21432,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2244/ : UNSTABLE
21435,0,Change has been successfully rebased as 75e587334b9853f7281e651edabfd54a429f84b2 by Johannes Faltermeier
21440,0,Change has been successfully merged into the git repository by Johannes Dorn
21444,0,Change has been successfully merged into the git repository by Marvin Mueller
21446,0,"Patch Set 1: Code-Review+1There was a minor typo in the pom, may you merge it?thanks"
21448,0,Change has been successfully merged into the git repository by Benoit Maggi
21452,0,Change has been successfully merged into the git repository by Michal Niewrzal
21456,0,Change has been successfully merged into the git repository by Johannes Dorn
21459,1,"Patch Set 3:If you could fix the test failure, I think this and the dependent change are good to go."
21461,0,Change has been successfully merged into the git repository by Alexander Kurtakov
21466,0,Change has been successfully merged into the git repository by Lars Vogel
21469,0,Change has been successfully merged into the git repository by Alexander Kurtakov
21474,0,Change has been successfully merged into the git repository by Ansgar Radermacher
21487,1,"Patch Set 5:Hi Peter,you are right, the file shouldn't have been there (must have been a copy/paste mistake). I created a new patch set."
21490,0,Change has been successfully merged into the git repository by Johannes Faltermeier
21493,0,Change has been successfully merged into the git repository by Johannes Faltermeier
21495,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2218/ : UNSTABLE
21498,0,Change has been successfully rebased as 3cc53867c3d16605f4f883aeb244d3aecfacd622 by Johannes Faltermeier
21504,0,Change has been successfully merged into the git repository by Johannes Dorn
21507,0,Change has been successfully merged into the git repository by Christian Halstrick
21510,0,Change has been successfully merged into the git repository by Christian Halstrick
21515,0,Change has been successfully merged into the git repository by Christian Halstrick
21517,0,Patch Set 1: Code-Review+2 Verified+1You want a grid? you got a grid!
21518,0,Change has been successfully cherry-picked as d09f0946bf57b4b995f3be1451f3ac4c7ba81737 by Bernd Hufmann
21521,0,Change has been successfully merged into the git repository by Dirk Fauth
21524,0,Change has been successfully merged into the git repository by Dirk Fauth
21527,0,Change has been successfully merged into the git repository by Dirk Fauth
21530,0,Change has been successfully merged into the git repository by Dirk Fauth
21533,0,Change has been successfully cherry-picked as 0d10dbbd9edd84c60870185eb05c21efb3fb7495 by Daniel Wiehl
21536,0,Change has been successfully cherry-picked as de6164c0f636a9ad6a65815da394fc58302df1f8 by Daniel Wiehl
21538,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/338/ : UNSTABLE
21542,0,Change has been successfully cherry-picked as 02fccbe9b618282ae1d449e251ec1dc3cfbe36cd by Daniel Wiehl
21548,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3967/ : UNSTABLE
21550,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4142/ : UNSTABLE
21551,1,Patch Set 10:> Build Unstable >  > https://hudson.eclipse.org/cdt/job/cdt-verify/4142/ : UNSTABLEThis instability is part of Bug 472765 comment about it here: https://bugs.eclipse.org/bugs/show_bug.cgi?id=472765#c10
21552,0,Patch Set 10: Verified+1 Code-Review+2This looks good.  We'll deal with the (independent) test failures separately.
21553,0,Change has been successfully merged into the git repository by Marc Khouzam
21554,0,Patch Set 10:Thanks Jonah!
21556,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4046/ : UNSTABLE
21558,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3965/ : UNSTABLE
21562,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3980/ : UNSTABLE
21564,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3972/ : UNSTABLE
21567,0,Change has been successfully merged into the git repository by florian noyrit
21569,0,Change has been successfully pushed.
21578,0,Change has been successfully merged into the git repository by florian noyrit
21587,0,Change has been successfully merged into the git repository by Dani Megert
21590,0,Change has been successfully merged into the git repository by Doug Schaefer
21593,0,Change has been successfully merged into the git repository by Alexander Kurtakov
21594,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8026/ : UNSTABLE
21599,0,Change has been successfully merged into the git repository by Stefan Xenos
21603,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8023/ : UNSTABLE
21608,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/8024/ : UNSTABLE
21616,0,Change has been successfully cherry-picked as d8818b3a1048d9abca5743b0365160caf9977d43 by Jeff Johnston
21621,0,Change has been successfully cherry-picked as 4b7421a420ba3913d02130bc99457aa9a29b149d by Jeff Johnston
21628,0,Change has been successfully cherry-picked as efb0a7504a145587fbe624783bfb89455849e91a by Jeff Johnston
21634,0,Patch Set 1: Code-Review+1 Verified+1They seem fine to me and still build on my machine... Any objections from others?
21636,0,Change has been successfully cherry-picked as 206fbbca17a5c9a8e229464303d651cfb1ed57d2 by Marc-Andre Laperle
21639,0,Change has been successfully merged into the git repository by Sam Davis
21643,0,Change has been successfully cherry-picked as c7dca5b698b0cc9ce38e3ca2198153cb321cf5e3 by Alexandre Montplaisir
21644,0,Change has been successfully merged into the git repository by Matthias Tichy
21647,1,"Patch Set 1:you are obviously right, that this is only a quick solution which does not solve the problem in general. I am thinking about changing it a bit more by including a specific column to speficy whether a argument should be set or not.However, this starts to relate to the parameter kind changes, since for that you obviously need the same changes to the wizard page and therefore i am a bit hesitant to spend much effort which would be lost in the near future anyway."
21653,0,Change has been successfully cherry-picked as 72f13dec87d463cec3a105623905026153c1b5d2 by Jeff Johnston
21657,0,Patch Set 1: Code-Review+2 Verified+1Quick wins are the best wins.
21658,0,Change has been successfully cherry-picked as bfb2be9d5a953befe6973f03f86bf7f29e6b2c85 by Bernd Hufmann
21661,0,Change has been successfully cherry-picked as 99a0a88d11de8485f75b287698443e2efad69845 by Roland Grunberg
21662,0,"Patch Set 2: Code-Review-1(1 comment)looks good, little code comment to address."
21664,0,Change has been successfully merged into the git repository by Jacques Bouthillier
21669,0,Change has been successfully merged into the git repository by Doug Schaefer
21671,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7992/ : UNSTABLE
21673,0,Change has been successfully merged into the git repository by Matthias Sohn
21676,0,Change has been successfully cherry-picked as 668e8b7d76d1fa6fa61c5c62411b1dc7218787e8 by Bernd Hufmann
21679,0,Change has been successfully merged into the git repository by Donald Dunne
21680,0,Patch Set 2: Code-Review-1(1 comment)You have conflicts in your commit message. Please resolve.
21690,0,Change has been successfully merged into the git repository by Pascal Rapicault
21697,0,Change has been successfully cherry-picked as 2bf4b9ee0f15c8b95aa2635c0b7f83baee1fc457 by Jeff Johnston
21704,0,Change has been successfully merged into the git repository by Thomas Watson
21708,0,Change has been successfully merged into the git repository by Eric Poirier
21712,0,Change has been successfully merged into the git repository by Eric Poirier
21714,0,Change has been successfully cherry-picked as 359af2edbeed3785f697046045c65ea8d2cb5288 by Patrick Tasse
21721,0,Change has been successfully merged into the git repository by Stephan Herrmann
21723,0,Change has been successfully merged into the git repository by Donald Dunne
21737,0,Patch Set 1: Code-Review+2 Verified+1Thanks Alex!
21738,0,Change has been successfully cherry-picked as c772ff741844c579b973af9cbe76f1a3773140e4 by Matthew Khouzam
21743,0,Patch Set 2: Code-Review+2 Verified+1(2 comments)Let's go!
21744,0,Change has been successfully cherry-picked as 658401c857addeda42b59e661d41ac5a7520688d by Bernd Hufmann
21750,0,Change has been successfully merged into the git repository by Donald Dunne
21756,0,Change has been successfully merged into the git repository by Paul Webster
21762,0,Change has been successfully merged into the git repository by Paul Webster
21765,0,Change has been successfully merged into the git repository by Sergey Prigogin
21768,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4098/ : UNSTABLE
21772,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4095/ : UNSTABLE
21776,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4107/ : UNSTABLE
21780,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4103/ : UNSTABLE
21786,0,Change has been successfully merged into the git repository by Megumi Telles
21789,0,Change has been successfully merged into the git repository by Young-Soo Roh
21792,0,Change has been successfully cherry-picked as 76cdd04dc90c8662c08a0af034bc1f24d4f0f6f4 by Marc-Andre Laperle
21795,0,Change has been successfully cherry-picked as 96513eff2c219422a5f914260dc49e64d4b60844 by Marc-Andre Laperle
21798,0,Change has been successfully cherry-picked as f47743c3caa878a5db2feddc78a18f09fd7e492b by Marc-Andre Laperle
21801,0,Change has been successfully cherry-picked as 7e25e63f89ae37b61c0fb2058bfbdcb1d0d05f37 by Marc-Andre Laperle
21806,0,"Patch Set 1: Verified+1> No I didn't. I don't remember exactly how it happened but I think > it was a test opening a trace with a path that started with > ../<folder>/<path>Yes, that's how you can reproduce it. I tested it and it's works fine."
21807,0,Change has been successfully cherry-picked as 635a3b8de551a5367300ff76c259bf4e07c2a9f2 by Marc-Andre Laperle
21813,0,Change has been successfully merged into the git repository by Ryan Brooks
21815,0,Patch Set 1: Code-Review+2 Verified+1Nice improvement
21816,0,Change has been successfully cherry-picked as 83d0971d465d113d9a7ec857349c65cab57b549f by Patrick Tasse
21819,0,Change has been successfully cherry-picked as d9ce6f2bbade5d9096c4f1496a98f08dd75d3388 by Bernd Hufmann
21822,0,Change has been successfully merged into the git repository by Laurent Fasani
21833,0,Change has been successfully merged into the git repository by Ryan Brooks
21841,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
21845,0,Change has been successfully merged into the git repository by vincent lorenzo
21848,0,Change has been successfully merged into the git repository by Michael Rennie
21851,1,Patch Set 1:(1 comment)Also note : I'm expecting this build to fail.
21852,1,"Patch Set 1:Ok, so from the last build :2 API Analysis Errors were discovered.+ exit 1Terminating xvnc.Recording test resultsArchiving artifactsFinished: FAILUREThis was expected. Now I'll just fix it, and once re-enabled it should pass. Then we can consider pushing this in."
21855,0,Change has been successfully cherry-picked as d9eada8d050190ec832bef530a9e9b7c69317e41 by Roland Grunberg
21860,0,Change has been successfully merged into the git repository by vincent lorenzo
21861,1,"Patch Set 3: Code-Review-1(1 comment)==Code Review==Ok for me. Just two characters 'i' in lowercase on the class ""NamedStyleConstants.java"".==Smoke tests==Create a model.Create a classTreeTable==Functional tests==Resize the first colonne: KO, a NPE is detected.This bug is the same with the Generic Tree Table.This bug is detected for each resizing of the columns."
21876,0,Change has been successfully merged into the git repository by Laurent Fasani
21881,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4112/ : UNSTABLE
21883,0,Change has been successfully merged into the git repository by Elena Laskavaia
21887,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4106/ : UNSTABLE
21899,0,Change has been successfully merged into the git repository by Laurent Delaigue
21906,0,"Patch Set 12: Code-Review-1(7 comments)Almost there!That's much better, just a few details to take care of and we're good!"
21915,0,Change has been successfully merged into the git repository by Ryan Brooks
21918,0,Change has been successfully merged into the git repository by Pascal Rapicault
21921,0,"Patch Set 3: Code-Review-2(5 comments)In addition the the comments, there are API changes which are not documented in the release notes (this is also true for previous patches in the series which changed the metamodels)."
21925,0,Change has been successfully merged into the git repository by Laurent Fasani
21934,0,Change has been successfully merged into the git repository by Laurent Delaigue
21937,0,Patch Set 2: Code-Review-1(15 comments)A few minor tweaks but I think these logs will prove useful!
21940,0,"Patch Set 3: Code-Review-1(2 comments)A tiny detail left, but otherwise it seems good to me."
21944,0,Change has been successfully merged into the git repository by Philip Wenig
21949,0,Change has been successfully rebased as 419ea81bf5c4267f18ef147cee01ebedbb4b7679 by vincent lorenzo
21956,0,Change has been successfully rebased as 75b6d2a2c93c55cf03455fe931e1796ed6b0a7f1 by Remi Schnekenburger
21964,0,Change has been successfully merged into the git repository by Laurent Fasani
21969,0,Change has been successfully merged into the git repository by saadia dhouib
21976,0,Change has been successfully merged into the git repository by Philip Wenig
21981,0,Change has been successfully rebased as 39b7a97c32fc29fc32587467262a9b9e147a5c66 by saadia dhouib
21982,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2188/ : UNSTABLE
21986,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2194/ : UNSTABLE
21988,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2187/ : UNSTABLE
21991,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2195/ : UNSTABLE
21994,0,Change has been successfully merged into the git repository by Johannes Faltermeier
21995,1,Patch Set 5:Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2198/ : UNSTABLE
22001,0,Change has been successfully merged into the git repository by Olivier Prouvost
22004,0,Change has been successfully merged into the git repository by Laurent Fasani
22013,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4094/ : UNSTABLE
22014,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4096/ : UNSTABLE
22016,0,Change has been successfully merged into the git repository by Marc-Andre Laperle
22019,0,Change has been successfully rebased as e91e6bfb5a2c45a09b9ca83686d613a0c7f6fd39 by Johannes Faltermeier
22025,0,Change has been successfully rebased as e40d3a5889f9e1ba210453668e4f5ffab17b6829 by Johannes Faltermeier
22028,0,Change has been successfully merged into the git repository by David Williams
22031,0,Change has been successfully merged into the git repository by Remi Schnekenburger
22035,0,Change has been successfully merged into the git repository by Marc Khouzam
22041,0,Change has been successfully merged into the git repository by Marc Khouzam
22044,1,"Patch Set 2:Thanks for looking at the patch, I re-did the change. Give me 10 minutes to create another patch set, I also deleting the now obsolete Non-Javadoc and See statements."
22048,0,Change has been successfully merged into the git repository by David Williams
22054,0,Change has been successfully merged into the git repository by Dani Megert
22067,0,Change has been successfully merged into the git repository by Laurent Fasani
22071,0,Change has been successfully cherry-picked as b1b2b9d46e61786b5e93210963a38ed4b61a4472 by Matthias Otterbach
22077,0,Change has been successfully merged into the git repository by Ansgar Radermacher
22080,0,Change has been successfully merged into the git repository by Stefan Brockmann
22084,0,Change has been successfully merged into the git repository by Jacques Bouthillier
22087,0,Patch Set 2: Code-Review+2 Verified+1Looks good.
22088,0,Change has been successfully merged into the git repository by David Williams
22091,0,Change has been successfully merged into the git repository by Jonas Helming
22097,0,Change has been successfully rebased as 5ff617200af235888717b182a24153a5ea7cce7b by Eugen Neufeld
22101,0,Change has been successfully rebased as efb128a0fcc23edc663d8a747875fe038e2faabc by Eugen Neufeld
22105,0,Change has been successfully rebased as a627d9f63b9925a5589079f9028d05876195b956 by Eugen Neufeld
22109,0,Change has been successfully rebased as 2a8d6d81bfa73f87d8e144cc58cf058425982e44 by Eugen Neufeld
22112,0,Change has been successfully cherry-picked as aceb2f0dfe6caef405187cca8f1df9949b070b60 by Ivan Motsch
22115,0,Change has been successfully merged into the git repository by Philip Wenig
22124,0,Change has been successfully merged into the git repository by Niraj Modi
22127,0,Change has been successfully merged into the git repository by Camille Letavernier
22130,0,Change has been successfully pushed.
22135,0,Change has been successfully merged into the git repository by Lars Vogel
22139,0,Change has been successfully pushed.
22143,0,Change has been successfully pushed.
22147,0,Change has been successfully pushed.
22152,0,Change has been successfully merged into the git repository by Stephane Begaudeau
22155,0,Change has been successfully merged into the git repository by Stephane Begaudeau
22162,0,Change has been successfully merged into the git repository by Stephane Begaudeau
22165,0,Change has been successfully merged into the git repository by Stephane Begaudeau
22170,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
22174,0,Change has been successfully merged into the git repository by Pierre-Charles David
22178,0,Change has been successfully cherry-picked as 0a53599fac9b853374c67d48f0602cbf887c8ecf by Andi Bur
22180,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/262/ : UNSTABLE
22182,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/261/ : UNSTABLE
22185,0,Change has been successfully cherry-picked as 894a14a430ec6f2d6abea4dec104a9bec280b5a9 by Matthias Otterbach
22188,0,Change has been successfully cherry-picked as 9fe27bcaaf36c0c33fd762bfc0a8a708c59c2693 by Andi Bur
22192,0,Change has been successfully merged into the git repository by Lars Vogel
22196,0,Change has been successfully merged into the git repository by Andrey Loskutov
22199,0,Change has been successfully merged into the git repository by Lorenzo Bettini
22202,0,Change has been successfully merged into the git repository by Jonas Helming
22205,0,Change has been successfully merged into the git repository by Alexander Kurtakov
22209,0,Change has been successfully merged into the git repository by Alexander Kurtakov
22212,0,Change has been successfully merged into the git repository by Alexander Kurtakov
22216,0,Change has been successfully merged into the git repository by Alexander Kurtakov
22220,0,Change has been successfully merged into the git repository by Alexander Kurtakov
22223,0,Change has been successfully merged into the git repository by Alexander Kurtakov
22226,0,Change has been successfully merged into the git repository by Ashish Singh
22230,0,Change has been successfully rebased as aa4f014a3a5272b876c2fcb81c6c9658e626fd6e by Elena Laskavaia
22231,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4104/ : UNSTABLE
22234,0,Change has been successfully merged into the git repository by Charles Rivet
22236,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3929/ : UNSTABLE
22238,0,Change has been successfully merged into the git repository by Sergey Prigogin
22241,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3930/ : UNSTABLE
22244,0,Change has been successfully rebased as 458d7f2ed13bab215cb849b3e03b3aa7b9bf47fa by Sergey Prigogin
22246,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3928/ : UNSTABLE
22248,0,Change has been successfully merged into the git repository by Sergey Prigogin
22250,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3927/ : UNSTABLE
22252,0,Change has been successfully merged into the git repository by Sergey Prigogin
22254,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3926/ : UNSTABLE
22256,0,Change has been successfully merged into the git repository by Sergey Prigogin
22259,0,Change has been successfully merged into the git repository by Sergey Prigogin
22261,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3924/ : UNSTABLE
22264,0,Change has been successfully merged into the git repository by Sergey Prigogin
22266,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3923/ : UNSTABLE
22267,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3936/ : UNSTABLE
22269,0,Change has been successfully merged into the git repository by Sergey Prigogin
22272,0,Change has been successfully merged into the git repository by Andrew Johnson
22276,0,Change has been successfully merged into the git repository by Axel RICHARD
22279,0,Change has been successfully merged into the git repository by Axel RICHARD
22282,0,Change has been successfully merged into the git repository by Dirk Fauth
22285,0,Change has been successfully merged into the git repository by Sergey Prigogin
22286,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3922/ : UNSTABLE
22287,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3938/ : UNSTABLE
22289,0,Change has been successfully merged into the git repository by Sergey Prigogin
22290,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3934/ : UNSTABLE
22305,0,Change has been successfully merged into the git repository by Sergey Prigogin
22308,0,Change has been successfully merged into the git repository by Sergey Prigogin
22309,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3932/ : UNSTABLE
22314,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3917/ : UNSTABLE
22316,0,Change has been successfully merged into the git repository by Sergey Prigogin
22319,0,Change has been successfully merged into the git repository by Sergey Prigogin
22322,0,Change has been successfully merged into the git repository by Sergey Prigogin
22325,0,Change has been successfully merged into the git repository by Sergey Prigogin
22328,0,Change has been successfully merged into the git repository by Sergey Prigogin
22331,0,Change has been successfully merged into the git repository by Sergey Prigogin
22334,0,Change has been successfully merged into the git repository by Sergey Prigogin
22339,0,Change has been successfully rebased as 7059bfb0ead4096a133c58e972a07946a8bea383 by Sergey Prigogin
22341,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3881/ : UNSTABLE
22344,0,Change has been successfully rebased as ff6a07a12471f8e868facc594872bc83b716ff19 by Sergey Prigogin
22347,0,Change has been successfully merged into the git repository by Eugen Neufeld
22349,1,"Patch Set 7:Symlinks can point to anywhere, setting the rule was a mistake."
22351,0,Change has been successfully merged into the git repository by Matthias Sohn
22356,1,"Patch Set 1:(3 comments)Does this work on Windows? Also, this only works for links outside the workspace. It doesn't handle links inside the workspace (in an open project): shows left (workspace) the contents of the linked-to file, right (index) the content of the link itself, i.e., the file name of the file being linked to."
22357,1,"Patch Set 1: Code-Review-1> (3 comments) >  > Does this work on Windows? Why not, but I have to test. > Also, this only works for links outside > the workspace. Arrgh, on Linux ""broken"" links aren't ""inside"" the workspace because workspace doesn't support them. On Windows I see that broken links shows up as files with null bits so Eclipse can show them.  > It doesn't handle links inside the workspace (in an > open project): shows left (workspace) the contents of the linked-to > file, Broken, I'm going to fix it. > right (index) the content of the link itself, i.e., the file > name of the file being linked to.Right.Thanks for the review, I will update it soon."
22358,1,"Patch Set 1:> Arrgh, on Linux ""broken"" links aren't ""inside"" the workspaceI hadn't realized this was about _broken_ links. I tried with valid links. Next time I'll also try broken links."
22359,1,"Patch Set 1:> > Arrgh, on Linux ""broken"" links aren't ""inside"" the workspace >  > I hadn't realized this was about _broken_ links. I've originally wrote this for broken links but now see that the behavior is different if links are changed to valid files. I will update the code. > I tried with valid > links. Next time I'll also try broken links.Actually I see right now on Windows that git CLI shows full text diff for file content if link target is changed to a valid file - or the MINGW environment doesn't really create symbolic links."
22362,1,"at org.eclipse.jgit.api.ResetCommand.call(ResetCommand.java:203)I realize that these errors have nothing to do with this change here. Maybe they're even due to my being on a Mac and having a somewhat oldish git version 1.7.7.5 (Apple Git-26) there.Nevertheless I would advise against making link contents editable. I don't think that's a good idea. Showing the link content is, but not editing it. Let's make the compare editor read-only for links in workspace or index."""
22364,1,"Patch Set 2:We could make it configurable and by default do not allow editing symlinks. Also we could restrict changes to use a single line only for the link. I personally think that this is OK to edit links (we do it on command line, so why not in the IDE). Actually this was what I wanted to do initially and why I discovered this bug."
22366,1,"Patch Set 3:> Seems to work on MacOS for valid links. Apparently also for broken > links. >  > However, I'm extremely wary of having these links editable in the > compare editor. I get very strange things and follow-up errors if I > edit a link in the compare editor and make it invalid in doing so.See below, we had multiple ussues in j|egit. > And I didn't even try to do really bad things, like setting the > link content to multiple lines of text.I've updated the patch to use only the first line of the text, works like a charm :-)  > In particular: > [...] > 2. Link is shown in staging view as deleted. Bug 484498, I've rebased this patch on top of the patch for bug 484498. > Other case: > [...] > 4. In Eclipse, do a Reset hard on the parent commit (with the valid > link). Fails with > java.io.IOException: Could not delete file /Users/thomas/Git/testproject_b/link.txtBug 484491, patch is already merged to jgit. > I realize that these errors have nothing to do with this change > here. Maybe they're even due to my being on a Mac and having a > somewhat oldish git version 1.7.7.5 (Apple Git-26) there.No, that was all our bugs :-) > Nevertheless I would advise against making link contents editable. > I don't think that's a good idea. Showing the link content is, but > not editing it. Let's make the compare editor read-only for links > in workspace or index.I've grocked about it. I do not think this is bad: same way we could disallow users renaming or deleting regular files or directories or both, because sometimes they don't really mean it.Thanks to git model in general, and with the fixes of the bugs above, this is pretty safe to ""play"" with links now."
22367,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7971/ : UNSTABLE
22368,1,"Patch Set 3: Code-Review-1Sorry, still no cigar.The first problem is now not any better:0. Start off with a valid link in the workspace, pointing to another file in the workspace. (Link created with ln -s in shell, committed in shell, then pulled in EGit.)1. Select ""Context menu->Compare with index"" and edit the workspace link's contents (append a zero to make it invalid -- assuming there is no such file). Save.2. cgit correctly reports the link as modified. But it doesn't appear at all in the git staging view!"
22369,1,"Patch Set 3:> Sorry, still no cigar. >  > The first problem is now not any better: >  > 0. Start off with a valid link in the workspace, pointing to > another file in the workspace. (Link created with ln -s in shell, > committed in shell, then pulled in EGit.) > 1. Select ""Context menu->Compare with index"" and edit the workspace > link's contents (append a zero to make it invalid -- assuming there > is no such file). Save. > 2. cgit correctly reports the link as modified. But it doesn't > appear at all in the git staging view!I can't reproduce. Which Eclipse version you you using? Staging view shows me all changes as expected."
22371,1,"at org.eclipse.egit.core.internal.indexdiff.IndexDiffUpdateJob.run(IndexDiffUpdateJob.java:75)triggered via LocalNonWorkspaceTypedElement.refreshRepositoryState(). The point is: I tried the above with my link to """"├ñ├®├╝.txt"""". Changed it to point to """"├ñ├®├╝.txt0"""". As a result, 14 bytes are written (decomposed form), not 11. WorkingTreeIterator then tries read those 14 bytes, but gets only 11 from FileTreeIterator.openInputStream because that normalizes back to NFC. And actually we already get back a fully composed string from Files.readSymbolicLink()... looking through the source code of sun.nio.fs.MacOSXFileSystemProvider, sun.nio.fs.UnixFileSystemProvider, sun.nio.fs.UnixPath, and sun.nio.fs.MacOSXFileSystem, it looks as if on a Mac, createSymbolicLink() always writes NFD, but readSymbolicLink always returns NFC. Yuck.Not sure what's the best way to deal with this, especially since doing """"ln -s ├ñ├®├╝.txt link.txt"""" on the command line produces a link with on-disk size of 10 bytes, so it evidently is in NFC, not NFD."""
22372,1,"Patch Set 3:> > I'll try to track it down. >  > It's related to the encoding problem on Macs mentioned earlier. I > get >  > java.io.EOFException: Short read of block.As you noticed, change I264c597 is a fix for this. However, even without any special characters there's still another problem: if a link is made invalid and then valid again, it doesn't re-appear in the package explorer. Needs a manual refresh. I think this is due to our using a LocalNonWorkspaceTypedElement for a workspace resource. So LocalNonWorkspaceTypedElement would need to also refresh that resource."
22373,1,"Patch Set 3:> > > I'll try to track it down. > > > > It's related to the encoding problem on Macs mentioned earlier. I > > get > > > > java.io.EOFException: Short read of block. >  > As you noticed, change I264c597 is a fix for this. However, even > without any special characters there's still another problem: if a > link is made invalid and then valid again, it doesn't re-appear in > the package explorer. Needs a manual refresh. I think this is due > to our using a LocalNonWorkspaceTypedElement for a workspace > resource.It is because IResource can't model broken links at all, there is a bug for it.  > So LocalNonWorkspaceTypedElement would need to also > refresh that resource.Yes, we can add this."
22375,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7984/ : UNSTABLE
22376,1,"Patch Set 5:> Sorry, still no cigar. >  > The first problem is now not any better: >  > 0. Start off with a valid link in the workspace, pointing to > another file in the workspace. (Link created with ln -s in shell, > committed in shell, then pulled in EGit.) > 1. Select ""Context menu->Compare with index"" and edit the workspace > link's contents (append a zero to make it invalid -- assuming there > is no such file). Save. > 2. cgit correctly reports the link as modified. But it doesn't > appear at all in the git staging view!I can reproduce this problem on Mac OS X  10.11.2"
22380,1,"Patch Set 6:> hit the following exception in new code when refreshing >  > !ENTRY org.eclipse.core.jobs 4 2 2015-12-24 00:12:38.680 > !MESSAGE An internal error occurred during: ""Refreshing > /Users/d029788/demo/democamp-2015-12/git/lfstest/link"". > !STACK 0 > java.lang.IllegalArgumentException: Attempted to beginRule: > P/lfstest, does not match outer scope rule: F/lfstest/link > at org.eclipse.core.runtime.Assert.isLegal(Assert.java:63) > at org.eclipse.core.internal.jobs.ThreadJob.illegalPush(ThreadJob.java:134) > at org.eclipse.core.internal.jobs.ThreadJob.push(ThreadJob.java:333) > at org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:85) > at org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:307) > at org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:120) > at org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:2189) > at org.eclipse.core.internal.resources.Resource.refreshLocal(Resource.java:1585) > at org.eclipse.egit.ui.internal.synchronize.compare.LocalNonWorkspaceTypedElement$1.runInWorkspace(LocalNonWorkspaceTypedElement.java:231) > at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:39) > at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)folder ./lfstest/link contains links to files in folder ./lfstest/ (one level above)"
22383,0,Change has been successfully merged into the git repository by Matthias Sohn
22387,0,Change has been successfully merged into the git repository by Matthias Sohn
22394,0,Change has been successfully merged into the git repository by Dave Carlson
22397,0,Change has been successfully merged into the git repository by Dave Carlson
22400,0,Change has been successfully merged into the git repository by Dave Carlson
22405,0,Change has been successfully merged into the git repository by Dave Carlson
22411,0,Change has been successfully merged into the git repository by Dave Carlson
22414,0,Change has been successfully merged into the git repository by Dave Carlson
22416,1,"Patch Set 4:> On Mac the following tests fail, not sure if this is related >  > Running org.eclipse.egit.core.test.SubmoduleAndContainerTreeIteratorTest > Tests run: 2, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: > 6.371 sec <<< FAILURE! - in org.eclipse.egit.core.test.SubmoduleAndContainerTreeIteratorTest > testCleanStateAfterInit(org.eclipse.egit.core.test.SubmoduleAndContainerTreeIteratorTest) >  Time elapsed: 3.019 sec  <<< FAILURE! > java.lang.AssertionError: null > at org.junit.Assert.fail(Assert.java:86) > at org.junit.Assert.assertTrue(Assert.java:41) > at org.junit.Assert.assertTrue(Assert.java:52) > at org.eclipse.egit.core.test.SubmoduleAndContainerTreeIteratorTest.testCleanStateAfterInit(SubmoduleAndContainerTreeIteratorTest.java:100) >  > testCleanStateFirstCommit(org.eclipse.egit.core.test.SubmoduleAndContainerTreeIteratorTest) >  Time elapsed: 3.349 sec  <<< FAILURE! > java.lang.AssertionError: null > at org.junit.Assert.fail(Assert.java:86) > at org.junit.Assert.assertTrue(Assert.java:41) > at org.junit.Assert.assertTrue(Assert.java:52) > at org.eclipse.egit.core.test.SubmoduleAndContainerTreeIteratorTest.testCleanStateFirstCommit(SubmoduleAndContainerTreeIteratorTest.java:113)If this is reproducible, we must have either a bug in code or in the test onMac, related to the repository status computation. Tje patch pronably uncovered it beacuse now we see a *real* file/repository state."
22419,1,"Patch Set 5: Code-Review+2this was my mistake, I had used an outdated jgit version which caused these test errors, with jgit from current master all tests look good"
22420,0,Change has been successfully merged into the git repository by Matthias Sohn
22428,0,Change has been successfully merged into the git repository by Stephan Herrmann
22431,0,Change has been successfully merged into the git repository by Angel Avila
22434,0,Change has been successfully merged into the git repository by Andrew Johnson
22437,0,Change has been successfully merged into the git repository by Charles Rivet
22440,0,Change has been successfully merged into the git repository by Charles Rivet
22445,0,Change has been successfully merged into the git repository by Mateusz Matela
22449,0,Change has been successfully cherry-picked as d2ebb42a239e3db61b13ea2b5d1df291e729d710 by Roland Grunberg
22452,0,Change has been successfully cherry-picked as 5384781d088b3e3320fec4132c3fe1a3cfca09d6 by Roland Grunberg
22455,0,Change has been successfully cherry-picked as d921d65f253d9f10d5652a8db82c40cb5cdab7d8 by Stephan Leicht Vogt
22459,0,Change has been successfully cherry-picked as 477c3d671e16c06fa59b58946a9eeb65dd8c3ed2 by Stephan Leicht Vogt
22461,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/229/ : UNSTABLE
22463,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/234/ : UNSTABLE
22466,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/233/ : UNSTABLE
22470,0,Change has been successfully cherry-picked as 78e185b98110f01293b8e409241fa8c60604ca0e by Stephan Leicht Vogt
22475,0,Change has been successfully cherry-picked as 8de8798b71edef935529d995e63dfe48f1111714 by Stephan Leicht Vogt
22478,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/223/ : UNSTABLE
22481,0,Change has been successfully cherry-picked as aa7d21531b27c227a060c849450b1ae88e77e7c5 by Daniel Wiehl
22484,0,Change has been successfully merged into the git repository by Maxime Porhel
22487,0,Change has been successfully cherry-picked as 98b4778a6340358fc127472e598d94208c9f7c17 by Daniel Wiehl
22491,0,Change has been successfully cherry-picked as b087ee4a9e6a5ba44ae56b7ae0c300e00ba4a6f0 by Andre Wegmueller
22494,0,Change has been successfully cherry-picked as 71e278867fd58b5d58f10366edf48409dbfaa766 by Andre Wegmueller
22497,0,Change has been successfully merged into the git repository by Stefan Brockmann
22500,0,Change has been successfully cherry-picked as 60c91348c644073eb886a06339881b740ce3c759 by Andi Bur
22504,0,Change has been successfully merged into the git repository by Charles Rivet
22507,0,Change has been successfully merged into the git repository by Charles Rivet
22509,0,Change has been successfully pushed.
22512,0,Change has been successfully merged into the git repository by Ralph Mueller
22515,0,Change has been successfully merged into the git repository by Cedric Brun
22518,0,Change has been successfully merged into the git repository by Gregoire Dupe
22520,1,"Patch Set 1: Code-Review+1since there is already a public static variable to handle the current editor, this should not do more bad things to fix this public static variable on focus."
22522,0,Change has been successfully merged into the git repository by Matthieu Helleboid
22525,0,Change has been successfully merged into the git repository by Matthieu Helleboid
22528,0,Change has been successfully merged into the git repository by Gregoire Dupe
22530,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/210/ : UNSTABLE
22532,0,Change has been successfully cherry-picked as cbc054635a9b65bb0d8e2dfc88c47a333a3c67eb by Andi Bur
22535,0,Change has been successfully merged into the git repository by Charles Rivet
22538,0,Change has been successfully merged into the git repository by Charles Rivet
22543,0,Change has been successfully merged into the git repository by Sergey Prigogin
22546,0,Change has been successfully merged into the git repository by Jonathan Nieder
22547,1,"Patch Set 8:Thanks for the quick and patient work, and sorry to take so long on review cycles."
22550,1,Patch Set 6:(7 comments)Thanks --- this looks simpler.Sorry for the slow review.
22568,0,Change has been successfully merged into the git repository by Andrew Johnson
22571,0,Change has been successfully cherry-picked as 642e3c238981dfb0c1bc02088cb9922501eb7be6 by Daniel Wiehl
22575,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.jdt.core-Gerrit/811/ : UNSTABLE
22577,0,Change has been successfully merged into the git repository by Stephan Herrmann
22583,0,Change has been successfully cherry-picked as 67edf891b5f9dcf8b035a0b6df1d8d7042aa9126 by Daniel Wiehl
22586,0,Change has been successfully cherry-picked as 211e5180f9fc9d7fd922213ff47e49f581bf5776 by Roland Grunberg
22590,0,Change has been successfully cherry-picked as 0730c1086d6d844e841f110793ad371a51c120ff by Andi Bur
22592,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/200/ : UNSTABLE
22595,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3899/ : UNSTABLE
22599,0,Change has been successfully rebased as 0027b29abae3558ac4b1fd8d2c6c276dbfbcbb06 by Doug Schaefer
22603,0,Change has been successfully merged into the git repository by Johannes Dorn
22607,0,Change has been successfully cherry-picked as 01ef493e9da253f8e5cf3a4086c879f4ba17df05 by Roland Grunberg
22610,0,Change has been successfully cherry-picked as 238db3e8387fc1bb9a9a2644e6080f9f7b66e207 by Roland Grunberg
22613,0,Change has been successfully cherry-picked as fe66cd1706458d40a15efb1cab741898654daadb by Roland Grunberg
22616,0,Change has been successfully pushed.
22618,0,Change has been successfully pushed.
22621,0,Change has been successfully cherry-picked as f9b2b5ee0523eeb8b6a4d010c150389a0e79dadf by Roland Grunberg
22624,0,Change has been successfully cherry-picked as 81e0c7d8340718016e376cb2024f2547b8a91fc6 by Roland Grunberg
22628,0,Change has been successfully cherry-picked as a35f1a35aa8a2ed421e51ac82e094b0e2889ee5b by Roland Grunberg
22633,0,Change has been successfully merged into the git repository by Wojciech Sudol
22637,0,Change has been successfully merged into the git repository by Eric Poirier
22641,0,Change has been successfully rebased as eb6286f7bf29fb2dae6879a0d01c201ed8cf9db9 by Michael Vorburger
22643,0,Change has been successfully pushed.
22645,0,Change has been successfully pushed.
22648,0,Patch Set 1: Code-Review+1Makes perfect sense to me. Good catch!
22649,0,Patch Set 1: Code-Review+2Also agree!
22650,0,Change has been successfully merged into the git repository by Ralf Sternberg
22652,1,"Patch Set 1: Code-Review+2 Verified+1This delivers improvements to the collection extractors so the collection queries work for most of the standard collections. The tests are also improved to check the objects returned by the extractors.The test generates a dump on the fly using the current JVM, so provided a convenient way to test that MAT understands collections from the current JVM."
22653,0,Change has been successfully merged into the git repository by Andrew Johnson
22658,0,Change has been successfully merged into the git repository by Johannes Dorn
22678,0,Change has been successfully merged into the git repository by Michael Wenz
22684,0,Change has been successfully merged into the git repository by Lorenzo Bettini
22687,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.jdt.core-Gerrit/808/ : UNSTABLE
22689,0,Change has been successfully merged into the git repository by Stephan Herrmann
22693,0,Change has been successfully merged into the git repository by Johannes Dorn
22705,0,Change has been successfully merged into the git repository by Michael Wenz
22708,0,Change has been successfully merged into the git repository by Lorenzo Bettini
22713,0,Change has been successfully rebased as e62e2772fe26628dbdc0cf86675983f7c399e7aa by Elena Laskavaia
22716,0,Change has been successfully merged into the git repository by Tim Buschtoens
22719,0,Change has been successfully merged into the git repository by Michal Niewrzal
22724,1,"Patch Set 4: Code-Review+2Thanks.  I'm glad to learn that there's a better way to integrate custom templates (I had expected there should be one, but did look hard enough for it).I'll make a judgment call and exempt this from the CQ process because most of the 1000 lines changed are deletion of code and repeated new model content (plus reformatting of existing content) that has no new IP value."
22726,0,Change has been successfully rebased as 4e5d60fe35f36400265700b7cdf50494c6065849 by Christian W. Damus
22734,0,Change has been successfully rebased as 5056e895d4a5efc0e7ad2981ac1c635f21d91ff7 by Ansgar Radermacher
22738,0,Change has been successfully merged into the git repository by Mickael Istria
22741,0,Change has been successfully cherry-picked as 80162407093ab12123fa52451e9b4fdf6f8b76b1 by Stephan Leicht Vogt
22746,0,Change has been successfully merged into the git repository by Cedric Brun
22751,0,Change has been successfully rebased as a6e54cbcb1909806c249ba1dd78e70d678c707a7 by Jonas Helming
22754,0,Change has been successfully merged into the git repository by Jonas Helming
22756,0,Change has been successfully merged into the git repository by Pierre-Charles David
22760,0,Change has been successfully pushed.
22762,0,Change has been successfully pushed.
22764,0,Change has been successfully pushed.
22766,0,Change has been successfully pushed.
22769,0,Change has been successfully cherry-picked as 6cc31112d31c7359b676aea6f65b827986e01f1d by Andi Bur
22771,0,Change has been successfully merged into the git repository by Johannes Faltermeier
22780,0,Change has been successfully merged into the git repository by Stephanie Chafe
22784,0,Change has been successfully rebased as c5c47554b03ec82827671520c4d93419ef9f2852 by Stephanie Chafe
22787,0,Change has been successfully merged into the git repository by Cedric Brun
22808,0,Change has been successfully merged into the git repository by Jonas Helming
22814,1,Patch Set 15: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/7426/ : UNSTABLE
22817,0,Change has been successfully merged into the git repository by Gregoire Dupe
22819,0,Change has been successfully pushed.
22824,0,Change has been successfully merged into the git repository by Kaloyan Raev
22831,0,Change has been successfully merged into the git repository by Alexander Kurtakov
22836,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/94/ : UNSTABLE
22838,0,Change has been successfully cherry-picked as 277f7f69c74846a585549702ffdd723e06d7309e by Judith Gull
22840,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/57/ : UNSTABLE
22842,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/56/ : UNSTABLE
22845,0,Change has been successfully cherry-picked as 40ae177cb20e0e79f0ca8d2fb14654b94aae4d7c by Judith Gull
22848,0,Change has been successfully cherry-picked as d17c3fb5df905fd0d17ee946653c1c9ce8d41158 by Judith Gull
22855,0,Change has been successfully rebased as 5892f197478d34cafd284b63098fb49f341c5dd9 by Marc Khouzam
22858,0,Change has been successfully cherry-picked as d2fdd1969d4a05b409b457840be3e419626b6c2f by Judith Gull
22860,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/53/ : UNSTABLE
22864,0,Change has been successfully merged into the git repository by Kaloyan Raev
22867,0,Change has been successfully merged into the git repository by Jeremie Bresson
22872,0,Patch Set 7: Code-Review-1(7 comments)Looks good but needs adjustments.
22876,0,Change has been successfully merged into the git repository by Lars Vogel
22887,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/7210/ : UNSTABLE
22893,0,Change has been successfully merged into the git repository by Gregoire Dupe
22895,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3855/ : UNSTABLE
22897,0,Change has been successfully merged into the git repository by Alexander Kurtakov
22899,0,Change has been successfully pushed.
22902,0,Change has been successfully pushed.
22904,0,Change has been successfully pushed.
22907,0,Change has been successfully pushed.
22910,0,Change has been successfully pushed.
22912,0,Change has been successfully pushed.
22915,0,Change has been successfully pushed.
22918,0,Change has been successfully pushed.
22920,0,Change has been successfully pushed.
22923,0,Change has been successfully pushed.
22925,0,Change has been successfully pushed.
22927,0,Change has been successfully pushed.
22930,0,Change has been successfully pushed.
22933,0,Change has been successfully pushed.
22936,0,Change has been successfully pushed.
22945,0,Change has been successfully merged into the git repository by Alexander Kurtakov
22952,1,Patch Set 12: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2085/ : UNSTABLE
22954,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2010/ : UNSTABLE
22959,0,Change has been successfully rebased as 3f2e4860ddcaf6c9e61b506807b966c9da614106 by Eugen Neufeld
22961,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2011/ : UNSTABLE
22963,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2083/ : UNSTABLE
22965,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1909/ : UNSTABLE
22967,1,Patch Set 13: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2086/ : UNSTABLE
22969,1,Patch Set 11: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2084/ : UNSTABLE
22971,0,"Patch Set 9: Code-Review+2(3 comments)All good but commit message is outdated, please update and proceed"
22973,0,Patch Set 9:Good work!
22975,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2009/ : UNSTABLE
22977,1,Patch Set 15: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2088/ : UNSTABLE
22980,1,Patch Set 14: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2087/ : UNSTABLE
22983,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
22985,0,Change has been successfully cherry-picked as d0e1d0a3d2b89adfaad295fff9a6aa1675d66ae2 by Alexander Kurtakov
22990,0,Change has been successfully merged into the git repository by Camille Letavernier
22992,0,Change has been successfully merged into the git repository by Lars Vogel
22997,0,Change has been successfully merged into the git repository by Lars Vogel
23001,0,Change has been successfully merged into the git repository by Andreas Sewe
23006,0,Change has been successfully merged into the git repository by Philip Wenig
23013,0,Change has been successfully merged into the git repository by Lars Vogel
23020,0,Change has been successfully merged into the git repository by Alexander Kurtakov
23023,0,Change has been successfully cherry-picked as 647617e54231906954dc104aa41e3582410992fb by Alexander Kurtakov
23031,0,Change has been successfully merged into the git repository by Alexander Kurtakov
23034,0,Change has been successfully merged into the git repository by Doug Schaefer
23038,0,Change has been successfully cherry-picked as f278fbd44a2bdcbd7239293e862472bb3715e331 by Marc-Andre Laperle
23041,0,Change has been successfully cherry-picked as 09aec1acdb7ad345639d05b25f8fb3902bbec94d by Marc-Andre Laperle
23044,0,Change has been successfully merged into the git repository by Marcel Bruch
23047,0,Change has been successfully merged into the git repository by Marcel Bruch
23051,0,Change has been successfully merged into the git repository by Andrey Loskutov
23058,0,Change has been successfully rebased as b8f64ef4ade39257da30eb0621477b4839dc9e30 by Bartlomiej Laczkowski
23066,0,Change has been successfully rebased as ad24e50007fd1141d780920f28ef47194bc86f2a by Bartlomiej Laczkowski
23069,0,Change has been successfully merged into the git repository by Marcel Bruch
23072,0,Change has been successfully merged into the git repository by Marcel Bruch
23075,0,Change has been successfully merged into the git repository by Marcel Bruch
23080,0,Change has been successfully rebased as 1dd4e528749c8a69a8b6f83f60cb8f30e4ae4cdb by Doug Schaefer
23085,0,Change has been successfully merged into the git repository by Matthias Sohn
23088,0,Change has been successfully merged into the git repository by Marcel Bruch
23093,0,Patch Set 1: Code-Review+2 Verified+1Great catch. works here!
23094,0,Change has been successfully cherry-picked as a3a1a06b3d0502c1f14d01947e7dd49be2946407 by Marc-Andre Laperle
23097,0,Change has been successfully merged into the git repository by Kaloyan Raev
23100,0,Change has been successfully merged into the git repository by Mikael Barbero
23103,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
23109,0,Change has been successfully merged into the git repository by Donald Dunne
23112,0,Change has been successfully cherry-picked as c9dca4764142541fe7282b01698246931637ddf2 by Alexander Kurtakov
23117,0,Change has been successfully merged into the git repository by Donald Dunne
23123,0,Change has been successfully merged into the git repository by Donald Dunne
23125,0,Change has been successfully merged into the git repository by Donald Dunne
23131,0,Change has been successfully merged into the git repository by Donald Dunne
23138,0,Change has been successfully merged into the git repository by Donald Dunne
23144,0,Change has been successfully merged into the git repository by Sam Davis
23152,0,Change has been successfully merged into the git repository by Donald Dunne
23160,0,Change has been successfully merged into the git repository by Matthias Sohn
23163,0,Change has been successfully merged into the git repository by Sam Davis
23168,0,Change has been successfully rebased as 2db372eeb23d7840873de82b3c9f06aacfab9be7 by Ernesto Posse
23170,0,Change has been successfully merged into the git repository by Donald Dunne
23180,0,Change has been successfully merged into the git repository by Sam Davis
23182,0,Patch Set 5: Code-Review+2- online help now looks good- rebased- the CQ was approved
23183,0,Change has been successfully merged into the git repository by Matthias Sohn
23193,0,"Patch Set 2: Code-Review+1 Verified+1nice :-)from the online help it's not clear which commands the remote command supports, would be nice if this could be improved: jgit remote -h"
23198,0,Change has been successfully merged into the git repository by Sam Davis
23201,0,Change has been successfully merged into the git repository by Sam Davis
23204,0,Change has been successfully merged into the git repository by Doug Schaefer
23208,0,Change has been successfully merged into the git repository by Donald Dunne
23218,0,Change has been successfully merged into the git repository by Jacques Bouthillier
23221,0,Change has been successfully cherry-picked as 372786a91e83cc45cab89b88d7e1e8802e0279fc by Marc-Andre Laperle
23227,0,Change has been successfully cherry-picked as 3e0d067d23f68cd57323ecf52cd77dededc7f2b0 by Marc-Andre Laperle
23237,1,Patch Set 3:> : FAILUREGerrit say it's failing for compilation issues..console: https://hudson.eclipse.org/platform/job/eclipse.platform.swt-Gerrit/1770/console[ERROR] label.requestLayout();[ERROR] ^^^^^^^^^^^^^[ERROR] The method requestLayout() is undefined for the type LabelTo me it looks like there is some dependencies problem ^^
23239,0,Change has been successfully merged into the git repository by Arun Thondapu
23241,1,"Patch Set 8:> (1 comment)I see your point and I agree with it, guess I was initially confused with the other layout methods in Composite which lay out the children instead of the parent hierarchy which is what we need..."
23248,0,Change has been successfully merged into the git repository by Remi Schnekenburger
23251,0,Change has been successfully merged into the git repository by Sergey Prigogin
23253,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3808/ : UNSTABLE
23255,0,Change has been successfully cherry-picked as f36d612d9db2b8500b6e351ee6cc85097f178e63 by Marc-Andre Laperle
23262,0,Change has been successfully cherry-picked as b51d381a9b32ce8e7dfe62cf4962afa02e83283d by Marc-Andre Laperle
23265,0,Change has been successfully merged into the git repository by Greg Watson
23269,0,Change has been successfully merged into the git repository by Andreas Sewe
23276,0,Change has been successfully merged into the git repository by Paul Webster
23278,0,"Patch Set 3:Sorry about that, it should be good now :)"
23285,0,Change has been successfully rebased as dd3815bb913ed3c50865d35a4826db26df9af8e0 by Doug Schaefer
23288,0,Change has been successfully merged into the git repository by Gregoire Dupe
23290,0,Change has been successfully merged into the git repository by vincent lorenzo
23296,0,Change has been successfully merged into the git repository by Eric Poirier
23300,0,Change has been successfully merged into the git repository by Eric Poirier
23305,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/996/ : UNSTABLE
23318,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1148/ : UNSTABLE
23319,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1149/ : UNSTABLE
23323,0,Change has been successfully rebased as 0db4f0fe1f7028115aa1fb7620818a821e16a4cf by Frank Becker
23329,0,Change has been successfully merged into the git repository by Sergey Prigogin
23330,0,Patch Set 2:Why?We got a contribution inhttps://git.eclipse.org/r/#/c/42953/which specifically changed length()>0 to !isEmpty()Is there a reason to change this back or is it a question of personal preference?
23335,0,Change has been successfully merged into the git repository by Uwe Stieber
23338,0,Change has been successfully merged into the git repository by Andrey Loskutov
23342,0,Change has been successfully merged into the git repository by Manoj Palat
23346,0,Change has been successfully rebased as 9db03c64800fa371fd8b250dad9d6bc4728d80e3 by Benoit Maggi
23350,0,Change has been successfully merged into the git repository by Celine Janssens
23351,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Tooling-Gerrit/288/ : UNSTABLE
23353,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Tooling-Gerrit/286/ : UNSTABLE
23358,0,Change has been successfully rebased as e0c715e90be0a8a8ba0332d5474b09c427321cd6 by vincent lorenzo
23361,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/50/ : UNSTABLE
23363,0,Change has been successfully cherry-picked as a7eb1948038ef884fac61f7697c4088d86af03f6 by Daniel Wiehl
23366,0,Change has been successfully merged into the git repository by Michael Wenz
23369,0,Change has been successfully merged into the git repository by Michael Wenz
23371,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Tooling-Gerrit/285/ : UNSTABLE
23373,0,Change has been successfully merged into the git repository by Celine Janssens
23377,0,Change has been successfully rebased as 409f4136c8c0b08f781ea337f325cec7ef09e325 by Ivan Furnadjiev
23380,0,Patch Set 1:Good question :-) No specific reason.
23383,0,Patch Set 5:I think so to... already checked the logs :-)
23387,1,Patch Set 2: Code-Review-1Found small problem when new upload is started before the previous is completed.
23392,0,Change has been successfully merged into the git repository by Sopot Cela
23397,0,Change has been successfully merged into the git repository by Greg Watson
23399,0,Change has been successfully merged into the git repository by vincent lorenzo
23417,0,Change has been successfully rebased as 72cbff7e19723adae3eeabf506aa42a41eaa5554 by vincent lorenzo
23420,0,Change has been successfully merged into the git repository by Laurent Delaigue
23422,0,"Patch Set 1:(1 comment)I think your version of the documentation update is better than mine. I have just a remark for the logical model documentation : since we speak about version control, I think it could be a good thing to add something to be clear on which version control is supported.For exemple, line 38, add something like ""In EMFCompare, EGit is the only repository provider supported"""
23428,0,Change has been successfully merged into the git repository by Andrey Loskutov
23434,0,Change has been successfully rebased as 932010cd584e38a69df133b4b7861de31b4ca10f by Dawid Pakula
23438,0,Change has been successfully rebased as cc792e5e41caf3454883be6fd47902bb46a00ca7 by Michal Niewrzal
23445,0,"Patch Set 15: Code-Review+1(1 comment)This new architecture looks good. I only have one comment on the SysML Element Types constants, but I'm not sure how this could behave/fail exactly. I just know Remi has had some issues with them"
23457,0,Change has been successfully rebased as f8dedc59a0e9bc39beaa61b7a8c2cad1252c9438 by Camille Letavernier
23463,1,Patch Set 13:Patch set 13 only updates the design documentation to reflect the adjustments to the IVisualTypeProvider API to support arbitrary string-valued view types (not just integer visual IDs).
23464,0,"Patch Set 13:I've rebased this change so that it can be merged by Gerrit (lots of intervening changes have happened on master).Also, I fixed a regression in the creation of regions in composite states in the state machine diagram tests.I really would appreciate a review of this rather significant change to the design of the Papyrus canonical edit policy.  Thanks!"
23467,0,"Patch Set 1:Patch set 2 adds the papyrus.def bundle to the developer feature (it was never packaged in any feature, before!).  That should fix the (first) test build failure."
23473,0,Change has been successfully merged into the git repository by vincent lorenzo
23480,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/3314/ : UNSTABLE
23482,0,Change has been successfully cherry-picked as e3067eadecd6e14a90841e36fb87c5f1639cd4a4 by Daniel Wiehl
23485,0,Change has been successfully merged into the git repository by Johannes Faltermeier
23489,0,Change has been successfully rebased as 1de72a05ab8f836262e8ceaa3377cf324e63297f by Michal Niewrzal
23495,0,Change has been successfully merged into the git repository by Sarika Sinha
23497,0,Change has been successfully merged into the git repository by Lars Vogel
23501,0,Change has been successfully merged into the git repository by Celine Janssens
23508,0,"Patch Set 2: Code-Review+1> I have updated the patch.Yup, this looks good to me!"
23509,1,Patch Set 2:(1 comment)As far as I remember this problem occurs from gtk 3.8 onwards. This is due to a change done in GTK 3.8. I think we can check for OS.GTK3 instead of SWT.getPlatform()
23512,0,"Patch Set 1: Code-Review-1(2 comments)Apart from the GTK specific code in CCombo, CLabel, CoolBar, and CTable, this patch looks good to me. It solves the issue in the snippet for the bug report and the e4 model editor problem."
23514,0,Patch Set 3:Code looks good to me
23515,0,Change has been successfully merged into the git repository by Sravan Kumar Lakkimsetti
23519,0,Change has been successfully merged into the git repository by Lars Vogel
23521,0,Patch Set 1: Code-Review+1 Verified+1Change looks good to me. Vikas I would to get our opinion on this change. Can you also review?
23523,0,Change has been successfully merged into the git repository by Vikas Chandra
23529,0,Change has been successfully merged into the git repository by Niraj Modi
23539,0,Change has been successfully merged into the git repository by Gregoire Dupe
23542,0,Change has been successfully merged into the git repository by Tim Buschtoens
23545,0,"Patch Set 1:This was the result of me trying to exactly imitate the existing API. However, it should be safe to change these methods to always return boolean."
23549,0,Change has been successfully rebased as c2bf3ace21c7d3be76a4bd988251e1729444d671 by Celine Janssens
23555,0,Change has been successfully cherry-picked as 82f874a4b336c69734f9b43763ce9ea4c6044677 by Stephan Leicht Vogt
23560,1,Abandonedok
23565,0,Change has been successfully merged into the git repository by Guillaume Gebhart
23567,0,Change has been successfully merged into the git repository by Joao Barata
23570,0,Change has been successfully merged into the git repository by Michal Niewrzal
23573,0,Change has been successfully merged into the git repository by Alexander Kurtakov
23577,0,Change has been successfully merged into the git repository by Tim Buschtoens
23580,0,Change has been successfully merged into the git repository by Manoj Palat
23583,0,Change has been successfully merged into the git repository by Alexander Kurtakov
23588,0,Change has been successfully merged into the git repository by Gregoire Dupe
23590,0,"Patch Set 3:Hi Axel,thanks for the review! For some reason, I was sure that in the method that I changed in the conflict detector, the equality of the references of the ReferenceChanges has already been tested, but apparently this was not the case. So I added the test in the method I introduced.Thanks!"
23592,1,"Patch Set 2: Code-Review-2 Verified+1Hi Philip, Nice catch !I can't merge your contribution because of failing test. Could you please take a look ? Thank you !"
23594,1,"Patch Set 5:Hi Axel,I fixed the failing test you mentioned in your review some time ago. Is your -2 still valid?Thanks!"
23596,0,Change has been successfully merged into the git repository by Laurent Delaigue
23601,0,Change has been successfully merged into the git repository by Lars Vogel
23605,0,Change has been successfully rebased as e9b5c4ecf56e0f4db03d43502cf60d246d9266a7 by Eugen Neufeld
23607,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2063/ : UNSTABLE
23611,0,Change has been successfully rebased as cbf0b723e567e96d585814fb7fd2e3eb68716591 by Eugen Neufeld
23613,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2062/ : UNSTABLE
23617,0,Change has been successfully rebased as 6eddee990790c9fd65ace0db9a050a11e2bf7e2c by Eugen Neufeld
23619,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2048/ : UNSTABLE
23621,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2067/ : UNSTABLE
23625,0,Change has been successfully rebased as f7cd646cfa2c55cd7717055ee3486adfb192f4b2 by Eugen Neufeld
23628,0,Change has been successfully merged into the git repository by Timur Achmetow
23631,1,Patch Set 1:> @Timur: Is this +1? Please indicate whether this is a WIP > or whether you want a review.Ok sorry. This change is in progress (WIP). What is the best way to indicate this?
23632,1,"Patch Set 1:-1 or even -2.The latter would permanently prevent others from finishing the change, tough, should you ever decide to not be interested in o.e.r.stats anymore.-1 can be overruled (but normally should not). -2 cannot be overruled."
23637,0,Change has been successfully merged into the git repository by Johannes Faltermeier
23644,0,Change has been successfully merged into the git repository by Lars Vogel
23650,0,Change has been successfully merged into the git repository by Alexander Kurtakov
23651,1,"Patch Set 5:Alex, please don't add comments in the commit message that don't make sense and are grammatically wrong. For the conversion to varags, it's not relevant at all whether a parameter accepts null or not."
23653,1,"Patch Set 5:OK, I admit my editing if bugzilla left one ""it"" more than needed. Still, I disagree that pushing commit without message would have been better."
23654,1,Patch Set 5:And I failed writing a whole sentence again :). Sorry for the bad and even getting worse English.
23659,1,"Patch Set 4:Lars, I added your bug description as commit message body. Please do so in the future for the sake of git log :)."
23662,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1036/ : UNSTABLE
23664,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1037/ : UNSTABLE
23667,0,Change has been successfully merged into the git repository by Andrey Sobolev
23674,0,Change has been successfully merged into the git repository by Alexander Kurtakov
23677,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3799/ : UNSTABLE
23679,0,Change has been successfully merged into the git repository by Sergey Prigogin
23681,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3798/ : UNSTABLE
23683,0,Change has been successfully merged into the git repository by Sergey Prigogin
23687,0,Change has been successfully merged into the git repository by Sergey Prigogin
23692,0,Patch Set 5:Guava to the rescue!
23695,0,"Patch Set 5: Code-Review+1 Verified+1Worked fine on my end!We could use this helper in many more places, especially where the output is not shown to the user. In many places we do getClass().getSimpleName() ourselves."
23696,0,Change has been successfully cherry-picked as ab400cf1b2f0918e4b14826c9550975bd5d2a723 by Matthew Khouzam
23710,0,Change has been successfully cherry-picked as 90700072caf600c1703f22689457bdd35778c142 by Bernd Hufmann
23718,0,Change has been successfully merged into the git repository by Eric Poirier
23723,0,Change has been successfully merged into the git repository by Barry Maher
23726,0,Change has been successfully merged into the git repository by Greg Watson
23728,0,Change has been successfully merged into the git repository by Silenio Quarti
23735,0,Change has been successfully merged into the git repository by Michael Rennie
23739,0,Change has been successfully rebased as 4c996f2337753c3e70294a61812ffbaa06acb6ec by Greg Watson
23741,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/3313/ : UNSTABLE
23743,0,Change has been successfully cherry-picked as 04164a1fa26f29515dba6a7e63e47352d59b6cb1 by Andi Bur
23746,0,Change has been successfully merged into the git repository by Young-Soo Roh
23748,0,Change has been successfully merged into the git repository by Lars Vogel
23751,0,Change has been successfully merged into the git repository by Jacques Bouthillier
23754,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
23757,0,Change has been successfully merged into the git repository by Doug Schaefer
23758,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3789/ : UNSTABLE
23760,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3788/ : UNSTABLE
23763,0,Change has been successfully cherry-picked as d7a2a2fa29ef1b25142073733bd062e10015abbe by Stephan Leicht Vogt
23766,0,Change has been successfully merged into the git repository by Dennis Huebner
23770,1,Patch Set 2:I have follwoed the bug and create an activity diagram.the problem is not any more present.
23773,0,Change has been successfully rebased as 787d376abfbdc8e75c5c3a5988659ad27af983bc by Benoit Maggi
23778,0,Change has been successfully rebased as 4fbe3ef416787b8bdd1f11ab6bd67815aa0ff817 by Benoit Maggi
23784,0,Change has been successfully merged into the git repository by Tim Buschtoens
23787,0,Change has been successfully merged into the git repository by Jacques Bouthillier
23796,0,Change has been successfully merged into the git repository by Stephan Herrmann
23800,1,"Patch Set 4: Code-Review-1(2 comments)I think we must assert the behavior through some test to be confident in this, and I suspect some multi-threading issue(s) here."
23810,0,Change has been successfully merged into the git repository by Laurent Delaigue
23818,0,Change has been successfully merged into the git repository by Silenio Quarti
23821,0,Change has been successfully merged into the git repository by Silenio Quarti
23824,0,Change has been successfully merged into the git repository by Lars Vogel
23827,0,Change has been successfully cherry-picked as 6bbf532ec6d6211de4795876e7e9fcf02b118db7 by Stephan Leicht Vogt
23831,0,Change has been successfully rebased as 59663e05fc93511c2e46f69e49c9852193ce6369 by Ivan Furnadjiev
23833,0,Change has been successfully merged into the git repository by Dani Megert
23836,0,Change has been successfully merged into the git repository by Thierry Monteil
23842,0,Change has been successfully rebased as 0ebafaddfc38f9be44be2e5392bddb9570504712 by vincent lorenzo
23844,0,Change has been successfully merged into the git repository by Tim Buschtoens
23851,0,Change has been successfully merged into the git repository by Thierry Monteil
23855,0,Change has been successfully merged into the git repository by Thierry Monteil
23859,0,Change has been successfully merged into the git repository by Thierry Monteil
23863,0,Change has been successfully merged into the git repository by Thierry Monteil
23866,0,Change has been successfully merged into the git repository by Thierry Monteil
23869,0,Change has been successfully merged into the git repository by Thierry Monteil
23873,0,Change has been successfully merged into the git repository by Thierry Monteil
23877,0,Change has been successfully merged into the git repository by Thierry Monteil
23879,0,Patch Set 1: Code-Review+2 Verified+1Next try :-)
23883,0,Change has been successfully merged into the git repository by Philip Wenig
23891,0,Change has been successfully merged into the git repository by Philip Wenig
23893,1,"Patch Set 1: Code-Review-1Hi Michael,thanks for re-pushing it. But the get/add scan signal method are already implemented in the AbstractScanWSD class. Hence, they don't need to be implemented twice in the VendorScan class.I would also recommend to avoid putting local values into the test cases. Here, the term String export = ""/Users/michaelchang/Documents""; is only valid on your computer.Best,Philip"
23894,1,Abandoned
23897,0,Change has been successfully merged into the git repository by Philip Wenig
23899,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/3307/ : UNSTABLE
23901,0,Change has been successfully cherry-picked as e76bf2a508298f62b0f5a15e42d4b45e11fe08fb by Adrian Sacchi
23904,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/3305/ : UNSTABLE
23907,0,Change has been successfully cherry-picked as 8af0fc45a99b14333297eb80ab4fc5717413e2bc by Adrian Sacchi
23911,0,Change has been successfully rebased as 3c3438715e4f62a0e980678b98c5444f6a37921d by florian noyrit
23914,0,Change has been successfully merged into the git repository by Alexander Kurtakov
23919,0,Change has been successfully merged into the git repository by Andreas Sewe
23921,0,Patch Set 2:(2 comments)thanks for the review. I will push the correction.
23924,0,Patch Set 3: Code-Review+1Preivous code-review was wrong==Code Review==Looks good to me.==Remarks==We don't know how to reproduce that bug.
23932,0,Change has been successfully rebased as e26eb34442d0e49f7e1c31cae161183d599e43de by vincent lorenzo
23937,0,Change has been successfully cherry-picked as 8d594abf01d973dde2b741df282765e31897ef6e by Daniel Wiehl
23939,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/3294/ : UNSTABLE
23942,0,Change has been successfully merged into the git repository by Sasikanth Bharadwaj
23947,0,Change has been successfully merged into the git repository by Uwe Stieber
23955,0,Change has been successfully merged into the git repository by Frank Becker
23959,0,Change has been successfully cherry-picked as c42ec905e30193eb0cf77ff32cb02a68fb44f98a by Marc-Andre Laperle
23966,0,Change has been successfully cherry-picked as 89d0681320e2919b555e64019b3b8161e17348a3 by Marc-Andre Laperle
23971,0,Change has been successfully cherry-picked as ad9157b03a1c79b4e28a43d17e3d0453e524eeb7 by Patrick Tasse
23974,0,Change has been successfully cherry-picked as 46f4359034fe049ad4a43986bdc87d29b93d7bbf by Patrick Tasse
23977,0,Change has been successfully cherry-picked as 5187ff95078b04e4539853e693b0b15ca19ebb0b by Patrick Tasse
23980,1,"Patch Set 1: Code-Review-2> inefficientThis is WRONG. The two approaches are the exact same thing. Since ""id"" is not known at compile them it has to create a new string at runtime."
23981,1,"Patch Set 1:Yes, but the string is created, then copied to another String. That is the inefficient part. Even though it only copies a reference to the String payload, the hashcode is not carried over. This mean that any lazy loaded accelerators have to be re-calculated."
23984,0,Change has been successfully cherry-picked as 651cbda09eb25ea5fd16e8a08d2d76666e9e6cf0 by Marc-Andre Laperle
23987,1,"Patch Set 1: Code-Review-2It's a bit weird to do ""cache"" the toString(), it's probably not worth doing it at all. But the justification for this change is erroneous."
23993,0,Change has been successfully cherry-picked as f6c0ef75c60e42945512fccbd3861e7003012de0 by Marc-Andre Laperle
23996,0,Change has been successfully merged into the git repository by Pascal Rapicault
23997,0,"Patch Set 1:Wow, that was fast to merge!  I couldn't find it in my open reviews so I thought I didn't submit it, until I saw it was merged :)  But now I'm able to confirm it work by replying to this merged review."
24000,0,Change has been successfully merged into the git repository by Pascal Rapicault
24005,1,Abandoned
24006,0,Patch Set 1:what? But I just tested it! :p
24012,0,Patch Set 2:Thanks forgot to do it :P
24014,0,Change has been successfully cherry-picked as bced2679001b45d51f3c11af784a78d13899a43c by Marc-Andre Laperle
24017,0,Change has been successfully merged into the git repository by Pascal Rapicault
24022,0,Change has been successfully cherry-picked as bd9d05ff5f1dd5b03c12bdd3e5b3056834b1ca57 by Marc-Andre Laperle
24024,0,Change has been successfully cherry-picked as d2ffd0280b2e4222b6392a31d6ffb2eab9700749 by Marc-Andre Laperle
24032,0,Change has been successfully cherry-picked as 2e7668dd957861a2d59f1dfe137d0e0599e2f01f by Marc-Andre Laperle
24035,0,Change has been successfully cherry-picked as b6f14576953440dad8a409ef262ea0c10925144a by Patrick Tasse
24041,0,Change has been successfully merged into the git repository by Sam Davis
24045,0,Change has been successfully merged into the git repository by Dirk Fauth
24050,0,Change has been successfully rebased as 7b5cdff64f8f0540989d67327b89bea8be7d25f3 by Doug Schaefer
24054,0,Change has been successfully merged into the git repository by John Arthorne
24057,0,Change has been successfully merged into the git repository by Alexander Kurtakov
24066,0,Change has been successfully cherry-picked as 0e564353239b2b3e2e2e8c96a3b03c6f9bcec7c4 by Patrick Tasse
24072,0,Change has been successfully merged into the git repository by Jacques Bouthillier
24079,0,Change has been successfully rebased as 50c6b2c7f4b90cdfd1272d9d049decdcfa8c33c5 by Christian W. Damus
24088,0,Change has been successfully merged into the git repository by Jacques Bouthillier
24092,0,Change has been successfully cherry-picked as 4bd4f5df457a1f227f16370d54b05fdb0e3b2808 by Alexander Kurtakov
24096,1,"Patch Set 1:FYI, in the normal case, in CustomXmlTrace.getNext() the method TmfTrace.updateAttributes() is called, which calls CustomEvent.getTimestamp() and immediately processes the data.In my test code I had overloaded CustomXmlTrace to avoid calling updateAttributes(), and was later calling getContent() before getTimestamp() had ever been called.From the point of view of CustomEvent, it should process the data regardless of the order that these two methods can get called. Processing the data creates both the event timestamp and content."
24098,0,Change has been successfully cherry-picked as 0ff3b4ebde5e838580d4ab60546ca2b684e85bd8 by Patrick Tasse
24100,0,Change has been successfully pushed.
24103,0,Change has been successfully merged into the git repository by Michael Rennie
24104,1,"Patch Set 2:Note that the comment from ""Eclipse Genie"" is incorrect here, since the contributor and committer work for the same employer. No CQ is needed here, and I can't find any that was created automatically."
24114,0,Change has been successfully cherry-picked as ae86da62d7cc6e7f55f80c0809d00273788a3791 by Alexander Kurtakov
24119,0,Change has been successfully merged into the git repository by Celine Janssens
24122,0,Change has been successfully cherry-picked as fa11e0128b8473b76740522b0c8d8ddc27c8624d by Andi Bur
24124,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/3283/ : UNSTABLE
24130,0,Change has been successfully rebased as 50d72f8ec11d7157ce700a1e7744d6bbc8b35b99 by vincent lorenzo
24134,0,Change has been successfully rebased as 23947064b69d9446f33141d218d2fb3be0c6eecc by vincent lorenzo
24138,0,Change has been successfully cherry-picked as 58da688e6b7f657d1254e2faea51c02bbfba3757 by Roland Grunberg
24142,0,Change has been successfully merged into the git repository by Zoltan Ujhelyi
24146,0,Change has been successfully merged into the git repository by Silenio Quarti
24148,1,"Patch Set 3: Code-Review-1 Verified-1(4 comments)I also get an error with the following message when the command finishes.Either {0} or {1} or {2} should be provided, got: {}"
24153,0,Change has been successfully cherry-picked as be49deb26ee6e83726432a6226a69c35cf88441a by Roland Grunberg
24158,0,Change has been successfully merged into the git repository by Young-Soo Roh
24162,0,Change has been successfully merged into the git repository by Sebastian Struckmann
24166,0,Change has been successfully rebased as 08ef902777eab8639b1d75d2ffd011d36ab51722 by Camille Letavernier
24175,0,Change has been successfully merged into the git repository by Eric Poirier
24180,0,Change has been successfully rebased as e07ccdf5e497952349b5201270b96a07a1b0c814 by Camille Letavernier
24186,0,Change has been successfully rebased as a975cebb403439164421d8f30c9cb4e905d8745c by Camille Letavernier
24192,0,Change has been successfully rebased as 8c941f8e5f1614a592d29d28b84c3b7d28e4e7d6 by Camille Letavernier
24197,0,Change has been successfully rebased as 7b7a03230fa199a43a8e98759464a9a414c1901a by Camille Letavernier
24202,0,Change has been successfully rebased as 6dc9113bb9e90357af17effabf96cd820b135125 by Camille Letavernier
24207,0,Change has been successfully rebased as 25856d6eaa9254bd89c8274ee023f9af99cbaa57 by Camille Letavernier
24212,0,Change has been successfully rebased as c2e7b510e153a35a24a5b478cebbd82bcf2a7ab2 by Camille Letavernier
24217,0,Change has been successfully rebased as 325a65076fb30d50abbaa985809e8279eb26b288 by Camille Letavernier
24222,0,Change has been successfully rebased as 090f5e509631090f467d20414086d71c24831a5c by Camille Letavernier
24227,0,Change has been successfully rebased as 60e3ecdab1ddf365caf9370742605a2887ddc366 by Camille Letavernier
24232,0,Change has been successfully rebased as 1199accb54d40020bf021e6dc2601c697357d866 by Camille Letavernier
24237,0,Change has been successfully rebased as 8d0b38ea11bd162e146c547f7a195138d6ab3f2e by Camille Letavernier
24242,0,Change has been successfully merged into the git repository by Stephane Begaudeau
24250,0,Change has been successfully merged into the git repository by Sebastian Struckmann
24256,0,"Patch Set 6:Looks good, but please extend the release notes!"
24259,0,Change has been successfully merged into the git repository by Ansgar Radermacher
24265,0,Change has been successfully merged into the git repository by christopher Guindon
24277,0,Change has been successfully merged into the git repository by christopher Guindon
24297,0,Change has been successfully merged into the git repository by florian noyrit
24303,0,Change has been successfully merged into the git repository by Ansgar Radermacher
24306,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
24308,1,Abandoned
24312,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
24314,1,Abandoned
24317,1,Abandoned
24321,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
24324,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
24326,1,Abandoned
24329,1,Abandoned
24333,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
24336,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
24338,1,Abandoned
24342,0,Change has been successfully cherry-picked as 4d0e3e26a5add4f1273568eaa4ddd961fc1ccc9b by Judith Gull
24346,0,Change has been successfully merged into the git repository by Christian Pontesegger
24348,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3638/ : UNSTABLE
24349,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3643/ : UNSTABLE
24353,0,Change has been successfully rebased as 5656acd2535c44197df6a6da9c430a1d8d8b62f6 by Andrew Gvozdev
24355,0,Change has been successfully merged into the git repository by Sebastian Struckmann
24358,0,"Patch Set 3: Verified+1(4 comments)Looks good so far, but small changes would be appreciated"
24362,0,Change has been successfully merged into the git repository by Elena Laskavaia
24368,0,Change has been successfully merged into the git repository by Alexander Kurtakov
24373,0,Change has been successfully merged into the git repository by Brian de Alwis
24375,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/7549/ : UNSTABLE
24380,0,Change has been successfully merged into the git repository by Lars Vogel
24384,0,Change has been successfully merged into the git repository by Sergey Prigogin
24387,0,Change has been successfully merged into the git repository by Sergey Prigogin
24390,0,Change has been successfully merged into the git repository by Silenio Quarti
24393,0,Change has been successfully cherry-picked as 9741c6b29b6a2a97ca4cc7c1901632e9269dedf4 by Roland Grunberg
24398,0,Patch Set 2: Verified+1All scenarios from bug 378811 are working fine with this patch set.
24404,0,Change has been successfully merged into the git repository by Wojciech Sudol
24407,0,Change has been successfully cherry-picked as a064ae9da2f01a4506dbe91eb84cbe29a7d56abb by Marc-Andre Laperle
24409,0,Change has been successfully merged into the git repository by David Williams
24415,0,Change has been successfully merged into the git repository by David Williams
24418,0,Change has been successfully merged into the git repository by David Williams
24420,0,Patch Set 1: Code-Review+1looks good!
24422,1,"Patch Set 1:btw, that is my only concern, not enough to -1, If you answer, assume I am giving you a hearty +2 since it will also allow proper graphing!"
24425,0,"Patch Set 1: Code-Review+2 Verified+1Ok, so I tried, and checked the code out too thoroughly for an evening. I love how the classic resolve is only called by the new function. Basically all aspects are ints."
24429,0,Change has been successfully cherry-picked as b3867ecc49c74ca99016246e60ee2de19f11fb61 by Marc-Andre Laperle
24435,0,Change has been successfully cherry-picked as d1dff6d88fba6ee7fc820306c918175b093602ce by Xavier Coulon
24439,0,Change has been successfully merged into the git repository by Silenio Quarti
24445,0,Change has been successfully rebased as 5bf13f09f6b74c987f5f8ebd5350f82396d4edb0 by Johannes Faltermeier
24447,0,Change has been successfully merged into the git repository by Juan Cadavid
24453,0,Change has been successfully merged into the git repository by Guy Perron
24456,0,Change has been successfully merged into the git repository by Ansgar Radermacher
24459,0,Change has been successfully cherry-picked as fd718c5f08046458acab7a889f1881cf200aba13 by Roland Grunberg
24462,0,Change has been successfully cherry-picked as 150990adf33e51d5cf305142d7da0003f4ce07ef by Marc-Andre Laperle
24473,0,Change has been successfully merged into the git repository by Silenio Quarti
24477,0,Change has been successfully merged into the git repository by Doug Schaefer
24478,0,Patch Set 1:Thanks Kaloyan!
24482,0,Change has been successfully rebased as 5c8fd518d321052aef961d7b3fde720800c02aa0 by Ivan Furnadjiev
24485,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
24488,0,Change has been successfully merged into the git repository by Laurent Goubet
24498,0,Change has been successfully rebased as d3f91acb5d63c00dfe37b8cabf540a8fd3360029 by Ansgar Radermacher
24502,0,Change has been successfully rebased as a4cc9eedab856407201e33684ade9e26f10b6f09 by Benoit Maggi
24506,0,Change has been successfully rebased as e3bfa6b23ce4600bf9233cc8dd2629477f83a94f by Christian W. Damus
24510,0,Change has been successfully merged into the git repository by Wojciech Sudol
24513,0,Change has been successfully merged into the git repository by Eugen Neufeld
24520,0,Change has been successfully merged into the git repository by Laurent Goubet
24529,0,Change has been successfully cherry-picked as 45055c6df9db51ff325339840248c8e74df88461 by Bernd Hufmann
24534,0,Change has been successfully cherry-picked as 13c60668ff146e4f40497f7511b1d5241d6f1e0e by Bernd Hufmann
24537,0,Patch Set 1: Code-Review+1Ok for me.Note: the transition parsing phase is called several time after the first calculation. It could be good to cache the textual representation while the guard did not change.
24540,0,Change has been successfully rebased as 015dd49612836f36dc651824800901c6121d30d5 by Ansgar Radermacher
24542,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/650/ : UNSTABLE
24545,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/647/ : UNSTABLE
24550,0,Change has been successfully merged into the git repository by Yvan Lussaud
24552,1,Patch Set 2:> Tree and Table being the most performance sensitive widgets - resizing on every scroll even is a clear no go.In my opinion resizing/repainting on every scroll event won't significantly affect performance.It affects only visible items and their number isn't significant.I have tested the following:- Snippet144 from bug 129457 - the snippet from bug 124965#c2- http://git.eclipse.org/c/platform/eclipse.platform.ui.git/tree/examples/org.eclipse.jface.snippets/Eclipse%20JFace%20Snippets/org/eclipse/jface/snippets/viewers/Snippet029VirtualTableViewer.java- http://git.eclipse.org/c/platform/eclipse.platform.ui.git/plain/examples/ignificantlyorg.eclipse.jface.snippets/Eclipse%20JFace%20Snippets/org/eclipse/jface/snippets/viewers/Snippet030VirtualLazyTableViewer.java- the eclipse.platform.swt project in the Git History view (this project contains 24000+ commits)There isn't a difference in performance between GTK3 with and without the patch as well as between GTK2 and GTK3.Do you know any other examples to test table/tree performance?BTW I have removed the part of the patch related to bug 466499 because the table from Snippet144 isn't shown when it is included.
24555,1,Patch Set 5: Code-Review+2 Verified+1Way better now with less weird version checks. Pushing it although still having some concerns.
24556,0,Change has been successfully merged into the git repository by Alexander Kurtakov
24562,0,Change has been successfully merged into the git repository by Mickael ADAM
24565,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
24568,0,Patch Set 2: Code-Review+1(2 comments)==Code Review==Just one minor modification needed.==Smoke tests==Create a project.Create a diagram.Add a css to the model.Modify the appareance diagram by the properties view.==Functional tests==The 'displayBorder' property works fine.==Boundaries tests==Try others styles properties.==Remarks==The style 'shadow' always displays external lines when the 'displayBorder' is active. I don't know if the lines must be deleted with the shadow.
24576,0,Change has been successfully merged into the git repository by Tristan Faure
24582,0,Change has been successfully merged into the git repository by vincent lorenzo
24585,0,Change has been successfully merged into the git repository by Alexander Kurtakov
24590,0,Change has been successfully merged into the git repository by Marvin Mueller
24597,0,Change has been successfully rebased as eef75a8d8c26905b729a48a971a87816fdd4f091 by Benoit Maggi
24602,0,Change has been successfully cherry-picked as 9f8f13d4ca80a7f3828dcaf46cab536dbe9a23eb by Xavier Coulon
24606,0,Change has been successfully rebased as f226a7760605bf666ad7708f6d89c881f1e3aeaa by Eugen Neufeld
24608,0,Change has been successfully merged into the git repository by Alexander Kurtakov
24615,0,Change has been successfully rebased as e5dbcad9ebf11aba37eabae8a396fa5c2e1816fe by Johannes Faltermeier
24618,0,Change has been successfully merged into the git repository by Eugen Neufeld
24621,0,Change has been successfully merged into the git repository by Philip Wenig
24624,0,Change has been successfully merged into the git repository by Laurent Redor
24632,0,Change has been successfully rebased as dea446351676236b1e9732fdbb008f760d9826f0 by Benoit Maggi
24635,0,Change has been successfully merged into the git repository by Sergey Prigogin
24636,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3679/ : UNSTABLE
24639,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1018/ : UNSTABLE
24641,0,Patch Set 3: Code-Review+2 Verified+1Looks fine.
24642,0,Change has been successfully merged into the git repository by Andrey Sobolev
24644,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1016/ : UNSTABLE
24646,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1017/ : UNSTABLE
24654,0,Change has been successfully merged into the git repository by Matthias Sohn
24661,0,Change has been successfully merged into the git repository by Andrey Loskutov
24668,0,Change has been successfully merged into the git repository by Donald Dunne
24681,0,Change has been successfully merged into the git repository by Sarika Sinha
24687,0,Change has been successfully cherry-picked as df2597e06aa1e8f2a6ea84db36d7e1e51e5f410d by Matthew Khouzam
24695,0,"Patch Set 7: Code-Review+2This looks pretty good to me, any blockers left?"
24701,0,"Patch Set 6:Alex, does this patch look good to you now?"
24704,0,Change has been successfully cherry-picked as 4284e0e1ace60291b88c7927cc74041ffb5ce671 by Marc-Andre Laperle
24712,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7828/ : UNSTABLE
24714,0,Change has been successfully merged into the git repository by Matthias Sohn
24717,0,Change has been successfully merged into the git repository by Andrey Loskutov
24722,0,Change has been successfully merged into the git repository by Satoru Yoshida
24728,0,Change has been successfully cherry-picked as d509e97e0967249bd79d2fe9268bcb8c8106d467 by Alexandre Montplaisir
24733,0,Change has been successfully merged into the git repository by Lars Vogel
24749,0,Change has been successfully cherry-picked as 23dec2c350a05c4b465f81804955a613598826cd by Marc-Andre Laperle
24755,0,Patch Set 3: Code-Review+1(1 comment)Preliminary look at this patch makes me happy. I can see this fixing lots of races.
24757,0,Change has been successfully cherry-picked as 6de855d054d576237643c756c64a834f0c628d30 by Marc-Andre Laperle
24760,0,Change has been successfully merged into the git repository by Guy Perron
24763,0,Change has been successfully merged into the git repository by Guy Perron
24766,0,Change has been successfully merged into the git repository by Guy Perron
24770,0,Change has been successfully cherry-picked as 7af63ca52bb9711892c961096e02eeca11a86ca4 by Roland Grunberg
24780,0,Change has been successfully merged into the git repository by Young-Soo Roh
24782,0,Patch Set 4: Code-Review+2 Verified+1You're right. You do get a warning. Looks good to me.
24783,0,Change has been successfully merged into the git repository by Stefan Xenos
24795,0,Change has been successfully merged into the git repository by Guy Perron
24798,0,Patch Set 2: Code-Review+2 Verified+1Looks good.
24799,0,Change has been successfully merged into the git repository by Tony McCrary
24801,0,Patch Set 1: Code-Review+2Nice patch! Thanks for the submission.
24805,0,Change has been successfully merged into the git repository by Stefan Xenos
24807,0,Change has been successfully pushed.
24814,0,Change has been successfully merged into the git repository by Donald Dunne
24829,0,Change has been successfully merged into the git repository by Sergey Prigogin
24835,0,Change has been successfully merged into the git repository by Andrey Loskutov
24841,0,Change has been successfully merged into the git repository by Yvan Lussaud
24844,0,Change has been successfully merged into the git repository by Lars Vogel
24850,0,Change has been successfully merged into the git repository by Remi Schnekenburger
24857,0,Change has been successfully rebased as c05970d1d362d6f9d907fbcda4e372f6838acd3f by Patrick Tessier
24863,0,Change has been successfully merged into the git repository by Remi Schnekenburger
24869,0,Change has been successfully merged into the git repository by Remi Schnekenburger
24875,0,Change has been successfully rebased as ec44d31bfe7fd3ca96ab62d136d252bac7067108 by Remi Schnekenburger
24880,0,Change has been successfully merged into the git repository by christopher Guindon
24891,0,Change has been successfully cherry-picked as 2805b01eb025e8af85ebeb7b30e87591c71e63ea by Xavier Coulon
24902,0,Change has been successfully rebased as e94966c15cb3959b8770c7800fad129ad8a8dab5 by Remi Schnekenburger
24906,0,Change has been successfully rebased as b58b6686a9c25fbe5c267edf0288023939cbaf21 by Remi Schnekenburger
24908,0,Change has been successfully merged into the git repository by Laurent Goubet
24912,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1811/ : UNSTABLE
24917,0,Change has been successfully rebased as 4378dd6f9561eed91c21859db3c34c882c43bc6c by Eugen Neufeld
24923,0,Change has been successfully rebased as cfafff756e3380ef13052e7b7f7f79d55f56826e by Eugen Neufeld
24926,0,Change has been successfully rebased as 754b8dde93aac902030b177c156ab33301c7a95d by Eugen Neufeld
24930,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1800/ : UNSTABLE
24932,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1809/ : UNSTABLE
24938,0,Change has been successfully merged into the git repository by Patrick Tessier
24940,0,Change has been successfully merged into the git repository by Eugen Neufeld
24943,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1622/ : UNSTABLE
24948,0,Change has been successfully merged into the git repository by Melanie Bats
24951,0,Change has been successfully merged into the git repository by Jacques Bouthillier
24954,0,Change has been successfully merged into the git repository by christopher Guindon
24957,0,"Patch Set 2:If there is value in having it in-tree then sure, if we ensure that they don't start or end with ""Test"" then it will work fine.""TestApplication"" sounds like a good suffix we could use in general for all those run-manually tests."
24961,0,"Patch Set 3:Oh I thought you also pushed the patch ""Remove all AllTests suites"" along with it, according to ""Related Changes (2)"". Gerrit is misleading!"
24963,0,Change has been successfully cherry-picked as 533e75787f696a094afea200e1346c1b21525ac5 by Alexandre Montplaisir
24966,0,Patch Set 1:I think we have other classes like that. We run them manually as we develop features. They are still useful to share in the repo. I think we have some like that for CTF too (classes with main() method). Maybe they just need to me moved somewhere else? Or renamed for clarity?
24970,0,"Patch Set 1:> Yeah it's the name (and non-abstract-ness, and presence of @Tests > of course) that cause them to be picked up: >  > https://eclipse.org/tycho/sitedocs/tycho-surefire/tycho-surefire-plugin/test-mojo.html#includes >  > The *Benchmark don't get run for instance.Thanks!"
24971,0,"Patch Set 4:> Oh I thought you also pushed the patch ""Remove all AllTests suites"" > along with it, according to ""Related Changes (2)"". Gerrit is > misleading!I tested it locally with that patch so it's all good."
24974,0,Change has been successfully cherry-picked as c35a8580f89fc3c0530efd052f1e2a5f7d9cb75c by Alexandre Montplaisir
24982,0,Change has been successfully merged into the git repository by Laurent Redor
24989,0,Change has been successfully merged into the git repository by Laurent Redor
24992,0,Change has been successfully merged into the git repository by Johan Hardy
24999,0,Change has been successfully merged into the git repository by Esteban DUGUEPEROUX
25002,0,Change has been successfully merged into the git repository by Michael Wenz
25005,0,Change has been successfully merged into the git repository by Matthias Sohn
25010,0,Change has been successfully rebased as afed2d098cba3b0af2f3047a2baf4505118fbc8b by Mickael ADAM
25014,0,Change has been successfully merged into the git repository by Jelena Alter
25016,0,Change has been successfully merged into the git repository by Laurent Redor
25023,0,Change has been successfully merged into the git repository by Eric Poirier
25028,0,Change has been successfully pushed.
25032,0,Change has been successfully merged into the git repository by Lars Vogel
25034,0,Change has been successfully merged into the git repository by Lars Vogel
25041,0,Change has been successfully merged into the git repository by Lars Vogel
25048,0,Change has been successfully pushed.
25049,0,Patch Set 2: Code-Review+2 Verified+1I hope you do not mind Sopot but I reviewed and tested the change and it looks good to me.
25050,0,Change has been successfully merged into the git repository by Lars Vogel
25051,0,Patch Set 2:> I hope you do not mind Sopot but I reviewed and tested the change > and it looks good to me.Sure np. While you merged my jface tests also ran successfully. Thanks Kaloyan.
25056,0,Patch Set 1:I verified with all themes (Linux only) and it looks good. The background color of the message line is the same as the background color of the dialog.
25057,0,"Patch Set 1:> I verified with all themes (Linux only) and it looks good. The > background color of the message line is the same as the background > color of the dialog.Ok, I'll double check myself and run the JFace tests just to make sure before reviewing."
25062,0,Change has been successfully merged into the git repository by vincent lorenzo
25067,0,Change has been successfully merged into the git repository by vincent lorenzo
25072,0,Change has been successfully merged into the git repository by Markus Knauer
25076,0,Change has been successfully rebased as 4aa1bdbdd10c369583a5f0f267209d69742ed4fd by Mickael ADAM
25080,0,Change has been successfully rebased as 8aadbea7ddcaaccab4e6fe2bd94a27bb74d93e65 by Mickael ADAM
25084,0,Change has been successfully rebased as 3655f025357e9f84fabb35328298eb6dd9296502 by vincent lorenzo
25089,0,Change has been successfully rebased as 9f730d61b2ecda12352364361cb687cf8269bae1 by florian noyrit
25093,0,Change has been successfully rebased as 582bffce7012cf3aca73cdb7be434ef1f3e17f73 by Mickael ADAM
25096,0,Change has been successfully merged into the git repository by Matthias Sohn
25099,0,Change has been successfully merged into the git repository by Jan Krueger
25104,0,Change has been successfully rebased as 5dba6cbd106d6945465e1b132488d336c3863f7e by Camille Letavernier
25112,0,Change has been successfully merged into the git repository by Esteban DUGUEPEROUX
25121,0,Change has been successfully rebased as 6407ac43923ae8902b6ab1ea5ab95b032bb9ecf6 by Camille Letavernier
25124,0,Change has been successfully merged into the git repository by Jan Krueger
25128,0,Change has been successfully merged into the git repository by Sebastian Struckmann
25135,0,Change has been successfully merged into the git repository by Sopot Cela
25137,0,Change has been successfully merged into the git repository by Stephane Begaudeau
25142,0,Change has been successfully merged into the git repository by Stephane Begaudeau
25148,0,Change has been successfully merged into the git repository by Cedric Brun
25151,0,Change has been successfully merged into the git repository by Sopot Cela
25157,0,Patch Set 1:(1 comment)Thanks Elena. Did you test this change locally?
25163,0,Change has been successfully merged into the git repository by Stephane Begaudeau
25165,0,Change has been successfully merged into the git repository by Stephane Begaudeau
25170,0,Change has been successfully merged into the git repository by Stephane Begaudeau
25180,0,Change has been successfully merged into the git repository by Esteban DUGUEPEROUX
25185,0,Change has been successfully merged into the git repository by Laurent Redor
25190,0,Change has been successfully merged into the git repository by Matthias Sohn
25196,0,Change has been successfully merged into the git repository by Ryan Brooks
25200,0,Change has been successfully merged into the git repository by Vladimir Piskarev
25203,0,Change has been successfully merged into the git repository by Fred Bricon
25212,0,"Patch Set 6:We could also offer another create method, which is able to convert the supplier's value. So we would have a new way to replace the IConverter, which is usually used together with Databinding.See my comment here: https://bugs.eclipse.org/bugs/show_bug.cgi?id=478456#c9"
25215,1,"Patch Set 7:Simon, a update to Java 8 should be done via a separate bug."
25216,1,Patch Set 7:It seems that this already has been done in commit 253492b6df9bf36e2e0c66b8a8be764e7ba323c0 I am wondering why my IDE complained about this.
25228,0,Change has been successfully merged into the git repository by Stefan Xenos
25230,0,"Patch Set 4: Code-Review+1(6 comments)Just some minor suggestions.I am really curious about these new databinding feature.Thanks a lot and let me know, if I can help somehow."
25236,1,"Patch Set 10:Sorry for the long delay, but I think this is ready for another look. I believe I've responded to everyone's requests, including Sergey's request for better javadoc and examples."
25250,0,Change has been successfully merged into the git repository by Ryan Brooks
25255,0,Change has been successfully merged into the git repository by Ryan Brooks
25260,0,Change has been successfully merged into the git repository by Guy Perron
25263,0,Change has been successfully merged into the git repository by Sergey Prigogin
25266,0,Change has been successfully merged into the git repository by Sergey Prigogin
25269,0,Change has been successfully merged into the git repository by Stephanie Chafe
25271,0,Change has been successfully merged into the git repository by Grant Gayed
25278,0,Change has been successfully merged into the git repository by Stephanie Chafe
25283,0,Change has been successfully merged into the git repository by Guy Perron
25286,0,Patch Set 2: Code-Review+2 Verified+1Looks good.
25287,0,Change has been successfully merged into the git repository by Eric Moffatt
25289,0,Change has been successfully merged into the git repository by Lars Vogel
25297,0,Change has been successfully merged into the git repository by Eugene Tarassov
25300,0,Change has been successfully merged into the git repository by Philip Wenig
25304,0,Change has been successfully merged into the git repository by Lars Vogel
25308,0,Change has been successfully merged into the git repository by Lars Vogel
25311,0,Change has been successfully merged into the git repository by Jeff Johnston
25314,0,Change has been successfully merged into the git repository by Lars Vogel
25320,0,Change has been successfully merged into the git repository by Lars Vogel
25324,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
25327,0,Change has been successfully merged into the git repository by Guy Perron
25331,0,Change has been successfully merged into the git repository by Eric Moffatt
25336,0,Change has been successfully merged into the git repository by Matthias Sohn
25339,0,Change has been successfully merged into the git repository by Michael Wenz
25346,0,Change has been successfully merged into the git repository by Ryan Brooks
25352,0,Change has been successfully merged into the git repository by Pascal Rapicault
25356,0,Change has been successfully merged into the git repository by Jonas Helming
25359,0,Change has been successfully merged into the git repository by Grant Gayed
25362,0,Change has been successfully merged into the git repository by Alexander Kurtakov
25365,0,Change has been successfully merged into the git repository by Alexander Kurtakov
25368,0,Change has been successfully merged into the git repository by Charles Rivet
25374,0,Change has been successfully cherry-picked as f4e54fc61c9428bbc43c4b26264576d5397a9937 by Judith Gull
25378,0,Change has been successfully merged into the git repository by Andreas Sewe
25380,0,Change has been successfully merged into the git repository by Dani Megert
25388,0,Change has been successfully merged into the git repository by Andreas Sewe
25393,0,Change has been successfully merged into the git repository by Andreas Sewe
25399,0,Change has been successfully merged into the git repository by Markus Knauer
25402,0,Change has been successfully merged into the git repository by Lars Vogel
25407,0,Change has been successfully merged into the git repository by Jonathan Nieder
25411,0,Change has been successfully merged into the git repository by Jonathan Nieder
25412,1,Patch Set 1:if the API removed here is only used by implementors / extenders you should suppress the API error these breaking changes raise. Otherwise this is a breaking change and shouldn't be part of a minor release but wait for 5.0. Or do I miss something here ?Please configure an API baseline as described in the contributor guide [1] to detect such API errors earlier.[1] https://wiki.eclipse.org/EGit/Contributor_Guide#Checking_for_JGit_API_Changes_using_API_Baseline
25413,1,Patch Set 1:> if the API removed here is only used by implementors / extenders > you should suppress the API error these breaking changes raise. > Otherwise this is a breaking change and shouldn't be part of a > minor release but wait for 5.0. Or do I miss something here ? >  > Please configure an API baseline as described in the contributor > guide [1] to detect such API errors earlier. >  > [1] https://wiki.eclipse.org/EGit/Contributor_Guide#Checking_for_JGit_API_Changes_using_API_BaselineMy mistake. Reverting.
25417,0,Change has been successfully merged into the git repository by Matthias Sohn
25420,0,Change has been successfully merged into the git repository by Matthias Sohn
25423,0,Change has been successfully merged into the git repository by Matthias Sohn
25426,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/808/ : UNSTABLE
25428,0,Change has been successfully merged into the git repository by Matthias Sohn
25431,0,Change has been successfully merged into the git repository by Andreas Sewe
25434,0,Change has been successfully merged into the git repository by Matthias Sohn
25436,0,Change has been successfully merged into the git repository by Fred Bricon
25442,0,Change has been successfully merged into the git repository by Pascal Rapicault
25446,0,"Patch Set 4:+2 but no submit?And yes, Checkstyle as part of Oomph would be nice, but non-trivial, as we don't want to duplicate the XML. I'll need to think about some more."
25447,0,"Patch Set 4:> +2 but no submit?Upps, I forgot it. > I'll need to think about some more.Okay, would be nice."
25448,0,Change has been successfully merged into the git repository by Timur Achmetow
25450,0,"Patch Set 2: Code-Review-2(4 comments)Nice job Clemens, thank you, I have added some comments. Please have a look on this."
25453,0,"Patch Set 3:@Timur: As you gave a -2 (instead of a -1) no one else can submit this change, even if it has a +2. Can you A) please only use -1 under normal circumstance and B) please review this change again.Thank you."
25455,1,"Patch Set 3: Code-Review+2 Verified+1(2 comments)Sorry for my late reply, I was on vacation, last week. > It seems that check style is not part of your oomph installer :(@Andreas:Would it makes sense to extend our Eclipse installer?"
25458,0,Change has been successfully merged into the git repository by Andreas Sewe
25461,0,Change has been successfully merged into the git repository by Thomas Schindl
25469,0,Change has been successfully merged into the git repository by Eric Poirier
25474,0,Change has been successfully merged into the git repository by Thomas Schindl
25480,0,Patch Set 6: Code-Review+1It looks good :)
25483,0,Change has been successfully merged into the git repository by Stephane Begaudeau
25486,0,Change has been successfully cherry-picked as 91fdda3ef2885d2e5008509dc466b5161b12df6f by Marc-Andre Laperle
25494,0,Change has been successfully rebased as 74117232d12ed29d8770eb1c25c0224dddb67949 by Patrick Tessier
25504,0,Change has been successfully merged into the git repository by Lars Vogel
25510,1,"Patch Set 5:I'm sorry, Noopur, it was just a little polishing. The latest JDT Core/UI patches fix the filtering issue but there are still some failing unit tests. I'm investigating why they fail."
25515,0,"Patch Set 9: -Code-ReviewPatch set 9 of JDT/UI with patch set 15 of JDT/Core seems to work fine for substring completion in methods. Substring completion for fields may need proposal relevance adjustments. Dani can provide his feedback on the same.Before JDT/Core patch review, please complete the work on substring completion in types and fix the failing tests.Question/suggestion for JDT/UI patch:I saw that you added the validation check for camelCaseMatch also along with substringMatch.As I understood during the code-walkthroug, you are setting all other proposals (except substring proposals) to be suffix proposals in JDT/Core. Then why was camel case also not set as suffix proposal?In a similar way, there could be some other existing type of proposal or one that could be implemented later, which may need to be handled similar to camelCaseMatch while validation.Hence, as I had suggested during code walk-through, I feel it would be better if you have the property as substringProposal instead of suffixProposal, which would be specific to your feature and will be set only for substring proposals. Then you can check for coreProposal.isSubstringProposal() in JDT/UI and call substringMatch for that, while leaving rest of the code as it is.Please check the above approach and let me know if there is any problem with that."
25520,0,"Patch Set 13:Hi Gabor, without type completion this feature would be incomplete and we won't be able to release it. Now that rest of the things look good, you can work on type completion. We can commit the complete feature after that."
25524,0,"}}- In case of methods, the substring is also matched in its parameters, return type, declaring type etc. I think it should be restricted to only the method name.- Filtering of the results still seems to have some issue. Not sure if the filtered results look confusing or non-relevant due to the above issue of not restricting the match to just the name or if it is due to the non-subsequent matching. We can check that once the above issue is fixed. Also, pattern highlighting in the proposal will be very useful with this feature. Please check if it is simple to implement. Otherwise, we can do that later."""
25528,1,"Patch Set 8:Gabor, please make sure that with your next patch sets, all the issues mentioned in previous comments are addressed properly and nothing is broken wrt the existing functionality. It is difficult to do a context switch for reviewing and finding that there are still issues with the behavior."
25530,0,Change has been successfully merged into the git repository by Noopur Gupta
25533,1,"void otherElement() {}}These are some issues I found at a first glance:* Content assist after """"c.ele"""" shows getClass() also in the proposals which does not match """"ele"""" even with non-subsequent char matching. If it is due to the same, please take that feature out for now.* The proposal list is not filtered as you type. Press Ctrl+space after """"c.e"""" and now start typing """"lem"""". The list is not filtered and still shows all the proposals with """"c.e"""".* No proposals are suggested with content assist after """"c.ent""""."""
25535,1,"Patch Set 12:I have fixed the minor issues with the Copyright notices and also reworked the validation of substring matches in a similar way how camel case matches are validated. During the latter, I've found that the camel case validation is done in isValidPrefix() and isPrefix(). This is confusing since the token is only a prefix if camel case and substring is disabled. I suppose, the names were chosen before support for camel case matching was added. For now, I have updated Javadoc to reflect how validation is done but have not touched the method names since that change would affect subclasses as well. However, I consider that renaming these methods to isValidToken() and isMatching() is something similar would make their roles more clear to future contributors."
25536,0,"Patch Set 12:(1 comment)Thanks, Gabor. The code changes look good now.About using ""token"" instead of ""prefix"" in method names and Javadocs, you are right. But let us keep the method names and Javadocs same as before as of now i.e. you can revert the Javadoc changes. We can modify that together with method names if we plan to do so. In one way, ""prefix"" can in general refer to the token used for invocation of content assist, though invocationToken is more appropriate. We can deal with it later."
25542,0,"Patch Set 2: Code-Review+1Nothing to say, it is good :-)"
25545,0,Change has been successfully rebased as 7ccab68f4e030edc549990f719cad547f735ab02 by Benoit Maggi
25548,0,Change has been successfully merged into the git repository by Eric Poirier
25551,0,Change has been successfully merged into the git repository by Eric Poirier
25556,0,Change has been successfully rebased as 54195e9e3d51377aa2a9231ae3adb8f6c92b3ef5 by vincent lorenzo
25559,0,Change has been successfully cherry-picked as f14bc493c5756b275a1a6b04eda8d26931aa7050 by Andi Bur
25562,0,Change has been successfully merged into the git repository by Manoj Palat
25565,0,Change has been successfully cherry-picked as 69aea57145bd4fe1fe182e179dabb28496126355 by Adrian Sacchi
25568,0,Change has been successfully merged into the git repository by vincent lorenzo
25576,0,Change has been successfully rebased as 85a2e13036935b159b216b9f52cf5b53a7c58491 by vincent lorenzo
25580,0,Change has been successfully merged into the git repository by Christian Krause
25583,0,Change has been successfully cherry-picked as 3374e0485ac9afc8c44503a4a3ef4a6ac8075ef5 by Andi Bur
25586,0,Patch Set 2:(3 comments)looks good for me. Only minor questions left
25590,0,Change has been successfully merged into the git repository by Christian Halstrick
25594,0,Change has been successfully pushed.
25597,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
25600,0,Change has been successfully merged into the git repository by Eugen Neufeld
25603,0,Change has been successfully merged into the git repository by Christian Pontesegger
25606,0,Change has been successfully merged into the git repository by Marcel Hein
25609,0,Change has been successfully merged into the git repository by Patrick Tessier
25614,0,Change has been successfully merged into the git repository by Alex Panchenko
25616,1,"Patch Set 2:The only concern is requesting a copy from the editor buffer, twice (for next and prev). Could affect overall performance if file is big enough."
25627,0,"Patch Set 1:I know, but in my case structure parser are a bit slow and this actions force parsing in ui thread. Also it work same way:-)"
25634,0,Change has been successfully merged into the git repository by Ryan Brooks
25637,0,Change has been successfully merged into the git repository by Pascal Rapicault
25643,0,Change has been successfully merged into the git repository by Pascal Rapicault
25647,0,Change has been successfully merged into the git repository by Pascal Rapicault
25650,0,Change has been successfully merged into the git repository by Pascal Rapicault
25653,0,Change has been successfully merged into the git repository by Matthias Sohn
25656,0,Change has been successfully merged into the git repository by Guy Perron
25661,0,Change has been successfully merged into the git repository by Pascal Rapicault
25664,0,Change has been successfully cherry-picked as a506e5f52af0cf52c9be4504c6e04d5c9c26eefa by Roland Grunberg
25671,0,Change has been successfully merged into the git repository by Ernesto Posse
25680,0,"Patch Set 6: Code-Review+2 Verified+1Tried it, no obvious problems.pom-less plugins soon? :P"
25681,0,"Patch Set 6:> Tried it, no obvious problems.Thanks! > pom-less plugins soon? :PI'd say let's wait a few weeks, we have a lot of other stuff lined up."
25682,0,Change has been successfully cherry-picked as 009a6a3f23dac199998a6baaeb765ab34145ad1d by Marc-Andre Laperle
25691,0,Patch Set 3:Looks good!Indeed many event names now have a timer_* or such prefix in 2.7.
25694,0,Change has been successfully cherry-picked as a8b8de057e048e31dd69d8c95d39fa8a327902be by Bernd Hufmann
25697,0,Change has been successfully cherry-picked as 099c17a57b8273574284c6fd6db2e818fb1bf1dd by Bernd Hufmann
25700,0,Patch Set 2: Code-Review+2yes plz :)
25705,0,Change has been successfully merged into the git repository by Sergey Prigogin
25712,0,Change has been successfully merged into the git repository by Stefan Xenos
25714,0,"Patch Set 4: Code-Review+2 Verified+1(8 comments)Looks fine to me, you may want to adjust the ticks in MoveFilesAndFoldersOperation but even without this, I think this one is good."
25725,0,Change has been successfully merged into the git repository by Sam Davis
25731,0,Change has been successfully merged into the git repository by Sam Davis
25735,0,Change has been successfully rebased as 26014d3ff30016da74e0e7e771b9c30c37b3d5dc by Doug Schaefer
25738,0,Change has been successfully merged into the git repository by Ernesto Posse
25740,0,Change has been successfully merged into the git repository by Ryan Brooks
25748,0,Change has been successfully merged into the git repository by Ernesto Posse
25752,0,Change has been successfully merged into the git repository by Markus Keller
25755,0,Change has been successfully merged into the git repository by Andreas Sewe
25760,0,Change has been successfully merged into the git repository by Markus Keller
25767,1,"Patch Set 1:The Qt plug-ins will eventually be in the simrel repo and I expect people to be able to install from there. At that time all it's dependencies will be there too.Adding these dependencies to the feature is a pain to maintain. In fact, I'm about to remove the ANTLR dependency all together. Would have been bad if we forgot and left it in the feature and everyone installing the Qt plug-ins would get the ANTLR plug-in even though it's not used.But, yes, I'd rather see the category.xml/Tycho mirroring done for the CDT repo for these early days. It's what I do at QNX to mirror. Works well. We just never thought about it much for the CDT repo since we didn't have dependencies like that before."
25769,0,Patch Set 2: Code-Review+2Much better. Thanks!
25770,0,Change has been successfully merged into the git repository by Doug Schaefer
25773,0,Change has been successfully merged into the git repository by Christian Pontesegger
25777,0,Change has been successfully merged into the git repository by Ernesto Posse
25780,0,Patch Set 1: Code-Review+2 Verified+1This is a comment. This cannot break the build!
25781,0,Change has been successfully cherry-picked as f0aaf92984faff1f2be8f204db39b4ee482fc0d6 by Alexandre Montplaisir
25784,0,Change has been successfully merged into the git repository by Jacques Bouthillier
25788,0,Change has been successfully rebased as c15a58ca7e4102b078c363ce708259dbb24f7503 by Johannes Faltermeier
25790,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1914/ : UNSTABLE
25794,0,Change has been successfully merged into the git repository by Johannes Faltermeier
25799,0,Change has been successfully merged into the git repository by Ernesto Posse
25803,0,Change has been successfully merged into the git repository by Johannes Faltermeier
25806,0,Change has been successfully merged into the git repository by Johannes Faltermeier
25809,0,Change has been successfully merged into the git repository by Laurent Redor
25811,0,Change has been successfully pushed.
25816,0,Change has been successfully merged into the git repository by Pascal Rapicault
25821,0,Change has been successfully rebased as 5f03c2490bd9c0732be0782d0216366e88cb0ae7 by Eugen Neufeld
25824,0,Patch Set 4: Code-Review+1Could be reviewed!
25826,0,Change has been successfully merged into the git repository by Benoit Maggi
25833,0,Change has been successfully rebased as 931771e70f8f68647f2c7b17c8e679110e9dcc2e by Johannes Faltermeier
25835,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1910/ : UNSTABLE
25839,0,Change has been successfully rebased as 2d10abe4b22ddb6ff2a86c1ef702061f323d92ff by Johannes Faltermeier
25842,0,Change has been successfully merged into the git repository by Andreas Sewe
25846,0,Change has been successfully merged into the git repository by Mickael Istria
25850,0,Change has been successfully merged into the git repository by Andreas Sewe
25854,0,Change has been successfully rebased as c3ec006dfd14e1c188af2889c6b2080cf1a229ab by vincent lorenzo
25862,0,Change has been successfully merged into the git repository by vincent lorenzo
25866,0,Change has been successfully merged into the git repository by vincent lorenzo
25870,0,Change has been successfully merged into the git repository by Patrick Tessier
25874,0,Change has been successfully merged into the git repository by Patrick Tessier
25877,0,Change has been successfully merged into the git repository by Tim Buschtoens
25883,0,Change has been successfully merged into the git repository by Noopur Gupta
25886,0,Change has been successfully merged into the git repository by Alexandra Buzila
25892,0,Change has been successfully merged into the git repository by Lars Vogel
25902,0,Change has been successfully merged into the git repository by Esteban DUGUEPEROUX
25905,0,Change has been successfully merged into the git repository by Christian Pontesegger
25909,0,Change has been successfully merged into the git repository by Vikas Chandra
25918,0,Change has been successfully cherry-picked as 41dbace326e0f1985398106c4903153e0e65cfb5 by Adrian Sacchi
25921,0,Change has been successfully merged into the git repository by Esteban DUGUEPEROUX
25951,0,Change has been successfully merged into the git repository by Markus Knauer
25954,0,Change has been successfully merged into the git repository by Markus Knauer
25957,0,Change has been successfully merged into the git repository by Markus Knauer
25959,0,Patch Set 1: Code-Review+1thanks for the correction of string concatenation !
25961,0,Change has been successfully merged into the git repository by Benoit Maggi
25964,0,Change has been successfully merged into the git repository by Markus Knauer
25968,0,Change has been successfully cherry-picked as 4d2c175fed16fe3e73db7231947aa00a675fa5ec by Adrian Sacchi
25972,0,Change has been successfully cherry-picked as 393efd8543e18e8fb61e9803fe5f9523eaf1ad2e by Adrian Sacchi
25975,0,Change has been successfully cherry-picked as 6166f505ca6c55f663faa5a29c3536d83240bc45 by Adrian Sacchi
25978,0,Change has been successfully merged into the git repository by Markus Knauer
25981,0,Change has been successfully merged into the git repository by Markus Knauer
25984,1,"Patch Set 1:(3 comments)Looks OK but I have not tested it. I think you need to update the copyright header in each source fit. Also I think several of the failing tests are related to you change, you also need to update them."
25985,0,"Patch Set 1:(1 comment)Thanks, will update the header. Do you think the nested loops are worth a comment in the code?"
25996,0,Change has been successfully merged into the git repository by Manoj Palat
26003,1,Patch Set 11:This new patch together with 51914:- fixes the earlier bugs- adds more explanations- removes more unnecessary changes- adds test for method/field/variable completionPending:- type substring completion- corresponding tests
26017,0,Change has been successfully merged into the git repository by Lars Vogel
26023,0,Change has been successfully merged into the git repository by Doug Schaefer
26025,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3574/ : UNSTABLE
26028,0,Change has been successfully rebased as acf1d055c15f77090ec63e1a0ba8e5444b29e2a9 by Doug Schaefer
26032,0,Change has been successfully merged into the git repository by Doug Schaefer
26037,0,Change has been successfully merged into the git repository by Andrew Eidsness
26040,0,Change has been successfully merged into the git repository by Stephan Herrmann
26043,0,Change has been successfully merged into the git repository by Christian Pontesegger
26049,0,Change has been successfully merged into the git repository by Lars Vogel
26053,0,Change has been successfully rebased as 64b7c9ed72f8baa45de1c0270421829d5528d683 by Johannes Faltermeier
26056,0,Change has been successfully merged into the git repository by Lars Vogel
26069,0,Change has been successfully cherry-picked as a2de198a4d9f64206012efffed541ff974913db2 by Bernd Hufmann
26072,0,Change has been successfully merged into the git repository by Gregoire Dupe
26075,0,Change has been successfully merged into the git repository by Johannes Faltermeier
26083,0,Change has been successfully rebased as 204594443d142dc8c4dafdd54846fe3006c301e5 by Remi Schnekenburger
26090,0,Change has been successfully merged into the git repository by Eugen Neufeld
26094,0,Change has been successfully merged into the git repository by Mikael Barbero
26099,0,"Patch Set 4:> (1 comment) >  > > long footer lines seem to be still be soft wrapped, this feels > odd. > > After commit long footers look ok (one line per footer) >  > Well, the viewer is created with soft-wrapping (SWT.WRAP) and thus > any line longer than the whole viewer gets soft-wrapped. I'm not > aware of any way to make a SWT.WRAP viewer wrap only parts of its > text. The best I can do is make sure that our hard-wrap and our own > soft-wrap via the segment listener don't wrap those lines. And I > don't like the alternative of dropping SWT.WRAP entirely for the > SpellcheckableMessageArea. >  > What do you suggest?ok, then let's ignore this instead of adding a pile of new code to handle a rare case"
26103,0,"Patch Set 3:(1 comment)> long footer lines seem to be still be soft wrapped, this feels odd. > After commit long footers look ok (one line per footer)Well, the viewer is created with soft-wrapping (SWT.WRAP) and thus any line longer than the whole viewer gets soft-wrapped. I'm not aware of any way to make a SWT.WRAP viewer wrap only parts of its text. The best I can do is make sure that our hard-wrap and our own soft-wrap via the segment listener don't wrap those lines. And I don't like the alternative of dropping SWT.WRAP entirely for the SpellcheckableMessageArea.What do you suggest?"
26107,0,Change has been successfully merged into the git repository by Matthias Sohn
26113,0,Change has been successfully merged into the git repository by Dirk Fauth
26121,0,Change has been successfully merged into the git repository by Marvin Mueller
26126,0,Change has been successfully merged into the git repository by Manoj Palat
26129,0,Patch Set 1:> Doesn't it mean the options being passed by the clients are > ignored?This is in the context of finding the sec types and hence the default options are fine.
26132,1,Patch Set 11: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/992/ : UNSTABLE
26136,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/978/ : UNSTABLE
26139,1,Patch Set 13: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1010/ : UNSTABLE
26142,0,Change has been successfully merged into the git repository by Andrey Sobolev
26144,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/981/ : UNSTABLE
26147,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/976/ : UNSTABLE
26149,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/980/ : UNSTABLE
26151,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/979/ : UNSTABLE
26154,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/989/ : UNSTABLE
26157,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/990/ : UNSTABLE
26162,0,Change has been successfully merged into the git repository by Matthias Sohn
26164,0,"Patch Set 2: Code-Review+2Tests would be good, but would require some refactoring, as the current class is not testable at all. As we plan to fix another BR in the ModelAssembler, I created a BR for adding tests:Bug 480610"
26165,0,Change has been successfully merged into the git repository by Jonas Helming
26171,0,Change has been successfully merged into the git repository by Manoj Palat
26175,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3525/ : UNSTABLE
26178,0,Change has been successfully merged into the git repository by Doug Schaefer
26180,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3523/ : UNSTABLE
26182,0,Change has been successfully merged into the git repository by Doug Schaefer
26185,0,Change has been successfully merged into the git repository by Christian Krause
26187,1,"Patch Set 3:This change is functional, but not entirely ""clean"" yet, for the following reasons:- The modification of the MANIFEST.MF and plugin.xml happens after the original EMF code generation. It would be cleaner to incorporate the necessary changes directly into the EMF code generation step somehow, instead of generating code and immediately patching it.- The XML modification completely changes the format of the XML file regarding white spaces, since it re-exports the entire DOM.- The detection of the correct files happens by checking whether the URI fits the format <something>/plugion.xml and <something>/META-INF/MANIFEST.MF. This happens by String equals() methods, I have not found a nicer solution for this, but it still seems awkward.- The icon for the editor entry is still hardcoded (I have not found a way to extract the icon from the data available at runtime)."
26191,0,Change has been successfully rebased as 6df2788f9c928b262d67fef3b3e338f3321f4899 by Jonas Helming
26193,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1854/ : UNSTABLE
26195,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1855/ : UNSTABLE
26199,0,Change has been successfully merged into the git repository by Andrew Finkbeiner
26207,0,Change has been successfully merged into the git repository by Stephan Herrmann
26211,0,Change has been successfully merged into the git repository by Matthias Sohn
26215,0,Change has been successfully rebased as cf05b210bd4a4ec11e805260da04da572f9865b4 by Doug Schaefer
26217,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3520/ : UNSTABLE
26222,0,Change has been successfully merged into the git repository by Doug Schaefer
26226,0,Change has been successfully rebased as 15a087a3f45d459db6a2f37ead961e56f22d40d8 by Doug Schaefer
26234,0,Change has been successfully cherry-picked as 522dff53927743dbbdb5774d4f6aad219f68ffa7 by Alexandre Montplaisir
26239,0,"Patch Set 2:Also, what happens in windows? I'm hoping cdt will solve this so we won't have to... or we can solve it in cdt too... either way, this is IMO re-inventing the wheel."
26245,0,"Patch Set 2:> I was hoping CDT would handle the ELF parsing on the Java side, but > it seems that it calls the native addr2line too. I agree the ideal > solution would be to do ELF parsing on the Java sideIt's not just about doing it only on the Java side, CDT gives you an abstraction and hides the detail than you need to call addr2line for that particular binary format. If you don't need that much flexibility then that's fine too."
26259,0,Change has been successfully merged into the git repository by Michael Golubev
26262,0,Change has been successfully merged into the git repository by Ernesto Posse
26267,0,Change has been successfully cherry-picked as 03c962176b077efdc05dc436b5d926eff1669a25 by Bernd Hufmann
26271,1,"Patch Set 5:Same here... Sorry I missed that you hadn't put +1 for code review. Pls, let me know if you need me to update something."
26274,0,Change has been successfully cherry-picked as 73f1f3ea23d18b1fae9a8936244df35729af3403 by Bernd Hufmann
26277,0,Change has been successfully merged into the git repository by Megumi Telles
26289,0,Change has been successfully cherry-picked as ce8319b61b7f7220644893ea109a701eca62af2c by Bernd Hufmann
26290,0,Patch Set 5:(6 comments)well that's ok! we'll fix it later!
26294,1,"Patch Set 6:> (6 comments) >  > well that's ok! we'll fix it later!Ahh, I wrongly assumed that you've had already code review +1 this patch, too. I'll fix-up your comments with a separate patch.Sorry about that."
26306,0,Change has been successfully cherry-picked as 5c82e60251ece89be36751f3deb0cc2a49923077 by Alexandre Montplaisir
26312,0,"Patch Set 4: Code-Review+2 Verified+1Thanks for the review. I would have hoped to assign a different factory to each trace object, so you wouldn't have to re-pass the trace object like you have to do now:  trace.getEventFactory().createEvent(trace, blahblah)but doing so was causing other problems, requiring to do super(new Factory(this)) in LttngUstTrace's constructor, which you can't evidently do.The solution here is a nice compromise, and much better than using reflection."
26313,0,Change has been successfully cherry-picked as 8e3764747b89563f868311b458e148d50a92580e by Alexandre Montplaisir
26317,0,"Patch Set 1:> I would _strongly_ suggest making the event factory part of the trace then calling trace.generateEvent or something the like.That sounds like a good approach. That way the constructor call in CtfIterator wouldn't have to worry about the event class.However, in the implementation of the factory would still have to call the constructor through reflection, wouldn't it?"
26322,0,Change has been successfully merged into the git repository by Lars Vogel
26331,0,Change has been successfully cherry-picked as 6ad9d1cb2ddcf98836ff3ee225ce9b363549c8dc by Bernd Hufmann
26337,0,Change has been successfully cherry-picked as b9fff7ad3ad3a4836ed0876d592455b58b82f780 by Bernd Hufmann
26345,0,Patch Set 3:so why is this in tmf.ui? it strikes me as something that should be in analysis... maybe analysis.latency!
26349,0,Change has been successfully merged into the git repository by Lars Vogel
26351,0,Change has been successfully merged into the git repository by Lars Vogel
26355,1,"Patch Set 1:> Stefan, can this lead to uncatched OperationInterruption ExceptionsIt would lead to new OperationCanceledExceptions, but theywould almost certainly be caught. We have top-levelexception handlers almost everywhere to deal with thingslike NullPointerException.There may be some circumstances in which OperationCanceledExceptionis incorrectly treated as an error rather than as cancellation.In the worst case, this may mean an error dialog is shown afterthe user cancels something.The best way to locate such error handling bugs would beto push a patch like this and find out."
26359,0,Change has been successfully merged into the git repository by Andrey Loskutov
26360,0,"Patch Set 2:In case this fix will be applied, please apply it into R4_5_maintenance branch too.Thanks in advance"
26362,0,"Patch Set 1:(1 comment)Andrey, IHMO, it's good patch in sense that we're really need to check getLocation() result for null in most cases.I'd just prefer not to do it twice (see my comment for the line 147)."
26365,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3509/ : UNSTABLE
26368,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3514/ : UNSTABLE
26371,0,Change has been successfully rebased as c44b5705041b73f1dba42ccd07ae1492d6e9729f by Doug Schaefer
26372,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3506/ : UNSTABLE
26384,0,Change has been successfully merged into the git repository by Silenio Quarti
26388,0,Change has been successfully rebased as 89f0a08d773ff2985e98ca75813e3186f6fe4604 by Doug Schaefer
26390,0,Change has been successfully merged into the git repository by Arun Thondapu
26397,0,Change has been successfully merged into the git repository by Matthias Sohn
26403,0,Change has been successfully merged into the git repository by Donald Dunne
26409,0,Change has been successfully rebased as cecb06d5a0493740bac46db67f0334333a32e510 by Ansgar Radermacher
26413,0,Change has been successfully merged into the git repository by Eric Poirier
26418,0,Change has been successfully merged into the git repository by Michael Golubev
26422,0,Change has been successfully cherry-picked as 6b2e9a143f14bbb98c4e6f49fb2dbee5a8999ed0 by Adrian Sacchi
26428,0,Change has been successfully merged into the git repository by Eric Poirier
26437,0,Change has been successfully merged into the git repository by Eric Poirier
26448,0,"Patch Set 14:Overall this looks good but I want to do an in depth review on monday of this. We should plan on going live with this for next Wednesday.The only thing that I can see that is missing in your patch is a link somewhere in site login to access the campaign manager.Once the patch is approved, we will need to make sure to create a 2nd patch that includes all the changes for eclipse.org-common.git"
26470,0,Change has been successfully rebased as 40b9929b81f9439cc1a0c235d20ddbd5c4a4b9ed by vincent lorenzo
26476,0,Change has been successfully rebased as a332d81a6746e6ce7ed2f6ce0b6ddb099c6e60e0 by Johannes Faltermeier
26478,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1868/ : UNSTABLE
26482,0,Change has been successfully cherry-picked as f7f663bb1811e2f3665657c5b9a42c5ca88f25cf by Roland Grunberg
26485,0,Change has been successfully merged into the git repository by Silenio Quarti
26495,0,Change has been successfully rebased as 59f2f1563742aa0d96f60d83912bdaed2b5555da by Ivan Furnadjiev
26503,0,Change has been successfully rebased as 217beb744a95b6e2d2b5eef58e845f562668a48d by Ivan Furnadjiev
26510,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/613/ : UNSTABLE
26512,0,Change has been successfully merged into the git repository by Laurent Goubet
26514,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/616/ : UNSTABLE
26516,0,Change has been successfully merged into the git repository by Florian Barbin
26522,0,Patch Set 4: Code-Review+2 Verified+1Perfect !
26524,0,Change has been successfully rebased as 57c6528141a7275b0208223924946c4dcb18a96f by Benoit Maggi
26528,1,Patch Set 1:I got an exception saying that expansion model are invalid for example there is a reference to org.eclipse.papyrus.sysml14.diagram.blockdefinition.factory.OperationPortViewFactory
26529,1,Patch Set 1:This is another problem not due to this contribution
26536,0,Change has been successfully merged into the git repository by Silenio Quarti
26538,1,Patch Set 1:IMPORTANT: The next patch set #2 is expected to *fail*!Why? The only change between patch set 1 and 2 is the activation of the baseline-repository which will be responsible for pulling in the unmodified bundles from the RAP 3.0.1 (Mars.1) release. These bundles are signed which will cause some failures of unit tests.
26543,0,Change has been successfully merged into the git repository by Markus Knauer
26545,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/625/ : UNSTABLE
26551,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/626/ : UNSTABLE
26554,0,Change has been successfully merged into the git repository by Yvan Lussaud
26557,0,Change has been successfully merged into the git repository by Juan Cadavid
26560,0,Change has been successfully merged into the git repository by Remi Schnekenburger
26563,0,Patch Set 1:(3 comments)Thanks for the prompt review Elena ÔÇô much appreciated.
26566,0,Change has been successfully merged into the git repository by Elena Laskavaia
26571,0,Change has been successfully merged into the git repository by Patrick Tessier
26577,0,Change has been successfully merged into the git repository by Guy Perron
26579,1,"Patch Set 2: Code-Review-1(3 comments)Looks good overall, some minor concerns to be adressed"
26587,0,Change has been successfully cherry-picked as 18c18ee0c8ccaeac7eb9eb61c9d4b09e98b624ed by Bernd Hufmann
26600,0,"Patch Set 1:Looks great! But I wonder if SegmentAspect is the correct name. We could have ""time range tables"" (not sure what the actual name is for those yet) that are not backed by a segment store."
26602,0,"Patch Set 2: Code-Review-1The segmentstore package should not contain anything about UI or presentation, it is only for the data storage structure, just like o.e.t.statesystem. The notion of ""aspect"" should remain in TMF.This brings up a good point though, if instead of a ""ISegement table"" we should introduce a new TMF interface for segements/time ranges (maybe re-use the TmfTimeRange?). The the time range tables could use TmfTimeRanges, no matter if they come from SegmentStore segments, HTIntervals, or other type of time ranges."
26603,1,"Patch Set 2:> The segmentstore package should not contain anything about UI or > presentation, it is only for the data storage structure, just like > o.e.t.statesystem. The notion of ""aspect"" should remain in TMF. > It's debatable but I'm ok to move it to TMF. > This brings up a good point though, if instead of a ""ISegement > table"" we should introduce a new TMF interface for segements/time > ranges (maybe re-use the TmfTimeRange?). The the time range tables > could use TmfTimeRanges, no matter if they come from SegmentStore > segments, HTIntervals, or other type of time ranges.It makes sense to re-use TmfTimeRange for that."
26605,1,"Patch Set 9:> @Alex, for time range tables, shouldn't we have a TimeRangeAspect?Sure, if we have TimeRangeTable then it makes sense to have TimeRangeAspect, which would help fill the tables.> A segment can be also a memory segment or even version ranges.Yes.But the latency view and corresponding time range synch signals assume the segments are time range. These are ""time range views"" more than they are ""segment views"". Hence why I'm warning against hard-coding them to ISegment."
26617,0,Change has been successfully cherry-picked as 360bba4aa080439e6eedd41d5933eef852c1af58 by Bernd Hufmann
26620,0,Change has been successfully cherry-picked as 152630e041c38fc5b34de3c03b67a0fc6613a247 by Bernd Hufmann
26640,0,Change has been successfully rebased as f17c27f6b74a8aa6987f236b645f21fec7227ac0 by Patrick Tessier
26644,0,Change has been successfully cherry-picked as 424872b0da56c35a7b2c898963857d679a9bf72a by Andi Bur
26648,0,Change has been successfully rebased as 31543f45918e421e6dead5b848024ee171e9481b by Remi Schnekenburger
26652,0,Change has been successfully merged into the git repository by Jeremie Bresson
26656,0,Change has been successfully rebased as 1e4b481b05c2c242f5fb0593d2e03e37940748a6 by Camille Letavernier
26660,0,Change has been successfully rebased as 4bac916407c0f2c1bdc5ee39fb1fa06111e0b609 by vincent lorenzo
26663,0,Change has been successfully merged into the git repository by vincent lorenzo
26674,0,Change has been successfully merged into the git repository by Remi Schnekenburger
26676,0,Change has been successfully merged into the git repository by Remi Schnekenburger
26686,0,Change has been successfully merged into the git repository by Remi Schnekenburger
26689,0,Change has been successfully merged into the git repository by Juan Cadavid
26692,0,Change has been successfully cherry-picked as d77848d28dfbd936ef251d74d854a9fcd617a5e8 by Andi Bur
26695,0,Change has been successfully rebased as fd695f92c203d78e8401131d456b3355d5dde25e by Remi Schnekenburger
26704,0,Change has been successfully rebased as 4d07d5cc4d2c44a629adb6cdf23f3e8a2646bdc9 by Remi Schnekenburger
26710,0,Change has been successfully rebased as 9a806da9e349cee12d3a5bb498530a161a723acf by Remi Schnekenburger
26718,0,Change has been successfully rebased as 8a007af778628eb286cd1f1a6d9d5de9014638fc by Remi Schnekenburger
26721,0,Change has been successfully merged into the git repository by Alexander Kurtakov
26725,0,Change has been successfully rebased as e02a89ce75b6c0946338ed76954966e4a6e1a54d by Johannes Faltermeier
26729,0,Change has been successfully merged into the git repository by Alexander Kurtakov
26739,0,Change has been successfully merged into the git repository by Laurent Delaigue
26741,0,Patch Set 3: Code-Review+1(7 comments)Good for me.I have also checked that everything is operational on the rcp instance.go one.Merge it.
26744,0,Change has been successfully merged into the git repository by Benoit Maggi
26751,0,Change has been successfully merged into the git repository by Laurent Delaigue
26757,0,Change has been successfully merged into the git repository by Benoit Maggi
26762,0,Change has been successfully rebased as 58b3a51cb2ee3795401772e9364c298cfceb0058 by Shuai Li
26771,0,"Patch Set 4:(4 comments)Thanks for your review, Laurent!"
26773,0,Change has been successfully merged into the git repository by Laurent Delaigue
26777,0,"Patch Set 1:I added the test models into an own folder. I prefer having them in folders, as they don't use so much space in the src folder of the package explorer this way, but I guess this is a matter of taste. If you agree, I can also move the other examples (e.g., o.e.e.compare.diagram.papyrus.tests.resourceattachmentchange.move.data.case001.commit1). If you disagree, I can also move the added example models into the src folder.Thanks!"
26779,0,Change has been successfully merged into the git repository by Laurent Delaigue
26786,0,Change has been successfully merged into the git repository by Eric Poirier
26788,0,Change has been successfully merged into the git repository by Stephanie Chafe
26794,0,Change has been successfully merged into the git repository by Bartlomiej Laczkowski
26798,0,Change has been successfully merged into the git repository by Stefan Xenos
26802,0,Change has been successfully merged into the git repository by Niraj Modi
26807,0,Change has been successfully merged into the git repository by Lorenzo Bettini
26812,0,Change has been successfully merged into the git repository by Lorenzo Bettini
26818,0,Change has been successfully merged into the git repository by Stefan Xenos
26820,1,"Patch Set 1: Code-Review-1This does not work either, because the the classes are not found.But it combines the latest patches from Thomas Watson and me.Unfortunately this solution does not find the classes properly."
26821,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/6988/ : UNSTABLE
26826,0,Change has been successfully merged into the git repository by Simon Scholz
26830,0,Change has been successfully merged into the git repository by Silenio Quarti
26835,0,Change has been successfully merged into the git repository by Silenio Quarti
26839,0,Change has been successfully rebased as 29b7fa982f12e768669225af4e7a16d47ad81e38 by Juan Cadavid
26845,0,Change has been successfully merged into the git repository by Stefan Xenos
26852,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/3020/ : UNSTABLE
26860,0,Change has been successfully cherry-picked as df99da276340be2e6a1f66cd5f35ef3b4865ef15 by Judith Gull
26863,0,Change has been successfully merged into the git repository by Lars Vogel
26866,0,Change has been successfully merged into the git repository by Lars Vogel
26868,1,"Patch Set 1:The PerfPlugin object has been used to store information like working directory and perf.data path. PerfCore seems more like a place to put helper functions. So If you need to save current IProject then you have to use PerfPlugin.In a nutshell, the fix is to replace the call to openEditorAndSelect to use the implementation that consider IProject (uses remote proxy underneath). That's fine but, it worries me because you are leaving a broke implementation of openEditorAndSelect which might have been used somewhere else."
26871,0,Change has been successfully cherry-picked as 762156ab9605074aef3d84454fd27012fad767a2 by Wainer dos Santos Moschetta
26877,0,Change has been successfully rebased as 8c8521cd389fc3c9300664802f05c4a239666c65 by Dawid Pakula
26880,0,Change has been successfully merged into the git repository by Jacques Bouthillier
26884,0,Change has been successfully merged into the git repository by Guy Perron
26885,1,"Patch Set 2: Code-Review-1@noreference is good enough for methods but for a class one must also add @noextend, so that clients who subclass are warned.As per our removal process, the deprecation comment must include a link to the bug report where adopters can leave feedback."
26891,1,Patch Set 1: Code-Review+1(1 comment)Looks good but I would add the bug number.
26892,1,"Patch Set 1:I would also avoid dates in comments, as we may decide that we delete it later. Maybe better.----------@noreference This API will be deleted in a future release. See bug xxxxx for details.-----------"
26898,0,Change has been successfully merged into the git repository by Alexander Kurtakov
26901,0,Change has been successfully merged into the git repository by Lars Vogel
26906,0,Change has been successfully rebased as e8fd4428329ab52796d61855a32d25589f028871 by Dawid Pakula
26909,0,"Patch Set 2:Thanks Amr, looks great!"
26911,0,Change has been successfully rebased as 5a5dbcb7912974e4349a50e8352b9a255cc5f023 by David Green
26916,0,Change has been successfully pushed.
26918,0,Change has been successfully pushed.
26920,0,Change has been successfully pushed.
26922,0,Change has been successfully merged into the git repository by Lars Vogel
26927,0,Change has been successfully merged into the git repository by Michael Wenz
26931,1,Patch Set 1: Code-Review-1Change single click to double click even in the case where the editor is opened. Having the two behaviors is really disturbing.
26934,0,Change has been successfully merged into the git repository by Jacques Bouthillier
26940,0,Change has been successfully merged into the git repository by Lars Vogel
26944,0,Change has been successfully merged into the git repository by Alex Panchenko
26948,0,Change has been successfully merged into the git repository by Greg Watson
26951,0,Change has been successfully merged into the git repository by Greg Watson
26954,0,Change has been successfully merged into the git repository by Greg Watson
26959,0,Change has been successfully cherry-picked as bed47fb6705fcd89712b51c3ceb0c58f67d1c911 by Roland Grunberg
26975,0,"Patch Set 4: Code-Review-2(7 comments)There is I think one or two major flaws here.After reviewing all that, I wonder if what we really need is a Graph plug-in. It seems to me that what we need is rather some way of caching data to make it accessible from one component to another. Let's discuss all this!"
26982,0,Change has been successfully merged into the git repository by Axel RICHARD
26987,0,Change has been successfully merged into the git repository by Jeremie Bresson
26988,1,Patch Set 5: Code-Review-1I'm not sure this is the best way to go after comments in the GTK (gnome.org) bug.
26989,1,Patch Set 5:> I'm not sure this is the best way to go after comments in the GTK > (gnome.org) bug.Shouldn't we still handle this case on the SWT side?
26990,1,"Patch Set 5:> > I'm not sure this is the best way to go after comments in the GTK > > (gnome.org) bug. >  > Shouldn't we still handle this case on the SWT side?I think it could be handled better on the SWT, potentially. I just need some time to verify. I'll remove the -1 if it this patch turns out to be OK."
26991,0,"Patch Set 5:Just a quick update: I'm experimenting using gtk_widget_get_preferred_size to clamp the width, just for Group. Instead of hard-coding the minimum. I'm hoping to push a new patch in the next couple of days."
26995,0,"Patch Set 6: Code-Review+1> Eric, are you OK with this new version of the patch? I think it's a > bit better because it's not hard-coding the padding.Yes this looks good. Using gtk_widget_get_preferred_size() is a pretty standard convention across SWT. I've tested on Gtk3.16.6 and it solves the issue for me."
27000,0,Patch Set 2:Thanks a lot for the thorough testing!I'll make sure to make another patch for the version guard once (if) it's fixed in GTK.
27004,0,Change has been successfully merged into the git repository by Alexander Kurtakov
27007,0,Change has been successfully merged into the git repository by Jacques Bouthillier
27011,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
27013,0,Change has been successfully merged into the git repository by Alexander Kurtakov
27019,0,Change has been successfully merged into the git repository by Ralph Mueller
27021,0,"Patch Set 1: Code-Review+2 Verified+1Hi Daniel,it looks good. I will make some minor improvements. You'll see them after pulling the update."
27022,0,Change has been successfully merged into the git repository by Philip Wenig
27024,0,Change has been successfully merged into the git repository by Lars Vogel
27032,0,Change has been successfully merged into the git repository by Alexander Kurtakov
27036,0,Change has been successfully merged into the git repository by Lars Vogel
27041,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
27044,0,Change has been successfully merged into the git repository by Alexander Kurtakov
27047,0,Change has been successfully merged into the git repository by Alexander Kurtakov
27050,0,Change has been successfully merged into the git repository by Michael Wenz
27053,0,Change has been successfully rebased as 921454fb8472a123fa7bf96d0ccc1cdd7a90b4e3 by Patrick Tessier
27060,0,Change has been successfully rebased as 0cda80f083938ef07514e8e97633e76ae0a6f3c0 by Patrick Tessier
27063,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
27066,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
27069,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
27072,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
27075,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
27078,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
27081,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
27084,0,Change has been successfully merged into the git repository by Uwe Stieber
27088,0,Change has been successfully merged into the git repository by Arnaud Cuccuru
27092,0,Patch Set 14: Code-Review+2Great Job!
27093,0,Change has been successfully merged into the git repository by Benoit Maggi
27096,1,Patch Set 7:Move all class related to view factory in an internal package(expose the package with ;x-internal:=true)
27098,1,"Patch Set 3:> Hi Arun Thondapu, >  > Did you comment the correct patch ? > If so can you precise your comment, because I don't get what's > wrong here. >  > Regards, > Benoit MAGGII meant that the bug id 478428 referred in the synopsis for this gerrit review is wrong, 478428 is an SWT bug with the following synopsis :- crashing after opened a FileDialog or DirectoryDialog in Ubuntu14.04This causes the link to this gerrit review to appear on the bug which is misleading."
27099,1,"Patch Set 3: Code-Review-1Hi,Thx for reporting the problem.There is indeed a typo problem 478428 vs 478248 (hard to see)The Bug 478428 in the header is correct (The one is usually use)https://bugs.eclipse.org/bugs/show_bug.cgi?id=478428But the Bug in the task Url (from Mylyn) is incorrect :https://bugs.eclipse.org/bugs/show_bug.cgi?id=478248Fran├ºois will fix that in the next patch so it shouldn't bother you any more.Regards,Benoit"
27101,1,Patch Set 2:The bug id seems to be wrongly mentioned in the description...
27109,1,Patch Set 10: Code-Review-1Please patch the numberThx for reporting the problem.There is indeed a typo problem 478428 vs 478248 (hard to see)The Bug 478428 in the header is correct (The one is usually use)https://bugs.eclipse.org/bugs/show_bug.cgi?id=478428But the Bug in the task Url (from Mylyn) is incorrect :https://bugs.eclipse.org/bugs/show_bug.cgi?id=478248
27113,0,"Patch Set 11: Code-Review-1(1 comment)The compartment is working fine, but I have a duplicated ""attribute"" compartiment."
27118,0,Change has been successfully cherry-picked as 686d200fa3f3a0e91a4fe04bdd0a7eaed6b9704c by Alexander Kurtakov
27124,0,Change has been successfully merged into the git repository by Juan Cadavid
27128,0,Change has been successfully rebased as ee19dee4643396f29d7c703144cdb301eccb6d2b by Patrick Tessier
27133,0,Change has been successfully merged into the git repository by Christian Pontesegger
27136,0,Change has been successfully merged into the git repository by Christian Pontesegger
27140,0,Change has been successfully merged into the git repository by Axel RICHARD
27142,1,"Patch Set 1:Sorry, something went wrong, I commited too much into this change. New patch set coming up soon."
27150,1,"Patch Set 5: Code-Review-1 Verified+1Hi Michael ! Thanks for this contribution. I'm sorry but we now have a org.eclipse.emf.compare.egit.ui plugin and I think the files introduced by this contribution need to be put in this new plugin. Otherwise, it's ok for me. Can you move the files in the new plugin please ? Thank you."
27155,0,Change has been successfully merged into the git repository by Joao Barata
27159,0,Change has been successfully merged into the git repository by Christian Pontesegger
27164,0,"Patch Set 2:> (5 comments) >  > Hi Jonah, great commit!  We would need some small changes, 1 > necessary, others optional: >  > 1) Some script languages (like JS) do not support method > overloading. So you cannot @wrap multiple methods with the same > name. The last one wrapped will override the first one. You either > need to find different names or wrap just one of those methods and > use Object as an input parameter. Using instanceOf checks you might > delegate calls to your original methods (which are not wrapped in > this case). Your current contribution might still work in a lot of > cases, but this is by pure chance and might cease to work in a > future version of Rhino.I have done this. I have asked above already about where the limitation comes from as Rhino is documented as supporting overloading.Won't a lack of overloading support significantly impact the ability to use any arbitrary Java object, where overloading is quite common?It may be best to move this part of the conversation to ease-dev mailing list? > 2) as your module is stateless, you might use static methods only. > This will allow me to call these methods without creating an > instance of the module in the futureChanged to statics  > 3) We create dedicated inline documentation for modules. To link to > other modules/wrapped methods use @module instead of @link. eg > {@module #myMethod} (without signature).I have made the changes. > 4) If you like you might also move your method directly to > modules.platform as it would definitely fit there. Otherwise you > need to check in project specific formatter and save actions as we > did for the other projects.I have moved it, makes the contribution smaller and easier to manage that way too.  > 5) I especially like your usage of the completion provider. You > might want to use colors there, See the comment in the code for a > link to examples.Colours will have to be for another day. > Great contribution, thanks!Thanks for the review. I trust I have addressed all the issues. Let me know if there is anything else I can do."
27165,0,"Patch Set 2: Code-Review+2great contribution, thanks Jonah!"
27166,0,Change has been successfully merged into the git repository by Christian Pontesegger
27168,0,"Patch Set 1: Code-Review-1(5 comments)Hi Jonah, great commit!  We would need some small changes, 1 necessary, others optional:1) Some script languages (like JS) do not support method overloading. So you cannot @wrap multiple methods with the same name. The last one wrapped will override the first one. You either need to find different names or wrap just one of those methods and use Object as an input parameter. Using instanceOf checks you might delegate calls to your original methods (which are not wrapped in this case). Your current contribution might still work in a lot of cases, but this is by pure chance and might cease to work in a future version of Rhino.2) as your module is stateless, you might use static methods only. This will allow me to call these methods without creating an instance of the module in the future3) We create dedicated inline documentation for modules. To link to other modules/wrapped methods use @module instead of @link. eg {@module #myMethod} (without signature).4) If you like you might also move your method directly to modules.platform as it would definitely fit there. Otherwise you need to check in project specific formatter and save actions as we did for the other projects.5) I especially like your usage of the completion provider. You might want to use colors there, See the comment in the code for a link to examples.Great contribution, thanks!"
27169,0,"Patch Set 1:Hi Christian, Thanks for your feedback. I will review and update the commit soon."
27173,0,Change has been successfully merged into the git repository by David Williams
27183,0,"Patch Set 9: Code-Review+1This is a major improvement over what was originally submitted, let's merge it!"
27184,0,Change has been successfully cherry-picked as dc62dbee303b377f5d7a502f712090a37db0b435 by Patrick Tasse
27186,1,Patch Set 7: Code-Review-1(5 comments)Some new problems found. Sorry for not noticing earlier.
27188,0,"Patch Set 5: Code-Review+1 Verified+1(1 comment)This looks good to me, Patrick what do you think?"
27195,0,"Patch Set 1: Code-Review-1(12 comments)I have put up some minor comments, please look at them, I would also like to know how to test it. I cannot find the wizard!"
27197,0,Patch Set 1:thanks! I'll look into it now :)
27198,0,"Patch Set 1: Verified+1It 'works' I will need to test it more thouroughly with proper traces, but for the moment my comments still stand. Thanks for the explanation"
27201,0,Patch Set 2: Code-Review-1headers. :)
27213,1,"Patch Set 4: Code-Review+2 Verified+1This was a trivial rebase, patrick's +2/+1 is transitive."
27214,0,Change has been successfully cherry-picked as a6ee8643e4056511fed95a99ac57fdb2cebc2eaf by Matthew Khouzam
27222,0,Change has been successfully cherry-picked as d948686fc3c999fc877c747180d64eeb7a338694 by Matthew Khouzam
27230,0,Change has been successfully merged into the git repository by Matthias Sohn
27233,0,Change has been successfully merged into the git repository by Lorenzo Bettini
27237,0,Change has been successfully merged into the git repository by Guy Perron
27250,0,Change has been successfully merged into the git repository by Guy Perron
27265,0,Change has been successfully merged into the git repository by Guy Perron
27266,1,"Patch Set 5: Code-Review+1Even though we have issues, we need to move forward. We'll capture left over work in a subsequent bug."
27268,0,Change has been successfully merged into the git repository by Guy Perron
27276,0,Change has been successfully merged into the git repository by Lars Vogel
27282,0,Change has been successfully merged into the git repository by Guy Perron
27288,1,"Patch Set 1:Hmm. OK, it's kind of awkward to do an artistic review, but I don't really like the white on black with no use of transparency...I like the other icon for scattergraph, how about something that hints at a sorted table, like horizontal bars of decreasing length?"
27291,0,Change has been successfully cherry-picked as 0534d4333d851350105ba92f69192da03da68cc7 by Matthew Khouzam
27295,0,Change has been successfully merged into the git repository by Guy Perron
27301,0,Change has been successfully merged into the git repository by Lars Vogel
27307,0,Change has been successfully merged into the git repository by Guy Perron
27309,0,Change has been successfully cherry-picked as 1a1555db9491cc2632d8ef51d24480c327acc23f by Wainer dos Santos Moschetta
27311,1,"Patch Set 2: Code-Review-1Bad news... this time I tried to profile with perf but it failed to parse the version.Please, take a look at PerfCore#getPerfVersion(). That method has processed the results of perf --version before of instantiate PerfVersion. In this case, PerfVersion receives a version string without qualifier (e.g. ""4.0.8"") and then it fails to parse."
27316,1,"Patch Set 1: Code-Review-1(6 comments)I mad some comments, a few cosmetics suggestions.But what drove to -1 is it fails to parse ""4.0.8-200.fc21.x86_64"". Added the testcase in for you to reproduce."
27321,0,Change has been successfully merged into the git repository by Jacques Bouthillier
27327,0,Change has been successfully merged into the git repository by Torkild Resheim
27340,0,Change has been successfully merged into the git repository by Jacques Bouthillier
27357,0,Change has been successfully merged into the git repository by Megumi Telles
27361,0,Change has been successfully merged into the git repository by Jacques Bouthillier
27365,0,Change has been successfully cherry-picked as 81d8155089582faf651d4a1aecd969957d60ec72 by Matthew Khouzam
27368,0,Change has been successfully merged into the git repository by Sam Davis
27371,0,Change has been successfully cherry-picked as a037196c5de26ca835024f310152b1cdebe7c5cd by Stephan Merkli
27375,0,Change has been successfully merged into the git repository by Pierre-Charles David
27384,0,Change has been successfully merged into the git repository by Lorenzo Bettini
27394,0,Change has been successfully merged into the git repository by Eugen Neufeld
27400,0,Change has been successfully merged into the git repository by Eric Poirier
27411,0,Change has been successfully merged into the git repository by Eric Poirier
27415,0,Change has been successfully merged into the git repository by Denis Roy
27419,0,Change has been successfully merged into the git repository by Eric Poirier
27427,0,Change has been successfully merged into the git repository by Christian Pontesegger
27430,0,Change has been successfully merged into the git repository by Christian Pontesegger
27435,0,Change has been successfully merged into the git repository by Denis Roy
27438,0,Change has been successfully merged into the git repository by Alexander Kurtakov
27448,1,"Patch Set 1:I think it would be a good idea that learn a bit more about JFace viewers (and this bug is a good starting point, since it is limited in scope)."
27459,0,Change has been successfully merged into the git repository by Johannes Dorn
27463,0,Change has been successfully rebased as 1e3db623d8ece0d6f5471f9f7a992119cd4f0a10 by Michal Niewrzal
27466,0,Change has been successfully cherry-picked as 8249e9291a1450f6e8cf1e9585a6a13b1c71196f by Judith Gull
27469,0,Change has been successfully merged into the git repository by Christian Pontesegger
27472,0,Change has been successfully merged into the git repository by Christian Pontesegger
27475,0,Change has been successfully merged into the git repository by Lorenzo Bettini
27477,0,Change has been successfully merged into the git repository by Lars Vogel
27479,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1806/ : UNSTABLE
27482,0,Change has been successfully rebased as fbff32af77d759359987c07f57587a208b26e7f3 by Eugen Neufeld
27487,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1805/ : UNSTABLE
27490,0,Change has been successfully rebased as 782fff5a6f13a27b33ec628f4227428a8550cf5b by Eugen Neufeld
27493,0,Change has been successfully merged into the git repository by Axel RICHARD
27496,0,Change has been successfully merged into the git repository by Lorenzo Bettini
27498,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1802/ : UNSTABLE
27501,0,Change has been successfully rebased as 1ae2642e9ba1a6e9585776bdff8b04eb99df66a5 by Eugen Neufeld
27507,0,Change has been successfully merged into the git repository by Eugen Neufeld
27511,0,Change has been successfully rebased as 7dc841bb8d1138f05158a8fb85e3c3bf428b6c00 by Johannes Faltermeier
27513,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1801/ : UNSTABLE
27515,0,Change has been successfully merged into the git repository by Johannes Faltermeier
27518,0,Change has been successfully merged into the git repository by Christian Pontesegger
27519,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/packaging/job/epp-logging.gerrit/376/ : UNSTABLE
27522,0,Change has been successfully merged into the git repository by Marcel Bruch
27523,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/packaging/job/epp-logging.gerrit/377/ : UNSTABLE
27531,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/packaging/job/epp-logging.gerrit/375/ : UNSTABLE
27532,0,Change has been successfully merged into the git repository by Marcel Bruch
27535,0,Change has been successfully merged into the git repository by Christian Pontesegger
27537,0,Change has been successfully merged into the git repository by Lars Vogel
27549,0,Change has been successfully merged into the git repository by Lars Vogel
27553,0,Change has been successfully merged into the git repository by Marvin Mueller
27556,0,Change has been successfully merged into the git repository by Christian Pontesegger
27559,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/packaging/job/epp-logging.gerrit/373/ : UNSTABLE
27561,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/packaging/job/epp-logging.gerrit/370/ : UNSTABLE
27567,0,Change has been successfully merged into the git repository by Marcel Bruch
27568,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/packaging/job/epp-logging.gerrit/374/ : UNSTABLE
27572,0,Change has been successfully merged into the git repository by Marcel Bruch
27576,0,Change has been successfully merged into the git repository by Lars Vogel
27579,0,Change has been successfully merged into the git repository by Mickael Istria
27588,0,Change has been successfully cherry-picked as bf067b63650508b1e975b6d06557c9c2a45f26d0 by Alexander Kurtakov
27593,0,Change has been successfully merged into the git repository by Markus Tiede
27605,0,Change has been successfully merged into the git repository by Angel Avila
27608,0,Change has been successfully merged into the git repository by Dawid Pakula
27611,0,Change has been successfully cherry-picked as 90669899a6a984927ad47bb2b43560d520aec68b by Marc-Andre Laperle
27614,0,Change has been successfully cherry-picked as 405d2f8e3fdf72b60345c8c0a4c47f3a4e2de22f by Jeff Johnston
27618,0,Change has been successfully cherry-picked as c41892a78fcbf227a094cc966ca0864bbb291664 by Marc-Andre Laperle
27624,0,Change has been successfully cherry-picked as 150ff27622615c8d615628cf4cec59a862039d3f by Marc-Andre Laperle
27626,0,Patch Set 2:(2 comments)great catch
27628,0,"Patch Set 4:Just to make it clear, for the case of the scatter chart, I will also investigate as to why the values were set not in order because other places in the code could expect them in order. In any case, the view alignment code should handle this properly independently."
27631,0,Change has been successfully cherry-picked as 9746f128efe34cc605dd103ceecd6e1d8d304f79 by Marc-Andre Laperle
27636,0,Change has been successfully cherry-picked as 8ef12bd412e200f9189d62b7cf611c07f0c78404 by Marc-Andre Laperle
27639,0,Change has been successfully merged into the git repository by Stephan Herrmann
27642,0,Change has been successfully cherry-picked as 542abf4706a5ec24b2b92a4a817f0b57ef38d434 by Marc-Andre Laperle
27644,0,Patch Set 1: Code-Review+2 Verified+1let's do this!Worked on the first try. :)
27648,0,Change has been successfully cherry-picked as 389bf1772a836360cc22d81e33af7ee6b660eb49 by Marc-Andre Laperle
27658,0,Change has been successfully cherry-picked as 4c1b868c66cefd0f96a3dc5bc94ed1b8af1bd93c by Marc-Andre Laperle
27661,0,Change has been successfully merged into the git repository by Lars Vogel
27667,0,Change has been successfully merged into the git repository by Matthias Sohn
27669,0,Patch Set 1: Code-Review-1(1 comment)Thanks for fixing it.
27679,0,Change has been successfully merged into the git repository by Donald Dunne
27685,0,Change has been successfully merged into the git repository by Lars Vogel
27689,0,Change has been successfully merged into the git repository by Eric Poirier
27697,0,Change has been successfully cherry-picked as be51c6e5f495bfe1f9db7db8de1cad35d58f4073 by Marc-Andre Laperle
27700,0,Change has been successfully cherry-picked as ad4f175641b383080266161da2362d716c6fe560 by Marc-Andre Laperle
27703,0,Change has been successfully cherry-picked as a5c528ddc89b7cdce5337f308ffac9e54cf98024 by Marc-Andre Laperle
27706,0,Change has been successfully cherry-picked as 9d32932969eb00dc26a58b793588f4dac4ec0335 by Marc-Andre Laperle
27709,0,Change has been successfully cherry-picked as aa2030b584446dc561c56b8c1e2e7b6c1240ff84 by Marc-Andre Laperle
27712,0,Change has been successfully cherry-picked as 2b4b46975755e82dd0d6ee07b06abf6f97211851 by Marc-Andre Laperle
27715,0,Change has been successfully cherry-picked as beac09c6b8f90a97d8a56e1411df754646a5b08c by Marc-Andre Laperle
27717,1,"Patch Set 2:I did not bother with tests bundles because they don't need to be translated, on top of that we want to remove the swt.bot bundles altogether.As for the ui.tests, since the plugin.properties was there, I reverted the changes to use it."
27719,0,Change has been successfully merged into the git repository by Jacques Bouthillier
27729,0,Change has been successfully merged into the git repository by Ernesto Posse
27735,0,Change has been successfully merged into the git repository by Jacques Bouthillier
27743,0,Change has been successfully cherry-picked as cafbfe7e8e5c2b506ca3837eb4f4d60e6a772dc6 by Marc-Andre Laperle
27747,0,Change has been successfully cherry-picked as 0336f98104b9ba65ae5793efb4adfe51eb8e56f1 by Marc-Andre Laperle
27750,0,Change has been successfully merged into the git repository by Jacques Bouthillier
27757,0,Change has been successfully cherry-picked as 5dd0ebfe8bafd7b522ff986b70e19b90c8c0b239 by Marc-Andre Laperle
27762,0,Change has been successfully merged into the git repository by Sergey Prigogin
27766,0,Change has been successfully rebased as 9aa72d4a44be383d6837787657a4cfaa8cb8d3d7 by Marc-Andre Laperle
27770,0,Change has been successfully merged into the git repository by Mark Macdonald
27773,0,Change has been successfully merged into the git repository by Christian Krause
27779,0,Change has been successfully merged into the git repository by Jonas Helming
27785,0,Change has been successfully merged into the git repository by Cedric Brun
27792,0,Change has been successfully merged into the git repository by Lars Vogel
27795,0,Change has been successfully merged into the git repository by Matthias Sohn
27799,0,Change has been successfully merged into the git repository by Lars Vogel
27804,0,Change has been successfully merged into the git repository by Lars Vogel
27807,0,"Patch Set 1: Code-Review+1I'm all for such a change. Despite I didn't notice a major benefit in performance (relatively to the 15min full build), it's also a good change in term of code quality.However, could you please add yourself to the contributors in the class headers?"
27808,1,"Patch Set 1:> Despite I didn't notice a major benefit in performance (relatively to the 15min full build)To be honest, this wasn't about speeding up the full build, but rather when running the tests manually, watching all the dialogs fly by, then getting worried (or impatient) when everything freezes for 5 seconds... ;)"
27811,0,Change has been successfully merged into the git repository by Mickael Istria
27814,0,Change has been successfully merged into the git repository by Guy Perron
27816,0,Change has been successfully merged into the git repository by Stephanie Chafe
27823,0,Change has been successfully rebased as e1f634fe50f9d796e980f9443577c5979b4fcf76 by Charles Rivet
27826,0,Change has been successfully rebased as c8fe3f75c222f2857d32c8df8f1a941dedcf3d00 by Camille Letavernier
27834,0,Change has been successfully merged into the git repository by Johannes Dorn
27837,0,"Patch Set 1:About API and versions, I believe the best is to first process https://git.eclipse.org/r/#/c/56882 and then rebase this change and add it @since 2.4 comments."
27840,0,Change has been successfully merged into the git repository by Mickael Istria
27845,0,Change has been successfully merged into the git repository by Jacques Bouthillier
27847,1,Patch Set 1:(1 comment)Gerrit is failing because a typo problem in the id (replace S by s)I added Patrick in review so he answers your concern in the bugs
27850,0,Change has been successfully merged into the git repository by Patrick Tessier
27852,0,"Patch Set 2:Here my remarks:1/ l39:  Check call to super.getBeforeMoveCommand() that should be super.getAfterMoveCommand() instead.2/ l74: would be better to use a variable to store result of ViewUtil.getViewContainer(view).Otherwise, looks good to me. Provide the expected result."
27856,0,Change has been successfully rebased as 2053458f5d43ffec87406bf3ab963591ce2eaf37 by vincent lorenzo
27859,0,Patch Set 3:(1 comment)-Please see my comment of the file elementtypesconfigurations  - it works fine in my workspace
27863,0,Change has been successfully rebased as 48118962c332c5ab550d78731dc6f8b9001aca2d by vincent lorenzo
27868,0,Change has been successfully rebased as b946647cc77a0184dfb7d62ed11047d562712454 by Juan Cadavid
27871,0,Patch Set 1:(1 comment)Thanks for your review! Will upload a PS with your recommended changes.
27875,0,Change has been successfully merged into the git repository by Axel RICHARD
27878,1,Patch Set 2:Did I misunderstand you? ;) What exactly is wrong?
27879,0,"Patch Set 2:Stefan, Yes I think you misunderstood me :) The check of the disposed state of the control should be done in the refreshTitle() method as I proposed, not in the internalRefresh() method. See my last comment on patch set 2. Thank you !"
27883,0,Change has been successfully rebased as 139e8a6d967a87f7b2534deeec42473d4e99dd69 by Marc Dumais
27887,0,Change has been successfully merged into the git repository by Alex Panchenko
27889,1,"Patch Set 1:Sorry Alex, I am very newbie working with git. So I had to create this new code change and abandon the other, thanks for your help."
27893,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
27895,0,Change has been successfully merged into the git repository by Jan Sievers
27897,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
27899,0,Change has been successfully merged into the git repository by Jan Sievers
27902,0,Change has been successfully merged into the git repository by vincent lorenzo
27908,1,Patch Set 1: Code-Review-1 Verified-1Build Unstable http://hudson.eclipse.org/modisco/job/org.eclipse.modisco-master-releasetrain-gerrit/158/ : UNSTABLE
27910,0,Change has been successfully merged into the git repository by Gregoire Dupe
27914,0,Change has been successfully merged into the git repository by Dawid Pakula
27917,0,Change has been successfully merged into the git repository by Lars Vogel
27920,0,Change has been successfully merged into the git repository by Lars Vogel
27923,0,Change has been successfully merged into the git repository by Jacques Bouthillier
27927,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/479/ : UNSTABLE
27932,0,Change has been successfully merged into the git repository by Laurent Goubet
27943,0,Change has been successfully rebased as 987f3c27af4f8993226248e19d7822f8f9c8751f by Bartlomiej Laczkowski
27950,0,Change has been successfully rebased as b7ac71e7fcfcc879bebd20dc89cd3ca45fc53dca by Patrick Tessier
27956,0,Change has been successfully merged into the git repository by Patrick Tessier
27960,0,Change has been successfully rebased as 901348d036c37852f2e85f2bb01c5ed105b62cd0 by Michal Niewrzal
27963,0,Change has been successfully merged into the git repository by Michael Golubev
27967,0,Change has been successfully rebased as f8d3cf62bd7e430978c44a7cb18100513114e492 by Bartlomiej Laczkowski
27970,0,Change has been successfully merged into the git repository by Dani Megert
27973,0,Change has been successfully merged into the git repository by Michael Wenz
27975,0,Change has been successfully merged into the git repository by Eugen Neufeld
27977,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1766/ : UNSTABLE
27982,0,Change has been successfully merged into the git repository by Markus Tiede
27985,0,Change has been successfully merged into the git repository by Jacques Bouthillier
27988,0,Change has been successfully merged into the git repository by Sopot Cela
27989,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/6842/ : UNSTABLE
27991,0,Change has been successfully merged into the git repository by Sebastian Struckmann
27998,0,Change has been successfully rebased as 8a4d93d16ecf5d7ced08bc9f821a8db5498b78b4 by Eugen Neufeld
28001,0,Change has been successfully merged into the git repository by Dirk Fauth
28007,0,Change has been successfully rebased as a4813e13cd0a3d4931550cdc70c22d18605f319d by Patrick Tessier
28010,0,Change has been successfully cherry-picked as 2dd8f1ccbc22fc8af0924ee7dbe24af55d5a496e by Alexander Kurtakov
28013,1,"Patch Set 2: Code-Review+1Note that https://git.eclipse.org/r/56829 is the same bug but against runtime. This will need to be submitted first before the other will, because this will remove a reference to a class that will be deleted."
28016,0,"Patch Set 2: Code-Review+2 Verified+1Makes sense the comment of Logger, thanks."
28017,0,Change has been successfully merged into the git repository by Lars Vogel
28021,0,Change has been successfully rebased as b99ec83345dd71091ed745df85b39442764e38ba by Patrick Tessier
28023,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1763/ : UNSTABLE
28026,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1765/ : UNSTABLE
28029,0,Change has been successfully merged into the git repository by Jonas Helming
28032,0,Change has been successfully merged into the git repository by Sasikanth Bharadwaj
28035,0,Change has been successfully merged into the git repository by Lars Vogel
28037,0,Change has been successfully merged into the git repository by Angel Avila
28043,1,Patch Set 2: Code-Review+2Patch set 2 only remove an unreliable test.
28046,0,Change has been successfully merged into the git repository by Laurent Redor
28055,0,Change has been successfully rebased as 5a663b23f1bb98efeb00a363dc8a14cd34e7a6b6 by Ivan Furnadjiev
28057,1,Patch Set 1: Code-Review-1 Verified-1Build Unstable http://hudson.eclipse.org/emf-facet/job/org.eclipse.emf.facet-master-helios-gerrit/85/ : UNSTABLE
28058,1,Patch Set 1: Code-Review-1 Verified-1Build Unstable http://hudson.eclipse.org/emf-facet/job/org.eclipse.emf.facet-master-helios-gerrit/86/ : UNSTABLE
28061,0,Change has been successfully merged into the git repository by Gregoire Dupe
28065,0,Change has been successfully cherry-picked as b994f8fd7bcf83d9690d04fb40a94791d862cf33 by Judith Gull
28073,0,Change has been successfully merged into the git repository by Lars Vogel
28082,0,Change has been successfully merged into the git repository by vincent lorenzo
28089,0,"Patch Set 2: Verified+1Yes, I agree, we should make the two versions match,The error log is pretty useful in case things go wrong."
28091,0,Change has been successfully rebased as 3415575b19e2938132fd15a98abc4731e232ddac by Marc-Andre Laperle
28093,0,"Patch Set 1: Code-Review+2 Verified+1Pretty useful, Thanks !"
28096,0,"Patch Set 1: Code-Review+1Great fix! looks good, but is there a way I could test this?"
28097,0,"Patch Set 1:> Great fix! looks good, but is there a way I could test this?Yes there is. But you need a version of Trace Compass that includes the Virtual Machine View and some traces made simultaneously on a host and a virtual machine. And last but not least you need lttng-modules from the addons' branch of Francis Giraldeau's github repository.Or you can use the traces I made and watch the before/after screen shots included in this archive :)https://mega.nz/#!7VUTTZZJ!7dQ504EiwwM9SFKVQ7xmWTIJ-3w4mD5fLk7Z9OZPKy4"
28098,1,"Patch Set 1: Code-Review+2The code looks good to me, I verified that it works, we need a second reviewer though, I am ok with francis being that reviewer. Objections?"
28101,0,"Patch Set 1: Code-Review+1Oh ok, I suppose they can not be IDLE and RUNNING at the same time, but the other values can be used as flags, makes sense. Thanks for the explanation.btw, it would be nice if VcpuStateValues had a reference to which header it's taking the values from, like LinuxValues for example."
28103,0,"Patch Set 1: Code-Review+1The flag VCPU_PREEMPT is cleared unconditionally whether the is vcpu that is idle or not, but that's not really important because the state is unchanged, the flag is already absent, so it's fine and the patch looks good to me."
28105,0,Change has been successfully cherry-picked as 52efabb60a9ee7ce3f9a5d2a18d85ca407690c43 by Matthew Khouzam
28107,0,Change has been successfully pushed.
28109,0,Patch Set 1: Code-Review+2 Verified+1I've coded the exact same thing here!
28111,0,Change has been successfully cherry-picked as 8b246d4512e582d893f20970ad25881c0e459f15 by Alexandre Montplaisir
28115,0,Change has been successfully merged into the git repository by Angel Avila
28122,0,Change has been successfully rebased as 7ef677cf9604a6e1f31949117907943ddb058aa0 by Sam Davis
28133,0,Change has been successfully merged into the git repository by Matthias Sohn
28136,0,Change has been successfully merged into the git repository by Matthias Sohn
28139,0,Change has been successfully merged into the git repository by Matthias Sohn
28144,0,Change has been successfully rebased as 246e33fbcd0cce362dc77d23ccb76574ca04f00f by Christian W. Damus
28146,1,"Patch Set 1:This is a cherry-pick of change 56746 from master (Neon) branch, which Gerrit could not implement because it seems to be quite strict about conflicts in files that could be resolved automatically but it doesn't bother to try (?)."
28148,0,Change has been successfully merged into the git repository by Christian W. Damus
28151,0,Change has been successfully merged into the git repository by Doug Schaefer
28156,0,Change has been successfully pushed.
28159,0,Change has been successfully merged into the git repository by Lars Vogel
28165,0,Change has been successfully merged into the git repository by Lars Vogel
28169,0,Change has been successfully pushed.
28174,0,Change has been successfully merged into the git repository by Pierre-Charles David
28185,1,"Patch Set 4:Matthew, the problem is that the ust trace type is not available in this plugin. This test would have to be in lttng.ust.ui.swtbot.tests.By default if you just use Debug/Run As in Eclipse, it includes ALL your plugins in your Target Platform and workspace, which is why it finds the UST trace type. Maven only loads the plugin dependencies. If you want to emulate that in Eclipse, you have to go in your debug configuration and remove the plugins that are not dependencies of tmf.ctf.ui.swtbot (it's easier to just remove everything tracecompass, add tmf.ctf.ui.swtbot and click Add Required). If I do that, I can reproduce the failures in Eclipse."
28216,1,"Patch Set 24:The index of the toolbar buttons being clicked were wrong so I changed the code to get the buttons by using the tooltip text. This should be less error prone.Before, this worked most of the time because, depending on timing, the next/back buttons could fall on an event with the same call stack. Most of the time it was actually so quick that it should not even have time to select a different event. I changed testGoToTimeGoBackAndForthAndCheckStack to make sure that it waits for the expected event to be selected and also so that it checks the call stack at every step (prev/next event). There is no API to access the current selected event in the Call Stack view so I thought the next best thing was to inspect the selected event in the table.After those changes, the test is not flaky anymore on my machine (100 times)."
28218,0,Patch Set 24: Code-Review+2I am very happy with this.
28221,0,Change has been successfully cherry-picked as 58271641e2b059320a4944b9b761dd9c9a402142 by Matthew Khouzam
28235,1,Patch Set 15:Should we merge this now? It will be less annoying when we switch between patches because the projects have to be removed or closed in the workspace.
28236,0,Change has been successfully cherry-picked as 463bf1c0cdfffc5f3a25413eb9468984c77caa59 by Matthew Khouzam
28240,0,"Patch Set 7:(1 comment)small comment, rest looks good"
28264,0,Change has been successfully rebased as 44ceb3f5f56966f4562678f7acaacf7fa65b1fb8 by Stephanie Chafe
28266,0,"Patch Set 1: Code-Review-1We could push this for master as-is and continue improving the functionality, or I could add to this.Currently missing :- Extension point framework to support more than just 'Docker Machine'- Only supports creating a single connection, which makes sense in the context of the New Connection Wizard, but I did say it might be nice to create > 1 . Still, adding this is a good first step."
28270,0,Change has been successfully cherry-picked as 6d260d2db759e55bc265c000ee19982c30613449 by Roland Grunberg
28274,0,Change has been successfully rebased as 64bf3c4f69e00d4246552505d67521ce2167178c by Doug Schaefer
28281,1,Patch Set 6:> The one that introduces the test trace you mean? This one: > https://git.eclipse.org/r/#/c/51663/Are you sure this is the right trace? I don't see lttng_ust_libc events in it. I'm trying to verify that it does indeed fix bug 470186
28282,1,"Patch Set 6:Gah, you're right, that trace has liblttng-ust-dl events, not -libc ones. My bad, got mixed up in my UST libraries.You can use this program to easily generate a UST trace with libc memory events:https://github.com/jgalar/leak-detectorbut I don't think we have a test trace with them right now."
28283,1,"Patch Set 6:> but I don't think we have a test trace with them right now.OK so I compiled Lttng 2.7 (tools, ust, urcu)But I can't get it to work:./lttng-sessiond ./lttng-sessiond: symbol lookup error: ./lttng-sessiond: undefined symbol: lttng_trace_clockreadelf -s lttng-sessiond | grep lttng_trace_clock   333: 0000000000697000     8 OBJECT  GLOBAL DEFAULT   27 lttng_trace_clock  1468: 0000000000697000     8 OBJECT  GLOBAL DEFAULT   27 lttng_trace_clockDo you have it working?I used the source tarball since the PPA doesn't have 2.7 yet.http://lttng.org/files/lttng-tools/lttng-tools-2.7.0.tar.bz2"
28284,1,"Patch Set 6:> > but I don't think we have a test trace with them right now. >  > OK so I compiled Lttng 2.7 (tools, ust, urcu) > But I can't get it to work: >  > ./lttng-sessiond > ./lttng-sessiond: symbol lookup error: ./lttng-sessiond: undefined > symbol: lttng_trace_clock >  > readelf -s lttng-sessiond | grep lttng_trace_clock > 333: 0000000000697000     8 OBJECT  GLOBAL DEFAULT   27 > lttng_trace_clock > 1468: 0000000000697000     8 OBJECT  GLOBAL DEFAULT   27 > lttng_trace_clock >  > Do you have it working? >  > I used the source tarball since the PPA doesn't have 2.7 yet. > http://lttng.org/files/lttng-tools/lttng-tools-2.7.0.tar.bz2OK I figured it out. It was conflicting with the Ubuntu (non-PPA) liblttng-ust."
28286,0,Patch Set 6:thanks for testing!
28287,0,Change has been successfully cherry-picked as 7e452c97060fa3486cd37c9655fc80425572801f by Alexandre Montplaisir
28303,0,Change has been successfully merged into the git repository by Jay Arthanareeswaran
28310,0,Change has been successfully rebased as 19695702e8a9c3d237bb52aee8fe9ef7fe48f8ae by Christian W. Damus
28313,0,Change has been successfully merged into the git repository by Lars Vogel
28316,0,Change has been successfully merged into the git repository by David Green
28318,0,Change has been successfully merged into the git repository by Lars Vogel
28332,0,Change has been successfully pushed.
28335,0,Change has been successfully merged into the git repository by Matthias Sohn
28336,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7702/ : UNSTABLE
28339,0,Change has been successfully merged into the git repository by Lars Vogel
28347,0,Change has been successfully merged into the git repository by Sebastian Struckmann
28350,0,Patch Set 2:I will let you merge this once you are ready!
28352,0,Change has been successfully merged into the git repository by Denis Roy
28362,0,Change has been successfully merged into the git repository by Lars Vogel
28366,0,Change has been successfully merged into the git repository by Matthias Sohn
28369,0,Change has been successfully merged into the git repository by Ansgar Radermacher
28373,0,Change has been successfully merged into the git repository by Sebastian Struckmann
28382,0,Change has been successfully rebased as c0baffb7bbb0ee7151032758999ae5ae0ca8c6ab by vincent lorenzo
28386,0,Change has been successfully merged into the git repository by vincent lorenzo
28390,0,Change has been successfully merged into the git repository by Greg Watson
28393,0,Change has been successfully merged into the git repository by Greg Watson
28396,0,Change has been successfully merged into the git repository by Greg Watson
28400,0,Change has been successfully rebased as d42ba72df9d642cc4c551354ea20b288c768f22d by Ralf Sternberg
28403,0,Change has been successfully merged into the git repository by Greg Watson
28406,0,Patch Set 1:This should also be configured for the extra plug-ins (But I can take care of that)Thanks for the contribution!
28408,0,Change has been successfully rebased as 373817b016d5615c1acee916ae5f2778f966710f by Camille Letavernier
28414,0,Change has been successfully merged into the git repository by Lars Vogel
28417,0,Change has been successfully merged into the git repository by Christian Pontesegger
28433,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
28437,0,Change has been successfully cherry-picked as e640c48bb73eed2fd599d97c5d94b3e9dc702942 by Judith Gull
28440,0,Change has been successfully merged into the git repository by Matthias Sohn
28443,0,Change has been successfully merged into the git repository by Matthias Sohn
28447,0,Change has been successfully rebased as f982ba5a831c633526db2881be8e0af4f4721b94 by vincent lorenzo
28450,0,Change has been successfully merged into the git repository by Matthias Sohn
28453,0,Change has been successfully merged into the git repository by Arun Thondapu
28456,0,Change has been successfully merged into the git repository by Matthias Sohn
28458,0,Change has been successfully merged into the git repository by Arun Thondapu
28463,0,Change has been successfully merged into the git repository by Arun Thondapu
28466,0,Change has been successfully merged into the git repository by Matthias Sohn
28470,0,Change has been successfully merged into the git repository by Camille Letavernier
28477,0,Change has been successfully merged into the git repository by Lars Vogel
28479,1,"Patch Set 6:Simon, please update or abondan this still has a build failure"
28481,1,Patch Set 1:(1 comment)As a first correction can you please fix the redundant type information?
28492,0,Change has been successfully rebased as f946c6bfa7f1e27307374a13a6b2a196c00a871a by Johannes Faltermeier
28494,0,Change has been successfully merged into the git repository by Lars Vogel
28500,0,Change has been successfully merged into the git repository by Lars Vogel
28503,0,"Patch Set 2: Code-Review+2 Verified+1Thanks, looks good."
28504,0,Change has been successfully merged into the git repository by Lars Vogel
28513,1,"Patch Set 2:I cannot submit this, with a not submitted ancestor. You can update it still, I frequently run into this myself (huestel, sorry for ""blaming"" you for something I also do all the time) and I know that you still can update a review if its merge is pending."
28516,0,Change has been successfully merged into the git repository by Lars Vogel
28518,0,Change has been successfully merged into the git repository by Stefan Xenos
28528,0,Change has been successfully merged into the git repository by Matthias Sohn
28530,0,Change has been successfully merged into the git repository by Stefan Xenos
28537,0,Change has been successfully merged into the git repository by Dani Megert
28542,0,Change has been successfully merged into the git repository by Axel RICHARD
28546,0,Change has been successfully rebased as 6ca6015753e2466b941b072693145ab672a20ecc by Patrick Tessier
28552,0,Change has been successfully merged into the git repository by Eugen Neufeld
28554,0,Change has been successfully merged into the git repository by Lars Vogel
28561,0,Change has been successfully merged into the git repository by Lars Vogel
28565,0,Change has been successfully rebased as e0a003e1bd0a7bf3200a16c963868bb5375c27cd by Patrick Tessier
28569,1,Abandonedformatter not used
28573,0,Change has been successfully merged into the git repository by Patrick Tessier
28576,0,Change has been successfully cherry-picked as 5b20d39807d3c78d323424d27e2b6557a521c13f by Patrick Tasse
28580,0,Change has been successfully merged into the git repository by Johan Hardy
28582,0,Change has been successfully merged into the git repository by Lars Vogel
28586,0,Change has been successfully merged into the git repository by Lars Vogel
28592,0,Change has been successfully merged into the git repository by Lars Vogel
28594,0,Change has been successfully merged into the git repository by Lars Vogel
28598,0,Change has been successfully merged into the git repository by Silenio Quarti
28605,0,Change has been successfully merged into the git repository by Lars Vogel
28610,0,Change has been successfully merged into the git repository by Silenio Quarti
28613,0,Change has been successfully merged into the git repository by Johan Hardy
28624,0,Change has been successfully merged into the git repository by Lars Vogel
28627,1,"Patch Set 5:Thanks for the detailed review Stefan, I think I fixed everything except the changes in method signatures, which I do not want to do in this bug."
28630,0,Change has been successfully cherry-picked as 1bc174efb9ad99da52a2cd5b4be51ee5f89e2a9b by Stephan Leicht Vogt
28633,0,Change has been successfully merged into the git repository by Johan Hardy
28637,0,Change has been successfully rebased as 9844c91802edbfe756cf0a66923334609898f822 by Patrick Tessier
28646,0,Change has been successfully rebased as 795b4df0bea78c2461043b347998f2e6619507ef by Patrick Tessier
28650,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
28653,0,Change has been successfully cherry-picked as 477bc5bd4807f13f91528cc8b29dce119157aa66 by Stephan Leicht Vogt
28660,0,Change has been successfully merged into the git repository by Vincenzo Caselli
28663,1,"Patch Set 2:(2 comments)I added more explanations (sorry, I wasn't clear before).Please also create a bug for this, and set 0.5.1 as the target milestone."
28669,1,"Patch Set 1: Code-Review+1(4 comments)I like the idea, please see my comments/suggestions inline.I also think a bug should be created for this feature."
28672,0,Patch Set 1: Code-Review+2 Verified+1Let's get it in!
28673,0,Change has been successfully cherry-picked as e240f3682106ce80b9a5177e3c1e489ae69421bc by Bernd Hufmann
28675,0,Patch Set 1: Code-Review+2 Verified+1Looks good to me! I wrote this!
28676,0,Change has been successfully cherry-picked as acc34f676d40ea7f274470be333f4dd7a61ecaf3 by Bernd Hufmann
28680,0,Change has been successfully rebased as ec47d735753d534dc495fa38e1c0514640263606 by Camille Letavernier
28683,0,Change has been successfully merged into the git repository by Benoit Maggi
28687,0,Change has been successfully cherry-picked as 59004eec32da08f1deb48d2cc25d10b138773f67 by Stephan Leicht Vogt
28690,0,Change has been successfully cherry-picked as cc020e6aa21882611b2a309fc560d3ed254d39c5 by Matthias Otterbach
28693,0,Change has been successfully merged into the git repository by Camille Letavernier
28697,0,Patch Set 2: Code-Review+1Looks good to me!
28699,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
28705,0,Change has been successfully cherry-picked as cc1c961eefb57564639a10fa483e313cffef1d86 by Adrian Sacchi
28709,0,Change has been successfully merged into the git repository by Matthias Sohn
28716,0,Change has been successfully merged into the git repository by Camille Letavernier
28717,0,Patch Set 2:Thank you!
28726,0,Change has been successfully rebased as 84c2bbfeadd1458653d0be0bfecff69c39610f11 by Patrick Tessier
28731,0,Change has been successfully rebased as e7b92e7b906421eb3a794a29d410996de7d24172 by Patrick Tessier
28736,0,Change has been successfully rebased as 97fc57c4467177a83f1ad907079e88b43ec5b54a by Patrick Tessier
28741,0,Change has been successfully rebased as 2809ab62079f89faa8024f269543a038448754f5 by Patrick Tessier
28746,0,Change has been successfully rebased as 2e0b2580ba0f04536c610d890d93806bd721e16f by Patrick Tessier
28751,0,Change has been successfully rebased as ca32c50de2827bf4b2f89b7ec17f9756a53b89c5 by Patrick Tessier
28756,0,Change has been successfully rebased as d0da2e53f83e591e8ac08337684103cd43449ebb by Patrick Tessier
28761,0,Change has been successfully rebased as a3168bde5c394c9b3b46ce8b8d127719699e3582 by Patrick Tessier
28763,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1717/ : UNSTABLE
28767,0,Change has been successfully merged into the git repository by Eugen Neufeld
28771,0,Change has been successfully rebased as b3816245dbc9d560a046f8deddcd6b929889214c by Benoit Maggi
28773,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1718/ : UNSTABLE
28776,0,Change has been successfully merged into the git repository by Eugen Neufeld
28778,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1706/ : UNSTABLE
28783,0,Change has been successfully merged into the git repository by Axel RICHARD
28795,0,Change has been successfully merged into the git repository by Axel RICHARD
28800,0,Change has been successfully cherry-picked as b978f8a387a6145ca8e580c6bf7980e2636578c7 by Nathan Burgherr
28803,0,Change has been successfully cherry-picked as 365e9efd8cfc4d799c6d700d0230c0ef181b22cc by Matthias Otterbach
28810,0,Change has been successfully merged into the git repository by Matthias Sohn
28814,0,Change has been successfully rebased as b8b5460b7759fe34c94729131cae2e9fe0009c4b by Eugen Neufeld
28818,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/933/ : UNSTABLE
28820,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/916/ : UNSTABLE
28822,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/914/ : UNSTABLE
28824,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/852/ : UNSTABLE
28827,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/924/ : UNSTABLE
28830,0,Change has been successfully merged into the git repository by Pavel Agapov
28831,1,Patch Set 7:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/965/ : UNSTABLE
28836,0,Change has been successfully merged into the git repository by Matthias Sohn
28842,0,Change has been successfully rebased as 6a17a26b22389ce952624a54892d1431b6a437fe by Doug Schaefer
28843,0,Patch Set 2:Thanks Martin!
28844,0,Patch Set 2:Thanks Doug! - Could we also get this backported to cdt_8.8.x branch and probably other (older) branches ? Should I submit separate Gerrit's for that ?
28845,0,Patch Set 2:> Thanks Doug! - Could we also get this backported to cdt_8.8.x > branch and probably other (older) branches ? Should I submit > separate Gerrit's for that ?Yes please. That would be easiest for me. It would be great to get this for the 8.8 stream especially as will have maintenance releases of it over the next few months.
28847,0,"Patch Set 2:> OK. Any concerns about my build done on OSX 10.9.4 , can this run > on older OSX versions ? - I'm not a Mac user at all, I've borrowed > the machine for getting this fixed ...I don't really know. You build with a certain version of Xcode and I assume it works for all supported versions of the OS. I think most people are on 10.9 or newer especially now that they have free upgrades."
28848,0,"Patch Set 2:> > OK. Any concerns about my build done on OSX 10.9.4 , can this run > > on older OSX versions ? - I'm not a Mac user at all, I've > borrowed > > the machine for getting this fixed ... >  > I don't really know. You build with a certain version of Xcode and > I assume it works for all supported versions of the OS. I think > most people are on 10.9 or newer especially now that they have free > upgrades.There a flag to specify the SDK you use. I don't remember what it is though, maybe this would help:http://stackoverflow.com/questions/2857295/compiling-for-older-versions-of-mac-os-x"
28851,0,Change has been successfully merged into the git repository by Marc Khouzam
28858,0,Change has been successfully merged into the git repository by Andrey Loskutov
28863,0,Change has been successfully rebased as 366dcbb39a7d18756641058427bbec4f3d828b06 by Marc Khouzam
28866,0,Patch Set 2: Code-Review+1 Verified+1Changes look fine to me.
28869,0,Change has been successfully merged into the git repository by Silenio Quarti
28878,0,Change has been successfully merged into the git repository by Silenio Quarti
28881,0,Change has been successfully merged into the git repository by David Williams
28883,0,Change has been successfully merged into the git repository by Ryan Brooks
28891,0,Change has been successfully merged into the git repository by Ryan Brooks
28893,0,Patch Set 1: Code-Review-1(1 comment)Nice Clean-up
28900,0,Change has been successfully cherry-picked as 1960ed89ed233fccd5b0550d7576f005d0fc1a6b by Matthias Otterbach
28904,0,Change has been successfully merged into the git repository by Pavel Agapov
28905,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/964/ : UNSTABLE
28907,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/958/ : UNSTABLE
28909,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/939/ : UNSTABLE
28916,0,Change has been successfully rebased as 617a91d384a95e2f658e09c8e764aad900f892a7 by vincent lorenzo
28918,0,Patch Set 1: Code-Review+1CSS works now on stereotype Label for port on IBD and the code looks good.
28923,0,Change has been successfully merged into the git repository by Thomas Schindl
28927,0,Change has been successfully merged into the git repository by Thomas Schindl
28929,0,Change has been successfully merged into the git repository by Marc Khouzam
28933,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3333/ : UNSTABLE
28937,0,Change has been successfully merged into the git repository by Benoit Maggi
28946,0,Change has been successfully cherry-picked as 71e4413e52c9b2ff390740790c3202064409f02f by Matthias Otterbach
28955,0,Change has been successfully merged into the git repository by Guy Perron
28961,0,Change has been successfully merged into the git repository by Benoit Maggi
28970,0,Change has been successfully merged into the git repository by christopher Guindon
28974,0,Change has been successfully cherry-picked as 3dc6cf9cbd4514f74ccf1d374bb93389f7935bcc by Andreas Hoegger
28977,0,Change has been successfully merged into the git repository by Lars Vogel
28979,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/938/ : UNSTABLE
28983,0,Change has been successfully merged into the git repository by Pavel Agapov
28984,1,Patch Set 5:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/963/ : UNSTABLE
28987,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/957/ : UNSTABLE
28990,0,Change has been successfully merged into the git repository by Thomas Schindl
28995,0,Change has been successfully merged into the git repository by Camille Letavernier
28998,0,Change has been successfully merged into the git repository by Camille Letavernier
29000,0,Patch Set 1: Code-Review+1(1 comment)One copyright header to change; otherwise looks good
29006,0,Change has been successfully rebased as fb8ee92509cdf5526fc1e36e1a279965f8d8f113 by Camille Letavernier
29010,0,"Patch Set 3: Code-Review+1Looks good to me! All tests, except those resolved with the review 51030, are green."
29014,0,Patch Set 3: Code-Review+1Looks good to me! All test are green.
29020,0,Change has been successfully rebased as 5c79ac1da3a60c19444eca289d4d1a23ed9cb450 by Camille Letavernier
29022,0,"Patch Set 1: Code-Review+1Looks good to me! All tests, except those resolved with the review 51030, are green."
29028,0,Change has been successfully rebased as ac5af255c4ef91f80b89ec06e1639b9d2e2274e5 by Camille Letavernier
29032,0,Change has been successfully rebased as 70932fb1ac2ad426df6f2f71ca03518d59f0842e by Camille Letavernier
29034,0,Patch Set 2: Code-Review+1Looks good to me !  All tests are green.
29040,0,Change has been successfully rebased as dcca5293408470c805b1694a3289967602eac598 by Camille Letavernier
29042,0,"Patch Set 1: Code-Review+1Looks good to me! All tests, except those resolved with the review 51030, are green."
29046,0,Change has been successfully rebased as 2c6b5fd641e802cb8ccf2eb80e98e7694d75d724 by Camille Letavernier
29048,0,Patch Set 1: Code-Review+1Looks good to me ! All expected tests are green.
29052,0,Change has been successfully cherry-picked as 183d7747f91fc2afc315c03d74714e5ac04f9b75 by Judith Gull
29054,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2901/ : UNSTABLE
29060,0,Change has been successfully merged into the git repository by Matthias Sohn
29064,0,Change has been successfully merged into the git repository by Matthias Sohn
29067,0,Change has been successfully merged into the git repository by Matthias Sohn
29069,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1713/ : UNSTABLE
29070,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1714/ : UNSTABLE
29072,0,Change has been successfully merged into the git repository by Johannes Faltermeier
29074,1,Patch Set 2:Build failure is unrelated to this; somehow that EasymportWizardTest just doesn't work.
29078,0,Change has been successfully merged into the git repository by Matthias Sohn
29082,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/960/ : UNSTABLE
29084,0,Change has been successfully merged into the git repository by Pavel Agapov
29086,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/925/ : UNSTABLE
29088,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/934/ : UNSTABLE
29092,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/915/ : UNSTABLE
29095,0,Change has been successfully merged into the git repository by Dirk Fauth
29098,0,Change has been successfully merged into the git repository by Dirk Fauth
29102,0,Change has been successfully merged into the git repository by Dirk Fauth
29112,0,Change has been successfully merged into the git repository by Vincenzo Caselli
29116,0,Change has been successfully merged into the git repository by Matthias Sohn
29120,0,Change has been successfully merged into the git repository by Matthias Sohn
29123,0,"Patch Set 1:this swtbot test seems to be instable, for me it succeeded in the builds I did while releasing 4.0.2"
29127,0,Change has been successfully merged into the git repository by Martin Oberhuber
29132,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
29135,0,Change has been successfully merged into the git repository by Pierre-Charles David
29138,0,Change has been successfully merged into the git repository by Matthias Sohn
29142,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7569/ : UNSTABLE
29143,0,"Patch Set 4:> (1 comment) >  > found this problem: > - create new Java project > - share it with git team provider and create a repository > - click ""init gitflow"" (repository is still empty, HEAD doesn't > exist yet) > - in ""Initialize repository"" dialog choose non-default master > branch e.g. master1 > - gitflow warns that this master branch doesn't exist and asks if I > want to create it > - click yes > - this hits the following exception >  > org.eclipse.egit.gitflow.WrongGitFlowStateException: Git flow > repository may not be empty. > at org.eclipse.egit.gitflow.GitFlowRepository.findHead(GitFlowRepository.java:147) > at org.eclipse.egit.gitflow.ui.internal.dialogs.InitDialog.okPressed(InitDialog.java:281) > ... 62 more >  > - the error is not shown in an error dialog but ends up in the > error log only, so I > can't leave the ""Initialize repository"" dialog until I click > ""Cancel"" > - if initializing a gitflow repository requires HEAD then the > action ""Init Git Flow"" > should be disabled if HEAD doesn't exist / repository is empty > - or ""Init Git Flow"" should work on empty repository > - don't know how native gitflow handles this I created a new UI test for this case and fixed it with another question to the user. Yes, the reference implementation works on empty repositories.Thanks for testing this so thoroughly! > - if I first create an initial commit the dialog works and I can > create the > non-standard ""master1"" branch but then I already have a ""master"" > branch and > have to delete that (I want the non-standard master1 branch and why > should I > also use a master branch ?), so it looks like it would be better to > rename > master to master1 instead of creating both.I think that in some scenarios this would make sense, but we have to keep in mind that the Gitflow ""master"" has a very specific semantic. It's the branch that always points to the latest release. The Git master branch does not have this semantic.Also my guess is that in most cases, when users want to convert their repository to Gitflow, it would make more sense to turn the existing master into develop (e.g. the EGit repository)."
29147,1,"... 62 more- the error is not shown in an error dialog but ends up in the error log only, so I  can't leave the """"Initialize repository"""" dialog until I click """"Cancel""""- if initializing a gitflow repository requires HEAD then the action """"Init Git Flow""""  should be disabled if HEAD doesn't exist / repository is empty- or """"Init Git Flow"""" should work on empty repository- don't know how native gitflow handles this- if I first create an initial commit the dialog works and I can create thenon-standard """"master1"""" branch but then I already have a """"master"""" branch andhave to delete that (I want the non-standard master1 branch and why should Ialso use a master branch ?), so it looks like it would be better to renamemaster to master1 instead of creating both."""
29153,0,Change has been successfully merged into the git repository by Matthias Sohn
29159,1,"Patch Set 1:It might be a problem when we have no path, agreed, though I don't think this warrants parsing the URI wrong. We might either reject the URI even though it might be possible to close a repository without path or think about some callback that may be used as folder name. Maybe we could just use the host and clone the repository to e.g. ""example.com""?"
29163,1,"Patch Set 1:Oh wait, seems I've been mistaken. Actually it is not possible to clone 'ssh://127.0.0.1', but it is possible to clone 'ssh://127.0.0.1/' (regard the trailing '/'). Native git then automatically falls back to use the authority of the URL:$ git clone ssh://127.0.0.1/Cloning into '127.0.0.1'...[snip]Current jgit errors out cloning a repository with this URL. The proposed fix in here does not fix the issue, either, so I'll create a new patch that fixes it."
29165,1,Patch Set 1:I've just tried cloning a repository with a port:$ git clone ssh://user@127.0.0.1:2222/Cloning into '2222'...I don't think this behavior is really intended by git.git. Also:$ git clone ssh://user@pass@127.0.0.1/Cloning into 'pass@127.0.0.1'...This is definitly wrong. I'll go check in with the git.git mailing list and correct the issue there first.
29166,1,"Patch Set 1:agree, that sounds like a native git bug. Especially cloning into folders which contain a password seems to be wrong."
29169,0,Change has been successfully merged into the git repository by Dawid Pakula
29174,0,Change has been successfully merged into the git repository by philippe dul
29178,0,Change has been successfully merged into the git repository by Ansgar Radermacher
29181,0,Change has been successfully merged into the git repository by Matthias Sohn
29187,0,Change has been successfully merged into the git repository by Maxime Porhel
29190,0,Change has been successfully merged into the git repository by Mark Broerkens
29193,0,Change has been successfully merged into the git repository by Mark Broerkens
29198,0,Change has been successfully rebased as d6e0bd63bf97ffda4a1f4b4043963f0b824c81ed by Benoit Maggi
29201,0,Change has been successfully merged into the git repository by Mark Broerkens
29208,0,Change has been successfully rebased as 0599925d718048043864dcd7cb6317adf20f9e9d by Benoit Maggi
29210,0,Change has been successfully merged into the git repository by Johannes Faltermeier
29219,0,Change has been successfully merged into the git repository by Pierre-Charles David
29223,0,Change has been successfully rebased as c944f20a5399411aa796b70d2967b8e068d91e74 by Ansgar Radermacher
29227,0,Change has been successfully merged into the git repository by Mickael Istria
29234,0,Change has been successfully rebased as 6c7b8b7c50d93ab5fbdbb92e2671f6a5064fad84 by Ansgar Radermacher
29238,0,Change has been successfully rebased as 8e49964578b790266ee2add40d7a25e2e3c0e952 by Eugen Neufeld
29242,0,Change has been successfully rebased as 77f0044fb9c681bd63b39ed31b4894291c4a68c9 by Jonas Helming
29246,0,Change has been successfully rebased as 47db14fa2d8afb94229ca5414c7f34b4a62f0cbc by Johannes Faltermeier
29249,0,Change has been successfully merged into the git repository by Eugen Neufeld
29251,0,Change has been successfully merged into the git repository by Sopot Cela
29256,0,Change has been successfully merged into the git repository by Christian Pontesegger
29259,0,Change has been successfully merged into the git repository by Patrick Tessier
29261,0,Change has been successfully merged into the git repository by Florian Barbin
29272,0,Change has been successfully cherry-picked as 969b867eec634a29186bcef9f2f772719d22c4ff by Claudio Guglielmo
29276,0,Change has been successfully rebased as a2db9f65b6f40957d1e4faff5c4d75ab8081e356 by Benoit Maggi
29279,0,Change has been successfully merged into the git repository by Christian Pontesegger
29282,0,Change has been successfully cherry-picked as 4c96772497d3931cfa9b5f78718035b19eec1b04 by Ivan Motsch
29285,0,Change has been successfully merged into the git repository by Elena Laskavaia
29293,0,Change has been successfully merged into the git repository by Angel Avila
29296,0,Change has been successfully merged into the git repository by Angel Avila
29306,0,Change has been successfully merged into the git repository by Guy Perron
29309,0,Change has been successfully merged into the git repository by Jeff Johnston
29316,0,Change has been successfully merged into the git repository by David Miller
29319,0,Change has been successfully merged into the git repository by Guy Perron
29322,0,Change has been successfully cherry-picked as eb2ce29a6af56fed00d61abd9d61424a764e4a66 by Roland Grunberg
29325,0,Change has been successfully merged into the git repository by Carsten Reckord
29327,0,Change has been successfully merged into the git repository by John Arthorne
29332,0,Patch Set 7: Code-Review+1 Verified+1(1 comment)Looks good.
29349,0,Change has been successfully merged into the git repository by Doug Schaefer
29352,0,Change has been successfully merged into the git repository by Guy Perron
29355,0,Change has been successfully cherry-picked as c89caf881cb1e7a667b211cfb1d121e263671349 by Roland Grunberg
29360,1,Patch Set 1: Code-Review+2 Verified+1After some thought I think that this change is a little bit aggressive so I've decide to revert it for now. I will try to find some less invasive solution...
29361,0,Change has been successfully merged into the git repository by Bartlomiej Laczkowski
29366,0,Patch Set 3:(1 comment)Tests look good.
29371,0,Change has been successfully rebased as 95141fe232ccd52b7eff54433996996d4fbcf13b by Sam Davis
29374,0,Change has been successfully merged into the git repository by Sam Davis
29377,0,Change has been successfully merged into the git repository by Jacques Bouthillier
29380,0,Change has been successfully merged into the git repository by Sam Davis
29383,0,Change has been successfully merged into the git repository by Sam Davis
29387,0,Change has been successfully merged into the git repository by Dani Megert
29392,0,Change has been successfully merged into the git repository by Barry Maher
29396,0,Change has been successfully merged into the git repository by Sam Davis
29399,0,Change has been successfully merged into the git repository by Doug Schaefer
29404,0,Change has been successfully merged into the git repository by Lars Vogel
29406,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3305/ : UNSTABLE
29408,0,Change has been successfully merged into the git repository by Doug Schaefer
29412,0,Change has been successfully pushed.
29415,0,Change has been successfully merged into the git repository by Laurent Goubet
29417,0,Change has been successfully pushed.
29423,0,Change has been successfully merged into the git repository by Benoit Maggi
29427,0,Change has been successfully rebased as 395b3f007d51f803d132edb8461a45ba47ebcf1b by John Eblen
29429,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/442/ : UNSTABLE
29430,0,"Patch Set 4: Code-Review-1(1 comment)Still missing version info because of IEPackageProvider.Other than that, I'd like the unit tests for EObjectServices to have a test for a deeper eAllContents to make sure Cedric's comment on patch set 1 is adressed and tested."
29433,0,Change has been successfully merged into the git repository by Laurent Goubet
29437,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/398/ : UNSTABLE
29445,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1656/ : UNSTABLE
29450,0,Change has been successfully merged into the git repository by Johannes Faltermeier
29453,0,Change has been successfully merged into the git repository by Christian Pontesegger
29456,0,Change has been successfully merged into the git repository by Christian Pontesegger
29459,0,Change has been successfully merged into the git repository by Pierre-Charles David
29462,0,Change has been successfully merged into the git repository by Jacques Bouthillier
29465,0,Change has been successfully merged into the git repository by Jacques Bouthillier
29473,0,Change has been successfully merged into the git repository by Jacques Bouthillier
29476,0,Change has been successfully merged into the git repository by Patrick Tessier
29479,0,Change has been successfully merged into the git repository by Michael Wenz
29486,0,Change has been successfully merged into the git repository by Adrian Sacchi
29489,0,Change has been successfully merged into the git repository by Jacques Bouthillier
29495,0,Change has been successfully merged into the git repository by vincent lorenzo
29498,0,Change has been successfully merged into the git repository by Christian Pontesegger
29501,0,Change has been successfully merged into the git repository by Christian Pontesegger
29504,0,Change has been successfully merged into the git repository by Eike Stepper
29506,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1655/ : UNSTABLE
29508,0,Change has been successfully merged into the git repository by Eugen Neufeld
29510,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1653/ : UNSTABLE
29513,0,Change has been successfully rebased as 8e87907f9ad0b94e79f24e80c847bd4859b45299 by Eugen Neufeld
29515,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1654/ : UNSTABLE
29518,0,Change has been successfully rebased as b08dab71a629147198935b09ef1498764a4fb805 by Eugen Neufeld
29520,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1652/ : UNSTABLE
29522,0,Change has been successfully merged into the git repository by Eugen Neufeld
29524,0,Change has been successfully merged into the git repository by Lars Vogel
29529,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
29532,0,Change has been successfully cherry-picked as f2ed4332ed570c34d1f64dad3d4bcdf8a2c6f190 by Stephan Leicht Vogt
29545,0,Change has been successfully merged into the git repository by Matthias Sohn
29548,0,"Patch Set 10:The last patch set should be fine, though I somehow created a rebase mess.It would be great if 52635 [1] could be merged first, so I can fix this on top of master HEAD.[1] https://git.eclipse.org/r/#/c/52635/"
29549,1,"Patch Set 10: Code-Review-1with this change when finishing a feature the squash option doesn't work anymore, I get the error message:An internal error occurred during: ""Finishing feature..."".Cannot combine --squash with --no-ff."
29550,1,"Patch Set 10:> with this change when finishing a feature the squash option doesn't > work anymore, I get the error message: >  > An internal error occurred during: ""Finishing feature..."". > Cannot combine --squash with --no-ff.This should be fixed with the latest patch-set."
29556,0,Change has been successfully cherry-picked as db37d3bc659adecb0f095cff50f2454b14a01126 by Stephan Leicht Vogt
29558,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/emfstore/job/gerrit/132/ : UNSTABLE
29560,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/emfstore/job/gerrit/131/ : UNSTABLE
29562,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/emfstore/job/gerrit/129/ : UNSTABLE
29565,0,Change has been successfully merged into the git repository by Johannes Faltermeier
29568,0,Change has been successfully merged into the git repository by Michael Wenz
29572,0,Change has been successfully merged into the git repository by Markus Knauer
29575,0,Patch Set 3: Code-Review-1(2 comments)Good Work! It works fine on my computer.But there is a little typo problem (Uppercase ate the start of the words)=> the best would probably be to re factor the duplicated work.
29577,0,Patch Set 6: Code-Review+2Great work! I merge that just after gerrit verification
29579,0,Change has been successfully rebased as fa39899e0ca25d3762151f48f68ec9e61f064ee3 by Benoit Maggi
29587,0,Change has been successfully merged into the git repository by Eike Stepper
29593,0,Change has been successfully merged into the git repository by Laurent Redor
29602,0,Patch Set 6:+1 on the rcp start with the beautifull splash screen
29611,0,Change has been successfully rebased as 58f08465350bf95efa64c68900bbfb0852aebd72 by florian noyrit
29616,0,Change has been successfully merged into the git repository by Christian Pontesegger
29619,0,Change has been successfully merged into the git repository by Christian Pontesegger
29622,0,Change has been successfully merged into the git repository by Laurent Goubet
29627,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
29630,1,"Patch Set 1:(1 comment)The bug should be referenced in the commit and vice versa, shouldn't it?"
29633,0,Change has been successfully merged into the git repository by Andreas Sewe
29634,1,"Patch Set 2: Code-Review+1I rebased the commit. You should probably abandon https://git.eclipse.org/r/#/c/52802/One question : public static final String isRequirementElement = ""isRequirementElement"";//NSLIs this //NLS really working ?"
29637,0,Change has been successfully rebased as 5e5ad63f3179ff158df150f017d3f7dab126547f by Patrick Tessier
29643,0,Change has been successfully cherry-picked as 360e1c658f7f44fe02de09fa92655be1a38adf18 by Adrian Sacchi
29645,0,Change has been successfully merged into the git repository by Lars Vogel
29650,0,Change has been successfully merged into the git repository by vincent lorenzo
29653,0,Change has been successfully merged into the git repository by Mickael Istria
29657,0,Change has been successfully merged into the git repository by Andreas Sewe
29661,0,Change has been successfully rebased as f1ca9ccda2e913173ac596256a2ac78b97880e0d by Patrick Tessier
29666,0,Change has been successfully merged into the git repository by Christian Pontesegger
29669,0,Change has been successfully merged into the git repository by Christian Pontesegger
29672,0,Change has been successfully merged into the git repository by Edgar Mueller
29678,0,Change has been successfully rebased as 3a3d693e2032f2b2038791dcf1f30253db8b9f31 by Patrick Tessier
29680,0,Change has been successfully merged into the git repository by Axel RICHARD
29695,0,Change has been successfully merged into the git repository by Axel RICHARD
29698,0,Change has been successfully merged into the git repository by Pierre-Charles David
29701,0,Change has been successfully merged into the git repository by Cedric Brun
29706,0,Change has been successfully merged into the git repository by Axel RICHARD
29714,0,Change has been successfully merged into the git repository by Lars Vogel
29717,0,Patch Set 3: Code-Review+1 Verified+1Looks good to me!
29718,0,Patch Set 3: Code-Review+2 Verified+1Thank you Stefan for this great work !
29722,0,Change has been successfully merged into the git repository by Axel RICHARD
29726,0,Change has been successfully merged into the git repository by Alexander Kurtakov
29730,0,Change has been successfully merged into the git repository by Lars Vogel
29733,0,Change has been successfully merged into the git repository by Markus Knauer
29739,0,Change has been successfully merged into the git repository by Alexander Kurtakov
29745,0,Change has been successfully merged into the git repository by Axel RICHARD
29751,0,Change has been successfully merged into the git repository by Pierre-Charles David
29753,0,Change has been successfully merged into the git repository by Lars Vogel
29759,0,"Patch Set 1: -Code-ReviewYou are right. It is almost, but not quite sorted. ""org.eclipse.recommenders.mylyn.rcp.feature"" should come after ""org.eclipse.recommenders.snipmatch.rcp.feature"", not before.So, I'm fine with sorting all feature.xml's at a later stage."
29763,0,Change has been successfully rebased as 02b8f2dc7cec44282de475035516d0dfd0bb9257 by Markus Knauer
29766,0,Change has been successfully merged into the git repository by Benoit Maggi
29768,0,"Patch Set 1: Code-Review+1Hi Nicolas,your change looks good for me.Seb"
29773,0,Change has been successfully rebased as c84346b691d3ffa874618fceda8259d890ec3bf6 by vincent lorenzo
29776,0,Change has been successfully merged into the git repository by Benoit Maggi
29783,0,Change has been successfully rebased as 4365daab398289109e05c76de4070f0366275f0f by Patrick Tessier
29786,0,Change has been successfully cherry-picked as 6519c4ef3eb70ff549385c731ce6526694e1a748 by Adrian Moser
29790,0,Change has been successfully merged into the git repository by Lars Vogel
29796,0,Change has been successfully rebased as e900208ef35c25fc49c54d9c6a058887c9fcac20 by Benoit Maggi
29799,0,Change has been successfully merged into the git repository by Andreas Sewe
29802,0,Change has been successfully merged into the git repository by Stephane Begaudeau
29806,0,Change has been successfully cherry-picked as 79fab9b365f02809299565c35b1f6b098e7bb265 by Alexander Kurtakov
29812,0,Change has been successfully merged into the git repository by Andreas Sewe
29820,0,Change has been successfully merged into the git repository by Dani Megert
29827,0,Change has been successfully merged into the git repository by Donald Dunne
29829,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3265/ : UNSTABLE
29832,0,Change has been successfully rebased as d510c87df63919ff3d4e943e56f8ada5f0784aca by Doug Schaefer
29836,0,Change has been successfully rebased as 04d9a75a5990ac01b587a18d5d718cd654b94b98 by Marc-Andre Laperle
29839,0,Change has been successfully cherry-picked as 591060ed8afb1d5e26a213299c1c520b3c82a63f by Marc-Andre Laperle
29846,0,Change has been successfully merged into the git repository by Donald Dunne
29851,0,Change has been successfully merged into the git repository by Donald Dunne
29858,0,Patch Set 3: Code-Review+2 Verified+1I fixed a small issue with managed version being added to the dependencies section. Rest looks good. Thanks
29859,0,Change has been successfully merged into the git repository by Fred Bricon
29869,0,Change has been successfully merged into the git repository by David Green
29874,0,Change has been successfully merged into the git repository by Andrey Loskutov
29882,0,Change has been successfully rebased as 607b08344eff5b68ee832fae824fac4517f706f6 by David Green
29885,0,Change has been successfully merged into the git repository by Donald Dunne
29889,0,Change has been successfully merged into the git repository by Fred Bricon
29892,0,Change has been successfully merged into the git repository by Christian Pontesegger
29895,0,Change has been successfully merged into the git repository by Christian Pontesegger
29906,0,Change has been successfully merged into the git repository by Jacques Bouthillier
29910,0,Change has been successfully cherry-picked as 37e1a265528e60d4b39070e1a79b35f24494a12a by Patrick Tasse
29913,0,Change has been successfully cherry-picked as 95ff625aa416273053462ba96d6721cd06be3774 by Jeff Johnston
29916,0,Change has been successfully merged into the git repository by Brian de Alwis
29918,0,"Patch Set 1:Andrey, could you review this one?Thanks Dominic for the contribution."
29923,0,Change has been successfully merged into the git repository by Dirk Fauth
29927,0,Change has been successfully merged into the git repository by Lorenzo Bettini
29931,0,"Patch Set 3: Code-Review+1I haven't fully tested this out to see if it solves the issue, but the code looks fine to me and should resolve things."
29934,0,Change has been successfully cherry-picked as e1bdd90fbb3c1286d364545a15a486ce9718395e by Roland Grunberg
29939,0,Change has been successfully cherry-picked as 3e3dd8de7d0993f3321bd3226974b4b30f328a97 by Jeff Johnston
29954,0,Change has been successfully cherry-picked as 665990bbdcf4ab25ba7521b314cc146cde353f4e by Marc-Andre Laperle
29961,0,Change has been successfully cherry-picked as 13d24bf3ae393add0fb99e4de3ea5209357c47d2 by Jeff Johnston
29964,0,Change has been successfully merged into the git repository by Donald Dunne
29967,0,Change has been successfully merged into the git repository by Jacques Bouthillier
29970,0,Change has been successfully merged into the git repository by Olivier Constant
29972,0,Change has been successfully merged into the git repository by Andrey Loskutov
29973,1,"Patch Set 2:Hallo Andrey,I know this might not be the best place to write this commment, but I'll try it anyway.I think I also discovered some scenario that triggers continues refreshes. When I do a rebase, it takes ages to finish compared to the same operation on the command line. I think (but I might be wrong) it has to do with permanent refreshes/rebuilds after each commit that gets merged/rebased.Maybe what you did in this change can be extended to that use case?thx Michi"
29974,1,"Patch Set 2:> Hallo Andrey, >  > I know this might not be the best place to write this commment, but > I'll try it anyway. > I think I also discovered some scenario that triggers continues > refreshes. When I do a rebase, it takes ages to finish compared to > the same operation on the command line. I think (but I might be > wrong) it has to do with permanent refreshes/rebuilds after each > commit that gets merged/rebased. > Maybe what you did in this change can be extended to that use case? >  > thx MichiMichael,I'm not aware about your particular problem. Best you can do is to report a bug if you can reproduce it. We can continue discussion on the new bug.Regards,Andrey"
29979,0,Change has been successfully merged into the git repository by Michael Vorburger
29982,0,Change has been successfully cherry-picked as 9f7b15620d0221b18bbd81f883f0a522ea5cbef0 by Roland Grunberg
29985,0,Change has been successfully merged into the git repository by Johannes Dorn
29988,0,Change has been successfully merged into the git repository by Jacques Bouthillier
29991,0,Change has been successfully merged into the git repository by Jacques Bouthillier
29994,0,Change has been successfully merged into the git repository by Jacques Bouthillier
29997,0,Change has been successfully merged into the git repository by Dirk Fauth
30000,0,Change has been successfully merged into the git repository by Lorenzo Bettini
30003,0,Change has been successfully merged into the git repository by Michael Vorburger
30006,0,Change has been successfully merged into the git repository by Michael Vorburger
30009,0,Change has been successfully merged into the git repository by Michael Vorburger
30013,0,Change has been successfully merged into the git repository by Michael Vorburger
30016,0,Change has been successfully merged into the git repository by Doug Schaefer
30019,0,Change has been successfully cherry-picked as 0ab9eff99c7dc927a0f2052496e265b64dd92481 by Stephan Leicht Vogt
30024,0,Change has been successfully merged into the git repository by Remi Schnekenburger
30033,0,Change has been successfully rebased as 1e5f8b5ee632eca7b95094fdedb0b31d07e8f4e3 by Ivan Furnadjiev
30036,0,Change has been successfully merged into the git repository by Jacques Bouthillier
30039,0,Change has been successfully merged into the git repository by Manoj Palat
30041,0,Change has been successfully merged into the git repository by Patrick Tessier
30046,0,Change has been successfully pushed.
30050,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/529/ : UNSTABLE
30053,0,Change has been successfully merged into the git repository by Cedric Brun
30057,0,Change has been successfully pushed.
30062,0,Change has been successfully cherry-picked as ef498b198b74a1657a97f257d5f75bf294c7de09 by Adrian Moser
30066,0,Change has been successfully merged into the git repository by Stephane Begaudeau
30069,0,Change has been successfully merged into the git repository by Stephane Begaudeau
30073,0,Change has been successfully merged into the git repository by Pierre-Charles David
30079,0,Change has been successfully merged into the git repository by Dani Megert
30082,0,Change has been successfully merged into the git repository by Dani Megert
30086,0,Change has been successfully merged into the git repository by Patrick Tessier
30089,0,Change has been successfully merged into the git repository by Markus Knauer
30092,0,Change has been successfully merged into the git repository by Michael Vorburger
30095,0,Change has been successfully merged into the git repository by Axel RICHARD
30098,0,Change has been successfully merged into the git repository by Matthias Sohn
30104,0,Change has been successfully merged into the git repository by Matthias Sohn
30109,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1605/ : UNSTABLE
30113,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1615/ : UNSTABLE
30115,0,Change has been successfully merged into the git repository by Eugen Neufeld
30118,0,Change has been successfully merged into the git repository by Axel RICHARD
30128,0,Change has been successfully merged into the git repository by Esteban DUGUEPEROUX
30131,0,Change has been successfully merged into the git repository by Thomas Watson
30135,0,Change has been successfully merged into the git repository by Thomas Watson
30138,0,Change has been successfully merged into the git repository by Eugen Neufeld
30141,0,Change has been successfully merged into the git repository by Benoit Maggi
30146,0,Change has been successfully merged into the git repository by Benoit Maggi
30150,0,Change has been successfully merged into the git repository by Andrew Eidsness
30152,0,Change has been successfully merged into the git repository by Dani Megert
30157,0,Change has been successfully merged into the git repository by Ian Craggs
30163,0,Change has been successfully merged into the git repository by Cedric Brun
30166,0,Change has been successfully merged into the git repository by Lorenzo Bettini
30170,0,Change has been successfully merged into the git repository by Marcel Bruch
30172,0,Patch Set 2:> Looks good to meDo you usually wait for two +1s or can I give another +1 as the owner of this change?
30174,1,"Patch Set 3:> Do you usually wait for two +1s or can I give another +1 as the owner > of this change?I make it dependent on the complexity of the change. Simple fixes or enhancements I upload to Gerrit, wait for the build validation and merge it myself. Other changes which might be controversial I upload to Gerrit, let them there for a while and then I commit them. Potential controversial changes, I add people to the review or bug report and ask them for their opinion. In this case, you can just merge it via +2 and submit it, the change looks relatively simple and is necessary to test your model change."
30176,0,Change has been successfully merged into the git repository by Jonas Helming
30188,0,Change has been successfully merged into the git repository by Maxime Porhel
30191,0,Change has been successfully merged into the git repository by Marcel Bruch
30194,0,"Patch Set 1:Thanks Jonas, looks good to me. Simon, can you please also review? I think that is the first usage of your new FilteredTree in the Eclipse platform."
30197,0,"Patch Set 6: Code-Review+1 Verified+1Looks good from the code, I did not test this change but I trust Jonas did."
30198,0,"Patch Set 6: Code-Review+1Thank you, Jonas!"
30202,0,"Patch Set 7:> Looks good from the code, I did not test this change but I trust > Jonas did.Can this be merged, now?"
30204,0,Change has been successfully merged into the git repository by Jonas Helming
30208,0,Patch Set 2:This means using new PatternFilter(true) rather than only new PatternFilter()
30216,0,Change has been successfully merged into the git repository by Lorenzo Bettini
30220,0,Change has been successfully merged into the git repository by Manoj Palat
30223,0,Change has been successfully merged into the git repository by Donald Dunne
30224,0,Patch Set 1:sry forgot about this bug. looks good.
30227,0,Change has been successfully cherry-picked as b931f6a6b8155fa81ba75c0d1048e2b95f4b5abb by Andi Bur
30230,0,Change has been successfully merged into the git repository by Tobias Oberlies
30234,0,Change has been successfully rebased as dd99c91e069b69c264c4dae41e0e03c6e7b3f730 by Gunnar Wagenknecht
30236,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/921/ : UNSTABLE
30238,0,Change has been successfully merged into the git repository by Pavel Agapov
30242,0,Change has been successfully merged into the git repository by Thomas Schindl
30245,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3233/ : UNSTABLE
30250,0,Change has been successfully rebased as 49cfd17ccb7266df699bf0c37421b901fad098dc by Doug Schaefer
30254,0,Change has been successfully merged into the git repository by Matthias Sohn
30260,0,Change has been successfully merged into the git repository by Ernesto Posse
30264,0,Change has been successfully merged into the git repository by Matthias Sohn
30273,0,Change has been successfully merged into the git repository by Doug Schaefer
30281,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7440/ : UNSTABLE
30282,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7441/ : UNSTABLE
30283,1,"Patch Set 1: Code-Review-1(8 comments)if a repository already contains a commit and a master branch and the user chooses a non-default name e.g. ""master1"" for the master branch this branch doesn't exist at that point. If later a release is finished gitflow tries to switch to the non existing non-default master branch ""master1"". Since this doesn't exist it raises an internal error:An internal error occurred during: ""Finishing release..."".No branch 'master1' found.Would be better to ask the user on init to create the non-default master branch or create it as part of init."
30285,1,"Patch Set 1:> (8 comments) >  > if a repository already contains a commit and a master branch and > the user chooses a non-default name e.g. ""master1"" for the master > branch this branch doesn't exist at that point. If later a release > is finished gitflow tries to switch to the non existing non-default > master branch ""master1"". Since this doesn't exist it raises an > internal error: >  > An internal error occurred during: ""Finishing release..."". > No branch 'master1' found. >  > Would be better to ask the user on init to create the non-default > master branch or create it as part of init.Thanks for figuring this out. I will check what the reference implementation does in this case, and open a new bug."
30288,0,Change has been successfully merged into the git repository by Matthias Sohn
30291,1,Abandonedtest 1
30295,1,Abandonedtest
30301,0,Change has been successfully merged into the git repository by Jacques Bouthillier
30308,0,Change has been successfully merged into the git repository by Ernesto Posse
30311,0,Change has been successfully merged into the git repository by Chuck Bridgham
30315,0,Change has been successfully merged into the git repository by Mickael Istria
30316,1,Patch Set 2: Code-Review+1I like this. It's less error-prone to be able to chain contextMenu() calls
30324,0,Change has been successfully merged into the git repository by John Misinco
30327,0,Change has been successfully merged into the git repository by Brian de Alwis
30329,1,"Patch Set 1:What is the use-case for including the line.separator? (If the file itself has Windows EOL's in it, then that alone, is a problem)."
30330,0,"Patch Set 1: Code-Review+2 Verified+1Ah, I've read the bug, and seen the file. Odd that is ""worked for me"" .. but .. it is wrong, and you are doing it the right way. Thanks!"
30331,0,Change has been successfully merged into the git repository by David Williams
30334,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3236/ : UNSTABLE
30338,0,Change has been successfully rebased as a288931a1bc06bd1ed4015eee19c515c17d028aa by Elena Laskavaia
30340,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3188/ : UNSTABLE
30349,0,Change has been successfully rebased as e8bba9e7b27ff913bf553b4a4975c29fc9ddf1b5 by Elena Laskavaia
30352,0,Change has been successfully merged into the git repository by Johannes Faltermeier
30356,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/emfstore/job/gerrit/99/ : UNSTABLE
30359,0,Change has been successfully merged into the git repository by Lorenzo Bettini
30362,0,Change has been successfully merged into the git repository by Mark Macdonald
30365,0,Change has been successfully merged into the git repository by Lars Vogel
30373,0,Change has been successfully pushed.
30376,0,Change has been successfully merged into the git repository by Sebastian Struckmann
30378,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/ecoretools.gerrit/19/ : UNSTABLE
30380,0,Change has been successfully merged into the git repository by Cedric Brun
30383,0,Change has been successfully merged into the git repository by Cedric Brun
30386,0,Change has been successfully pushed.
30392,0,Change has been successfully merged into the git repository by Mickael Istria
30394,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/486/ : UNSTABLE
30396,0,Change has been successfully merged into the git repository by Stephane Begaudeau
30400,0,Change has been successfully merged into the git repository by Edgar Mueller
30403,0,"Patch Set 2:I've left some (very) small remarks, otherwise looks good to me."
30407,0,Change has been successfully merged into the git repository by Benoit Maggi
30410,0,Change has been successfully merged into the git repository by Jonas Helming
30412,0,Patch Set 2: Code-Review-1(8 comments)Nice addition
30415,0,Patch Set 3: Code-Review-1(1 comment)Works well. Please rebase and fix comment. Thanks!
30418,0,"Patch Set 4: Code-Review+1 Verified+1(1 comment)I would have liked more javadoc, but this is a nice addition, let's get it in!"
30419,0,Change has been successfully cherry-picked as 378e6b929fe87540b7969b70b0ef832b09cf7430 by Bernd Hufmann
30422,0,Change has been successfully cherry-picked as ebc0dbd082942e71ed333e0a8758e9491bc26629 by Stephan Leicht Vogt
30424,0,Change has been successfully merged into the git repository by Esteban DUGUEPEROUX
30434,0,Change has been successfully merged into the git repository by Johannes Faltermeier
30442,0,Change has been successfully merged into the git repository by Esteban DUGUEPEROUX
30445,0,Change has been successfully merged into the git repository by Lars Vogel
30448,0,Change has been successfully merged into the git repository by Christian Pontesegger
30451,0,Change has been successfully merged into the git repository by Christian Pontesegger
30453,0,Change has been successfully merged into the git repository by Maxime Porhel
30463,0,Change has been successfully merged into the git repository by Johannes Faltermeier
30466,0,Change has been successfully merged into the git repository by Jay Arthanareeswaran
30469,0,Change has been successfully merged into the git repository by Eugen Neufeld
30477,0,Change has been successfully rebased as 51e9477e58f67c235da266c69769579623b2b31b by Remi Schnekenburger
30481,0,Change has been successfully merged into the git repository by Christian Pontesegger
30484,0,Change has been successfully merged into the git repository by Christian Pontesegger
30487,0,Change has been successfully merged into the git repository by Sergey Prigogin
30489,0,Change has been successfully merged into the git repository by Mateusz Matela
30495,0,Change has been successfully merged into the git repository by Andrey Loskutov
30497,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6656/ : UNSTABLE
30498,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6672/ : UNSTABLE
30502,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6647/ : UNSTABLE
30506,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6653/ : UNSTABLE
30508,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6538/ : UNSTABLE
30509,0,"Patch Set 1: Code-Review-1(1 comment)nice idea, thanks for working on this"
30511,0,"Patch Set 1:> don't make changes depend on each other if they are not related to each other, providing dirty decoration for a repository is completely unrelated to multi push supportSorry, I forgot to reset my workspace. Thanks for this information."
30512,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6545/ : UNSTABLE
30520,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6648/ : UNSTABLE
30526,0,Change has been successfully rebased as ff145d23d4650a583e2981f183e1bd2e622d8773 by Michal Niewrzal
30530,0,Change has been successfully rebased as c4c90b79d1a237173dad695f0a5562d0a899b3ef by Michal Niewrzal
30532,1,"Patch Set 1:I removed extensions from RFC and also regenerated language mode.Unfortunately when I took deeper look into generated code I found that stubs are far from perfect. PDT stubs are missing many methods/fields/types descriptions, parameters names were without $ and in wrong order ('name type' instead of 'type name'). I fixed only parameters issue and description for some core types. Language mode should be also rebuilded before PDT release and later after PHP7 official release. It would be nice to improve stubs generator before last rebuild. I will create issue for that."
30536,0,Change has been successfully merged into the git repository by Sergey Prigogin
30539,0,Change has been successfully merged into the git repository by Andrey Loskutov
30542,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7448/ : UNSTABLE
30544,0,Change has been successfully merged into the git repository by Andrey Loskutov
30547,0,Change has been successfully pushed.
30551,0,Change has been successfully merged into the git repository by Matthias Sohn
30555,0,Change has been successfully merged into the git repository by Matthias Sohn
30556,0,"Patch Set 3:* I am not sure a check mark is the best visualization of a gitflow enabled repository, it doesn't look flow-ish ;-) * Does gitflow have some recognizable icon ?* otherwise this change looks good"
30568,0,Change has been successfully merged into the git repository by Matthias Sohn
30576,0,Change has been successfully merged into the git repository by Sarika Sinha
30580,0,Change has been successfully merged into the git repository by Sarika Sinha
30584,0,Change has been successfully rebased as 49b2df104cff4f21034101f2eca5f314207d4b19 by Thierry BLIND
30586,0,Change has been successfully pushed.
30588,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3226/ : UNSTABLE
30590,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3227/ : UNSTABLE
30592,0,Change has been successfully merged into the git repository by Sergey Prigogin
30596,0,Change has been successfully rebased as bea6a49e5bc0c807298272b92df7c1eb0a570f97 by Sergey Prigogin
30600,0,Change has been successfully rebased as 71ed78fcbef9ef8e620ab9a2d043763981bcaeaf by Doug Schaefer
30603,0,Change has been successfully merged into the git repository by Greg Watson
30607,0,Change has been successfully merged into the git repository by Greg Watson
30610,0,Change has been successfully merged into the git repository by Greg Watson
30613,0,Change has been successfully merged into the git repository by Dawid Pakula
30617,0,Change has been successfully merged into the git repository by Greg Watson
30621,0,Change has been successfully merged into the git repository by Ernesto Posse
30625,0,Patch Set 2: Code-Review+1This is fine in my opinion
30626,0,Change has been successfully cherry-picked as 1904e6a4daa5b6731c6072ec9e2b073654410a6c by Bernd Hufmann
30630,0,"Patch Set 1: Code-Review+1 Verified-1(1 comment)The change itself looks fine, but the regular expression should be a little more permissive."
30631,1,Patch Set 1: Code-Review+2 -VerifiedChanging to approved since it would seem newer versions of docker-client support a more restrictive regular expression. This should probably be used instead.
30632,0,Change has been successfully cherry-picked as bdc852a3ba08d687015a97f7703ee87088fa3250 by Roland Grunberg
30636,0,Change has been successfully merged into the git repository by Ernesto Posse
30638,1,"Patch Set 8:Added some logic so that you cannot produce a comment popup on the same comment thread (checks the review item's ID (which has the review ID, patch set ID and file name) and the line number).  So you can edit multiple comments at a time as long as they are not the same comment. Also fixed a problem with the comment popup closing when there is text in the popup text area.  As long as there is text in the text area, the popup will not close."
30639,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/923/ : UNSTABLE
30641,1,Patch Set 12: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/941/ : UNSTABLE
30643,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/939/ : UNSTABLE
30645,1,Patch Set 18: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/950/ : UNSTABLE
30649,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/903/ : UNSTABLE
30653,1,Patch Set 14: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/943/ : UNSTABLE
30655,1,Patch Set 11: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/940/ : UNSTABLE
30659,0,Change has been successfully merged into the git repository by Sam Davis
30661,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/922/ : UNSTABLE
30663,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/920/ : UNSTABLE
30667,1,Patch Set 17: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/949/ : UNSTABLE
30669,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/919/ : UNSTABLE
30671,1,Patch Set 16: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/948/ : UNSTABLE
30673,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/924/ : UNSTABLE
30674,0,"Patch Set 9:(4 comments)This seems to work nicely. I found a couple more issues:* click next comment* click in compare editor* the comment should close, but it remains openCtrl+enter should save without inserting a new line.Also, I think we should change the criteria for when the popup can be closed, if we can. Instead of preventing it from closing whenever there is any text in the text area, can we prevent it from closing whenever there are unsaved changes in the text area? So if I click on a draft comment and don't change what's there, it should close if I click outside the popup, and if I click on a draft and delete all the text in the editor, the popup should remain open. Don't bother if this is non-trivial - I'd rather get this in in it's current form and change that later."
30677,1,Patch Set 13: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/942/ : UNSTABLE
30681,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/910/ : UNSTABLE
30682,0,"Patch Set 3:(1 comment)This looks great! I found a few issues:* the next/previous comment buttons bring up the tooltip with the edit box activated* after typing some text, if you click on a different comment, the text you typed is lost* same thing if you click the editor and hover on a different comment annotation* it would be nice if ctrl+enter would save and close* should probably disable the reply done button when there is text in the edit box"
30685,1,Patch Set 23: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/955/ : UNSTABLE
30686,0,"Patch Set 23:Thanks, this looks good."
30689,1,Patch Set 15: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/944/ : UNSTABLE
30694,1,Patch Set 19: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/951/ : UNSTABLE
30695,0,"Patch Set 19:(1 comment)Looks good. On second thought, it seems like it would make more sense to move the edit table into the comment editor. What do you think?"
30699,1,"Patch Set 20:(3 comments)Added functionality to edit comment threads with multiple drafts.  Clicking non-draft comments will still edit the last draft in the comment thread if it exists.  Since there can potentially be multiple draft comments in a thread, we removed the caching of values (so values are no longer saved when we cancel the editor).  Also while the editor is open, it will not switch over to other drafts upon clicking them.To reflect these changes, we are now using a Multimap to represent the open and editable dialogs.  Also, I removed a test related to the saving of strings and edited another test to reflect the changes in what comment is displayed in the text box."
30701,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/905/ : UNSTABLE
30704,1,Patch Set 22:Added comments to the new classes.I also added a test to CommentPopupDialogTest (testEditableHoverCommentAndEditorOpennedFirst()) while adding comments because one of the test cases was confusing and wasn't thorough enough.
30705,1,Patch Set 22: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/954/ : UNSTABLE
30706,0,"Patch Set 22:Chris, I think there was a miscommunication because I wasn't expecting you to add Javadoc to all of the methods. As much as possible, a method name should describe what the method does and Javadoc should be unnecessary. Some of the Javadocs you added are really useful, but some of them don't really add much (e.g. ""Disposes the help text"" or ""@return true if the dialog is editable, false otherwise""). Can you take out the ones that aren't really needed?"
30707,1,Patch Set 22:Removed some of the unnecessary Javadoc comments.
30708,0,Patch Set 24: Verified+1 Code-Review+2IP review completed successfully.
30712,1,Patch Set 21: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/953/ : UNSTABLE
30714,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/921/ : UNSTABLE
30718,0,Change has been successfully rebased as f003f443dd4b4b6e73aecb0f51adbed74b68f4ad by Ernesto Posse
30720,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/913/ : UNSTABLE
30721,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/914/ : UNSTABLE
30723,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/917/ : UNSTABLE
30726,0,Change has been successfully rebased as 5a7cf080ebd4fbd915ef4881d814c9777ffae73c by Sam Davis
30728,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/918/ : UNSTABLE
30733,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/909/ : UNSTABLE
30735,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/906/ : UNSTABLE
30737,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/904/ : UNSTABLE
30739,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/908/ : UNSTABLE
30741,1,Patch Set 13: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/936/ : UNSTABLE
30746,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/911/ : UNSTABLE
30750,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/915/ : UNSTABLE
30753,0,Change has been successfully merged into the git repository by Brian de Alwis
30758,0,"Patch Set 2:(3 comments)Thanks for the quick review, Lars.  I'll address these issues in the next patch."
30763,0,Change has been successfully rebased as 23bb14def0501c292b9f8abb2a4d9f5744748f86 by Tim Buschtoens
30768,0,Change has been successfully merged into the git repository by Gregoire Dupe
30775,0,Change has been successfully merged into the git repository by Johannes Faltermeier
30777,0,Change has been successfully merged into the git repository by Johannes Faltermeier
30782,0,Change has been successfully merged into the git repository by Jay Arthanareeswaran
30785,0,Change has been successfully merged into the git repository by Christian Halstrick
30788,0,Change has been successfully merged into the git repository by Johannes Faltermeier
30791,0,Change has been successfully merged into the git repository by Johannes Faltermeier
30797,0,Change has been successfully merged into the git repository by Dawid Pakula
30801,0,Change has been successfully merged into the git repository by Gregoire Dupe
30803,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4225/ : UNSTABLE
30806,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4240/ : UNSTABLE
30816,0,Change has been successfully merged into the git repository by Maxime Porhel
30819,0,Change has been successfully merged into the git repository by Gregoire Dupe
30821,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/901/ : UNSTABLE
30823,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/908/ : UNSTABLE
30825,0,Change has been successfully merged into the git repository by Pavel Agapov
30827,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/887/ : UNSTABLE
30831,0,Change has been successfully merged into the git repository by Doug Schaefer
30834,0,Change has been successfully merged into the git repository by Shawn Pearce
30838,0,Change has been successfully rebased as 25f5101a75942c447073806debe23cf5f9b2a1c3 by Michal Niewrzal
30841,0,Change has been successfully merged into the git repository by Christian Pontesegger
30845,0,Change has been successfully rebased as 95ca88f0ee4606a56649151002889e811a8e7958 by Michal Niewrzal
30847,0,"Patch Set 2:Can you change ""inspect"" into ""Inspect""?:)"
30848,0,Patch Set 2: Verified+1I'm talking about command label and I forgot to mention that for me everything works ok:)
30850,1,"Patch Set 1:Just to clarify the patch proposal form...As we already discussed it would be nice to have both shortcuts for Inspect available for the user, Ctrl + Shift + N as it is the one that is used right now for PHP and Ctrl + Shift + I that is a general shortcut for Inspect. The simplest solution would be to add a second key binding but the problem is that when we do so, we never know which one of the shortcuts will appear in the Inspect action label (Eclipse do not care about the order of key bindings while loading them). As we wanted to show Ctrl + Shift + I as the key for the action, then the proposed solution will do the job.Maybe it is not too sophisticated but it works ;)"
30853,0,Change has been successfully merged into the git repository by Christian Pontesegger
30856,0,Change has been successfully merged into the git repository by Christian Pontesegger
30859,0,Change has been successfully merged into the git repository by Christian Pontesegger
30862,0,Change has been successfully merged into the git repository by Christian Pontesegger
30865,0,Change has been successfully merged into the git repository by Christian Pontesegger
30868,0,Change has been successfully merged into the git repository by Christian Pontesegger
30871,0,Change has been successfully merged into the git repository by Christian Pontesegger
30877,0,"Patch Set 7:> the generated combined commit message has a couple of problems: > * the meta data of the original commits should be included > commented out (starting with a #) in order to avoid that it ends up > in the squashed commit's message > * the commit messages of the original commits should not be > indented since if the user wants to edit the message he typically > will have to remove the leading whitespace in front of the original > message texts > * text in the commit message of the squashed commit which is > commented out (starting with # in first column) isn't removed from > the squash commit's message when the commit message edit dialog is > finishedSo there are two commands with different formats:- MergeCommand, which generates the format we currently see- RebaseCommand, which generates a format that is easier to edit, and the one you would preferI see your point, but I would keep the current implementation for now, simply because it conforms with the reference implementation (see my comment in 471026).I think this will make adoption of ""EGit Gitflow"" easier in the short term. In the long term, it would be good to have some user feedback about this.Maybe we should request an enhancement on GitHub and see what the Gitflow community thinks about this."
30884,0,Change has been successfully merged into the git repository by Matthias Sohn
30891,1,"Patch Set 3:> why do you want to allow to amend the squashed commit ?The one thing I was missing previously was Repository::readSquashCommitMsg but now I think I can handle it differently.However, there are two issues:- CommitMessageEditorDialog has ""Interactive Rebase"" in its title, and I cannot change it programmatically- The CommitDialog has the advantage that it allows to use the ""add change-id"" and ""sign-off"" which I use heavily in combination wit Gitflow> do you check on ""Finish feature"" with squash that none of the files being squashed is dirty ?Not yet, but I should.I can amend the parent commit or fix it in a separate patch set. Which do you prefer?"
30892,1,"Patch Set 3:> > why do you want to allow to amend the squashed commit ? >  > The one thing I was missing previously was Repository::readSquashCommitMsg > but now I think I can handle it differently. > However, there are two issues: > - CommitMessageEditorDialog has ""Interactive Rebase"" in its title, > and I cannot change it programmaticallyyou could add another parameter ""title"" to its constructor in order to allow configuring the title > - The CommitDialog has the advantage that it allows to use the ""add > change-id"" and ""sign-off"" which I use heavily in combination wit > Gitflow ok. These two actions are also missing for interactive rebase's reword and squash.What are you using change-id for ? Or do you use git-flow with Gerrit ?We could change CommitMessageEditorDialog to use CommitMessageComponent instead of SpellcheckableMessageArea in order to enable setting sign-off and change-id for squashing during rebase interactive, squashing from history view and squash merging from git-flow's ""feature finish"" with the squash option.What feels wrong with using the commit dialog for this purpose ist that it shows an empty useless file-list for the squash cases. > > do you check on ""Finish feature"" with squash that none of the > files being squashed is dirty ? >  > Not yet, but I should.yes, that's important > I can amend the parent commit or fix it in a separate patch set. > Which do you prefer?I would prefer to amend the parent commit"
30893,1,"Patch Set 3:> you could add another parameter ""title"" to its constructor in order > to allow configuring the titleDone. > ok. These two actions are also missing for interactive rebase's > reword and squash. > What are you using change-id for ? Or do you use git-flow with > Gerrit ?Yes. See 468885It is the main reason for me to implement the squash option for feature finish. > We could change CommitMessageEditorDialog to use CommitMessageComponent > instead of SpellcheckableMessageArea in order to enable setting > sign-off and change-id for squashing during rebase interactive, > squashing from history view and squash merging from git-flow's > ""feature finish"" with the squash option.I'll file a new enhancement request.  > What feels wrong with using the commit dialog for this purpose ist > that it shows an empty useless file-list for the squash cases. >  > > > do you check on ""Finish feature"" with squash that none of the > > files being squashed is dirty ? > > > > Not yet, but I should. > yes, that's importantDone. >  > > I can amend the parent commit or fix it in a separate patch set. > > Which do you prefer? >  > I would prefer to amend the parent commitDone."
30898,0,Change has been successfully merged into the git repository by Andrey Loskutov
30902,0,Change has been successfully merged into the git repository by Andrey Loskutov
30913,0,Change has been successfully merged into the git repository by Matthias Sohn
30916,0,Change has been successfully merged into the git repository by Ralph Mueller
30920,0,Change has been successfully cherry-picked as 7bc033eafd7b83604c49d4e01ca018dc72159abe by Alexandre Montplaisir
30922,1,"Patch Set 1:Got a hang on this test:https://ci.lttng.org/view/Trace%20Compass/job/tracecompass-master-linux/JAVA_TO_USE=OpenJDK-7,SWT_GTK3=0,WM=metacity,label=x86-64,target-platform=tracecompass-eStaging/18/console"
30924,0,Change has been successfully pushed.
30927,0,Change has been successfully merged into the git repository by David Green
30930,0,Change has been successfully merged into the git repository by Christian W. Damus
30933,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
30937,0,"Patch Set 3:There's no need for a long value, the alpha value can be stored in the leftmost byte of the integer."
30940,0,Change has been successfully merged into the git repository by Christian W. Damus
30943,0,Change has been successfully merged into the git repository by David Green
30945,0,Change has been successfully pushed.
30951,0,Change has been successfully merged into the git repository by David Green
30954,0,Change has been successfully merged into the git repository by David Green
30958,0,Change has been successfully cherry-picked as 6fcad7628cd5ce116d9288e2e6018bc05b8781f7 by Bernd Hufmann
30962,0,Patch Set 1:This seems like a perfectly good change but it very odd that it should pick up something outside of p2/osgi/bundle. How did you determine it was using the one from .cache?
30964,0,"Patch Set 1:> FluentIterable was introduced in 12.0. Should we put 12.0 as the > minimum version?I think it's safer to go with the version that we know works as a base. Otherwise, would we know for sure that 12.0 works?"
30969,0,"Patch Set 1:> This seems like a perfectly good change but it very odd that it > should pick up something outside of p2/osgi/bundle. How did you > determine it was using the one from .cache?I did a grep: find . | grep  guavaBTW, I would keep it at 15.0."
30970,1,"Patch Set 1:Yea it'd be time-consuming and probably not worth it to find the exact minimum version required everywhere. But we can do a best effort, and when we see problems rising up like this one, then we can set the version we need.I've tried building with the staging target and with ""12.0.0"", and it works, because then it does not pickup the 10.0 one. I tested that at least ;)"
30971,1,"Patch Set 1:> BTW, I would keep it at 15.0.15.0 is an arbitrary version, we use that one because that's the latest one that happens to be in Orbit. When we move to 19.0, would you bump all the dependencies to 19.0 too?"
30972,1,"Patch Set 1:> > BTW, I would keep it at 15.0. >  > 15.0 is an arbitrary version, we use that one because that's the > latest one that happens to be in Orbit. When we move to 19.0, would > you bump all the dependencies to 19.0 too?It's not totally arbitrary, we need to use the latest because of https://bugs.eclipse.org/bugs/show_bug.cgi?id=474180"
30974,1,Patch Set 1:So... back to the real problem: why is it picking up anything else than what's in our target? Sounds like a bug in Tycho
30975,1,"Patch Set 1:> > > BTW, I would keep it at 15.0. > > > > 15.0 is an arbitrary version, we use that one because that's the > > latest one that happens to be in Orbit. When we move to 19.0, > would > > you bump all the dependencies to 19.0 too? >  > It's not totally arbitrary, we need to use the latest because of > https://bugs.eclipse.org/bugs/show_bug.cgi?id=474180A more descriptive one is https://bugs.eclipse.org/bugs/show_bug.cgi?id=427862"
30976,1,Patch Set 1:> why is it picking up anything else than what's in our target? Sounds like a bug in TychoIt seems to happen only with the staging target too: https://ci.lttng.org/view/Trace%20Compass/job/tracecompass-master-linux/34/Maybe that can help pinpoint the problem? However both targets specify the same Guava version...
30977,1,Patch Set 1:> > why is it picking up anything else than what's in our target? > Sounds like a bug in Tycho >  > It seems to happen only with the staging target too: > https://ci.lttng.org/view/Trace%20Compass/job/tracecompass-master-linux/34/ >  > Maybe that can help pinpoint the problem? However both targets > specify the same Guava version...It looks like a nested jar. It could be newly added in stagging (post-mars) in EMF. I'll verify that. I don't know why it would be on the compiler's classpath though.
30978,1,Patch Set 1:> > > why is it picking up anything else than what's in our target? > > Sounds like a bug in Tycho > > > > It seems to happen only with the staging target too: > > https://ci.lttng.org/view/Trace%20Compass/job/tracecompass-master-linux/34/ > > > > Maybe that can help pinpoint the problem? However both targets > > specify the same Guava version... >  > It looks like a nested jar. It could be newly added in stagging > (post-mars) in EMF. I'll verify that. I don't know why it would be > on the compiler's classpath though.I can reproduce locally. The only things I see from .cache are the nested jars from emf. This folder must be the location that Tycho extracts nested jars before compiling.[DEBUG]  /home/user/.m2/repository/.cache/tycho/org.eclipse.emf.emfstore.common-1.5.0.v20150609-1145.jar/lib/org.apache.commons.lang_2.4.0.v201005080502.jar[+com/google/common/base/*:+com/google/common/collect/*:?**/*][DEBUG]  /home/user/.m2/repository/.cache/tycho/org.eclipse.emf.emfstore.common-1.5.0.v20150609-1145.jar/lib/org.apache.commons.io_2.2.0.v201405211200.jar[+com/google/common/base/*:+com/google/common/collect/*:?**/*][DEBUG]  /home/user/.m2/repository/.cache/tycho/org.eclipse.emf.emfstore.common-1.5.0.v20150609-1145.jar/lib/com.google.guava_10.0.1.v201203051515.jar[+com/google/common/base/*:+com/google/common/collect/*:?**/*]Why just the staging target I don't know why yet. But 4.5 target doesn't use the simrel so it's much more restrictive so that's something to pursue.
30984,0,Change has been successfully merged into the git repository by Donald Dunne
30992,0,Change has been successfully merged into the git repository by Andrey Loskutov
30997,0,Change has been successfully pushed.
31000,1,"Patch Set 1: Code-Review-1Brian, I would log with the stack trace, otherwise we will see later unmotivated bug reports with no idea why and who produces the issue."
31004,1,Patch Set 2: Code-Review+2 Verified+1Sorry Andrey ÔÇö these log messages are just specializations of what was already there.  I want to avoid this NPE and spend time dealing with the underlying issue.
31005,0,Change has been successfully merged into the git repository by Brian de Alwis
31009,0,Change has been successfully merged into the git repository by Andrey Loskutov
31012,0,Change has been successfully merged into the git repository by Donald Dunne
31018,0,Change has been successfully merged into the git repository by David Williams
31021,0,Change has been successfully merged into the git repository by David Williams
31028,0,Change has been successfully merged into the git repository by Stefan Xenos
31035,0,Change has been successfully pushed.
31041,0,Change has been successfully rebased as e418b6ef2d3fb5401c4504f1f94b1b9bfdda29bb by Ernesto Posse
31046,0,Change has been successfully merged into the git repository by Shawn Pearce
31052,0,Change has been successfully merged into the git repository by Ernesto Posse
31054,0,Change has been successfully merged into the git repository by Dirk Fauth
31056,0,Patch Set 1: Code-Review+2 Verified+1Looks great. Thanks Dirk.
31060,0,Change has been successfully cherry-picked as 67a20d7ac317f54f17bfceaa5538aa3c49572ce4 by Roland Grunberg
31070,0,Change has been successfully merged into the git repository by Johannes Dorn
31074,0,Change has been successfully merged into the git repository by Johannes Dorn
31076,0,Change has been successfully merged into the git repository by Lars Vogel
31082,0,Change has been successfully merged into the git repository by Gregoire Dupe
31085,0,Change has been successfully merged into the git repository by Gregoire Dupe
31089,0,"Patch Set 3:(14 comments)Thanks, Yannick!I a have still to verify how your patch works. Meanwhile, you can do some clean up on the code as suggested in the internal comments."
31099,0,"Patch Set 2:(13 comments)Hi at begin, thank you for your contribution! Nice to see fresh blood :PI made initial review. Ask here if you need assist."
31100,0,Patch Set 2:(2 comments)Thanks for the review
31102,1,"Patch Set 2:I'm currently on a holiday, will update the review in a week or two when I get back. Sorry for the delay."
31104,0,"Patch Set 2:Yannick, I hope you had a restful vacation and you can spend some time on this contribution. If we manage to finish it in the next weeks, it will ship with Eclipse Mars SR1 and make lots of PHP developers happy."
31108,0,Patch Set 13: Code-Review+1 Verified+1Works good! Enhancements should be reported as separate bugs.
31109,0,Patch Set 13:> Works good! Enhancements should be reported as separate bugs.Yay :D ... okay what do I do now?
31111,0,Patch Set 13: Verified+1We will need to adjust it to PHP7 later but besides that everything works ok:) Great job Yannick!
31112,1,Patch Set 13: Verified-1I think I found a bug. If there is en empty line between two use statements then then the statements above the empty line are sorted separately than the statements below the line. I would expect that all the use statements are sorted together and the empty line is removed (this is the behavior we have in JDT).
31113,0,Patch Set 13:BTW. It would be nice to add some test cases for this new feature. Are we going to make this with this patch or later?
31114,1,"Patch Set 13:To reply to both comments: > I think I found a bug. If there is en empty line between two use > statements then then the statements above the empty line are sorted > separately than the statements below the line. I would expect that > all the use statements are sorted together and the empty line is > removed (this is the behavior we have in JDT).I did this on purpose, since I could not detect if there were only empty lines in between blocks. I could try to fix this if you like > BTW. It would be nice to add some test cases for this new feature. > Are we going to make this with this patch or later?I have very little experience with writing tests in JAVA (only with PHPUnit) so I need some help with that. Might be best to do it in a separate review"
31115,0,"Patch Set 13: Code-Review+1 Verified+1OK. Let's have the issue in the empty line in a separate bug. It's pretty minor, so let's not block this valuable feature because of it.Same for test cases. We have a very nice test framework in PDT. Adding new test cases should be quite easy. We can do this in a separate bug."
31116,0,"Patch Set 13:Hi, when patch will be merged I will create additional issue to add test cases. Tests for validation can be added easily in form of such cases: https://gist.github.com/mniewrzal/c983afcc6a44ac1667de. To test statements reorganization we probably need implement something additional:)"
31118,0,"Patch Set 13: Code-Review+2As I promise. No objections, so merge ;)"
31120,0,Change has been successfully rebased as b6a388ef1db6bddabb589c7f6636102f16f42f8a by Dawid Pakula
31122,1,Patch Set 10:As I see action have troubles if in in file are two namespaces.
31123,1,Patch Set 10:> As I see action have troubles if in in file are two namespaces.can you give an example I can test with?
31124,1,"Patch Set 10: Verified-1(In reply to comment #70)> Patch Set 10:> > > As I see action have troubles if in in file are two namespaces.> > can you give an example I can test with?See this gist, https://gist.github.com/zulus/b07777b9ea3b2e71990a"
31129,0,"Patch Set 11:> Now both are marked as correct :P >  > I expected that second ""use Any\NS\MyClass"" will be marked as > unused and removed on cleanup.yes, this is due to the way I check if something is used by just using a regex on the file. I cannot use the AST for this since it will then mark stuff in comment blocks as unused.I rather have too few marked as unused than too much. See your remark on set 2 about this"
31130,1,"Patch Set 11:You can do this in two strategies:# If no namespaces or NamespaceDeclaration#isBracketed() == false, do as now (only one namespace)# If namespace have isBracketed() == true, ignore matches outside NamespaceDeclaration#sourceStart / NamespaceDeclaration#sourceEnd"
31137,0,Patch Set 14:Issue for tests created https://bugs.eclipse.org/bugs/show_bug.cgi?id=474955 :)
31138,0,"Patch Set 14:> @Thierry do you want add something? If not I'll merge this patch.Hi Dawid,Sorry, I'm quite busy lately to have a deep look inside this patch, but thanx for asking ;) It looks nice as is, so no objections to merge it ;) And thank you to Yannick for his work!"
31139,0,"Patch Set 14:> > @Thierry do you want add something? If not I'll merge this patch. >  > Hi Dawid, > Sorry, I'm quite busy lately to have a deep look inside this patch, > but thanx for asking ;) It looks nice as is, so no objections to > merge it ;) And thank you to Yannick for his work!And I came a little bit late, as it's already merged ;)"
31140,0,"Patch Set 14:> And thank you to Yannick for his work!Your welcome, glad I could contribute to a plugin I've been using for years now.When can I expect my changes to be released in a stable version? Kaloyan said something about Mars SR1."
31148,0,Change has been successfully merged into the git repository by Stephane Begaudeau
31154,0,Change has been successfully merged into the git repository by Laurent Goubet
31161,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/acceleo/job/master-gerrit/450/ : UNSTABLE
31166,0,Change has been successfully merged into the git repository by Johannes Faltermeier
31172,0,Change has been successfully merged into the git repository by Maxime Porhel
31174,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4036/ : UNSTABLE
31178,0,Change has been successfully merged into the git repository by Jonas Helming
31181,0,Change has been successfully merged into the git repository by Markus Keller
31183,0,Patch Set 1: Code-Review+1I have doubts about a missing unit test and the fix scope matching the maintenance release policy. Otherwise it's a nice patch.
31186,0,Change has been successfully cherry-picked as 8efc2c483f98ae87273c93ddc5a2a362caf6140a by Adrian Sacchi
31189,0,Change has been successfully merged into the git repository by Gregoire Dupe
31193,0,Change has been successfully merged into the git repository by Jonas Helming
31195,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1494/ : UNSTABLE
31202,0,Change has been successfully merged into the git repository by Matthias Sohn
31203,1,"Patch Set 12:> please avoid unnecessary rebases, it's better if the reviewer > deciding to accept a change does the final rebase otherwise we end > up in a rebase race and many unnecessary patchsetsI will. Sorry for the inconvenience."
31207,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7390/ : UNSTABLE
31226,0,Change has been successfully pushed.
31229,0,Change has been successfully rebased as f635f6c7d84808738b9b5e8abca2b6515cce09a4 by Andrew Gvozdev
31231,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3178/ : UNSTABLE
31236,0,Change has been successfully merged into the git repository by Lars Vogel
31238,0,"Patch Set 4:@Christian: don't mind that I put you on so many reviews, but it looks that most of committers are busy or on vacation :-)"
31249,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7412/ : UNSTABLE
31250,0,Change has been successfully merged into the git repository by Matthias Sohn
31255,0,Change has been successfully merged into the git repository by Gregoire Dupe
31259,0,Change has been successfully merged into the git repository by Gregoire Dupe
31262,0,Change has been successfully merged into the git repository by Christian Krause
31267,0,Change has been successfully merged into the git repository by Lars Vogel
31270,0,Change has been successfully merged into the git repository by Lars Vogel
31275,0,Change has been successfully merged into the git repository by Lars Vogel
31278,0,Patch Set 2: Code-Review+2I've changed the implementation to be a little bit simpler and faster. I hope that's okay ;-)
31279,0,Change has been successfully merged into the git repository by Eike Stepper
31282,0,Change has been successfully merged into the git repository by Lars Vogel
31285,0,Change has been successfully merged into the git repository by Lars Vogel
31288,0,Change has been successfully merged into the git repository by Lars Vogel
31291,0,Change has been successfully merged into the git repository by Gregoire Dupe
31295,0,Change has been successfully merged into the git repository by Johannes Dorn
31299,0,Change has been successfully rebased as 0bd6aea4942d84c438434b28757c7a6f012c7cd7 by Ralf Sternberg
31306,0,Change has been successfully merged into the git repository by Laurent Goubet
31311,0,Change has been successfully cherry-picked as 6558afbf0fac603b85f9e66f4c38b7f18cbdd676 by Judith Gull
31313,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2780/ : UNSTABLE
31315,1,Patch Set 1: Code-Review+2Ok for now. But some day we should move this line of code in a utility-class and deal with leading and trailing slashes in order to make it more stable.
31316,0,Change has been successfully cherry-picked as 891fde51fb2000c4552df0fa0d6420a925995b7b by Andre Wegmueller
31319,0,Change has been successfully merged into the git repository by Gregoire Dupe
31328,0,Change has been successfully merged into the git repository by Dirk Fauth
31331,0,"Patch Set 7: Code-Review+1I asume you did another functional check, code looks good to me"
31332,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/6124/ : UNSTABLE
31335,0,Change has been successfully pushed.
31350,0,Change has been successfully pushed.
31365,0,Change has been successfully merged into the git repository by Ralf Sternberg
31368,0,Change has been successfully merged into the git repository by Gregoire Dupe
31374,0,Change has been successfully pushed.
31390,0,Change has been successfully pushed.
31399,1,Patch Set 2: Code-Review-1(2 comments)I haven't finished the review. More to come ...I found a small bug to be fixed
31407,0,Change has been successfully cherry-picked as 9c6c43a1d75da16dc9da982d716e2a7a126a33ce by Patrick Tasse
31411,0,Change has been successfully cherry-picked as 9b9d3c55f79ada815ee86a6968ceb5104aed3d5c by Patrick Tasse
31419,0,Change has been successfully merged into the git repository by Christian Pontesegger
31422,0,Change has been successfully merged into the git repository by Christian Pontesegger
31429,0,Change has been successfully merged into the git repository by Christian Pontesegger
31432,0,Change has been successfully merged into the git repository by Christian Pontesegger
31436,0,Change has been successfully merged into the git repository by Lars Vogel
31439,0,Change has been successfully merged into the git repository by Wim Jongman
31444,0,Change has been successfully merged into the git repository by Sam Davis
31446,0,Change has been successfully merged into the git repository by Sam Davis
31451,0,Change has been successfully merged into the git repository by Dani Megert
31453,0,Change has been successfully merged into the git repository by Dani Megert
31458,0,Change has been successfully cherry-picked as 28736c0021db3c43adb06e18ed96d54f9a8bb08e by Adrian Sacchi
31459,0,"Patch Set 3: Code-Review+2 Verified+1Looks fine, thanks Sopot. Dani needs to decide if this goes into M1"
31461,0,Change has been successfully merged into the git repository by Dani Megert
31467,0,Change has been successfully merged into the git repository by Mathieu Velten
31470,0,Change has been successfully merged into the git repository by Mathieu Velten
31473,0,Change has been successfully cherry-picked as 291ea8c2e4fb0d73cc30ef32e54c0ec87243cac2 by Oli Schmid
31476,0,Change has been successfully cherry-picked as 1a6ffdc4225b5d21274de404c82a8e1c539d3eeb by Oli Schmid
31480,0,Change has been successfully cherry-picked as 9e7c91786c418ae68fdcf0e21fc74fff4c998bc3 by Oli Schmid
31484,0,Change has been successfully cherry-picked as 9efebaf60999721371a4a38f13a0784549020048 by Oli Schmid
31489,0,Change has been successfully cherry-picked as 8e5abe37185eba020e66243030039bd30d9cc144 by Andre Wegmueller
31494,0,Change has been successfully cherry-picked as 0e48eae5b1f5eea853b4889e69ad2612c962795f by Oli Schmid
31500,0,Change has been successfully merged into the git repository by Marcel Bruch
31507,0,Change has been successfully merged into the git repository by Marcel Bruch
31515,0,Change has been successfully rebased as ba4b052f98d1e9af6c002a2fad39fc4e3728597a by Benoit Maggi
31522,0,Change has been successfully merged into the git repository by Marcel Bruch
31525,0,Change has been successfully cherry-picked as 51da33c2448e23f2fc95afef0ab604dea13f952a by Adrian Sacchi
31528,0,Change has been successfully merged into the git repository by Tristan Faure
31531,0,Change has been successfully merged into the git repository by Tristan Faure
31535,0,Change has been successfully merged into the git repository by Marcel Bruch
31538,0,Change has been successfully merged into the git repository by christopher Guindon
31541,0,Change has been successfully merged into the git repository by christopher Guindon
31544,0,"Patch Set 4: Code-Review+1To be merged, thanks"
31546,0,Change has been successfully merged into the git repository by Benoit Maggi
31548,0,"Patch Set 1: Code-Review-1(8 comments)Looks good, some typo problemsSee inline comments.Also Csv is for https://en.wikipedia.org/wiki/Comma-separated_values"
31556,0,Change has been successfully merged into the git repository by Tristan Faure
31561,0,Change has been successfully merged into the git repository by Maxime Porhel
31563,1,"Patch Set 1: Code-Review+1There is a risk this would hide problems in previously executed tests.Proposal:* change closeAllSessions() (which is private) to return a Set<String> with the Session.getID() of all the sessions we had to close.* only in the new ""reset clean state"" invocation in the setup (added in this patch), get closeAllSessions()'s return valud, and if not empty issue a warning (""WARNING: sessions X, Y and Z were left open by a previous test and have been closed"")."
31567,0,Change has been successfully merged into the git repository by Marcel Bruch
31571,0,Change has been successfully merged into the git repository by Benoit Maggi
31574,0,Change has been successfully merged into the git repository by Mathieu Velten
31577,0,Change has been successfully merged into the git repository by Mathieu Velten
31582,0,Change has been successfully merged into the git repository by Uwe Stieber
31585,0,Change has been successfully merged into the git repository by Jonas Helming
31588,1,Abandoned
31592,0,Change has been successfully merged into the git repository by Gregoire Dupe
31598,0,Change has been successfully merged into the git repository by Marcel Bruch
31606,0,Change has been successfully merged into the git repository by Marcel Bruch
31614,0,Change has been successfully merged into the git repository by Maxime Porhel
31617,0,Change has been successfully cherry-picked as 7e2cf5523b67b8341cd643b15b112d5fad91205d by Alexander Kurtakov
31621,0,Change has been successfully pushed.
31624,0,Change has been successfully merged into the git repository by Remi Schnekenburger
31628,0,Change has been successfully cherry-picked as 5ce74005bb6bac97b2a97a4b0c923ef507dcc2d6 by Andi Bur
31631,0,Change has been successfully merged into the git repository by Gregoire Dupe
31634,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
31639,0,Change has been successfully cherry-picked as 50822d5a2fa889e24b077825ef7bea3ddc635b66 by Stephan Leicht Vogt
31642,0,Change has been successfully cherry-picked as 5e0cf13f6813f1d5ebe2d70eae98c5bd70a032c1 by Andi Bur
31645,0,Change has been successfully cherry-picked as 7c68e9101a8c39dea184b056186d8b81065752a9 by Andi Bur
31649,0,Change has been successfully merged into the git repository by Marcel Bruch
31652,0,Change has been successfully cherry-picked as f25b351790a41e17d80c576e9f9165317d38442f by Xavier Coulon
31655,0,Change has been successfully merged into the git repository by Sergey Prigogin
31658,0,Change has been successfully merged into the git repository by Dani Megert
31662,0,Change has been successfully merged into the git repository by Thierry BLIND
31667,0,Change has been successfully merged into the git repository by Bartlomiej Laczkowski
31673,0,Change has been successfully rebased as 9f340e1a15d35ae2998e5e6df134d9254cc06c99 by Sam Davis
31675,0,Change has been successfully merged into the git repository by Brian de Alwis
31679,0,Change has been successfully merged into the git repository by Christian Pontesegger
31682,0,Change has been successfully merged into the git repository by Christian Pontesegger
31684,0,Change has been successfully merged into the git repository by Sam Davis
31688,1,Unspecified merge failure: REBASE_MERGE_CONFLICT
31693,0,Change has been successfully merged into the git repository by Brian de Alwis
31696,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/6020/ : UNSTABLE
31697,0,"Patch Set 1: Code-Review+1 Verified+1(1 comment)Looks good, one style nit."
31699,0,Change has been successfully pushed.
31703,0,Change has been successfully merged into the git repository by Christian Pontesegger
31706,0,Change has been successfully merged into the git repository by Christian Pontesegger
31709,0,Change has been successfully merged into the git repository by Christian Pontesegger
31715,0,Change has been successfully merged into the git repository by Brian de Alwis
31720,1,"Patch Set 1: Code-Review+1I Agree, since this is a base scenario it's best to revert it at the moment until Dimity is back and a proper solution is agreed."
31722,1,"Patch Set 1:Upps, the original Bug was still opened.  I guess a new entry with reference to this reverting change will be needed"
31723,1,"Patch Set 1: Code-Review+2> Upps, the original Bug was still opened.  I guess a new entry with > reference to this reverting change will be neededI added a comment to bug 460760 and both bug 460760 and bug 474066 have links to the patch in the ""See also"" field."
31725,0,Change has been successfully rebased as ad52facf4e3c3aa6ee5222475c75ff53363f2bf9 by Marc-Andre Laperle
31727,0,Patch Set 1: Code-Review-1(2 comments)Looks good to me. Minor comment ...
31732,0,Change has been successfully cherry-picked as 0c2409c16989741ed7716573d139e267b38c6d20 by Matthew Khouzam
31735,0,Change has been successfully merged into the git repository by Eric Poirier
31740,0,Change has been successfully merged into the git repository by Maxime Porhel
31744,0,Patch Set 1: Code-Review+1We successfully verified this patch on:- Windows with Docker 1.5.0 (API 1.17)- Windows with Docker 1.7.1 (API 1.19)- Linux with Docker 1.6.2 (API 1.18)- Linux with Docker 1.7.1 (API 1.19)
31745,0,Patch Set 1:Great! Thank-you for testing this. I'll rebase and push this in. This change will not break API although it certainly can't guarantee the old behaviour given the creatContainer/startContainer change regarding the host configuration.
31748,0,"Patch Set 3: Code-Review+2This change looks fine to me and has been verified. Needed to make some additional changes to not break the API. Furthermore, I've actually been using an initial version of this patch in Fedora ( http://pkgs.fedoraproject.org/cgit/eclipse-linuxtools.git/diff/docker-client-3.0.0.patch?id=691c4fa0f7d903623d0d52190892cd1640846385 ) which I can now push here."
31749,0,Change has been successfully cherry-picked as 62fdf66f6fc78150f802ba780edbb49bb74a1ccd by Roland Grunberg
31752,0,Change has been successfully cherry-picked as 86e85a4587432130802ba2e6a4aa294a91cfcaca by Matthew Khouzam
31756,0,Change has been successfully merged into the git repository by Lars Vogel
31759,0,Change has been successfully merged into the git repository by Remi Schnekenburger
31762,0,Change has been successfully merged into the git repository by Gregoire Dupe
31769,0,Change has been successfully pushed.
31773,0,Change has been successfully merged into the git repository by Marcel Bruch
31776,0,Change has been successfully pushed.
31784,0,Change has been successfully rebased as 4a9defae7a50ec44072b48e62bd5e28e0cc5dd50 by Ralf Sternberg
31787,0,Change has been successfully merged into the git repository by Vladimir Piskarev
31790,0,Change has been successfully pushed.
31796,0,Change has been successfully merged into the git repository by Gregoire Dupe
31800,0,Change has been successfully cherry-picked as 5d639f7e16b3d65da019f6b25d96cf0d238b85b6 by Judith Gull
31803,0,Change has been successfully cherry-picked as 8941a01a27f669d309e1e5021f904f2b44c3683c by Judith Gull
31806,0,Change has been successfully merged into the git repository by Gregoire Dupe
31811,0,Change has been successfully merged into the git repository by Lars Vogel
31820,0,Change has been successfully merged into the git repository by Florian Barbin
31822,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit.build-luna/61/ : SUCCESShttps://hudson.eclipse.org/sirius/job/sirius.gerrit.tests-luna/64/ : UNSTABLE
31825,0,Change has been successfully merged into the git repository by Maxime Porhel
31833,0,Change has been successfully merged into the git repository by Johannes Dorn
31870,1,Patch Set 6:The only remaining problem is to fix the tests (and consider Steve comments).
31881,0,Change has been successfully merged into the git repository by Laurent Fasani
31889,0,Change has been successfully merged into the git repository by Marcel Bruch
31895,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
31908,0,Change has been successfully merged into the git repository by Laurent Fasani
31915,0,Change has been successfully merged into the git repository by Laurent Fasani
31930,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2738/ : UNSTABLE
31935,0,Change has been successfully cherry-picked as a3d18a945cc29630f9e4c8f5396e01952e55f6c0 by Andre Wegmueller
31938,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2737/ : UNSTABLE
31940,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2736/ : UNSTABLE
31943,0,Change has been successfully merged into the git repository by Andrey Loskutov
31945,0,Patch Set 1: Code-Review+1 Verified+1(1 comment)Looks good with a minor style nit.
31947,0,"Patch Set 2: Code-Review+2 Verified+1Thanks Brian, looks perfect."
31948,0,Change has been successfully merged into the git repository by Lars Vogel
31949,0,Patch Set 2:Thanks Lars!
31955,0,Patch Set 3: Code-Review+2 Verified+1Thanks a bunch Jonas!
31956,0,Change has been successfully merged into the git repository by Lars Vogel
31959,0,Change has been successfully cherry-picked as 032d5ab1e7aa0e17aefa21a1c7c5df2ef124f4a0 by Matthew Khouzam
31962,0,Change has been successfully cherry-picked as 5647b4d246c73e944e98b79e706a780a582d6304 by Matthew Khouzam
31965,0,Change has been successfully cherry-picked as 612a6d568e1a90cc5ee3ec222b8777d8f5192d05 by Matthew Khouzam
31968,0,Change has been successfully cherry-picked as b76688e180297148937cc092dcb4fa589ad0dd5a by Matthew Khouzam
31971,0,Change has been successfully cherry-picked as d96f2c6bb10b377cb1fb86cc91c8a9b522f0b8f1 by Matthew Khouzam
31974,0,Change has been successfully cherry-picked as 12983d4613895513934e5a72d92b33b65c036b2e by Matthew Khouzam
31977,0,Change has been successfully cherry-picked as aea86c053ee2fc78c8eab7354f57910b6fe2bf74 by Matthew Khouzam
31980,0,Change has been successfully cherry-picked as 44167b3bcb40bac9f427f048e6fe99d8d4e006b3 by Matthew Khouzam
31983,0,Change has been successfully cherry-picked as ebdbc1feb0579d03bc96d28e4eec0470a816b8d5 by Matthew Khouzam
31987,0,Change has been successfully cherry-picked as 447f794f90d406ca2a48b0150edb71cb05e7f1e1 by Matthew Khouzam
31989,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3113/ : UNSTABLE
31991,0,Change has been successfully merged into the git repository by Marc-Andre Laperle
31994,0,Change has been successfully merged into the git repository by Taylor Patterson
31997,0,Change has been successfully merged into the git repository by Taylor Patterson
32000,0,Change has been successfully merged into the git repository by Lars Vogel
32005,0,Change has been successfully merged into the git repository by Lars Vogel
32008,0,Change has been successfully merged into the git repository by Johannes Dorn
32012,0,Change has been successfully rebased as a01c4a9c207a21d872ebefb8001492b6dd0d00d9 by Benoit Maggi
32015,0,Patch Set 2: Code-Review+2Thanks for the fix!
32017,0,Change has been successfully rebased as c4dceed713c6424ce676afca85d47da1fd24bbf8 by Christian W. Damus
32023,0,Change has been successfully merged into the git repository by John Misinco
32030,0,Change has been successfully merged into the git repository by George Suaridze
32035,0,Change has been successfully rebased as 6c7b1ba259975bd7bc7892b1a12850fd755c96be by Elena Laskavaia
32042,0,Change has been successfully merged into the git repository by Maxime Porhel
32052,0,Change has been successfully merged into the git repository by George Suaridze
32056,0,Change has been successfully merged into the git repository by Michael Ochmann
32059,0,Change has been successfully merged into the git repository by Michael Ochmann
32065,0,Change has been successfully merged into the git repository by Dani Megert
32071,0,Change has been successfully rebased as 3da36f38dd5bb76ebfad5bcc48c7792f177ee460 by Remi Schnekenburger
32074,0,Change has been successfully merged into the git repository by Johannes Dorn
32078,0,Change has been successfully merged into the git repository by Michael Ochmann
32081,0,Change has been successfully merged into the git repository by Johannes Dorn
32085,0,Change has been successfully merged into the git repository by George Suaridze
32088,0,Change has been successfully merged into the git repository by Andrey Loskutov
32093,0,Change has been successfully merged into the git repository by Bartlomiej Laczkowski
32097,0,Change has been successfully merged into the git repository by Johannes Dorn
32100,0,"Patch Set 2:No i did it in different way. ""-c"" and ""-n"" together and -m as last argument. On OSX still work great, how about windows?Another option could be null, and filtering null values by PHPExeUtil#exec"
32104,1,"Patch Set 1:Unfortunately does not work on Win :/ ""-n -c"" passed as singular string is causing that Runtime.getRuntime().exec() fails. I guess that this idea with null values and filtering them in PHPExeUtil#exec should do the job."
32106,0,Patch Set 3: Code-Review+2 Verified+1Works like a charm :)
32109,0,Change has been successfully merged into the git repository by Dawid Pakula
32116,0,Change has been successfully merged into the git repository by Remi Schnekenburger
32119,0,Change has been successfully merged into the git repository by Ivan Furnadjiev
32122,0,Change has been successfully merged into the git repository by Benoit Maggi
32127,0,Change has been successfully merged into the git repository by Benoit Maggi
32131,0,Change has been successfully merged into the git repository by Benoit Maggi
32134,0,Change has been successfully rebased as bfba53fd385aabda6ac3544840f6631353fcec4d by Remi Schnekenburger
32139,0,Change has been successfully merged into the git repository by Benoit Maggi
32144,0,"Patch Set 4: Code-Review-1 Verified+1(1 comment)Change the order of the declaration in gmfgen see comments. Otherwise, good contribution!"
32148,0,Change has been successfully rebased as bb4f0227fa2db98b42d94256d7b8cb0b71bb388a by Remi Schnekenburger
32151,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/857/ : UNSTABLE
32153,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/860/ : UNSTABLE
32155,0,Change has been successfully merged into the git repository by Ulyana Skorokhodova
32158,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/861/ : UNSTABLE
32160,0,Change has been successfully merged into the git repository by Ulyana Skorokhodova
32164,0,Change has been successfully merged into the git repository by Christian Pontesegger
32169,0,Change has been successfully merged into the git repository by Fred Bricon
32173,0,Patch Set 2: Code-Review+1 Verified+1Thanks for explanation!
32176,0,Change has been successfully merged into the git repository by Thierry BLIND
32180,0,Change has been successfully merged into the git repository by Michal Niewrzal
32183,0,Change has been successfully merged into the git repository by Andrey Loskutov
32187,0,Change has been successfully merged into the git repository by Roman Flueckiger
32194,0,Change has been successfully merged into the git repository by Andrey Loskutov
32197,0,Change has been successfully merged into the git repository by Sergey Prigogin
32201,0,Change has been successfully merged into the git repository by Ansgar Radermacher
32203,1,"Patch Set 1:@Ansgar: would you mind checking out this patch to test that it fixes your C++ scenario?@R├®mi: as the resident element-types expert, does any of this look crazy to you?Thanks"
32204,0,"Patch Set 1:Hi Christian,thanks! The new hints for the relationship ends are the right way. However, I still cannot create new connectors in my test model, since the container is pointing initially to the the port that is inherited from the library."
32207,0,Patch Set 2:almost: if I change operation getBeforeCreateRelationshipCommand (in ReadOnlyObjectEditAdvice) into getAfterCreateRelationshipCommand -as already suggested by the comment- I can create a connector between inherited ports.Have a good trip back
32213,0,Change has been successfully rebased as b82275a4c0aeb937cd4df6d1a6dc8175a9519267 by Sergey Prigogin
32217,0,Change has been successfully merged into the git repository by Sergey Prigogin
32221,0,Change has been successfully rebased as cb7f0f346272814987d4b76b6cf65bb474c87bf0 by Sergey Prigogin
32223,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3046/ : UNSTABLE
32228,0,Change has been successfully rebased as 95aa27858c89c7a0e0332296c736c4757d46f7a3 by Sergey Prigogin
32233,0,Change has been successfully merged into the git repository by Sergey Prigogin
32238,0,Change has been successfully merged into the git repository by Dirk Fauth
32243,0,Patch Set 4: Code-Review+2thanks for the patch :-)
32245,0,Change has been successfully merged into the git repository by Matthias Sohn
32246,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7349/ : UNSTABLE
32250,0,Change has been successfully merged into the git repository by Thierry BLIND
32253,0,Change has been successfully merged into the git repository by Dawid Pakula
32254,0,"Patch Set 3:My apologies, gerrit didn't send me an email notification about your original comment, and I only saw it now. Thanks for posting the updated patch!"
32256,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3065/ : UNSTABLE
32261,0,Change has been successfully rebased as 005d40d228c7b88ccc935a24cbd35fa549a1abb4 by Sergey Prigogin
32263,0,Patch Set 3: Code-Review+2thanks for the nice patch :-)- rebased- improved commit message
32266,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7341/ : UNSTABLE
32270,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7331/ : UNSTABLE
32273,0,Change has been successfully merged into the git repository by Matthias Sohn
32282,0,Change has been successfully merged into the git repository by Matthias Sohn
32284,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3100/ : UNSTABLE
32286,0,Change has been successfully merged into the git repository by Sergey Prigogin
32289,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/3068/ : UNSTABLE
32294,0,Patch Set 2: Code-Review+2thanks for the nice patch :-)- rebased- improved commit message
32299,0,Change has been successfully merged into the git repository by Matthias Sohn
32303,0,Change has been successfully rebased as b0d8f8d3f16ac89eacc8ed07d4dcbe0e08bc9cac by Sergey Prigogin
32305,0,Change has been successfully merged into the git repository by Lars Vogel
32310,0,"Patch Set 1:(1 comment)- the fix works like a charm, thanks :-)- some nits in the commit message, I'll fix them in a minute"
32315,0,Change has been successfully merged into the git repository by Matthias Sohn
32318,0,Change has been successfully merged into the git repository by Sergey Prigogin
32321,0,Change has been successfully merged into the git repository by Sergey Prigogin
32324,0,Change has been successfully merged into the git repository by Lars Vogel
32337,0,Change has been successfully merged into the git repository by Sergey Prigogin
32342,0,Change has been successfully merged into the git repository by Lars Vogel
32345,0,Change has been successfully merged into the git repository by Lars Vogel
32348,0,Patch Set 2: Code-Review+2 Verified+1Thanks Jan!
32349,0,Change has been successfully merged into the git repository by Lars Vogel
32351,0,"Patch Set 1:Looks good, except the stuff we just talked about.. :-)"
32353,0,Change has been successfully merged into the git repository by Sergey Prigogin
32360,0,"Patch Set 3: Code-Review+1 Verified+1Change looks fine to me, but Dirk or Tom should merge"
32362,0,Change has been successfully merged into the git repository by Dirk Fauth
32368,0,Change has been successfully merged into the git repository by Lars Vogel
32371,0,Change has been successfully merged into the git repository by Sergey Prigogin
32374,0,Change has been successfully merged into the git repository by Matthias Sohn
32377,0,Change has been successfully merged into the git repository by Matthias Sohn
32387,0,Change has been successfully merged into the git repository by Taylor Patterson
32393,0,Change has been successfully merged into the git repository by Lars Vogel
32398,0,Change has been successfully merged into the git repository by Taylor Patterson
32400,0,Change has been successfully merged into the git repository by John Misinco
32407,0,Change has been successfully merged into the git repository by Lars Vogel
32420,1,"Patch Set 8:This is a snark free reply, to me this is really sweeping the problem under the rug. If we're going to fix this, it should be fixed. :("
32422,1,"Patch Set 8: Code-Review-1If we go back to the beginning, the goal of handling the arbitrary array types in here was to take responsibility for the value's implementation of equals().The technically correct way of doing things would have been of letting the value types implementing their own equals(). But by consolidating the functionality in here, it would simplify every sub-class.However the more we go on, the more I/we see the limitations of the current approach. So I'm starting to think maybe we should go back and do things the ""correct"" way after all. This would mean that every single class in CtfTmfEventField would have to implement their equals() and hashCode(), which will easily double their size, but at least the overall design will be cleaner."
32426,1,"Patch Set 9:After discussing some more with Matthew, we agreed on the following approach: go with the current ugly checking of all array types in TmfEventField#equals() for now to cover our own implementations, but don't cover multi-dimensional arrays. I also added a note in getValue()'s javadoc to that escient.However, in the mid-term we will rework all our CtfTmfEventField implementations to not use primitive arrays but rather Collections. Guava ArrayBackedList(?) was proposed. This might take some time to do, as it will require performance profiling etc. Once/if that is done, we can remove the array-type checking in TmfEventField, defer to values' .equals(), and extend the note to also include any type of arrays."
32427,1,"Patch Set 9: Code-Review-1With this patch the contract of hashCode() is not respected.I submitted a patch https://git.eclipse.org/r/52187 which adds utility methods that, I believe, covers all the cases (null, arrays, collections or arbitrary objects, recursively). It could be used by this patch with the arbitrary Object values of TmfEventField.Also, I'm still not convinced that the getters need to be changed to final."
32428,0,"Patch Set 9:> With this patch the contract of hashCode() is not respected.Hmm true, if we use primitives array values, it's possible for equals to return true yet have different hashCodes.> I submitted a patch https://git.eclipse.org/r/52187 which adds utility methods...Interesting, this could cover for all possible types of values (as memory allows). I feel much more comfortable having this checking code in a separate utils class that is tested independently. I will try to rebase this commit on top of that one.> I'm still not convinced that the getters need to be changed to final.I'm still not convinced that the getters should be extensible ;)Every interface we expose means more potential behaviour we have to support, test and maintain. If we decide we want to support extending getFields() and getFieldNames(), we should have tests that cover for these cases (this applies to many many other places in the framework...)I have yet to see a clear use case of a sub-classes not using fFields and needing to extend these methods."
32435,0,Change has been successfully cherry-picked as ac2ae0d8ed14ba16aee781342e4beea9ebec552c by Alexandre Montplaisir
32438,1,Topic set to Fix TmfEvent#equals (bug 471733)
32447,0,"Patch Set 1:> The class should be checked and the subclasses should handle their own fields.True, it's missing an isInstance() (?) check.> I think it doesn't make any sense to do a full copy of two arrays ...Good point! It'll be more LoCs, but we'd avoid doing a copy."
32459,0,"Patch Set 14: Code-Review+1OK, it's good enough, let's merge that. Alea jacta est!"
32462,0,Change has been successfully cherry-picked as 1b46d94d1007a917a1e1f97166d4c1a294b0c674 by Genevieve Bastien
32466,0,Patch Set 13: Code-Review+1 Verified+1this also pleases me.
32469,0,"Patch Set 12: Code-Review+1 Verified+1I'm fine with this, let's get it in!"
32473,0,Patch Set 12: Code-Review+1 Verified+1This pleases me.
32478,1,"Patch Set 1:Thanks for the first review, but don't do the others yet (the last six). I have a new version of this patch series on my personal git, that I planned to push soon, when the pre-requisite patches are almost all in, but now that sleeping is in my critical path, it may come in a few weeks.If you wish to speed things up, the latest version is here: git://git.dorsal.polymtl.ca/~gbastien/org.eclipse.tracecompass.git branch graph_gerrit."
32479,0,"Patch Set 1:(7 comments)SOme comments, there is a new API baseline, I am rebasing you branch on that a bit but it is a best effort in non-committed time deal. I'll check if we can scope it in soon."
32480,0,"Patch Set 1:Don't rebase yet Matthew! This is not the latest version anyway, I have many changes on my personal git and I'll need to update with your comments. See comment from feb 19, for the git url if you wish to rebase anyway. Otherwise, I'll update them some time later..."
32481,1,"Patch Set 1:I was unclear, I think, I will rebase the branch on your personal git to gerrit, is that ok?"
32482,0,"Patch Set 1:oh ok then, thanks!"
32485,1,Patch Set 11: Code-Review+1 Verified+1I think this is good to go. Any objections?
32489,0,Patch Set 11: Code-Review-1(11 comments)Looks quite good! Some comments.
32490,0,Patch Set 11: Code-Review-2-2 so it shows up over a +2 :P
32495,1,"Patch Set 11:Thanks for the reviews, comments are acted upon. Francis, I think this is good enough to go in, there will be time for smaller, more focused bug fixes later on."
32497,1,"Patch Set 7:(2 comments)Worked on Matthew's previous comments and moved a bunch of stuff internal. I wish more of the TmfGraph, TmfVertex and TmfEdge could be internal, as I don't think this API will be final and I wouldn't want it to be stamped 1.1 too early. Maybe we could move it all internal and x-friend lttng2.kernel.core? Not clean, but at least it avoids having to clean the API later."
32498,0,"Patch Set 7:(2 comments)This looks good, fyi, I reviewed graph/core/base alone as Francis said he would push a separate patch for that, then have another patch with the parts. Basically it is easier to revert or fix up a section of code that way."
32501,0,"Patch Set 13: Code-Review+1OK, it's good enough, let's merge that. Alea jacta est!"
32503,0,Change has been successfully cherry-picked as 687616200e3d8fa6aa3758997b2938610165f4b9 by Genevieve Bastien
32507,1,"Patch Set 4:(7 comments)this should be split into four easy patches. 1- plug-in with activator2- graph base (all the concepts)3- building (if we have factories, why not make the graphs immutable?)4- critical pathes"
32522,0,"Patch Set 5:feel free to contact me, I want to get this in asap!"
32535,1,"Patch Set 4: Code-Review-1Awesome, the tests are quite bullet-proof now! One last thing:> Because the iteration order is undefined, it can be different for> two sets that contain the same elements (e.g. LinkedHashSet with> different insertion order).If the standard equals() method says that such two sets are not equal, why should we override this behavior?"
32538,0,"Patch Set 4:> It seems *Set.equals() already take care of their implementation details, so in our Utils method here we can rely on it.We can't use Set.equals() because it does not do a deep equals on the elements, so it won't work if the set contains arrays.> Also, LinkedHashSet is not a SortedSet. SortedSet/NavigableSet is for things like TreeSet, where the elements are sorted as they are inserted. These will also be equal no matter their insertion order, more intuitively.We must use the special 'Set' code for HashSet and LinkedHashSet. We could use it also for SortedSet, but for SortedSet we can get away with using the 'Collection' code because the iteration order is known and it is the faster code of the two."
32539,1,"Patch Set 4: Code-Review+2 Verified+1Ok, after explanation, I get that we want to handle Set differently because AbstractSet.equals() does not check element positions, but contains(). So our ""replacement"" here is to keep doing the same thing, but also handle the case where the elements are [] arrays.Makes sense, however the same problem will happen for any Collection that overrides equals(). But we can do a best effort."
32540,0,Change has been successfully cherry-picked as ac1d454a59d1d11744964823c9b824e8b2d7d02c by Patrick Tasse
32546,0,Change has been successfully merged into the git repository by Dirk Fauth
32550,0,Change has been successfully merged into the git repository by John Misinco
32561,0,Change has been successfully rebased as 2d7594c3386ab6578852ba2d00a99348170026e6 by David Green
32568,0,Change has been successfully merged into the git repository by Lars Vogel
32572,0,Change has been successfully merged into the git repository.
32575,1,"Patch Set 2: Code-Review-1I applies this patch on top of my ""ignore flaky tests"" one, and ran a custom test suite with:  TracingPerspectiveChecker.class  ColorsViewTest.class  FilterViewerTest.classin this order. But still got a failure, here is the error ouput: http://pastebin.com/dkjsb0gWThat was in my local Xephyr/metacity/GTK2."
32576,1,"Patch Set 2:Here's the same error happening without this patch:https://hudson.eclipse.org/tracecompass/view/Testing/job/tracecompass-swtbot-stress-tests/4/consoleNot sure if it's 100% related to the patch though, could it be (yet another) spurious fail?"
32577,1,"Patch Set 2:> I applies this patch on top of my ""ignore flaky tests"" one, and ran > a custom test suite with: >  > TracingPerspectiveChecker.class > ColorsViewTest.class > FilterViewerTest.class >  > in this order. But still got a failure, here is the error ouput: > http://pastebin.com/dkjsb0gW >  > That was in my local Xephyr/metacity/GTK2.that failure is unrelated to this patch, AFAICT"
32578,1,"Patch Set 2:> > I applies this patch on top of my ""ignore flaky tests"" one, and > ran > > a custom test suite with: > > > > TracingPerspectiveChecker.class > > ColorsViewTest.class > > FilterViewerTest.class > > > > in this order. But still got a failure, here is the error ouput: > > http://pastebin.com/dkjsb0gW > > > > That was in my local Xephyr/metacity/GTK2. >  > that failure is unrelated to this patch, AFAICTBecause the first failure is not testPerspectiveComplete"
32579,1,"Patch Set 2:> Here's the same error happening without this patch: > https://hudson.eclipse.org/tracecompass/view/Testing/job/tracecompass-swtbot-stress-tests/4/console >  > Not sure if it's 100% related to the patch though, could it be (yet > another) spurious fail?The patch doesn't pretend to make the tests bulletproof. It fixes the issue of not closing the view. Should this not go in based on that?"
32580,1,"Patch Set 2: -Code-ReviewNevermind then, I thought it was that error it was supposed to fix. I'm just trying to see if we can reproduce a test case that exposes the problem this patch fixes."
32581,0,Patch Set 2: Code-Review+1 Verified+1It looks good to me
32582,1,"Patch Set 2:> Nevermind then, I thought it was that error it was supposed to fix. > I'm just trying to see if we can reproduce a test case that exposes > the problem this patch fixes.Try 1.colors view test 2.filter view test 3.the perspective checkeryou shouldn't even need to loop it and it should fail (without the patch). Sorry I can't test what I am suggesting right now :p"
32583,1,"Patch Set 2: Code-Review+2 Verified+1Ah yeah I should have tried the perspective checker test *after* the other ones, not before. I guess that makes sense.So yes I was able to reproduce the error and confirm that the patch fixes it."
32584,0,Change has been successfully cherry-picked as e4d1541834e520714f970173b62ed89b8c8f4da8
32586,1,Patch Set 3:Thanks! Sorry I got the initial steps wrong.
32590,0,Change has been successfully merged into the git repository.
32605,0,Change has been successfully merged into the git repository.
32611,0,Change has been successfully merged into the git repository.
32614,0,Change has been successfully merged into the git repository.
32617,0,Change has been successfully merged into the git repository.
32621,0,Change has been successfully merged into the git repository.
32624,0,Change has been successfully merged into the git repository.
32632,0,Change has been successfully merged into the git repository.
32635,0,Change has been successfully merged into the git repository.
32638,0,Change has been successfully merged into the git repository.
32641,0,Change has been successfully merged into the git repository.
32643,0,Change has been successfully pushed.
32645,0,Change has been successfully pushed.
32647,0,Change has been successfully pushed.
32649,0,Change has been successfully pushed.
32652,0,Change has been successfully merged into the git repository.
32655,0,Change has been successfully merged into the git repository.
32658,0,Change has been successfully merged into the git repository.
32661,0,Change has been successfully merged into the git repository.
32666,0,Change has been successfully merged into the git repository.
32669,0,Change has been successfully merged into the git repository.
32672,0,Change has been successfully merged into the git repository.
32674,0,Change has been successfully pushed.
32682,1,"Patch Set 5: Code-Review+1(2 comments)This is ready to go. Patch set 3 and Patch set 5 are identical (code-wise) because the change introduced in Patch set 4 doesn't compile (due to a minimum version of Java 1.4). So although it's not as optimal as it should be, it still avoids object instantiation and a decent JIT should inline through if needed."
32686,0,Patch Set 2: Code-Review+1(2 comments)I'm happy with these changes; they are ready to submit for Eclipse N*
32689,0,Change has been successfully merged into the git repository.
32692,0,Change has been successfully merged into the git repository.
32695,0,Change has been successfully merged into the git repository.
32698,0,Patch Set 1: Code-Review+2 Verified+1Thanks Lars!
32699,0,Change has been successfully merged into the git repository.
32702,0,Change has been successfully merged into the git repository.
32720,0,Change has been successfully merged into the git repository.
32725,0,Change has been successfully merged into the git repository.
32728,0,Change has been successfully merged into the git repository.
32731,0,Change has been successfully merged into the git repository.
32732,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/850/ : UNSTABLE
32735,0,Change has been successfully merged into the git repository.
32738,0,Change has been successfully merged into the git repository.
32753,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/849/ : UNSTABLE
32755,0,Change has been successfully merged into the git repository.
32758,0,Change has been successfully merged into the git repository.
32762,0,Change has been successfully merged into the git repository.
32766,0,Patch Set 6: Code-Review+1(11 comments)It remains to add some commments.Good work and well commented
32778,0,Change has been successfully merged into the git repository.
32785,0,Change has been successfully merged into the git repository.
32792,0,Change has been successfully merged into the git repository.
32794,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
32796,0,Change has been successfully merged into the git repository.
32799,0,Change has been successfully merged into the git repository.
32801,0,Change has been successfully cherry-picked as e100d4c32e99ee91b97800b02335de3f36d9bf92
32803,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2676/ : UNSTABLE
32807,0,Change has been successfully cherry-picked as 27693f414e65ae520724dca2fa5c682fa3256d29
32810,0,Change has been successfully merged into the git repository.
32814,0,Change has been successfully merged into the git repository.
32815,0,"Patch Set 1:Thanks, fast merges are very motivating. :-)"
32817,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.sdk_gerrit/116/ : UNSTABLE
32819,0,Change has been successfully cherry-picked as 8463b38000b276c5a080376590de894d2eccb3c7
32822,0,Change has been successfully merged into the git repository.
32826,0,Change has been successfully merged into the git repository.
32829,0,Change has been successfully merged into the git repository.
32834,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/etrice/job/etrice-gerrit/317/ : UNSTABLE
32837,0,Change has been successfully merged into the git repository.
32842,0,Change has been successfully merged into the git repository.
32846,0,Change has been successfully pushed.
32850,0,Change has been successfully merged into the git repository.
32851,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/6014/ : UNSTABLE
32856,0,Change has been successfully merged into the git repository.
32860,0,Change has been successfully merged into the git repository.
32864,0,Patch Set 1: Code-Review+1looks good
32880,0,Change has been successfully merged into the git repository.
32887,0,Change has been successfully merged into the git repository.
32893,0,Change has been successfully merged into the git repository.
32895,0,Change has been successfully merged into the git repository.
32902,0,Change has been successfully merged into the git repository.
32903,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/6013/ : UNSTABLE
32905,0,Change has been successfully merged into the git repository.
32913,0,Patch Set 1: Code-Review+1Works fine!
32920,0,Change has been successfully merged into the git repository.
32921,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/6012/ : UNSTABLE
32927,1,Patch Set 1:I don't understand why code formatter sucks like this !!?? I changed only the way to get images and not the tabs in the file... Any Idea ?
32930,0,"Patch Set 7:Dirk, For me it works well..and I can not reproduce it... :/Do you have the full trace ? I can not see it totally... Could you attach in the mail a screenshot of the failure ? Thanks"
32932,1,Patch Set 7:Ok... It is better to find the problem ! Actually the image seems to be disposed and then reused... I will fix it...
32935,1,"Patch Set 8: Verified+1 Code-Review+1Really sorry to have delivered this ugly code before... It is fixed. I managed a static image registry instead of having one per editor (what a mistake ! )But I found another bug which has no link with this one : when we double click on the Application.e4xmi file it opens the editor, but then, the package explorer has lost its focus, and if we click on another file its editor is not opened unless we select again the package explorer view !  -> I open a bug for this"
32936,1,Patch Set 8:The bug is opened #468501. Fortunately it happens only in Project Explorer view
32937,0,"Patch Set 8: Code-Review+1 Verified+1As far as I can see it looks good now. It would be nice if the image would update immediately on save, but I'm not sure how complicated that would be for the current implementation.At least there are no errors anymore and the image is correctly shown on re-opening the application model editor."
32938,0,"Patch Set 8: Code-Review+2Ok thanks for this. For the automatic update I checked it but I had no time to investigate more.. Actually the refresh is done manually (if the iconURI is set), by changing the label or the visible set (on/off/on) of current object.I validate it now with a +2"
32943,0,Change has been successfully merged into the git repository.
32951,1,"Patch Set 5:I am confused...I attached two new screenshots to Bugzilla:- Existing color scheme in preferences of the PDE Editor's XML Hightlighting: https://bugs.eclipse.org/bugs/attachment.cgi?id=255105- Proposed color scheme in preferences for the Ant Editor: https://bugs.eclipse.org/bugs/attachment.cgi?id=255107IMHO, they fit together very well. Let me know for which syntax element exactly you see misalignment."
32952,1,"Patch Set 5: Code-Review+2 Verified+1Sorry for the confusion, Few letters gave me the incorrect impression that PDE does not have bold letters."
32953,0,Change has been successfully merged into the git repository.
32962,0,"Patch Set 3: -Code-ReviewThanks, It looks great now. Only 1 suggestion, I don't see bold used in plugin or java editor(it is there in xml editor), so it's better not to have it here as well. As per the convention, we will like the file name to be e4-dark_ant_prefstyle.css rather than keeping it under folder dark."
32967,0,Change has been successfully merged into the git repository.
32971,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2766/ : UNSTABLE
32975,0,Change has been successfully rebased as 6730366662c24216421c35c84e1b76de31afc55e
32987,0,Change has been successfully merged into the git repository.
32991,0,Change has been successfully merged into the git repository.
32994,0,Change has been successfully merged into the git repository.
33001,0,Patch Set 3: Code-Review+2 Verified+1Looks good.
33002,0,Change has been successfully merged into the git repository.
33006,0,Change has been successfully merged into the git repository.
33015,0,Change has been successfully merged into the git repository.
33017,0,Patch Set 4:(2 comments)I like the approach overall.Just few minor issues.
33020,0,Change has been successfully merged into the git repository.
33027,0,Change has been successfully merged into the git repository.
33029,0,"Patch Set 3: Code-Review+1 Verified+1I was there during the testing, looks good to me. @Alex, when ready please feel free to review."
33034,0,Change has been successfully merged into the git repository.
33037,0,Change has been successfully merged into the git repository.
33040,0,Change has been successfully merged into the git repository.
33044,0,Change has been successfully merged into the git repository.
33047,0,Change has been successfully cherry-picked as 15d429884b73c3672eb2345402e757606ae2063f
33053,0,Change has been successfully merged into the git repository.
33056,0,Change has been successfully cherry-picked as 6aaa366bc8e3277fcbb38bd4cfd10ef85987f462
33059,0,Change has been successfully merged into the git repository.
33063,0,Change has been successfully merged into the git repository.
33070,0,Change has been successfully merged into the git repository.
33075,0,Patch Set 3: Code-Review+1 Verified+1Tested with Gtk2/Gtk3 with various widgets where the cursor changes upon some action. Cursors change picture as expected. Looks good to me.
33080,0,Change has been successfully merged into the git repository.
33084,0,Change has been successfully merged into the git repository.
33089,0,Change has been successfully merged into the git repository.
33098,0,Change has been successfully merged into the git repository.
33109,0,Change has been successfully merged into the git repository.
33119,0,Change has been successfully merged into the git repository.
33121,0,Change has been successfully merged into the git repository.
33126,0,Change has been successfully merged into the git repository.
33130,0,Change has been successfully merged into the git repository.
33132,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1396/ : UNSTABLE
33137,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1393/ : UNSTABLE
33141,0,Change has been successfully merged into the git repository.
33143,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1389/ : UNSTABLE
33145,0,Change has been successfully merged into the git repository.
33150,0,Change has been successfully merged into the git repository.
33152,0,Change has been successfully merged into the git repository.
33155,1,Patch Set 1: Code-Review-1I still do not get the Quickfix for the example described in this bug with this change.
33160,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1378/ : UNSTABLE
33163,0,Change has been successfully merged into the git repository.
33169,0,Change has been successfully merged into the git repository.
33175,0,Change has been successfully merged into the git repository.
33177,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7281/ : UNSTABLE
33178,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7283/ : UNSTABLE
33179,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7284/ : UNSTABLE
33180,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7285/ : UNSTABLE
33183,0,Change has been successfully merged into the git repository.
33184,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/929/ : UNSTABLE
33186,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/928/ : UNSTABLE
33192,0,Change has been successfully merged into the git repository.
33195,0,Change has been successfully merged into the git repository.
33198,0,Change has been successfully merged into the git repository.
33201,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/927/ : UNSTABLE
33204,0,Change has been successfully rebased as 22a29a828ec7db30ac8f2149ee8e15cb01a37f92
33210,0,Change has been successfully merged into the git repository.
33212,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7175/ : UNSTABLE
33215,0,Change has been successfully merged into the git repository.
33221,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7176/ : UNSTABLE
33226,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/570/ : UNSTABLE
33228,1,Patch Set 11:HyperlinkInternalReplacementToken: this is probably a leftover from one of the versions. I do not have the time to investigate the change history. I reverted this modification in Patch 11.
33229,0,Patch Set 11: Code-Review+1(2 comments)nice!
33233,0,Change has been successfully merged into the git repository.
33237,0,Patch Set 10: Code-Review+1(2 comments)Looks great!  A question and comment inline:
33239,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/571/ : UNSTABLE
33250,0,Change has been successfully merged into the git repository.
33254,0,Change has been successfully rebased as 96046c818b0b175fc054db7c53b360669d379d76
33258,0,Change has been successfully merged into the git repository.
33265,0,Change has been successfully merged into the git repository.
33280,0,Change has been successfully cherry-picked as 8033e89c3bc83d9bb78965e702671cd89c168648
33283,0,Change has been successfully pushed.
33286,0,Change has been successfully cherry-picked as c170abc1599e60433f06443a708c7066ec1ebdcb
33289,0,Change has been successfully cherry-picked as 0dcb35944513772b29aea7d41a8fabbefee0418b
33292,0,Change has been successfully merged into the git repository.
33295,0,Change has been successfully merged into the git repository.
33298,0,Change has been successfully merged into the git repository.
33303,0,Change has been successfully merged into the git repository.
33306,0,Change has been successfully merged into the git repository.
33307,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/848/ : UNSTABLE
33309,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
33311,0,Change has been successfully merged into the git repository.
33314,0,Change has been successfully merged into the git repository.
33318,0,Change has been successfully cherry-picked as 338a7f065c007d503e71718892797cba436cc317
33322,0,Change has been successfully merged into the git repository.
33325,0,Change has been successfully merged into the git repository.
33333,0,Change has been successfully merged into the git repository.
33336,0,Change has been successfully merged into the git repository.
33359,0,Change has been successfully merged into the git repository.
33362,0,Change has been successfully merged into the git repository.
33370,0,Change has been successfully merged into the git repository.
33377,0,Change has been successfully merged into the git repository.
33400,0,Change has been successfully merged into the git repository.
33410,0,Change has been successfully merged into the git repository.
33412,0,Change has been successfully cherry-picked as 914bbbd248285881c565ef49a502693ef201eada
33417,0,Change has been successfully cherry-picked as d182f71400f2d324fa85914bc6aff99cee1dd915
33419,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2650/ : UNSTABLE
33421,0,Change has been successfully merged into the git repository.
33422,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/847/ : UNSTABLE
33424,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/843/ : UNSTABLE
33431,0,Change has been successfully merged into the git repository.
33448,0,Change has been successfully merged into the git repository.
33450,0,"Patch Set 5:(1 comment)Thanks for patch Thierry, everything works ok for me. Only one small comment and can you add test case for this issue?"
33457,0,Patch Set 6: Code-Review+2 Verified+1Thanks Thierry!
33458,0,Change has been successfully merged into the git repository.
33460,0,Change has been successfully merged into the git repository.
33464,0,Patch Set 1:To be honest I'm not sure if changes applied to ConditionalExpression classes are most clean and appropriate solution. If someone will have better idea let me know :)
33467,0,"Patch Set 1:For me it's still conditional expression, safer than ""$item ?: 'default'"""
33468,1,Patch Set 1:For me also. I'm only concerned about ConditionalExpression readability and clarity:)
33472,0,Change has been successfully merged into the git repository.
33475,0,Change has been successfully merged into the git repository.
33479,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7250/ : UNSTABLE
33483,0,Change has been successfully merged into the git repository.
33485,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7239/ : UNSTABLE
33486,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7240/ : UNSTABLE
33489,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7261/ : UNSTABLE
33490,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7249/ : UNSTABLE
33491,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7257/ : UNSTABLE
33492,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7258/ : UNSTABLE
33494,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7259/ : UNSTABLE
33495,1,"Patch Set 5: Code-Review-1Max, I think you have found a bug in gitflow plugin with your tests. I think (I haven't checked this) that if gitflow contributes adapters to files, they could make the handler go crazy by supplying repository *also* for external links.Can you please check this? I can't believe the test failure we see is occasional one. This mist be a hiden bug."
33499,0,Change has been successfully merged into the git repository.
33503,0,Change has been successfully merged into the git repository.
33509,0,Change has been successfully merged into the git repository.
33512,0,Change has been successfully merged into the git repository.
33515,0,Change has been successfully merged into the git repository.
33517,0,Change has been successfully pushed.
33520,0,Change has been successfully merged into the git repository.
33522,0,Change has been successfully pushed.
33524,0,Change has been successfully pushed.
33526,0,Change has been successfully pushed.
33528,0,Change has been successfully pushed.
33531,0,Change has been successfully pushed.
33534,0,Change has been successfully merged into the git repository.
33538,0,Change has been successfully merged into the git repository.
33542,0,Change has been successfully merged into the git repository.
33544,0,Change has been successfully merged into the git repository.
33546,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7254/ : UNSTABLE
33549,1,"Patch Set 4: Code-Review+2I've finally found the solution for the stupid mistake I made in ExistingOrNewPage (caused 2 test failures).Matthias, would be nice if you could review this one. The deadlock is away and there seem to be no side effects.Everything seem to work if I test it manually and also egit do not deadlock anymore during our the automated test suite (it did it reliably before)."
33554,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7201/ : UNSTABLE
33555,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7205/ : UNSTABLE
33565,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7104/ : UNSTABLE
33572,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7166/ : UNSTABLE
33576,0,Change has been successfully merged into the git repository.
33579,0,Change has been successfully cherry-picked as 3bccf3b1c9d15f61ac4ce9da2d58c99d1af74583
33582,0,Change has been successfully pushed.
33586,0,Change has been successfully merged into the git repository.
33589,0,Change has been successfully merged into the git repository.
33591,0,Patch Set 2: Code-Review-1(1 comment)Great catch. quick question
33599,0,Change has been successfully cherry-picked as e5f3e78281823a83b5e6aab658d01716b977925e
33602,0,Change has been successfully merged into the git repository.
33606,0,Change has been successfully merged into the git repository.
33609,0,Change has been successfully cherry-picked as b052914f31f25fdf0cfa0a458c3325fa05a1dce4
33615,0,Change has been successfully cherry-picked as eaf41b50fd2c3b6c1b279120b6d4ae50beeff22b
33621,0,Patch Set 1: Verified+1 Code-Review+2Let's get it in!
33622,0,Change has been successfully cherry-picked as 37a507dca88f92e040df4d860191a88224fca382
33626,0,Change has been successfully cherry-picked as 5904c11e2622a673df7383575f783466507a637f
33634,0,Change has been successfully merged into the git repository.
33641,0,Change has been successfully merged into the git repository.
33644,0,Change has been successfully cherry-picked as cf13e5d7240c2d0717a63678f303fda9181d789f
33649,0,Change has been successfully merged into the git repository.
33652,0,Change has been successfully cherry-picked as 78a619f6a35e7f607e1d46a2db5b355c957996ad
33656,0,Change has been successfully merged into the git repository.
33663,0,Change has been successfully merged into the git repository.
33665,1,"Patch Set 2: Verified+1 Code-Review+2OK, trivial."
33666,0,Change has been successfully merged into the git repository.
33670,0,Change has been successfully merged into the git repository.
33672,0,Patch Set 3: Code-Review+1Looks good.
33674,0,Change has been successfully merged into the git repository.
33679,0,Change has been successfully cherry-picked as 113de467207e13ef4bdcb12718d0b4e94a7249f4
33682,0,Change has been successfully cherry-picked as 6fe131491c54f2396c1fc1b77652530e8edfca8f
33685,0,Change has been successfully merged into the git repository.
33687,0,Change has been successfully merged into the git repository.
33693,0,Change has been successfully merged into the git repository.
33698,0,Change has been successfully merged into the git repository.
33704,0,Change has been successfully merged into the git repository.
33707,0,Change has been successfully pushed.
33710,0,Change has been successfully merged into the git repository.
33713,0,Change has been successfully cherry-picked as 1606d2fd442a7d1e0368f9a41331fd8b562d41fa
33726,0,Change has been successfully merged into the git repository.
33730,0,Change has been successfully merged into the git repository.
33734,0,Patch Set 2:As I wrote in mail I prepare base for PHP7 interpreter + support for spaceship operator. I also changed (latest on the top combobox) order of PHP's interpreters to promote latest versions. Let me know what do you think about it.
33737,0,Patch Set 4: Code-Review+2 Verified+1Version 7.0 indeed looks more consistent:)
33738,0,Change has been successfully merged into the git repository.
33744,0,Change has been successfully merged into the git repository.
33746,0,Patch Set 1:looks good. any way I can test this manually to make sure there are no regressions? (with callsites case)
33749,0,Patch Set 3: Code-Review+2 Verified+1This looks good to be and could go in first (before remove callsite support).
33750,0,Change has been successfully cherry-picked as 04ca66e5304b8e5b9bd95cfb0c14ca435d136f20
33753,0,Change has been successfully merged into the git repository.
33758,0,Change has been successfully merged into the git repository.
33761,0,Change has been successfully merged into the git repository.
33767,0,Change has been successfully merged into the git repository.
33772,0,Change has been successfully merged into the git repository.
33778,0,Change has been successfully merged into the git repository.
33781,0,Change has been successfully cherry-picked as 9cbde17f6c134647e721c7cdb9519f663ef9ae91
33783,0,Change has been successfully merged into the git repository.
33787,0,Change has been successfully cherry-picked as 6fcf8baec0258c92a21b51a6c7ced617a937ff6d
33791,0,Change has been successfully merged into the git repository.
33794,0,Change has been successfully merged into the git repository.
33797,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6852/ : UNSTABLE
33798,1,Abandonedmoved to stable-4.0
33802,0,Change has been successfully merged into the git repository.
33806,0,Patch Set 3: Verified+1 Code-Review+1Nice patch Dawid :)
33810,0,Change has been successfully merged into the git repository.
33824,0,Change has been successfully merged into the git repository.
33828,0,Change has been successfully cherry-picked as 91d6dce421420132e74040ae9414756dcb6c88e1
33831,0,Change has been successfully merged into the git repository.
33836,0,Change has been successfully merged into the git repository.
33839,0,Change has been successfully merged into the git repository.
33842,0,Change has been successfully merged into the git repository.
33845,0,Change has been successfully merged into the git repository.
33850,0,Change has been successfully merged into the git repository.
33853,0,Change has been successfully merged into the git repository.
33855,0,Patch Set 3: Code-Review+1(1 comment)No comments for the model parts.  The generator parts look good.
33860,0,Change has been successfully merged into the git repository.
33867,0,Change has been successfully merged into the git repository.
33870,0,Change has been successfully merged into the git repository.
33875,0,Change has been successfully cherry-picked as 094663017a65efd59974f902f92ad0cf605b6faa
33883,0,Change has been successfully merged into the git repository.
33888,0,Change has been successfully cherry-picked as c8c19ad31601c384f2846f7b96208340448c401f
33891,0,Change has been successfully merged into the git repository.
33894,0,Change has been successfully merged into the git repository.
33904,0,Change has been successfully merged into the git repository.
33907,0,Change has been successfully merged into the git repository.
33910,0,Change has been successfully merged into the git repository.
33913,1,Patch Set 3: Code-Review-2 Verified-1- The buttons should not be enabled while there is no selection in the dataset editor. - After moving a data set the editor state does not get dirty - Please change from up/down to down/up. That is the way we already use for next/previous error.Rest looks good :)
33917,0,Change has been successfully merged into the git repository.
33922,0,Change has been successfully merged into the git repository.
33927,0,Change has been successfully merged into the git repository.
33933,0,Change has been successfully merged into the git repository.
33942,0,Change has been successfully merged into the git repository.
33946,0,Change has been successfully merged into the git repository.
33953,0,"Patch Set 2:Good catch Michal, thank you.I have to rethink all the thing..."
33958,0,Change has been successfully merged into the git repository.
33964,0,Change has been successfully cherry-picked as bc66c1bacdd00aed64581984283a2344e5a737d4
33970,0,Change has been successfully merged into the git repository.
33974,0,Change has been successfully merged into the git repository.
33977,0,Change has been successfully cherry-picked as c4170e61214238d40214ee4d0c034fdedced9f0b
33981,0,Change has been successfully merged into the git repository.
33984,0,Change has been successfully merged into the git repository.
33987,0,Change has been successfully merged into the git repository.
33990,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7146/ : UNSTABLE
33996,0,Change has been successfully merged into the git repository.
33998,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7140/ : UNSTABLE
33999,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7141/ : UNSTABLE
34005,0,Change has been successfully merged into the git repository.
34008,0,Change has been successfully merged into the git repository.
34011,0,Change has been successfully merged into the git repository.
34016,0,Change has been successfully cherry-picked as 7603710159f4854fd23d8dcf1e3ab883ad3ebfc5
34020,0,Change has been successfully merged into the git repository.
34023,0,Change has been successfully merged into the git repository.
34025,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/811/ : UNSTABLE
34029,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/815/ : UNSTABLE
34031,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/819/ : UNSTABLE
34033,0,Change has been successfully merged into the git repository.
34036,0,Change has been successfully merged into the git repository.
34041,0,Patch Set 6: Code-Review+2 Verified+1Sounds good
34042,0,Change has been successfully merged into the git repository.
34055,0,Change has been successfully merged into the git repository.
34060,0,Change has been successfully merged into the git repository.
34067,0,Change has been successfully merged into the git repository.
34070,0,Change has been successfully merged into the git repository.
34073,0,Change has been successfully merged into the git repository.
34076,0,Change has been successfully merged into the git repository.
34078,0,Change has been successfully merged into the git repository.
34083,0,Change has been successfully merged into the git repository.
34086,0,Change has been successfully merged into the git repository.
34089,0,Change has been successfully merged into the git repository.
34092,0,Change has been successfully merged into the git repository.
34102,0,Change has been successfully merged into the git repository.
34106,0,Change has been successfully merged into the git repository.
34109,0,Change has been successfully merged into the git repository.
34115,0,Patch Set 4:(1 comment)it all looks good except for the comment
34119,0,Change has been successfully cherry-picked as 34067e9ac5aea0b25be986fa42f44774f1056928
34124,0,Change has been successfully merged into the git repository.
34127,0,Change has been successfully merged into the git repository.
34154,0,Patch Set 7:This looks good to me.
34155,0,Change has been successfully cherry-picked as 8a32801842871222b340c9f3be93a6a44e292a05
34158,0,Change has been successfully merged into the git repository.
34162,0,Change has been successfully merged into the git repository.
34165,0,Change has been successfully merged into the git repository.
34174,0,Change has been successfully merged into the git repository.
34186,0,Change has been successfully merged into the git repository.
34189,0,Change has been successfully merged into the git repository.
34192,0,Change has been successfully merged into the git repository.
34197,0,Change has been successfully merged into the git repository.
34200,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2939/ : UNSTABLE
34204,0,Change has been successfully rebased as 13978c15673a09714027b9c2ce770693dc50208b
34207,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2528/ : UNSTABLE
34209,0,"Patch Set 6:In the step into selection tests, the test has a .cpp and a .h. We want to have tags in both files, so we need to call it for both files.Lines will not collide, because the mapping is  tag -> lineso it's ok to have  some_tag_in_the_cpp -> 5  some_tag_in_the_h -> 5As long as there is no tag being repeated, it's fine. And even then, we could include the filename in the key:  (file.cpp, some_tag) -> 3  (file.cpp, some_tag) -> 4Does it make more sense?"
34211,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2299/ : UNSTABLE
34215,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2687/ : UNSTABLE
34216,1,"Patch Set 8:It makes more sense to have Pair as key then, i.e. new Pair(source,line) but i can push this now"
34222,1,"Patch Set 4:(1 comment)Oh sorry, I had left the comment as a draft."
34227,0,Change has been successfully merged into the git repository.
34229,0,Change has been successfully merged into the git repository.
34234,1,Patch Set 1: Code-Review-1The DEdgeReorientCommand is no longer used. Dead code ?
34269,0,Change has been successfully merged into the git repository.
34293,0,Change has been successfully merged into the git repository.
34296,0,Change has been successfully merged into the git repository.
34299,0,Change has been successfully merged into the git repository.
34302,0,Change has been successfully merged into the git repository.
34304,1,Patch Set 1: Code-Review+1The change looks good to me. I ran garbage collection stress test and the build including this fix looks stable to me.
34310,0,Change has been successfully merged into the git repository.
34313,0,Change has been successfully merged into the git repository.
34316,0,Change has been successfully merged into the git repository.
34319,0,Change has been successfully merged into the git repository.
34322,0,Change has been successfully cherry-picked as 9d013c71ac45d78859e88f4665309334f3ecf081
34325,0,Change has been successfully merged into the git repository.
34329,0,Change has been successfully merged into the git repository.
34333,0,"Patch Set 1: Code-Review-1Copyrights to be updated on some of these files, looks fine otherwise"
34336,0,Change has been successfully merged into the git repository.
34338,0,Change has been successfully merged into the git repository.
34342,0,Change has been successfully merged into the git repository.
34347,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1273/ : UNSTABLE
34350,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1274/ : UNSTABLE
34353,0,Change has been successfully merged into the git repository.
34356,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2925/ : UNSTABLE
34359,0,Change has been successfully rebased as 26bef5d3212c24dca5fc5ff0816728f59c247bbf
34362,0,Change has been successfully merged into the git repository.
34366,0,Change has been successfully rebased as b690c44acf2cd20775b3637128d7729db46b149e
34368,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2923/ : UNSTABLE
34370,0,Change has been successfully merged into the git repository.
34373,0,Change has been successfully merged into the git repository.
34376,0,Change has been successfully merged into the git repository.
34379,0,Change has been successfully merged into the git repository.
34382,0,Change has been successfully merged into the git repository.
34385,0,Change has been successfully merged into the git repository.
34388,0,Change has been successfully merged into the git repository.
34393,0,Change has been successfully merged into the git repository.
34399,0,Change has been successfully cherry-picked as 1f33ba0dd283b9c68084f0677130ce6ac1d93e15
34402,0,Change has been successfully merged into the git repository.
34405,0,Change has been successfully merged into the git repository.
34408,0,Change has been successfully merged into the git repository.
34419,0,Change has been successfully merged into the git repository.
34422,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/806/ : UNSTABLE
34423,0,Change has been successfully merged into the git repository.
34427,0,Change has been successfully merged into the git repository.
34430,0,Change has been successfully merged into the git repository.
34431,0,Patch Set 4:Seems like you could finally merge this change. This makes a new commit of this content superfluous. Thank you!
34445,0,Change has been successfully pushed.
34447,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2549/ : UNSTABLE
34450,0,Change has been successfully merged into the git repository.
34457,0,Change has been successfully merged into the git repository.
34463,0,Change has been successfully merged into the git repository.
34466,0,Change has been successfully merged into the git repository.
34470,0,Change has been successfully rebased as 1dcf7325877a67ec447175fa1cb8d18db93b40d8
34474,0,Change has been successfully rebased as ff2cf7b304da6cd7ee9c80d3906ac1f02df296dd
34477,0,Change has been successfully merged into the git repository.
34478,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2921/ : UNSTABLE
34480,0,Change has been successfully merged into the git repository.
34484,0,Change has been successfully merged into the git repository.
34489,0,Change has been successfully rebased as f493c330988236ccbda0e4759fbfa3d82131a02c
34495,0,Change has been successfully cherry-picked as be42703d616cb7057e41ed76a380703cf146776e
34500,0,Patch Set 3:forgot to add the file!
34505,0,Change has been successfully merged into the git repository.
34510,0,Change has been successfully merged into the git repository.
34513,0,Change has been successfully merged into the git repository.
34517,0,Change has been successfully merged into the git repository.
34520,0,Change has been successfully merged into the git repository.
34525,0,Change has been successfully merged into the git repository.
34528,0,Change has been successfully merged into the git repository.
34532,0,Change has been successfully merged into the git repository.
34541,0,Change has been successfully merged into the git repository.
34544,0,Change has been successfully merged into the git repository.
34547,0,Change has been successfully merged into the git repository.
34550,0,Change has been successfully merged into the git repository.
34562,0,Change has been successfully merged into the git repository.
34566,0,Change has been successfully rebased as 9c1489ad3129984130bd49b5c1516628d016ed57
34570,0,Change has been successfully cherry-picked as e3de351ca7ffd1bf722c9f0e2e86998cf1160bae
34573,0,Change has been successfully cherry-picked as 84520c2753cb9d775f921bf4c33b227dc7c1e7dd
34577,0,Change has been successfully merged into the git repository.
34579,0,Change has been successfully cherry-picked as 9d298f5b1fb60450bcb92c752af4ae22bbe19ed9
34582,0,Change has been successfully cherry-picked as 2f5c2df50931ea790cee03f6e0c5255350376d66
34586,0,Change has been successfully merged into the git repository.
34592,0,Change has been successfully merged into the git repository.
34595,0,Change has been successfully merged into the git repository.
34600,0,Change has been successfully cherry-picked as 7df9ba272c37bf16583d00af2a18c71e61635db5
34606,0,Change has been successfully merged into the git repository.
34609,0,Change has been successfully cherry-picked as 29ddb729f3fca339cb4767190a3f1003c4324e2a
34614,0,Change has been successfully cherry-picked as 22ba2f654645f3c6f9638107e4118fef493fd84c
34618,0,Patch Set 2: Code-Review+2 Verified+1Works well for me!
34620,0,Patch Set 2:> I do whatever you ask me to do ;-)Stand-by :) I'll check this
34622,0,Patch Set 2:I don't know what that all means but if you fix it I'm happy. Thanks! And let me know if something else is needed on my end...
34623,0,"Patch Set 2: Code-Review+2> I don't know what that all means but if you fix it I'm happy. Thanks! And let me know if something else is needed on my end...There's an issue with the documentation builder, which I won't be able to fix now...""Sharing Models with a Team"" and ""Limitations and Known Issues"" are not accessible ('Topic not found')."
34624,0,Change has been successfully cherry-picked as cf0e0ef3b9ef75e04f381b0b20a14393d761d9da
34636,0,Change has been successfully cherry-picked as a1fbe82759f4287b5f6f0df9ad86625eb331a13c
34644,1,"Patch Set 4:Alex, are you OK with this patch? It would be good to get this patch in soon-ish to help stabilize the build."
34648,0,Change has been successfully cherry-picked as 3ad34c5d3fbfeee1eeeda5c4fe2afa02d3bc6b2a
34676,0,Change has been successfully merged into the git repository.
34694,0,Change has been successfully cherry-picked as 69893d8e3dac838fafe0498c06a8dce0869e100d
34699,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2915/ : UNSTABLE
34703,0,Change has been successfully merged into the git repository.
34706,0,Change has been successfully cherry-picked as 7bd739f9f0ed077c80717bc9a56c342ea12a6bfa
34710,0,Change has been successfully rebased as a0750c27a823bd7f57641f36dcf7fb8ad66d32ed
34713,0,Patch Set 1: Code-Review+2 -VerifiedNew build after update of /releases/staging finished successfully.
34715,0,Change has been successfully rebased as 91db3945ae426a874237743ae78c583233fec169
34718,0,Change has been successfully merged into the git repository.
34721,0,Change has been successfully merged into the git repository.
34729,0,Change has been successfully merged into the git repository.
34734,0,Change has been successfully merged into the git repository.
34738,0,Change has been successfully merged into the git repository.
34742,0,Change has been successfully merged into the git repository.
34744,1,"Patch Set 2:> This needs a bug associated with it. > sure, gonna open it. > As per John's comment, please use the PTP formatter and cleanup > profiles: https://wiki.eclipse.org/PTP/developer_guidelinesok."
34749,1,"Patch Set 1:This needs a bug associated with it.As per John's comment, please use the PTP formatter and cleanup profiles: https://wiki.eclipse.org/PTP/developer_guidelines"
34753,0,Change has been successfully merged into the git repository.
34755,0,Change has been successfully merged into the git repository.
34760,0,Change has been successfully merged into the git repository.
34766,0,Change has been successfully merged into the git repository.
34770,0,Change has been successfully cherry-picked as 7f1d54766231046a72c497683c0f77d509251444
34778,0,Change has been successfully cherry-picked as 89e3c17537f4367d07064f896c320cb9cb5d38f7
34781,0,Change has been successfully cherry-picked as 1e45514b3e3009f2d5b5786c212c72e3630913cb
34783,0,Change has been successfully pushed.
34785,0,Change has been successfully merged into the git repository.
34787,0,Change has been successfully cherry-picked as 8f0fded463262a3a2b47dffc4df5d0bcd5d169eb
34797,0,Change has been successfully merged into the git repository.
34799,1,"Patch Set 2:For the edit part/figure independance, I would not go for this patch. I am concerned about the potential memory leaks here, where the edit part is supposed to be disposed, but is still referenced by the figure, and cannot be garbage collected.If I remember well from GMF runtime, the grid values can be passed to the request created when starting to drag the elements in the drag tracker. At this moment, a snapToHelper is created with all necessary informations.Also, I do not understand the activation or not of LinkLF, as it is initialized to false, but you force it to true at execution time. In fact, the method withLinkLFactivated, invoked right after the creation of the figure, forces activation."
34802,0,Change has been successfully cherry-picked as e11b700b89a98ecd6f0f29bbf69f431b96cdce52
34806,1,Patch Set 1: Code-Review-1(2 comments)I set -1 about lack of comments.It could be nice to have 1 instrucstion per line. (but his is only my opinion) this is not the reason of -1
34809,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
34811,0,Change has been successfully merged into the git repository.
34815,0,Change has been successfully cherry-picked as b9bed679a24b92d7ef3c107fa495b8988eb26dbd
34825,0,Change has been successfully cherry-picked as 0a784e5f27942aa469f757a89c6a6aa56e9b92d5
34830,0,Change has been successfully merged into the git repository.
34836,0,Change has been successfully merged into the git repository.
34838,1,Patch Set 4:If nobody will have nothing against I will marge this patch later as my last change for Mars. Patch is trivial and safe in my opinion :)
34840,0,Change has been successfully merged into the git repository.
34845,0,Change has been successfully merged into the git repository.
34850,1,"Patch Set 1: Code-Review+2I had accepted https://git.eclipse.org/r/#/c/49820/ on the wrong branch ""master"""
34851,0,Change has been successfully merged into the git repository.
34853,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2546/ : UNSTABLE
34856,0,Change has been successfully cherry-picked as 49ca76d72338cfd2d925fa9a3d2cf6acb15d10a3
34859,0,Change has been successfully merged into the git repository.
34864,0,Change has been successfully cherry-picked as 190b936157d70daf0f2c9a9a9eef8cdd8e01a434
34869,0,Change has been successfully merged into the git repository.
34875,0,Change has been successfully merged into the git repository.
34881,0,Change has been successfully merged into the git repository.
34893,0,Change has been successfully merged into the git repository.
34898,0,Change has been successfully merged into the git repository.
34901,0,Change has been successfully merged into the git repository.
34904,0,Change has been successfully merged into the git repository.
34908,0,Change has been successfully merged into the git repository.
34914,0,Change has been successfully merged into the git repository.
34917,0,Change has been successfully merged into the git repository.
34920,0,Change has been successfully merged into the git repository.
34922,0,Change has been successfully merged into the git repository.
34924,0,Change has been successfully pushed.
34927,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2540/ : UNSTABLE
34930,0,Change has been successfully cherry-picked as c7eac961ba4702093343dcc42f9b6354d6687439
34933,0,Change has been successfully cherry-picked as 5b427fda19047303a629b6eeda11b213d7ad0194
34936,0,Change has been successfully merged into the git repository.
34939,0,Change has been successfully merged into the git repository.
34942,0,Change has been successfully merged into the git repository.
34945,0,Change has been successfully merged into the git repository.
34948,0,Change has been successfully merged into the git repository.
34951,0,Change has been successfully merged into the git repository.
34957,0,Change has been successfully cherry-picked as 23eb8565b8e5b99be652f75353bd5e525fdb8c41
34962,0,Change has been successfully cherry-picked as a7cdf54a3dfecf861690b4403316dba26ad767cc
34965,0,Change has been successfully merged into the git repository.
34974,0,Change has been successfully cherry-picked as 6e3513310e94935016863b54c146d7967d99a3ca
34977,0,Change has been successfully merged into the git repository.
34979,0,Change has been successfully pushed.
34987,1,"Patch Set 2: Code-Review+1Camille, thanks for a catch, I updated the restriction to [3.3.0,4.0.0]I am not sure whether the gerrit will pick up the I-build for GMF-Tooling that actually contains the 3.3 version upgrade. Does it work against staging or should I also change something to explicitly point build configuration to where GMFTR-3.3 can be found?"
34990,0,Change has been successfully cherry-picked as 698e6e3b93f690a120267075bb95e21e0029b19f
34993,0,Change has been successfully merged into the git repository.
34996,0,Change has been successfully merged into the git repository.
34999,0,Change has been successfully merged into the git repository.
35003,0,Change has been successfully merged into the git repository.
35005,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/packaging/job/epp-logging.gerrit/170/ : UNSTABLE
35009,0,Change has been successfully merged into the git repository.
35011,0,Patch Set 2: Code-Review-1(5 comments)very good. only a few comments/questions.
35014,0,Change has been successfully merged into the git repository.
35028,0,"Patch Set 1:I think specifically for this gerrit, just selecting of the affected files in Project Explorer and firing File / Convert Line Delimiters To / Unix should help. More generally some magic around ""git config core.autocrlf true"" should work on Win, but I guess you will need to delete and re-checkout the whole repository after changing thisAnd activity.gmfgen changes looks perfect for me. There may be some general issues in merging the gmfgen files, but we already use to deal with them and this patch only affects lines that must be changed, So please don't hesitate with your further changes (provided that the line breaks remains native for git :) )"
35032,0,Patch Set 2:Thanks for update!I will push it as soon as I have the +1 from the hudson server
35034,0,Change has been successfully cherry-picked as d3d912f842276907bf03de779d7cac27f0bd21a1
35035,0,"Patch Set 3:thanks to all. I tried ""git config core.autocrlf true"" for another contribution and apparently that works !"
35038,0,Change has been successfully merged into the git repository.
35044,0,Change has been successfully merged into the git repository.
35047,0,Change has been successfully merged into the git repository.
35053,0,Change has been successfully merged into the git repository.
35056,0,Change has been successfully merged into the git repository.
35060,0,Change has been successfully merged into the git repository.
35063,0,Change has been successfully merged into the git repository.
35067,0,Change has been successfully merged into the git repository.
35070,0,Change has been successfully merged into the git repository.
35074,0,Change has been successfully merged into the git repository.
35081,0,Change has been successfully merged into the git repository.
35084,0,Change has been successfully merged into the git repository.
35089,0,Change has been successfully merged into the git repository.
35094,0,Change has been successfully merged into the git repository.
35096,0,Change has been successfully merged into the git repository.
35103,0,Change has been successfully merged into the git repository.
35109,0,Change has been successfully merged into the git repository.
35112,0,Change has been successfully cherry-picked as ba4ec789a96cc8cb0316dbe49e64d1c9b64d8405
35115,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2884/ : UNSTABLE
35118,0,Change has been successfully merged into the git repository.
35121,0,Change has been successfully merged into the git repository.
35122,0,Patch Set 2:Looks good.
35126,0,Change has been successfully merged into the git repository.
35130,0,Change has been successfully cherry-picked as 9461f7c4dfdd73e76b9677d52ab658576d9523e6
35133,0,Change has been successfully merged into the git repository.
35137,0,Change has been successfully rebased as cb1f3d7dd323454492901d63a58702c288a152e2
35141,0,Change has been successfully merged into the git repository.
35143,0,Change has been successfully cherry-picked as d6f468567725ef2ac4d0207badcc9f1f50ce311a
35150,0,Change has been successfully merged into the git repository.
35155,0,Change has been successfully cherry-picked as 4f3cdb83564c1ba898fba88b41793d3c43cc6b31
35158,0,Change has been successfully merged into the git repository.
35162,0,Change has been successfully cherry-picked as 98bf5b197b0104cd39f0c1612a5ee3847d4c1726
35166,0,Change has been successfully merged into the git repository.
35169,0,Change has been successfully merged into the git repository.
35172,0,Change has been successfully merged into the git repository.
35175,0,Change has been successfully cherry-picked as 6641512e5cf08a3deaf82f2db216b5d31fbb034a
35184,0,Change has been successfully cherry-picked as 88bd749fde274fa2c50f21bfb30b162e97911957
35186,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/895/ : UNSTABLE
35188,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/896/ : UNSTABLE
35190,0,Change has been successfully merged into the git repository.
35193,0,Change has been successfully cherry-picked as 94734f51f17c6245ce73cfef71fe3ea26708fbfb
35196,0,Change has been successfully cherry-picked as e6c61ceb202e06db3e32c2e27d86e07627d6537f
35199,0,Change has been successfully merged into the git repository.
35203,0,Change has been successfully merged into the git repository.
35233,0,Change has been successfully merged into the git repository.
35242,0,Change has been successfully merged into the git repository.
35254,0,Change has been successfully cherry-picked as 7ed517266b9db13e2ccd5f1c62eb7a367dcdaec9
35268,0,Change has been successfully merged into the git repository.
35273,0,Change has been successfully cherry-picked as b06f083ba67b1c957732df6e9034637994f076f4
35277,0,Change has been successfully cherry-picked as 3ad80ee3ea3267c2ab8d9bd998d9f5afd7af0b70
35282,0,Change has been successfully merged into the git repository.
35288,0,Change has been successfully merged into the git repository.
35290,0,Change has been successfully cherry-picked as 88bf12251db804f23143f9f1aabc18092614b444
35295,0,Change has been successfully cherry-picked as 604ec6fffb57d20a4d3114b2b25e7811e5040d31
35300,0,Change has been successfully merged into the git repository.
35310,0,Change has been successfully cherry-picked as 952e1ad5814c18c09c094f4769ff0d8c4a13ad1d
35313,0,Change has been successfully merged into the git repository.
35316,0,Change has been successfully merged into the git repository.
35319,0,Change has been successfully cherry-picked as eb5a7e12754184f8b4f6330c162e04b3c6aeecbb
35322,0,Change has been successfully cherry-picked as 9cb32e88ce9504a1e490fc087ea991ad0d15296e
35325,0,Change has been successfully merged into the git repository.
35328,0,"Patch Set 2: Code-Review+2no, a +2 :)"
35329,0,Change has been successfully merged into the git repository.
35337,0,Change has been successfully merged into the git repository.
35339,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2883/ : UNSTABLE
35341,0,Change has been successfully merged into the git repository.
35344,0,Change has been successfully cherry-picked as c6ccda5196366b59161cfed5ea585d8c1a73620c
35350,0,Change has been successfully merged into the git repository.
35352,0,Change has been successfully cherry-picked as 9da2683f8c44c23d179838c620c7963f81a5588b
35355,0,Change has been successfully merged into the git repository.
35359,0,Change has been successfully merged into the git repository.
35362,0,Change has been successfully cherry-picked as 453f6ecb472cc00baa71943703c95c1277afa189
35367,0,Change has been successfully merged into the git repository.
35370,0,Change has been successfully merged into the git repository.
35372,0,Change has been successfully merged into the git repository.
35376,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/packaging/job/epp-logging.gerrit/164/ : UNSTABLE
35385,0,Change has been successfully cherry-picked as 8e17eaffa0d6b21e24a60da5e56d486f8d65f271
35389,0,"Patch Set 3: Code-Review+1This is really helpful. Maybe we could also provide an annotation, which is similar to @Optional, but avoids method injection in case the value for a key is null."
35390,1,Patch Set 3:Thanks Simon for the review on the Javadoc. Adding Brian to see if he is OK with the text I extracted from his answer in a bug report.
35399,0,Change has been successfully merged into the git repository.
35400,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2847/ : UNSTABLE
35401,0,Change has been successfully merged into the git repository.
35404,0,Change has been successfully cherry-picked as c058ac00df48f51b050f58f96fc0673d6685474e
35407,0,Change has been successfully merged into the git repository.
35415,0,Change has been successfully cherry-picked as 445b79abc17ac89a12b7aa05b76d3154ed62d5b4
35419,0,Change has been successfully merged into the git repository.
35422,0,Change has been successfully merged into the git repository.
35424,0,Change has been successfully merged into the git repository.
35429,0,Patch Set 2: Code-Review+1Tested locally and it looks good so far. Although I think the commented syserr could have also be deleted directly and I don't like the pattern to skip the method execution via return where a nesting would be appropriate. But that is my personal oppinion. I know that a lot of e4 code looks that way.
35430,0,Change has been successfully merged into the git repository.
35432,0,Patch Set 1: Verified+1 Code-Review+2It works well. Thanks Andrey.
35436,0,Change has been successfully cherry-picked as 28411ebb55837fe90e4c0c2906a733c1a79c650f
35445,0,Change has been successfully merged into the git repository.
35449,0,Change has been successfully merged into the git repository.
35453,0,"Patch Set 1: Code-Review-1(5 comments)Thanks for the contribution!Below are some first comments. Do you prefer that you do all the changes, or should I also help with some patchsets?- we should aim to keep the API part consistent (naming) with the rest of MAT API. There are some inline comments related to this- copyright headers - All files should have copyright headers. I could add them. It would be however good if you can add yourself to the list of authors in the files which weren't just renamed/copied. Or in all. Shall I do this change, or you do it?-code formatting: I don't really remember how, but years ago we ended up with our own way of formatting the code. While I don't see this as a good idea, I would like to have all code of MAT formatted the same way. We are using this one: http://www.eclipse.org/mat/dev/mat_code_formatter.xml. I could do this change as well.I guess some other things may come up, as I am looking through the rest. In general I suggest we focus and try to get the API part as good as we can."
35454,0,"Patch Set 1:(2 comments)Changing the names to match the standard I/Abstract prefixes is fine, not having them is probably habit from writing code not like that.I don't mind if you make changes."
35460,0,"Patch Set 4: Code-Review+2 Verified+1(1 comment)In the last patch set I have slightly modofied the WrapperColelctionExtractor to avoid some NPE exceptions in the console.I am going to submit the change now. About exception handling - I propose to keep it as this for now and fix if we see concrete problems or if someone complains/suggests that a different bahavior is better.Thanks for your work on this! I hope you would send us further patches if you notice we've overseen something in the review process, or if you have other ideas."
35461,0,Change has been successfully merged into the git repository.
35464,1,"Patch Set 3:I think the only other concern I has was exception handling. There are quite a few places where SnapshotException is caught, and it is either wrapped in a RuntimeException or reported as an error.In some cases we have to do one of those since the catching method cannot throw a checked exception, but we should make sure that the choice of throwing SnapshotException, wrapping in RuntimeException, or reporting the error is correct.In general, is the approach that ""user facing"" things like queries should report errors, but that ""code facing"" things like the collection extraction API should throw exceptions?There are some places where the existing query code catches SnapshotException and reports an error, but since the logic is now pushed inside the collection extraction API it throws a runtime exception and the query no longer catches it (e.g. CollectionFillRatioQuery). This means that previously there would be an error reported to the user but it would now lead to an uncaught RuntimeException.If we wanted to not wrap in RuntimeException, basically every method that does not implement an existing API would need to throw SnapshotException since implementing code may want to call another method that does. Even then, the code implementing an existing API like Iterator would still have to wrap SnapshotException in RuntimeException."
35465,0,"Patch Set 3: Code-Review+1Unless we wanted to alter the exception handling (I'd originally thought ""I'll fix that later""), I'm fine to have it committed - we can fix any bugs as they arise.I think it would still be a good idea to allow other plugins to add supported collections (via an extension point), but since I've lost my code to do that I'll have to re-write it. That won't break any API just add some more, so that is fine to do later for next year's releases."
35471,0,Change has been successfully merged into the git repository.
35475,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
35482,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
35486,0,Patch Set 3:Build SUCCESSFUL. Now starting integration tests...
35490,0,Patch Set 4:Build SUCCESSFUL. Now starting integration tests...
35492,0,Change has been successfully merged into the git repository.
35494,0,Change has been successfully merged into the git repository.
35502,0,Change has been successfully merged into the git repository.
35506,0,Change has been successfully merged into the git repository.
35511,0,Change has been successfully merged into the git repository.
35520,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/packaging/job/epp-logging.gerrit/150/ : UNSTABLE
35523,0,Change has been successfully merged into the git repository.
35528,0,Change has been successfully merged into the git repository.
35532,0,Change has been successfully merged into the git repository.
35535,0,Change has been successfully merged into the git repository.
35536,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/packaging/job/epp-logging.gerrit/153/ : UNSTABLE
35538,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/packaging/job/epp-logging.gerrit/152/ : UNSTABLE
35543,0,Change has been successfully pushed.
35545,0,Change has been successfully merged into the git repository.
35552,0,Change has been successfully merged into the git repository.
35560,0,Patch Set 5: Code-Review+1needs testing on mac and windows but the change itself looks good to me
35567,0,Change has been successfully merged into the git repository.
35570,0,Change has been successfully cherry-picked as 6b7850da353a815be7c4626b22081da142fcc253
35573,0,Change has been successfully cherry-picked as d696ec8f0a2d90dcb5cf78840b8f16fdb3fd6ab2
35576,0,Change has been successfully cherry-picked as ce8984c97478bee899fb3fe281745622a88cf0c4
35579,0,Change has been successfully merged into the git repository.
35583,0,Change has been successfully cherry-picked as ca85a312f41b9502976dbc8a1840707bbd06f888
35587,0,Change has been successfully merged into the git repository.
35589,0,Change has been successfully cherry-picked as 4768aeb7e78427e6f11ba9d2d36b84c7485e3d2f
35593,0,Change has been successfully merged into the git repository.
35596,0,Change has been successfully merged into the git repository.
35599,0,Change has been successfully merged into the git repository.
35601,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/478/ : UNSTABLE
35608,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/477/ : UNSTABLE
35614,0,Change has been successfully merged into the git repository.
35617,0,Change has been successfully merged into the git repository.
35623,0,Change has been successfully merged into the git repository.
35629,0,Change has been successfully merged into the git repository.
35636,0,Change has been successfully merged into the git repository.
35638,0,Change has been successfully pushed.
35644,0,Change has been successfully merged into the git repository.
35648,0,Change has been successfully merged into the git repository.
35652,0,Change has been successfully pushed.
35660,0,Change has been successfully merged into the git repository.
35668,0,Change has been successfully merged into the git repository.
35671,0,"Patch Set 1:(1 comment)Thanks for the review Sergey!I'll update and submit it, after hudson is happy with the tests."
35674,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2843/ : UNSTABLE
35675,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2844/ : UNSTABLE
35676,0,Change has been successfully merged into the git repository.
35688,0,Change has been successfully merged into the git repository.
35691,0,Change has been successfully merged into the git repository.
35695,0,Change has been successfully cherry-picked as 2e45db7f9004008b3965bbf33cfcde649aec0f8f
35698,0,Change has been successfully merged into the git repository.
35702,0,Change has been successfully cherry-picked as be767b31a7b41bcb5ffffc5a53053dc46dc003b1
35704,0,Patch Set 1: Code-Review+1 Verified+1Thanks for the rewrite! Nice work!
35707,0,Change has been successfully merged into the git repository.
35710,0,Change has been successfully merged into the git repository.
35715,0,Change has been successfully merged into the git repository.
35720,0,Change has been successfully merged into the git repository.
35726,0,"Patch Set 2: Verified+1 Code-Review+2Code looks good. Includes correct documentation, formatting and does not break the build. Addition of the org.json.* lib does not introduce additional 3rd party dependencies IPs, since these are fetched from Orbit"
35727,0,Change has been successfully merged into the git repository.
35730,0,"Patch Set 1: Code-Review-1 Verified-1I will agree with Athanasios on his review status. -1 from my side as well.Nevertheless, Andreas, good work. Please address the Athanasios comments and re-submit the connector for review."
35737,0,Change has been successfully merged into the git repository.
35739,0,Change has been successfully merged into the git repository.
35745,0,Change has been successfully cherry-picked as 576f39b13f86998615aac65ab6011aa9632ab0dd
35748,0,Change has been successfully cherry-picked as ee4c28ad55277145aa1e56d5d66510e2e9dcd7d7
35751,0,Change has been successfully cherry-picked as 03a4f447019c8efbeae4a28ea2d7fd5b45edb511
35758,0,Patch Set 6: Code-Review+2- rebased- improved commit message- improved menu text
35759,0,Change has been successfully merged into the git repository.
35761,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7076/ : UNSTABLE
35764,0,Change has been successfully merged into the git repository.
35766,0,Change has been successfully merged into the git repository.
35785,0,Change has been successfully cherry-picked as 9b59296287a33916ae0855af3262491b3a4b2a13
35787,0,"Patch Set 1: Code-Review+1(1 comment)Small comment about the commit title, otherwise looks good."
35791,0,Change has been successfully merged into the git repository.
35796,0,Change has been successfully merged into the git repository.
35799,0,Change has been successfully merged into the git repository.
35802,0,Change has been successfully merged into the git repository.
35804,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/691/ : UNSTABLE
35805,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/692/ : UNSTABLE
35807,0,Change has been successfully merged into the git repository.
35809,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2839/ : UNSTABLE
35811,0,Change has been successfully merged into the git repository.
35815,0,Change has been successfully merged into the git repository.
35817,0,Change has been successfully merged into the git repository.
35822,0,Change has been successfully merged into the git repository.
35832,0,Change has been successfully cherry-picked as 8f72f641b4aaacef3363a709f2695c14967a6635
35841,0,Patch Set 3: Code-Review-1 Verified+1(2 comments)I tested it and it works fine.
35846,0,Change has been successfully cherry-picked as 7c62be2f83b2874be93f01ea1411884306cad078
35849,0,Patch Set 1: Code-Review+2 Verified+1This change looks fine to me.
35850,0,Change has been successfully cherry-picked as bcb953b29651740d628deb30f3ccbedf4425a854
35858,0,Change has been successfully merged into the git repository.
35861,0,Change has been successfully merged into the git repository.
35863,0,"Patch Set 1: Code-Review-1 Verified+1(13 comments)This change looks mostly fine to me and can confirm it works. I've annotated the files in this review with various comments that should be addressed.Also, please go through all your .java source files and make the whitespace consistent. There should be no red whitespace marks (inconsistent space/tab usage) for the new files you submit."
35868,0,Change has been successfully cherry-picked as 7852654a98430d7efbb8cb92e96ed027f47e538a
35871,0,Change has been successfully merged into the git repository.
35874,0,Patch Set 2:(4 comments)I am happy with what we are exposing here. Mostly comments on documentation.
35878,0,Patch Set 1:(1 comment)Thanks!
35881,0,Change has been successfully merged into the git repository.
35884,0,Change has been successfully merged into the git repository.
35887,0,Change has been successfully merged into the git repository.
35891,1,Abandoned
35895,0,Change has been successfully merged into the git repository.
35899,1,Abandoned
35903,0,Change has been successfully merged into the git repository.
35907,0,Change has been successfully rebased as 07a5ce39847b8dc5921180942db31d30f9d2d4f8
35911,0,Change has been successfully rebased as 85fba3e6f35ef2f5fd1fe4810ab68f90022b0475
35916,0,Change has been successfully rebased as 60e0afba76c244490ba627ade41a943ed594187f
35925,0,Change has been successfully merged into the git repository.
35928,0,Change has been successfully merged into the git repository.
35931,0,Change has been successfully merged into the git repository.
35933,0,"Patch Set 1: Verified+1 Code-Review+2Works, I tested it in 2.7 only. I think it's good to go."
35934,0,Change has been successfully cherry-picked as 7e3d8120b04f662e33946bbdf19b489133b1f583
35943,0,Change has been successfully merged into the git repository.
35946,0,Change has been successfully merged into the git repository.
35952,0,Change has been successfully cherry-picked as 1b638236aae4e41bdef60cf0411038f563b85d9c
35958,0,Change has been successfully merged into the git repository.
35965,0,Change has been successfully cherry-picked as 778bce67ff02b4953e2b341ed3da0a0383c7f9f9
35973,0,Patch Set 5: Code-Review+2 Verified+1I fixed a simple merge conflict (imports in EventDeclaration). Looks good otherwise.
35987,0,Change has been successfully merged into the git repository.
35992,0,Change has been successfully merged into the git repository.
35997,0,Change has been successfully cherry-picked as a6366b8b0bf8ea75c5d18b1522348dd51b97b909
36000,1,"Patch Set 1:Bump, someone please take a quick look at this. It fixes an actual API error, would be ideal to get it in before the API freeze :) Although I don't think test plugins count as ""API""..."
36007,0,"Patch Set 4: Code-Review+2I normally don't consider ""I will change it later"" an acceptable excuse, but ok this is a special situation ;)"
36009,0,Change has been successfully cherry-picked as e18274f96bc5bbd981c982048350f180e60b81bc
36021,0,Change has been successfully merged into the git repository.
36033,0,Patch Set 10:(1 comment)Almost finished.  One question I'd like to confirm (in-line).
36039,0,Patch Set 2:pushed 2nd patch which handles some refactoring done to the private repo.  Hope to replace this patch ASAP when CQs are approved with actual Linux Tools repo so gerrit will build it.
36047,1,"Patch Set 4:(3 comments)Patchset 4 no longer compiles for me.  There are two changes to ContainerLaunchConfigurationDelegate.java that added a connection name to the launch() call.  Was that change planned, or an oversight?"
36048,0,"Patch Set 4: Code-Review-1(16 comments)Ok, all done.  Things look good with some minor comments left and right which are all in-line in patchsets 3 and 4."
36055,0,Change has been successfully rebased as 56032058d2b265a83892262cc6f06394f8f59671
36057,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2805/ : UNSTABLE
36067,0,Change has been successfully rebased as bd2ea756028108a0b09bdeab49aa6e467cd4ae5e
36071,0,Change has been successfully rebased as 4767f17971671ff11777f9f24d1d32410577953a
36074,0,Change has been successfully merged into the git repository.
36078,0,Change has been successfully merged into the git repository.
36083,0,Change has been successfully merged into the git repository.
36087,0,Change has been successfully cherry-picked as abf7b9b048996483eac663fd6e06a98567186d68
36093,0,"Patch Set 2: Code-Review+2(1 comment)Other than the fact that 2/3 of the patch is copyright header noise, change looks good."
36098,0,Change has been successfully cherry-picked as b8db40834be81025ccafa5eedbb715b48cd6e93b
36104,0,Change has been successfully cherry-picked as d038a7f404fddab97973bc38f983c678e56f61a0
36110,0,Change has been successfully cherry-picked as f7a2dcb562789032953b74fbe0178fa67eb27024
36113,0,Change has been successfully cherry-picked as 94f68898b5b83fcc39d04864c6642c192d0afda3
36116,0,Change has been successfully cherry-picked as 9875001f34e87ce8cad5b4726d23103f632fa447
36119,0,Change has been successfully cherry-picked as 95c0e94dcb994ec514fc7c4d62f2ee0940de3339
36122,0,Change has been successfully cherry-picked as 03e9c71cb3d6965daa50fa4946d0719d6713f9e5
36130,0,Change has been successfully merged into the git repository.
36133,0,Change has been successfully cherry-picked as 0dcaf5a8378da74f97d8e11d53962876d0c9d911
36136,0,Change has been successfully cherry-picked as 3a4c2a9bce59a302dedc27b3185993b9fde68243
36142,0,Change has been successfully merged into the git repository.
36147,0,Change has been successfully merged into the git repository.
36151,0,"Patch Set 2:@Alex, this code tests the environment, but we still need to know if stuff breaks, for example, let's say remote changes its output, this is a great canary test. It can be easily argued that we should only focus unit tests on individual components, but we still need these integration tests. They could be moved at a later date though."
36153,0,Change has been successfully cherry-picked as f5d0f2fb24bc96a7e28c4ba4c16b269e266b94c4
36159,0,Change has been successfully merged into the git repository.
36162,0,Change has been successfully merged into the git repository.
36165,0,Change has been successfully cherry-picked as 5b9f045f6f0b00f51e8af7bac9a1cc34154fcfc6
36168,0,Change has been successfully merged into the git repository.
36171,0,Change has been successfully merged into the git repository.
36176,0,Change has been successfully merged into the git repository.
36180,0,Patch Set 1: Code-Review+2Convinced thanks!
36182,0,Change has been successfully cherry-picked as 932fc1823cafd1f7a57acf5ea705b44d67ca99da
36185,0,Change has been successfully merged into the git repository.
36187,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2498/ : UNSTABLE
36190,0,Change has been successfully cherry-picked as 8d1b67675ac02f55d9edb5a6f2b67ea00b6f0c85
36191,1,Patch Set 2:Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2516/ : UNSTABLE
36194,0,Change has been successfully merged into the git repository.
36198,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2505/ : UNSTABLE
36200,0,Change has been successfully cherry-picked as 977027628fe08057c2221f578b72bae2a7dd3180
36203,0,Change has been successfully merged into the git repository.
36207,0,Change has been successfully merged into the git repository.
36211,0,Change has been successfully merged into the git repository.
36217,0,"Patch Set 13: Code-Review+2 Verified+1lgtm, didn't manage to make it break. I went through some rounds of reviews already.To be fair, NonNullUtils didn't exist back when this patch was first proposed!"
36220,0,Change has been successfully cherry-picked as 15f6223a74b6e571726ddb41d90f10786e3d22eb
36236,0,Change has been successfully merged into the git repository.
36239,1,Patch Set 1: Code-Review-1We're still interested in this contribution but could you please resolve the following: - please add the content of   - Change 32643  - Change 32644  - Change 32645  - ... to this contribution - make the contribution applicable to master again  - exclude modifications e.g. in the .project / .directory file
36242,0,Change has been successfully merged into the git repository.
36246,0,Change has been successfully cherry-picked as 38a9806e0910ea414da9d836bd268c01c54e474d
36249,0,Change has been successfully merged into the git repository.
36252,0,Change has been successfully cherry-picked as c550d16a6304835f7993fe458bfcd9fd9fc4ac76
36255,0,Change has been successfully cherry-picked as cdae3e8a434ca5b2aba99540d111f739992e7a71
36259,0,Change has been successfully cherry-picked as 942abe4917e2438f068f5fb363cf91a6ddd95363
36261,0,"Patch Set 3: Code-Review+2 Verified+1This change seems fine to me, and should fix things for non-Linux distros."
36262,0,Change has been successfully cherry-picked as 6b96d3294377abf5cb669024b1d69b935400bbf1
36267,0,Change has been successfully merged into the git repository.
36270,0,Change has been successfully merged into the git repository.
36272,0,Change has been successfully merged into the git repository.
36279,0,Change has been successfully merged into the git repository.
36282,0,Patch Set 1: Code-Review+2 Verified+1Surprise change in o.e.remote. Thanks for fixing this. We need this change for the RC1 build if they include it in their RC1 build (which is not out yet)
36284,0,Change has been successfully cherry-picked as 36e311b03bb3ef3ec526ebeb0d9239d920b7d8fa
36285,0,Change has been successfully cherry-picked as debd4c540771eba01c7e755d90348e6ef11c0092
36289,0,Patch Set 2: Verified+1 Code-Review+2This looks fine to me.
36290,0,Change has been successfully cherry-picked as f2108c1f951752182479761bcee781d5371b987e
36295,0,Change has been successfully merged into the git repository.
36298,0,Change has been successfully cherry-picked as d565b7745f96b02f8538fff889d9ed08a2e095e9
36302,0,Change has been successfully merged into the git repository.
36308,0,Change has been successfully merged into the git repository.
36312,0,Change has been successfully rebased as 9b76ca4f03a7e428a68e5fdc8270cba909a25ba7
36315,1,Patch Set 7: Code-Review-1(7 comments)Two tests are still failing. You can see which tests fail by clicking on the build report.
36317,0,"Patch Set 2: Code-Review+1There's problem to solve in RssServiceTest, however PollFeedJobTest is fine for me."
36329,0,"Patch Set 12: Code-Review+2Good work, thanks Pawel!"
36330,0,Change has been successfully merged into the git repository.
36342,0,Change has been successfully rebased as 6b466a0ec01e21f0fae9aac0a19196ef35a02f84
36345,0,Change has been successfully cherry-picked as a210e48e5cace4476795372ce30441e90dec110f
36348,0,Change has been successfully merged into the git repository.
36352,0,Change has been successfully merged into the git repository.
36356,0,Change has been successfully merged into the git repository.
36359,0,Change has been successfully merged into the git repository.
36363,0,Change has been successfully merged into the git repository.
36366,0,Change has been successfully merged into the git repository.
36367,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/766/ : UNSTABLE
36372,0,Change has been successfully merged into the git repository.
36374,0,Change has been successfully merged into the git repository.
36381,0,Change has been successfully merged into the git repository.
36385,0,"Patch Set 1:Thanks for the contribution, it looks fine by me."
36386,0,Change has been successfully merged into the git repository.
36391,0,Change has been successfully merged into the git repository.
36393,0,Change has been successfully pushed.
36398,0,Change has been successfully merged into the git repository.
36402,0,Change has been successfully merged into the git repository.
36406,0,Change has been successfully cherry-picked as d0eb14b622dae71f3d2fe86bc5c599dac59096a7
36408,0,Change has been successfully merged into the git repository.
36414,0,Change has been successfully merged into the git repository.
36418,0,Patch Set 3: Code-Review+2 Verified+1Looks good.
36419,0,Change has been successfully cherry-picked as bf68a856b0c228c322139fd4de727c7e9f898f50
36421,0,Change has been successfully pushed.
36426,0,Change has been successfully merged into the git repository.
36435,0,Change has been successfully merged into the git repository.
36440,0,Change has been successfully merged into the git repository.
36444,0,Change has been successfully merged into the git repository.
36447,0,Change has been successfully cherry-picked as 45296aa80187b6a8f4324b664f1fcc63c4680816
36452,0,Change has been successfully merged into the git repository.
36466,0,Change has been successfully merged into the git repository.
36473,0,Change has been successfully cherry-picked as 6411ef7f714a63f7ac673b68607186549bbd5940
36484,0,Change has been successfully cherry-picked as a6ea5413eb37ce34239117f8b9cf5be3f0c37278
36492,0,Change has been successfully merged into the git repository.
36495,0,Change has been successfully cherry-picked as 0404d7554615f6a775ec77f73c6a00c258db2ad8
36498,0,Change has been successfully merged into the git repository.
36500,0,Change has been successfully cherry-picked as e1f4beb6bbb55a786b7ff77b6ac2ec9299c8458d
36505,0,Change has been successfully cherry-picked as e188e7cf58b8bf40878d5db4837ab794996c5d62
36509,0,Change has been successfully rebased as 4299555c80b293813dffbc85d4b250731ca30763
36513,0,Change has been successfully rebased as bbbea4be1af94a24280fe21c3e1e22e556f658f7
36516,0,Change has been successfully merged into the git repository.
36520,0,Change has been successfully merged into the git repository.
36522,0,Patch Set 3: Code-Review+2 Verified+1Thanks for this!
36524,0,Change has been successfully rebased as 71d0155cafc9c6a9eb7526e456251b7c0088964c
36532,0,Change has been successfully rebased as 5c0a7cc3b71f16244faf18739058ec5924cb37bc
36539,0,Change has been successfully rebased as 608db16df7624ff0d006ae4e62add4eb6883c76a
36541,0,"Patch Set 1: Code-Review-1(11 comments)Good start.Looks like there is some new functionality without corresponding tests.Consider splitting into more than one review (e.g. each review introducing a small new piece of functionality).  That would make it obvious what's being added, and easier to verify that it's being properly tested."
36542,1,Patch Set 1:(11 comments)uploaded patch that does the rename.the main bulk of tests still excluded to avoid breaking through 1000+ lines barrier.If you require this patch needs to be split up in smaller parts then please provide a suggestion based on the very original patch that avoids back and forth on this.For now I just added the very basic tests -I'll add the 800 lines of tests as soon as this patch is reviewed so instead of ~7 very time consuming patch splits and gerrit reviews we are done in 2 and from there on smaller changes on top.
36549,0,Patch Set 7: Code-Review+2+2 and CQ is approved!
36552,0,"Patch Set 4: Code-Review+1(4 comments)Just a few minor nits left, then this one should be good to go.Thanks for your patience on this one."
36556,0,Change has been successfully merged into the git repository.
36558,0,"Patch Set 3:(6 comments)Some feedback with inline comments, though I haven't completed a full code review here.It would be great if you could cut this down to a much smaller review with less functionality."
36559,0,"Patch Set 3:(6 comments)updated patch based on comments for the tests.*please* realize this is 99% same as what initial contribution for markdown was. This is not complicated code at all, but having to rebase the full patch on these changes slows things down to a halt.I hope we can get this in so we can move forward faster. Thank you."
36563,1,"Patch Set 2:(1 comment)Okey, so i've updated commit that add basic functionallity + tests for the basic blocks (without these basic blocks the functionallity is rather useless)Hope we can get the CQ done quickly and applied this. Taking too long time keeping my branches in sync ;)"
36573,0,Change has been successfully merged into the git repository.
36578,0,Change has been successfully rebased as d04eff73904b3b1a107e74a535125a796b863206
36583,0,Change has been successfully merged into the git repository.
36585,0,Patch Set 2: Code-Review+1I tested on Gtk2 and Gtk3. The fix improves the Control.getMonitor(). Looks good to me. Trialing whitespace & trailing indentation removal would be a bonus.
36586,0,Patch Set 2:Works perfect.
36588,0,"Patch Set 4:Thank you for the great suggestions!Please take another look. I believe I've applied all your feedback.Also, I could use some help with testing this since I'm unable to actually build the SWT libraries at the moment."
36591,1,"Patch Set 5:This is looking quite good. There is a small issue on gtk2, I posted a comment in the bug."
36592,0,"Patch Set 5: Code-Review+1As per discussion on Bug, this patch seems good to go. If the trailing white space would be removed in Display.java, it would be a bonus."
36610,0,Change has been successfully merged into the git repository.
36614,0,Change has been successfully merged into the git repository.
36617,0,Change has been successfully merged into the git repository.
36620,0,Change has been successfully merged into the git repository.
36624,0,Change has been successfully merged into the git repository.
36628,0,Change has been successfully rebased as cd1c196e044b0591c600f0691f00ead614cc327c
36632,0,Change has been successfully rebased as 93f80d98f4208e62a82b9c0460e70d356e5125ab
36635,0,Change has been successfully merged into the git repository.
36642,0,Change has been successfully merged into the git repository.
36646,0,Change has been successfully merged into the git repository.
36653,0,Change has been successfully merged into the git repository.
36655,0,Change has been successfully pushed.
36662,0,Change has been successfully merged into the git repository.
36666,0,Change has been successfully cherry-picked as 5f59d28fb906a9d72e72c216eda4423da38b6679
36669,0,Change has been successfully merged into the git repository.
36675,0,Change has been successfully merged into the git repository.
36678,0,Change has been successfully merged into the git repository.
36692,0,Change has been successfully merged into the git repository.
36697,0,Change has been successfully merged into the git repository.
36703,0,Change has been successfully merged into the git repository.
36711,0,Change has been successfully merged into the git repository.
36714,1,Patch Set 3:I'd prefer to keep testing jenkins-1.565.3 instead of jenkins-1.580.1 as the latter has never been stable. Hopefully the problem is resolved in 1.596.
36717,0,Change has been successfully rebased as e5c8bc40cf78ca6cd0187e3180f85a02e72647e2
36733,0,Change has been successfully merged into the git repository.
36737,0,Change has been successfully merged into the git repository.
36741,0,Change has been successfully merged into the git repository.
36744,0,Change has been successfully merged into the git repository.
36748,0,Change has been successfully merged into the git repository.
36751,0,Change has been successfully merged into the git repository.
36757,0,Change has been successfully merged into the git repository.
36760,0,Change has been successfully merged into the git repository.
36763,0,Change has been successfully merged into the git repository.
36769,0,Change has been successfully merged into the git repository.
36771,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1066/ : UNSTABLE
36774,0,Change has been successfully merged into the git repository.
36776,0,Change has been successfully merged into the git repository.
36783,0,Change has been successfully merged into the git repository.
36788,0,Change has been successfully merged into the git repository.
36791,0,Change has been successfully merged into the git repository.
36795,0,Change has been successfully merged into the git repository.
36800,0,Change has been successfully merged into the git repository.
36803,0,Change has been successfully merged into the git repository.
36805,1,"Patch Set 1:Thanks. This resolves the problem with my test repository (tested on Windows). I'm going to contact a user who had initially reported this problem and ask him to confirm with his real-world repository, too."
36808,0,Change has been successfully merged into the git repository.
36811,0,Change has been successfully merged into the git repository.
36816,0,Change has been successfully merged into the git repository.
36821,0,Change has been successfully merged into the git repository.
36827,0,Change has been successfully merged into the git repository.
36833,0,Change has been successfully rebased as 0ff408c23895fd714c0df430af64571c21e8a285
36841,0,Change has been successfully merged into the git repository.
36844,0,Change has been successfully merged into the git repository.
36854,0,Change has been successfully merged into the git repository.
36859,0,Change has been successfully merged into the git repository.
36871,0,Change has been successfully merged into the git repository.
36878,0,Change has been successfully merged into the git repository.
36892,0,Patch Set 1:(1 comment)Thanks for the patch. I have one clarification question.
36898,0,Change has been successfully merged into the git repository.
36901,0,"Patch Set 16: Code-Review+1Commiters, for RC0 we need second review vote. It would be nice to fix those leaks since many people store their data in the views and expect they only have one instance."
36909,0,"Patch Set 1: Code-Review+2Thanks Tom. Regarding header: thanks for the hint. I was told to always update it in ui project - in egit we don't do this, independently of the status."
36910,0,Change has been successfully merged into the git repository.
36913,0,Patch Set 1: Code-Review+1Changes seem fine. The .0 isn't strictly necessary but for consistency with the other imports it makes sense to keep it.
36916,0,Change has been successfully merged into the git repository.
36919,0,Change has been successfully merged into the git repository.
36922,0,Change has been successfully merged into the git repository.
36925,0,Change has been successfully merged into the git repository.
36928,0,Change has been successfully merged into the git repository.
36931,0,Change has been successfully merged into the git repository.
36934,0,Change has been successfully merged into the git repository.
36938,0,Change has been successfully rebased as 1e50797934f235be6ecd94fe1ea91450e4d5d03c
36941,0,Change has been successfully merged into the git repository.
36945,0,Change has been successfully merged into the git repository.
36948,0,Change has been successfully merged into the git repository.
36950,0,Change has been successfully cherry-picked as 3573a01c08312f2597a685560bd7eb54a1cbf04e
36958,0,Patch Set 1: Code-Review-1(1 comment)Thanks for the quick fix for the issue
36964,0,Patch Set 9: Code-Review+1Looks good to me!
36966,0,Change has been successfully merged into the git repository.
36973,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/475/ : UNSTABLE
36976,0,Patch Set 5: Code-Review-1(20 comments)Good start Max.  See my comments inline.
36980,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/474/ : UNSTABLE
36986,0,Patch Set 6: Code-Review-1(10 comments)Nice progress.  See comments inline.
36989,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/473/ : UNSTABLE
36991,0,"Patch Set 1: Verified+1Steffen, do you see any problems with this? If the form is already dirty, then the attribute change doesn't make it dirty (nor does it save it) so there seems no need to fire an event."
36996,0,Change has been successfully rebased as 205f1647ae9890189f910d640a201eca548cb2a3
36999,0,Change has been successfully cherry-picked as 31aed4499e95bd5ed235b68af6b5e7c6fd3395cd
37003,0,Change has been successfully merged into the git repository.
37011,1,"Patch Set 5: -Code-ReviewThanks for the explanation Stefan, sounds reasonable. I withdrawn my -1.But as I'm unable to reproduce the resurrection of the hidden toolbar, I cannot set the review flag in the bug report required for RC1.  Sergey already gave +1. So maybe Brian?"
37013,1,"Patch Set 7:Brian:I've added checks for IPresentationEngine.HIDDEN_EXPLICITLY, but unfortunately I can no longer reproduce this. The sort of random focus changes I was using before are no longer creating or destrying toolbar entries so I can't determine if the new checks are an acceptable replacement for the instanceof checks.Until such time as someone is able to reproduce this again, I'm inclined to leave the instanceof checks in, since I know they fixed the issue the last time I was able to reproduce it."
37017,1,"Patch Set 7:I added the check for MCompositePart and moved the HIDDEN_EXPLICITLY check to the helper method as requested.I was also able to reproduce the bug again and was able to confirm that this latest version of the patch still fixes it. If anyone else is trying to reproduce this, use the Resource perspective -- it seems to occur there more frequently.Please take another look."
37029,0,Patch Set 10: Code-Review+1 Verified+1With the tip of using the Resource perspective I was finally able to reproduce this. With Stefans patch I cannot reproduce it anymore. I also triggered the CleanupAddon several times via the UI and the behavior seems good to me.
37031,0,Change has been successfully merged into the git repository.
37033,0,Patch Set 2: Code-Review+1(2 comments)Nice one Myles.  See comments inline.
37037,0,Change has been successfully rebased as 16ec7ba35459d16efa135d12d3d5f8e8058cb6cd
37039,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/488/ : UNSTABLE
37047,0,Change has been successfully merged into the git repository.
37054,0,Change has been successfully merged into the git repository.
37060,0,Change has been successfully cherry-picked as df143fb9cc56b21c436a52861d2386822782c6d5
37064,0,Change has been successfully rebased as 899208ac288fb3bd68b63a6ddd19b64978f50363
37066,1,"Patch Set 7:> I submitted it without gear enablement check, if you want to be > fancy > you can add error decorator on the gear in case of errors (instead > of removing it)I really think that doesn't make sense at all.   The method name is isEditable(etc), and it is now returning 'true' when in fact it cannot be edited. Not only does it not make sense on the code level, I will also have several launch descriptors where even the idea that it could be edited will be confusing to a user.  And finally, I think popping up dialogs for situations we already know won't work doesn't make sense. I don't like the idea of putting an error decorator on the gear. This implies the descriptor SHOULD be editable, but something is wrong, and so it cannot. This is not the case for my descriptors. There's nothing wrong with them. They simply cannot be edited. Launch configs with no tabs defined do not have an error. They are simply not editable."
37067,1,"Patch Set 7:We can discuss this on new bug, but it is not true that you cannotedit it. What happens in drop down it is validated against current mode and current target which is not what will happened when you select it. So in our case it does not show gear, I select it then it does. Second I really hate UI that does not guide you. Having now button means you never see the error, which is bad UI"
37070,1,"Patch Set 4:Plus please update commit message. Remove square brackets from bug number. Do not copy bug number of second line. Do not add comments like ""change as per gerrit review"" because it will go to the code repo itself which is useless comment, you can just comment like that on the review itself (by pressing reply button)I.e.Bug 466488 Clicking edit on launches that have no launch group, tabs, or have other errors, causes several error dialogs to pop up."
37081,0,Change has been successfully merged into the git repository.
37083,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2764/ : UNSTABLE
37088,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2773/ : UNSTABLE
37092,0,Change has been successfully merged into the git repository.
37095,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/895/ : UNSTABLE
37097,0,Change has been successfully merged into the git repository.
37099,0,"Patch Set 4: Code-Review+2I had edited the commit message in patch set 2 to be a bit more descriptive about the patch and that was lost in patch set 3, made the change again, thanks for updating the code!"
37100,0,Change has been successfully merged into the git repository.
37110,0,Change has been successfully merged into the git repository.
37116,0,Change has been successfully merged into the git repository.
37119,0,Change has been successfully merged into the git repository.
37122,0,Change has been successfully merged into the git repository.
37124,0,Change has been successfully merged into the git repository.
37129,0,Change has been successfully merged into the git repository.
37132,0,Patch Set 2: Code-Review+2 Verified+1This looks fine to me.
37133,0,Change has been successfully cherry-picked as c52ade504c6209664d8c80388a3d89932c604558
37136,0,Change has been successfully merged into the git repository.
37139,0,Change has been successfully merged into the git repository.
37144,0,Change has been successfully pushed.
37154,0,Change has been successfully cherry-picked as e7a01c690feb404ad8188243a9b84c71755e2246
37158,0,Change has been successfully pushed.
37163,0,Change has been successfully merged into the git repository.
37166,0,Change has been successfully cherry-picked as e2c021edad572deff35f70cf9b88f6bfe9691ecd
37169,0,Change has been successfully cherry-picked as 1a965a2d30ec04cd7cc7090433224aa03d97f693
37175,0,Change has been successfully merged into the git repository.
37179,0,Change has been successfully cherry-picked as a84040e452a8a7edd590a96bf096c23516c3e993
37182,0,Change has been successfully merged into the git repository.
37187,0,Change has been successfully merged into the git repository.
37197,0,Change has been successfully merged into the git repository.
37203,0,Change has been successfully merged into the git repository.
37208,0,Change has been successfully cherry-picked as 55cf15483faf06d7fba3dd92ef40aeba5a2a289f
37210,0,Change has been successfully merged into the git repository.
37212,0,"Patch Set 1:@Michal: that's a quick fix, hope it breaks nothing ;) For the example provided by bug 465687, we cannot insert a ""use"" statement, but we can still insert fully qualified name."
37216,0,Change has been successfully merged into the git repository.
37219,0,Change has been successfully merged into the git repository.
37223,0,Change has been successfully merged into the git repository.
37225,0,Change has been successfully pushed.
37230,0,Change has been successfully merged into the git repository.
37235,0,Change has been successfully pushed.
37237,0,Change has been successfully pushed.
37239,0,Change has been successfully pushed.
37241,0,Change has been successfully pushed.
37244,0,Change has been successfully merged into the git repository.
37247,0,Change has been successfully merged into the git repository.
37252,0,Change has been successfully merged into the git repository.
37262,0,Change has been successfully rebased as 0d004a17dfc5441d9d62b4a29f64f020880ddc25
37266,1,Abandoned
37269,0,Change has been successfully merged into the git repository.
37271,0,Change has been successfully merged into the git repository.
37277,0,Change has been successfully merged into the git repository.
37285,0,Change has been successfully merged into the git repository.
37288,0,Change has been successfully merged into the git repository.
37290,0,Change has been successfully merged into the git repository.
37296,0,Change has been successfully merged into the git repository.
37300,0,Change has been successfully cherry-picked as ab647664e65adea6e9ca8163245691d762ee1eef
37304,0,Change has been successfully cherry-picked as 91552f4478f91c3781ec8f902e118ccbf501e9cf
37308,0,Change has been successfully cherry-picked as 7767b94e82aed099d1727fde836b91fa36d50c8b
37314,0,Change has been successfully merged into the git repository.
37316,0,Change has been successfully merged into the git repository.
37322,0,Change has been successfully merged into the git repository.
37325,0,Change has been successfully merged into the git repository.
37330,0,Change has been successfully merged into the git repository.
37348,0,Change has been successfully merged into the git repository.
37353,0,Change has been successfully merged into the git repository.
37357,0,Change has been successfully merged into the git repository.
37360,0,Change has been successfully merged into the git repository.
37363,0,Change has been successfully merged into the git repository.
37365,1,"Patch Set 1:Without this patch, if a Parser job is canceled, the underlying stap process continues to run. This is especially a problem for the Probe Parser, whose underlying stap command takes a long time to run & consumes plenty of CPU.The part of this patch that fixes the problem is the change to execRemote, where the remote channel is told to use a pseudoterminal. This causes the process that is run through the channel to be terminated when the channel's session is closed.LinuxtoolsProcessFactory.terminateProcess was added as a way to terminate a remote process without having to close the session. It isn't ever used by this patch, so if we don't want to have to update the bundle version just for having added that method, we can take it out."
37370,0,Change has been successfully cherry-picked as 29fbe077e05f4044bdd245f981920920222c4f0f
37375,0,Change has been successfully merged into the git repository.
37378,0,Change has been successfully merged into the git repository.
37380,0,Change has been successfully pushed.
37381,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2734/ : UNSTABLE
37382,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2735/ : UNSTABLE
37385,0,Change has been successfully rebased as 9f39b4828d81af86004ff4ebf290756053fac86f
37387,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2712/ : UNSTABLE
37394,1,"Patch Set 1:Georg, could you please include these points in the commit message? Since the fix is not very obvious, it would be good to keep the reasoning in the git history.Also please move the bug reference to a separate line. You can edit the commit message directly in Gerrit.https://wiki.eclipse.org/RAP/Git#Commit_messagesThank you!"
37396,0,"Patch Set 4: Code-Review+2Perfect, thanks!"
37399,0,Change has been successfully rebased as 5ba24de74c6d5fa6cb08ab2c4e78d9050c2167ff
37401,0,"Patch Set 3:> Georg, could you please include these points in the commit message? > Since the fix is not very obvious, it would be good to keep the > reasoning in the git history. >  > Also please move the bug reference to a separate line. You can edit > the commit message directly in Gerrit. >  > https://wiki.eclipse.org/RAP/Git#Commit_messages >  > Thank you!Done! Is the explanation sufficient?"
37406,0,Change has been successfully merged into the git repository.
37408,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2666/ : UNSTABLE
37412,0,Change has been successfully rebased as 01a1046fa1516a62344ed05ce314cb5dffb8d3b5
37416,1,"Patch Set 2:I got another failure in AllManagedBuildTests in another review.  Maybe those tests are in bad shape.  Let's see what happens with this new build and if it fails again in the same fashion, let's commit and see what happens on the master build."
37417,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2731/ : UNSTABLE
37421,0,Change has been successfully rebased as 0215bdc330972a1bd71ac24d6c174935cde082c5
37427,0,Change has been successfully merged into the git repository.
37428,0,"Patch Set 2: Code-Review-1(2 comments)Looks good, flushing at the right places. Some small comments."
37434,1,"Patch Set 3: Code-Review+1Could not manage to make it break. I'm a bit uneasy merging this AND the change in the backend at the same time. But it's split in very small and clear commits, we can always revert if needed."
37437,0,Change has been successfully cherry-picked as 423cf6a48470379c8fb29ffb75413594bfa06fa9
37444,0,Patch Set 1:(3 comments)Looks great!
37447,0,Change has been successfully merged into the git repository.
37451,0,Patch Set 7: Code-Review+2Looks good. With this we better be Fast Yet.
37453,0,Change has been successfully cherry-picked as f00251b54b57066bc0a0cf758dca0a931853e919
37455,0,Patch Set 1: Code-Review-1Do NOT merge this until the BBQ gets better testing!
37464,1,Abandoned
37468,0,"Patch Set 12: Code-Review+2This is an aesthetic change in the most part, it makes sense and is more inline with tracecompass's direction. I'm happy with it."
37470,0,Change has been successfully cherry-picked as 9d979fdae4c3f985778ac593713649176f72345b
37488,1,"Patch Set 11:Hmm, one solution could be to use a ConcurrentLinkedDeque for the ""buffers"" instead of an ArrayDeque. If I read http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentLinkedDeque.html correctly, does it mean we'd need... no locking... at all? :O"
37489,1,"Patch Set 11:One thing that bothers me with ConcurrentLinkedDeque is: Beware that, unlike in most collections, the size method is NOT a constant-time operation.We do use .size() to check if the input buffer is full. While the imprecision itself is not a problem (it doesn't matter if there are 100 of 103 elements in the buffer), the element traversal at *every* insertion is not desirable."
37506,0,"Patch Set 17: Verified+1 Code-Review+2I have tortuously tested this, and I think it is safe to get in."
37507,0,Change has been successfully cherry-picked as 6d758ba0fc7404ef6a0c390a29cad86eb730bc7c
37522,0,"Patch Set 13:Now with 100% more Iterable! I will make sure to hold a prayer to the Guava gods tonight.I would have kept it in SS, but internal. If we want to have it public, then yeah it makes more sense in common.> Be careful if you go without any locking.Indeed, we still need locking around the entry points, to make sure the  if (full) {    queue.put(buffer)    buffer = new buffer();  }happens atomically. But we won't need to use these locks internally when we want to read those structures."
37526,0,"Patch Set 16: Code-Review-1(2 comments)Ah this is much more simple!just some style comments, if you fix those (and ONLY those!) consider I put +1.Woot, here comes the BBQ."
37528,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2537/ : UNSTABLE
37531,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2714/ : UNSTABLE
37536,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2709/ : UNSTABLE
37537,0,"Patch Set 4: Code-Review-1(1 comment)It's looking pretty good for the normal case, My main concern is the use of the group id to differentiate terminated processes (see inline comment)Some additional minor comments / questions:* The current default is set to terminate GDB when then last process exits. This setting will prevent users from seeing this new feature.Is it possible to show the exit code when GDB is set to ""terminate after the last running process"" ?* I like this additional way to restart the terminated process from the same session :-)* Using the setting to ""Automatically debug forked process"" and getting a small program which sequentially creates child forked processes, don't preserve the exit code for all children but one. This may be related to the collision of re-used group ids."
37538,1,"Patch Set 4:(1 comment)Thanks for the quick review. > * The current default is set to terminate GDB when then last > process exits. This setting will prevent users from seeing this new > feature. > Is it possible to show the exit code when GDB is set to ""terminate > after the last running process"" ?For now, this feature was to address the multi-process case.  But you are right that it could be nice for the single process case.  We could look into an enhancement to show the exited process node even after GDB dies. I suggest we do that separately.  Note that the exit code is still visible in the title of the console in that case (as long as the process exited on its own).  > * I like this additional way to restart the terminated process from > the same session :-)Me too :)  But of course, that can only work if GDB is kept alive. > * Using the setting to ""Automatically debug forked process"" and > getting a small program which sequentially creates child forked > processes, don't preserve the exit code for all children but one. > This may be related to the collision of re-used group ids.Thanks for doing that test.  I see the same thing now.  The reason is that GDB deletes old inferiors in that case; I'm not sure why.  I'll look more into it."
37539,0,Patch Set 4: Code-Review-1I've investigated things in GDB and saw that when using fork() GDB tries to cleanup old inferiors.  I wasn't aware of that and this patch had made the assumption that this didn't happen.I will post an updated version.Thanks for trying this case!
37540,1,"Patch Set 4:Speaking of forks, would it be useful relevant to have debug tests in CDT where the inferior forks, to verify that GDB and CDT handle that correctly?"
37541,1,"Patch Set 4:> Speaking of forks, would it be useful relevant to have debug tests > in CDT where the inferior forks, to verify that GDB and CDT handle > that correctly?We don't even have multi-process tests yet!  So, yes, if we can get multi-process and even fork, that would be awesome."
37542,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2721/ : UNSTABLE
37543,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2732/ : UNSTABLE
37546,0,Change has been successfully rebased as d533adec3c6b23c36f06890dc1f2ab3a058f4c3e
37549,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2717/ : UNSTABLE
37559,0,Change has been successfully merged into the git repository.
37567,1,Patch Set 2: Verified+1I verified that it finds the new version locally but I only verified that the new version actually fixes the bug in CDT.
37568,0,Change has been successfully cherry-picked as 98754b9b371df050c0aeb4acbe58f6986222f5a4
37572,0,Change has been successfully merged into the git repository.
37583,0,Change has been successfully merged into the git repository.
37588,0,Change has been successfully merged into the git repository.
37589,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2730/ : UNSTABLE
37592,0,Change has been successfully merged into the git repository.
37594,0,"Patch Set 1: Code-Review+1(1 comment)This is great. We would have needed to update the 2.6.1+ support message anyway, but this is much more useful. One inline comment though"
37598,0,Change has been successfully rebased as e8eec12ec4e0c1abba562608642874c27ac79292
37605,0,Change has been successfully merged into the git repository.
37606,0,"Patch Set 8:CQ 9437 was approuved today, we can merge cup patch asap :)"
37609,1,"Patch Set 8:They were included in the cup source tar file, and I feel they can be useful again if we do some incremental cup update in the future."
37618,1,AbandonedAdded wrong files
37620,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2718/ : UNSTABLE
37622,0,Change has been successfully rebased as 1ac11fc4bf92f7d6c9dde600637bbae8a0b48755
37624,1,"Patch Set 2: -Code-ReviewOk, so I've updated the patch so that a Run launch will always use GdbProcessFactory.  This means a new Run launch and a debug launch created for CDI and then used for Run.  I think this is safe as the only real change in using this factory is the fact that we print the exit code.Ultimately, probably for CDT 9.0, we'll need to better consolidate the Run part of LocalCDILaunchDelegate with DSF-GDB."
37629,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2686/ : UNSTABLE
37633,0,Change has been successfully merged into the git repository.
37635,1,"Patch Set 2:(1 comment)It doesn't fix anything, but the error messages will be less confusing."
37639,0,Change has been successfully rebased as c4f5c35620a59734b697e3c4df99283ef849b628
37643,0,Change has been successfully merged into the git repository.
37645,0,Change has been successfully merged into the git repository.
37650,0,Change has been successfully merged into the git repository.
37653,0,Change has been successfully merged into the git repository.
37656,0,Change has been successfully merged into the git repository.
37659,0,Change has been successfully merged into the git repository.
37661,0,Change has been successfully pushed.
37664,0,Change has been successfully merged into the git repository.
37666,0,Patch Set 2: Code-Review+1(2 comments)Great! Two suggestions for clarification in spots where I got confused. Otherwise looks good.
37678,0,Change has been successfully merged into the git repository.
37680,0,Change has been successfully merged into the git repository.
37688,0,Change has been successfully merged into the git repository.
37691,0,Change has been successfully merged into the git repository.
37695,0,"Patch Set 1:> Dani, please review. I think this is for an IBM project GVT45This is not an ""IBM project"". GVT stands for Global Verification Test, and those bugs / fixes are of value for all consumers."
37699,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2479/ : UNSTABLE
37701,0,Change has been successfully cherry-picked as 9690b9e8b21124c33973d367a7d2f607ee6f3c95
37703,0,Change has been successfully merged into the git repository.
37708,0,Change has been successfully merged into the git repository.
37714,0,Change has been successfully merged into the git repository.
37718,0,"Patch Set 1:It would be nice to mark the SubmitRecord.labels field @NonNull, but the package has no dependency on the annotations bundle"
37721,0,Change has been successfully rebased as b98f3a9277889cdf5889beec6bade293ce4ae460
37725,0,Change has been successfully rebased as 8414f7801849470b8259937c36e566dcef25e9be
37730,0,Change has been successfully merged into the git repository.
37732,0,Change has been successfully merged into the git repository.
37740,0,Change has been successfully merged into the git repository.
37746,0,Change has been successfully merged into the git repository.
37749,0,Change has been successfully merged into the git repository.
37752,0,Change has been successfully merged into the git repository.
37754,0,Change has been successfully merged into the git repository.
37759,0,Change has been successfully cherry-picked as b37f7557c8c3bce0a445d753eb6ecafbc6531f8c
37764,0,Change has been successfully merged into the git repository.
37767,0,Change has been successfully merged into the git repository.
37770,0,Change has been successfully merged into the git repository.
37778,0,Change has been successfully merged into the git repository.
37780,0,Change has been successfully merged into the git repository.
37785,1,"Patch Set 3:Hi Arun,This is definitely a big improvement on how we create the shells. I am having some trouble in creating a shell with on SWT.MAX style. the maximize button is not appearing.This problem is there in the original code as well. I would like to have your view on thisThanksSravan"
37786,0,"Patch Set 3:Hi Sravan, Arun, We noticed the issue with the maximize button not showing on the titlebar as well. This happens however only if the SWT.RESIZE style is also missing. So a shell with SWT.MAX|SWT.RESIZE will have the maximize button. I don't know if this is intended behavior, but I remember testing this in a plain gtk application and the issue was coming from there (gtk).Best wishes,Alexandra"
37792,0,Change has been successfully merged into the git repository.
37793,0,"Patch Set 3:Thanks Sopot, looks good."
37800,0,Change has been successfully merged into the git repository.
37802,1,"Patch Set 1: Verified+1 Code-Review+2OK, trivial."
37803,0,Change has been successfully merged into the git repository.
37815,0,Change has been successfully merged into the git repository.
37825,0,Change has been successfully merged into the git repository.
37828,0,Change has been successfully merged into the git repository.
37844,0,Change has been successfully merged into the git repository.
37852,0,Change has been successfully merged into the git repository.
37856,0,Change has been successfully merged into the git repository.
37859,0,Change has been successfully merged into the git repository.
37861,0,Change has been successfully merged into the git repository.
37866,0,Change has been successfully merged into the git repository.
37869,0,Change has been successfully merged into the git repository.
37873,0,Change has been successfully merged into the git repository.
37876,0,Change has been successfully merged into the git repository.
37879,0,Change has been successfully merged into the git repository.
37881,0,Change has been successfully merged into the git repository.
37886,0,Change has been successfully merged into the git repository.
37888,0,Patch Set 1: Verified+1 Code-Review+2Good catch. Thanks!
37891,0,Change has been successfully merged into the git repository.
37902,0,Change has been successfully merged into the git repository.
37905,0,Change has been successfully merged into the git repository.
37906,0,"Patch Set 2: Code-Review-1(9 comments)Thanks Sopot, I like the general idea for setting the OS specific values. I'm not sure if this approach is actually the best one. Why not simply add a ""dark"" preference to Eclipse and if this preference is set to true a preference listener is triggered and sets this property. We can use existing CSS to set this preference in the dark theme.See inline for detailed feedback on the code."
37907,0,"Patch Set 2:Alternatively to a preference solution you can define a new CSS attribute and register a CSS handler for it which sets this attribute. IMHO that is the best solution for this requirement, adding Brian as we have better ideas."
37908,1,"Patch Set 2:(1 comment)> (9 comments) >  > Thanks Sopot, I like the general idea for setting the OS specific > values. I'm not sure if this approach is actually the best one. Why > not simply add a ""dark"" preference to Eclipse and if this > preference is set to true a preference listener is triggered and > sets this property. We can use existing CSS to set this preference > in the dark theme. >  > See inline for detailed feedback on the code.I'll update the dates/copyright messages. It was a lousy copy-paste from my side.As for the approach to this I don't think I clearly understand what you mean. We need this to run also on startup and on theme change and this is OS-specific. Do you have some pointer in the code where we are doing something similar with CSS handlers? I'll also investigate myself in the meantime."
37913,1,"Patch Set 5: Code-Review-1(3 comments)I think this new element provider will conflict.  We already have an SWTElementProvider that provides a ShellElement for Shell.  RegistryElementProvider looks for the first provider that handles the widget type.The property name should be prefixed since is-dark isn't an standard CSS property. ""eclipse-is-dark"" or ""theme-is-dark""?I'd say this should be a fragment hosted on org.eclipse.e4.ui.css.swt rather than org.eclipse.ui.workbench since this seems applicable to pure E4 apps.You could still use the theme-changed event approach and still use a CSS property: see CSSRenderingUtils#getCSSValue() for an example."
37916,1,"Patch Set 5:Lars: we prefix anything that isn't a standard CSS property.  So we have 'swt-' and 'eclipse-' prefixes.  And those should really be '-swt-' and '-eclipse-' so that they are vendor prefixes, except Batik has a bug and doesn't accept them.  It means we're insulated should some CSS standard subsequently define an 'is-dark' property."
37922,1,Patch Set 8: Code-Review+1 Verified+1> The reason behinds this demands investigation and changes which are beyond the scope of this bug.Thanks for the explanation. I agree that this is out of scope for this bug. Please open a new bug for this.I leave it to Brian for final comments and / or the merge.
37923,1,Patch Set 8:> > The reason behinds this demands investigation and changes which > are beyond the scope of this bug. >  > Thanks for the explanation. I agree that this is out of scope for > this bug. Please open a new bug for this.Will do. Basically when you go through IEB (not EventAdmin) the data object is put in the dictionary with the key IEventBroker.DATA. This causes the type-sensitive injection of the event payload.ThemeEngine#sendThemeChangeEvent does not bother to do it so the injection fails.
37924,1,"Patch Set 8:The @EventTopic for THEME_CHANGED definitely works: it's how the PartRenderingEngine listens for theme changes (see PartRenderingEngine#subscribeCssThemeChanged).I suspect the problem is that in the debugger you're not explicitly specifying a run-level for org.eclipse.equinox.ds and so it is being started after we've run the processors.  As a result the EventObjectSupplier/EventTopic service isn't being resolved, and thus the event listener isn't being registered.This is kinda annoying, so I'm fine with the explicit registration here."
37925,1,Patch Set 8: Code-Review-1Sorry Sopot: tHere's still one more change: you've got the bundle in the wrong place.  It needs to be moved under bundles/.
37930,1,"Patch Set 7: Code-Review-1(4 comments)Sorry, two more niggles.The package should be .internal.Since you seem determined to avoid @EventTopic :-)  just @Inject IEventBroker directly.  Then you can get rid of the .core.contexts dependency."
37934,0,"Patch Set 4:I like the current implementation. Using Shell for styling is a good workaround, Sopot explained in an email conversation that if he uses MApplication he cannot reset the theme.Brian, any objection from your side to commit this change?"
37935,1,"Patch Set 4:> Minor thing, can you set the formatter on the fragment project to > ""Eclipse"" and reformat the source? We use 120 characters as line > length these days.I already have Eclipse as a default and activated on Save actions. Which file is not conforming to the formatter?"
37941,1,"Patch Set 3: Code-Review-1(1 comment)> This change is specific to this couple of themes, Dark and Gtk. Other themes are out of the scope of this change and should not interact with the handler.Unfortunately this is not that easy. There are tons of custom themes out there, most visible the jeeeyl theme. Now if I install this theme and switch to dark and then to jeeeyls theme, his theme will not have the setting. So your handle need to ensure that it resets this value before setting it. We do this a lot in your widget related CSS handlers.For an example see http://git.eclipse.org/c/platform/eclipse.platform.ui.git/commit/?id=9b58903d98a9c85379b836c057b94d514c238899 and the reset method"
37943,1,"Patch Set 3:> (1 comment) >  > > This change is specific to this couple of themes, Dark and Gtk. > Other themes are out of the scope of this change and should not > interact with the handler. >  > Unfortunately this is not that easy. There are tons of custom > themes out there, most visible the jeeeyl theme. Now if I install > this theme and switch to dark and then to jeeeyls theme, his theme > will not have the setting. So your handle need to ensure that it > resets this value before setting it. We do this a lot in your > widget related CSS handlers. >  > For an example see http://git.eclipse.org/c/platform/eclipse.platform.ui.git/commit/?id=9b58903d98a9c85379b836c057b94d514c238899 > and the reset methodCan you be a bit more explicit on your suggestions? What exactly are you proposing to have on the CSS? Also which kind of ElementAdapter are you thinking of as the CompositeElement and so on are for specific widget properties AFAIK and not for overall settings like ""being dark"" or not. Or are you thinking of having a new type ElementAdapter altogether?The examples you point at are directly related to processing properties of SWT widgets like font, background color etc. but this does not fit into those as it's a ""global"" setting."
37947,1,"Patch Set 3:Let me explain the reset functionality. Before 4.4. if you applied a theme and afterwards another theme all stuff that was not overriden in the new theme remained styled as in the first theme. That was annoying and therefore we had this ""Restart"" warning in the Preference dialog (which you implemented).In 4.4. we introduced the ""reset to default"" functionality. If you switch from theme A to B, everything would be set to ""default"" and afterwards everything would be styled accordingly to B. This allows new themes to control everything without side effects from older themes. Please note that we still have a few bugs in the reset stuff, e.g., Form controls do not all support the reset functionality.So in your case, if I switch from one theme to ""Something else"" all styling must be resetted to the default, e.g., preferences, colors, etc. As you are now argue this reset requirement away for the OS settings in this review, we also tried to argue that away for the preferences but this was strongly requested by the JDT team."
37953,1,"Patch Set 6: Code-Review+1 Verified+1I would have preferred the CSS property approach, but I suggest to integrate this, as the whole implementation is internal we still can improve it later, if we want and we should not miss the opportunity to have a kick-ass dark theme for Linux. I wait for Brian, but +1 for integration from my side."
37954,0,"Patch Set 6: Code-Review-1(5 comments)Thanks Sopot.  It's almost there.  Just a few tweaks:The bundle name needs to be changed: perhaps org.eclipse.e4.ui.css.swt.gtk?The bundle version should be 1.0.0 since it's a new bundle, unless there's some compelling reason otherwise.  I assume this version is there because you copied org.eclipse.ui.cocoa.I'd suggest using @EventTopic on the processor.  Otherwise you need a @PreDestroy to clean up the event handler."
37957,0,Change has been successfully merged into the git repository.
37964,0,Change has been successfully rebased as 6b134ee043021fbec38643bda70171b481d02500
37970,0,Change has been successfully merged into the git repository.
37974,0,Change has been successfully merged into the git repository.
37976,0,Change has been successfully merged into the git repository.
37977,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2678/ : UNSTABLE
37984,0,Change has been successfully merged into the git repository.
37988,0,Change has been successfully merged into the git repository.
37991,0,Change has been successfully cherry-picked as 3dd0f2cb1d3ad7811e450370d50f6721838ea94f
37997,0,Patch Set 4:Thanks Olivier!
37998,0,Change has been successfully merged into the git repository.
38003,0,Patch Set 3: Code-Review+2 Verified+1Thanks Olivier!
38004,0,Change has been successfully merged into the git repository.
38009,0,Change has been successfully merged into the git repository.
38012,0,Change has been successfully cherry-picked as e9df603ba373382baef06c6ddbd9c75b12aba13e
38015,0,Change has been successfully cherry-picked as c37fd0fd3b7cefbb73cd5c61c851f47bb8bfe63a
38018,0,Change has been successfully merged into the git repository.
38022,0,Change has been successfully rebased as 041fb7a1a48ad4838eab5929187d65591c10e9a1
38025,0,Change has been successfully merged into the git repository.
38035,0,Change has been successfully cherry-picked as e65b83d376c292f5cd973ee99968e9504719dc30
38038,0,Change has been successfully cherry-picked as 06509a9c82ae3d69592d9cfd3b7183b1f791b2b5
38040,0,Patch Set 2: Code-Review+1Looks safe
38043,0,Change has been successfully cherry-picked as f83a15ef3c94ed87238718262c89514a00a75164
38046,1,"Patch Set 1:The UnapplyAllStereotypes command (both of them!) is not useful because it isn't actually invoked for all elements being deleted.  So, I have deprecated it and discontinued its use in the two few where it was invoked.Instead, this patch defines an advice that lets stereotype applications be proper deletion dependents of their base elements.A regression test scenario is included that, without the fix, would fail on the assertion of the deletion of the stereotype applied to a dependent element (the dependency of which the deleted element is the sole supplier).  And, of course, I couldn't help but add some command-related utilities to the model-set fixture."
38049,0,"Patch Set 1: Code-Review+2Indeed, the method wasn't generated at all (So it didn't required a @Generated NOT either)So, ignore my comment, that's fine with me :)"
38050,0,Change has been successfully cherry-picked as b90a0c78dfb69ec4004c18b6615eff3669631f15
38051,0,"Patch Set 2:> Indeed, the method wasn't generated at all (So it didn't required a > @Generated NOT either) >  > So, ignore my comment, that's fine with me :)Well, it was a fair comment that I hadn't called out in my description of the change for the reason that I hadn't actually verified that this method wasn't generated.  I only did that after seeing your comment!  So, thanks."
38058,0,Change has been successfully merged into the git repository.
38064,0,Change has been successfully merged into the git repository.
38068,0,Change has been successfully cherry-picked as e27052d82685485ec3727023877ee37993b9ba63
38074,0,Change has been successfully merged into the git repository.
38077,0,Change has been successfully cherry-picked as 0d111021507560a6f04ad24229153193e6d444d7
38095,0,Change has been successfully merged into the git repository.
38113,0,Change has been successfully merged into the git repository.
38120,0,Change has been successfully merged into the git repository.
38149,0,Change has been successfully merged into the git repository.
38159,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2175/ : UNSTABLE
38160,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2177/ : UNSTABLE
38161,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2183/ : UNSTABLE
38164,0,Change has been successfully cherry-picked as 295ef0cac74d644ea3d2f9ea82ffc6950c98a538
38167,0,Change has been successfully merged into the git repository.
38189,0,Change has been successfully cherry-picked as 6b370771cd34bb0447e7e85f30c9ab6be1f76178
38195,0,Patch Set 2: Code-Review+2 Verified+1Change looks good to but I must admit that I did not validate all of them. I trust Andrey.
38196,0,Change has been successfully merged into the git repository.
38215,0,Change has been successfully merged into the git repository.
38222,0,Change has been successfully cherry-picked as 9f9f386aab6949efb20cc9ea35a643e2b78a68cc
38226,0,Change has been successfully merged into the git repository.
38229,0,Change has been successfully merged into the git repository.
38232,1,"Patch Set 2:Hi Wim, I have removed a duplicate if-statement.Unfortunately even if you review and verify the change, I don't think to have permissions to commit it."
38236,0,Change has been successfully merged into the git repository.
38239,0,Change has been successfully merged into the git repository.
38245,0,Change has been successfully merged into the git repository.
38249,1,"Patch Set 4:Thanks for the review. I went with this structure for a couple reasons:- The functionality could be added to other platforms in the future.- The handling of VM args is completely handled in the eclipse.c, so I added this along side to make it simpler.- The eclipseCarbon.c seems to be really focused on code that interacts with OS primitives. Also in order to do the handling of VM args in this file, it would have required functions to be exported from eclipse.cFinally the changes to eclipse.c are necessary because the previous code that was handling the appendage of VM args was incorrect. Basically the code assumed that user specified VM args were passed into the run function, but when no user VM args exist then the eclipse.ini vm args were passed in. The fix I did makes sure that only the user VM args are ever passed to the run function."
38251,0,Change has been successfully merged into the git repository.
38263,0,Change has been successfully merged into the git repository.
38264,1,"Patch Set 5:The change got reverted since it caused a lot of test failures on all platforms, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=464072#c9"
38267,0,Change has been successfully merged into the git repository.
38270,0,Change has been successfully cherry-picked as a349a2ef5e2dedb6f9ea762b4c0516839b75f4d7
38275,0,Change has been successfully cherry-picked as 7a30d756081c60a9066d6c001200a7a510f6ae8b
38278,0,Change has been successfully cherry-picked as 2d4af9118f39ca8069ab1af5e237407909baa169
38282,0,Change has been successfully cherry-picked as 0cb21dabe89c6fef1c0c6f7b62f591cabcbd10b5
38289,0,Change has been successfully merged into the git repository.
38295,0,Change has been successfully merged into the git repository.
38299,1,Abandoned
38300,1,"Patch Set 3:Robert, are you planning to upload a new patch for this? If not, let us know. The bug is targeted for 4.5 M7 and we have just this week for the code submission."
38307,0,Change has been successfully merged into the git repository.
38312,0,Change has been successfully merged into the git repository.
38315,0,"Patch Set 2:(2 comments)Thanks Giovanni, a view remarks. Should you also not update the javadoc of ISettings?"
38319,1,"Patch Set 4:(1 comment)Wim, while working on Date Scrolling for VIEW_MINUTE, I figured out that thread sleep previously set in ViewPortHandler was too low. Then I rolled it back."
38323,0,Change has been successfully merged into the git repository.
38329,0,Change has been successfully merged into the git repository.
38332,0,Change has been successfully merged into the git repository.
38335,1,Patch Set 1:I'll be glad to give it a shot. Is there documentation on setting up and running the e4 tests? Do you have a repostiory for the extra dependencies (org.hamcrest and org.mockito)?
38340,0,Change has been successfully pushed.
38343,0,Change has been successfully merged into the git repository.
38351,0,Change has been successfully merged into the git repository.
38356,0,Change has been successfully merged into the git repository.
38361,0,Change has been successfully merged into the git repository.
38365,0,Patch Set 5: Code-Review+2 Verified+1Looks good. Merging
38366,0,Change has been successfully merged into the git repository.
38367,0,Patch Set 5:Looks good
38372,0,Change has been successfully merged into the git repository.
38382,0,Change has been successfully merged into the git repository.
38386,0,Change has been successfully cherry-picked as 680f917395f3c89db33e24d907f4d2c69e0f74ff
38392,0,Change has been successfully merged into the git repository.
38396,0,Change has been successfully merged into the git repository.
38399,0,"Patch Set 8: Code-Review+1 Verified+1Thanks Robert, looks fine to me. I leave it for Brian to do the final review."
38401,0,Change has been successfully pushed.
38415,0,Change has been successfully merged into the git repository.
38418,0,"Patch Set 2:(2 comments)Thanks Robert, looks goo.d Two minor adjustments needed."
38419,0,"Patch Set 4: Code-Review+2 Verified+1Thanks Robert, looks good."
38420,0,Change has been successfully merged into the git repository.
38425,0,Change has been successfully merged into the git repository.
38430,0,"Patch Set 9:Hi Christian,Not sure why the build.sh file is appearing here even though there are no changes, can you remove that file and upload a new patchset?Also, please elaborate on the kind of tests you have done with the patch to make sure it works in different scenarios... thanks!"
38431,0,"Patch Set 9:> Not sure why the build.sh file is appearing here even though there > are no changes, can you remove that file and upload a new patchset?This was to make build.sh executable, thus the empty content diff.  Can move this one to different change if you want. > Also, please elaborate on the kind of tests you have done with the > patch to make sure it works in different scenarios... thanks!I have tested the change with the following scenarios:* No JVM embedded* JVM embedded top-level in Eclipse.app/Contents/jre/Contents/Home/* JVM embedded as plugin in Eclipse.app/Contents/Eclipse/plugins/myplugin/jre/Contents/Home* JVM with plain layout (w/o ""Contents/Home"" dir) embedded in Eclipse.app/Contents/Eclipse/plugins/myplugin/jre"
38432,0,"Patch Set 9:> > Not sure why the build.sh file is appearing here even though > there > > are no changes, can you remove that file and upload a new > patchset? >  > This was to make build.sh executable, thus the empty content diff.  > Can move this one to different change if you want.Is that change really necessary? I mean it might be okay to make the build.sh file have executable permissions but I'm not sure why it was not done in the first place. Also, there are other build.sh files which do not have the executable permission in the repo and I do not want to make this change for the Cocoa code in isolation. Can you please submit a new patchset without this change? >  > > Also, please elaborate on the kind of tests you have done with > the > > patch to make sure it works in different scenarios... thanks! >  > I have tested the change with the following scenarios: > * No JVM embedded > * JVM embedded top-level in Eclipse.app/Contents/jre/Contents/Home/ > * JVM embedded as plugin in Eclipse.app/Contents/Eclipse/plugins/myplugin/jre/Contents/Home > * JVM with plain layout (w/o ""Contents/Home"" dir) embedded in > Eclipse.app/Contents/Eclipse/plugins/myplugin/jreSounds good, I'll commit the patch and rebuild the binaries once the new patchset is uploaded, I may not be able to get much testing done from my side, so I'm going to rely on your tests :)Thanks for the patch!"
38436,0,Change has been successfully merged into the git repository.
38441,0,"Patch Set 10:> Is that change really necessary? I mean it might be okay to make> the build.sh file have executable permissions but I'm not sure why> it was not done in the first place. Also, there are other build.sh> files which do not have the executable permission in the repo and I> do not want to make this change for the Cocoa code in isolation.> Can you please submit a new patchset without this change?Done> Sounds good, I'll commit the patch and rebuild the binaries once> the new patchset is uploaded, I may not be able to get much testing> done from my side, so I'm going to rely on your tests :)> Thanks for the patch!Thanks for reviewing this.  If this gets in M7, I can validate the fix one again."
38447,0,Change has been successfully merged into the git repository.
38450,0,Change has been successfully merged into the git repository.
38453,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/385/ : UNSTABLE
38456,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/386/ : UNSTABLE
38459,0,Change has been successfully merged into the git repository.
38464,0,Change has been successfully merged into the git repository.
38466,0,Change has been successfully pushed.
38468,0,Change has been successfully pushed.
38471,0,Change has been successfully merged into the git repository.
38481,0,Change has been successfully merged into the git repository.
38485,0,Change has been successfully merged into the git repository.
38489,0,Change has been successfully merged into the git repository.
38493,0,Change has been successfully merged into the git repository.
38495,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
38497,0,Change has been successfully merged into the git repository.
38502,0,Change has been successfully merged into the git repository.
38506,0,Change has been successfully merged into the git repository.
38509,0,Change has been successfully merged into the git repository.
38517,0,Change has been successfully merged into the git repository.
38520,0,Change has been successfully merged into the git repository.
38525,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2156/ : UNSTABLE
38527,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2330/ : UNSTABLE
38530,0,"Patch Set 9:> Sorry, but I didn't know that comments leave the ""Draft"" state only > when you actually post a review. > Those are responds to previous comments. > I will update the patch and respond to new comments ASAP.Great ... now drafts are also gone because of patch-set 9 .. Will take care of this next time."
38531,0,"Patch Set 9:(16 comments)> (16 comments) >  > It is customary to respond to review comments in addition to > uploading a new patch.I also did a small refactoring for improving the performance. I moved the logic for obtaining all defined bindings to the DOM Computer, and calculate it only once every content assist invocation instead of for every proposal."
38533,1,Patch Set 12: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2611/ : UNSTABLE
38535,0,Change has been successfully merged into the git repository.
38541,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2308/ : UNSTABLE
38543,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2321/ : UNSTABLE
38548,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2319/ : UNSTABLE
38550,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2159/ : UNSTABLE
38552,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2244/ : UNSTABLE
38556,1,Patch Set 11: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2513/ : UNSTABLE
38560,0,Change has been successfully merged into the git repository.
38563,0,Change has been successfully merged into the git repository.
38567,0,Change has been successfully merged into the git repository.
38579,0,Change has been successfully merged into the git repository.
38581,0,Change has been successfully merged into the git repository.
38584,0,"Patch Set 1:> Can't test the change, as the error only shows on KDELars, I'm also interested to know if the change does not introduce new regressions on NON KDE environments. So if you can confirm that this works on NON KDE platform this would be very valuable."
38585,0,"Patch Set 1:Tested on Ubuntu and it works still fine. Random observation, not related to this change: The ws selection dialog is not centered if I start a runtime IDE, I never noticed that before. But this is unrelated to this change, even if I revert the change, I still get the workspace selectioni dialog on a strange place on my second monitor."
38589,0,Change has been successfully merged into the git repository.
38592,0,Change has been successfully merged into the git repository.
38597,0,Change has been successfully merged into the git repository.
38600,0,Change has been successfully merged into the git repository.
38603,0,Change has been successfully merged into the git repository.
38607,0,Change has been successfully cherry-picked as a890f4999d94ecc815c6563e6485c4be0291be34
38609,0,Change has been successfully pushed.
38610,1,"Patch Set 2:I said TreeMap earlier, I meant TreeSet, my bad."
38614,0,"Patch Set 1: Code-Review+1Alex, we've explored the option of a treeset and a comparator with a true comparison, the arraylist is hands down faster, and takes less memory. The code change is also smaller. I would suggest this is the way to go."
38615,0,"Patch Set 1: Code-Review+2Ok agreed, since intervals come in ""almost sorted"", it's a good solution. Most of the time you insert at the end, so it's less operations than doing a log(n) tree insertion every time. Not sure why it would take less memory though?But yikes, I just noticed that HTInterval itself is Comparable (and has always been...), that's the kind of object that should have different Comparators and not be Comparable directly... oh well. If we do change this at some point, it'll be easy to swap .compareTo() with the proper comparator call."
38616,0,"Patch Set 1:> Not sure why it would take less memory though?ArrayList uses 1 Object reference per element (plus the unused capacity).TreeSet uses 1 TreeMap$Entry per element, and that entry has 5 Object references and 1 boolean.This becomes more negligible as your actual value Object size increases, however. Or if the total number of objects in the TreeSet is itself negligible."
38619,0,Change has been successfully cherry-picked as 2a966f6f324a2f06b6b18074e2328bea33e920a6
38621,0,Change has been successfully merged into the git repository.
38623,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
38626,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
38627,1,Patch Set 2:@Igor: Thanks for your feedback. I had in fact removed the references to the bug numbers in the cleanup changes and in that way deleted valuable information. This is fixed now.
38628,1,"Patch Set 2:> @Igor: Thanks for your feedback. I had in fact removed the > references to the bug numbers in the cleanup changes and in that > way deleted valuable information. This is fixed now.Sorry, I most likely won't be able to help with this in the near future. Feel free to commit this change and please open a bugzilly for the missing copyright headers in test files (if you really think this is something we need to worry about)."
38631,0,Change has been successfully merged into the git repository.
38633,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
38634,0,Patch Set 1: Code-Review+1Like the idea of using more meaningful names for IT package/project names!
38635,0,"Patch Set 1:Personally, I prefer to keep reference to bugzilla bug id test names. It gives context of the usecase(s) the test is supposed to cover, which I find very useful. ""baseline"" does not really say much unless you read https://bugs.eclipse.org/bugs/show_bug.cgi?id=362883."
38636,0,"Patch Set 1: Code-Review-1> Personally, I prefer to keep reference to bugzilla bug id test > names. It gives context of the usecase(s) the test is supposed to > cover, which I find very useful. ""baseline"" does not really say > much unless you read https://bugs.eclipse.org/bugs/show_bug.cgi?id=362883.So then maybe we should call the project ""reproducibleArtifacts""?I forgot to keep a reference to the bug number in the test class and pom.xml. This still needs to be fixed. The pom.xml and/or test class is the right place to put the bug number, because then one IT can cover multiple bugs.BTW, the test class doesn't have a copyright header. Igor, could you recover it?"
38641,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2597/ : UNSTABLE
38642,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2598/ : UNSTABLE
38643,0,"Patch Set 1:(5 comments)Looks great.  A couple of minor improvements suggested in-line.For caching, we have a couple of options.1- we use the generic IGDBHardwareAndOS2.getResourcesInformation() so we could add caching to that call, but just for ""cpus"".  I don't like that because it makes the code less generic, and it may happen that the output of ""-info-os cpus"" does change2- we put a cache in GDBHardwareAndOS_7_10.  This makes sense because it is that service that knows if the data it uses can change.  Personally, I'd use a global array of ICoreInfo[] that gets filled once and then re-used. Don't forget to override flushCache() to also clear that cache (this is for a user operation where we just want to clear everything)"
38647,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2610/ : UNSTABLE
38648,0,Patch Set 3: Verified+1 Code-Review+2Thanks for the review!
38650,0,Change has been successfully rebased as 9ea9dd867c690a2bce0878f673423f191370603c
38654,0,Change has been successfully merged into the git repository.
38660,0,Change has been successfully merged into the git repository.
38665,0,Change has been successfully merged into the git repository.
38682,0,Change has been successfully merged into the git repository.
38685,0,Change has been successfully merged into the git repository.
38688,0,Change has been successfully merged into the git repository.
38693,0,Change has been successfully merged into the git repository.
38696,0,Change has been successfully merged into the git repository.
38703,0,Change has been successfully merged into the git repository.
38707,0,Change has been successfully merged into the git repository.
38712,0,Change has been successfully merged into the git repository.
38717,0,Change has been successfully merged into the git repository.
38720,0,Change has been successfully merged into the git repository.
38723,0,Change has been successfully pushed.
38726,0,Change has been successfully pushed.
38729,0,Change has been successfully pushed.
38731,0,Change has been successfully pushed.
38733,0,Change has been successfully pushed.
38735,0,Change has been successfully pushed.
38737,0,Change has been successfully pushed.
38740,0,Change has been successfully pushed.
38742,0,Change has been successfully pushed.
38744,0,Change has been successfully pushed.
38746,0,Change has been successfully pushed.
38755,0,Change has been successfully pushed.
38759,0,Change has been successfully pushed.
38761,0,Change has been successfully pushed.
38763,0,Change has been successfully pushed.
38765,0,Change has been successfully pushed.
38770,0,"Patch Set 3:Can you give me example when Group by namespace is not working in PHP Explorer? I tried 2 projects and in general everything looks fine.Regarding splitting I agree that implementing working IType.getNamespace can be useful, but what is your plan for IPackageDeclaration?:)"
38771,1,"Patch Set 3: Verified+1 Code-Review+1Sorry I retested again and works fine. Problem is with filtering by mylyn workingset (see also bug 460592).IType.getChildren() isn't important, because namespace and type declarations should be reported on same level (IType.getNamespace() and you can forget about namespace declaration, also see what happens in IType.getParent()). Like in JDT for one type per file pattern. Import declarations use only package names (bug 455754). In general, IPackageDeclaration is lighter than IType. Problems with two namespaces in file may be easy resolved by outliner / explorer contentproviders or sorters.Besides I personally hate current icon, it's too similar to class icon."
38772,1,"Patch Set 3: Code-Review+2 Verified+1Ok, I'm starting to arrange everything in my mind ;) I will copy your explanation to bug description and later we can continue discussion there.Thanks for verification."
38773,0,Change has been successfully merged into the git repository.
38778,0,Change has been successfully merged into the git repository.
38781,0,Change has been successfully merged into the git repository.
38788,0,Change has been successfully merged into the git repository.
38791,0,Change has been successfully merged into the git repository.
38794,0,Change has been successfully merged into the git repository.
38801,0,Change has been successfully cherry-picked as 996aa8ee42cb064a51913350a2493f58f2ffc461
38805,0,Change has been successfully cherry-picked as 8e3996501db380cb990e9df523b9fc36b1d9730b
38807,0,Change has been successfully merged into the git repository.
38815,0,Patch Set 3:Build SUCCESSFUL. Now starting integration tests...
38817,0,Change has been successfully merged into the git repository.
38821,0,Change has been successfully merged into the git repository.
38828,0,Change has been successfully merged into the git repository.
38837,0,Change has been successfully merged into the git repository.
38839,1,Patch Set 3:Added a fix for StyledTexts too (PyDev has one inside a view which should be themed). Note that adding it this way doesn't seem to be a problem as matching it in the 'match all' rule...
38841,1,"Patch Set 3:Added a new one to fix only a pattern for the StyledText inside a SashForm... (I was wrong, the PyDev editor worked, but the regular Text editor didn't work anymore, so, just fixing the particular issue I had)."
38844,0,Change has been successfully merged into the git repository.
38850,0,Change has been successfully pushed.
38855,1,Patch Set 3: Code-Review-1@InvalidTest is used when the test is incorrect (i.e. the test fails but the feature works).@FailingTest seems to be the right choice here (i.e. the test is valid but the tested feature doesn't work yet)Otherwise looks good
38858,0,Patch Set 1: Code-Review+2 Verified+1That was my intention :)
38859,0,Change has been successfully merged into the git repository.
38861,0,Change has been successfully pushed.
38874,0,Change has been successfully merged into the git repository.
38879,0,Change has been successfully cherry-picked as 6432c0a308e1a92d58664c9a7c7e233760818af6
38881,0,Change has been successfully merged into the git repository.
38890,0,Change has been successfully merged into the git repository.
38893,0,Change has been successfully merged into the git repository.
38897,0,Change has been successfully merged into the git repository.
38900,0,Change has been successfully merged into the git repository.
38902,0,"Patch Set 4: Code-Review+2(3 comments)Please address minor comments, but otherwise good"
38906,0,Change has been successfully merged into the git repository.
38912,0,Change has been successfully merged into the git repository.
38915,0,Change has been successfully merged into the git repository.
38921,0,Change has been successfully cherry-picked as dca1947cd0c3cedc51c6e525a3a667574dde5fec
38937,0,Change has been successfully merged into the git repository.
38940,0,"Patch Set 1: Code-Review+1Yes, as discussed before, that looks good!Did you test it on large repositories? I'm curious as to the impact."
38942,0,Change has been successfully merged into the git repository.
38943,1,"0m0.564s  ...  ~/git/linux> git reset --hard  Checking out files: 100% (48958/48958), done.  HEAD is now at 5480a0d add_foo2  ~/git/linux> strace -f -e trace=desc,file -c java -jar ../jgit/org.eclipse.jgit.pgm/target/jgit-cli.jar merge a  ...  CONFLICT(content): Merge conflict in foo  Automatic merge failed; fix conflicts and then commit the result  % time     seconds  usecs/call     calls    errors syscall  ------ ----------- ----------- --------- --------- ----------------   44.80    0.725085          12     59495         1 lstat   23.06    0.373190          12     32185           read    5.51    0.089190          13      7130           close    5.47    0.088479          13      7050           getdents  ...  ------ ----------- ----------- --------- --------- ----------------  101.00    1.618318                136369      4060 total"""
38944,1,"Patch Set 1:In the light of your explanation it seems clear that this change needs to be reverted.Thanks for the detailed explanations, I wasn't aware of the way ANY_DIFF works.Lesson learned: always test the impact of a change intended to improve performance... Are there such tests to check performance in hudson already?"
38945,0,"Patch Set 1:Having automated performance would be great ... but up to know I was not able to create stable performance tests which work on all the supported platforms. E.g. Windows & Linux differ much when it comes to filesystem performance, filesystem timers have different granularity, etc. I gave up on automating this and do it manually. I personally use the linux repo or some really huge internal repos for performance checks. And I most of the time just compare the performance to the predecessor commit.I was thinking what could be introduced in that area is that JGit publishes (e.g. as MBeans) some counters (number/size of working tree contents read, number of pathes visited in treewalks, number of pathes where content merge was triggered, number of pushes/fetches). AFAIK this doesn't cost anything if the published values are not read but would allow to do better validations if e.g. EGit is slow."
38948,0,Change has been successfully merged into the git repository.
38951,0,Change has been successfully merged into the git repository.
38955,1,Patch Set 2:Looks better now - could you please also adjust the following: rename all code places to reflect the disabled / grayed-out state instead of one specific usage of this (being cutted).
38958,0,Change has been successfully merged into the git repository.
38963,0,Change has been successfully rebased as 3bd061e4ee34520530b2c089a8a53643ac861575
38967,0,Change has been successfully merged into the git repository.
38974,0,Change has been successfully merged into the git repository.
38979,0,Change has been successfully merged into the git repository.
38981,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2425/ : UNSTABLE
38983,0,Change has been successfully cherry-picked as ce439fbcfe0e5c023e2d2f30df527e9311e5db5d
38985,0,Change has been successfully merged into the git repository.
38994,0,Change has been successfully merged into the git repository.
38996,1,Patch Set 2:Patchset 2 is some extra cleanup that avoids touching the console title if we don't have an exit code to put in there.
38997,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2582/ : UNSTABLE
38998,0,Patch Set 2: Code-Review+2Didn't try it but looks good.
39002,0,Change has been successfully rebased as db8179004f01b4c84ef6bc87fa3c2ebb726960a3
39005,0,Change has been successfully merged into the git repository.
39011,0,Change has been successfully merged into the git repository.
39017,0,Change has been successfully merged into the git repository.
39020,0,Change has been successfully merged into the git repository.
39026,0,Change has been successfully cherry-picked as 05cbb7f31659b5ab649691d37e7f057f82b53149
39034,0,Change has been successfully merged into the git repository.
39037,0,Change has been successfully merged into the git repository.
39040,0,Change has been successfully merged into the git repository.
39044,0,Change has been successfully merged into the git repository.
39047,0,Change has been successfully merged into the git repository.
39049,0,Change has been successfully merged into the git repository.
39054,1,"Patch Set 5:Sorry, I broke the patch trying to address Sergey's comments :-)"
39061,0,Change has been successfully rebased as 8f5356e6cdabbb09a93679370868d9a5e28e3d68
39067,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1318/ : UNSTABLE
39073,0,Change has been successfully cherry-picked as 574f43ad560df9ba8fab49c0157f459b2c249980
39077,0,Change has been successfully cherry-picked as 36ef128d064bc4989d179dafdaa8695efaf83829
39080,0,Change has been successfully cherry-picked as d5a75e941bc178db65d3d1c488bba86a84c6f336
39083,0,Change has been successfully cherry-picked as cc2440a289954422285703d641b8bedae83eb72f
39086,0,Change has been successfully cherry-picked as 978d20f1d7394916e6e9d171b73c4bae6ac079bd
39089,0,Change has been successfully cherry-picked as a66d4a7ebd38ab95936a8aee681b03ae24d8b578
39092,0,Change has been successfully cherry-picked as be0f521fbf56017f54cb9f093be18825c752c479
39096,0,Change has been successfully cherry-picked as 55423e1836755ea4c70a2c3aae3b3be44abf9c64
39099,0,Change has been successfully cherry-picked as 80578039172d36853f6cb35f03e97e3b959dd034
39103,0,Change has been successfully cherry-picked as 0c86bbcea8c5145809f3b6ae7bfae66e8f4437df
39106,0,Change has been successfully cherry-picked as b52655e349de5f34c50ff8ee64fcca87533dd446
39109,0,Change has been successfully merged into the git repository.
39116,0,Change has been successfully merged into the git repository.
39122,0,Change has been successfully merged into the git repository.
39127,0,Change has been successfully merged into the git repository.
39128,1,"Patch Set 2:I've applied the patch and will rerun the tests. If they fail, I'll revert this change."
39129,0,"Patch Set 2:Doug,Can I have it applied to 8.5.x branch too?Thanks!"
39134,0,"Patch Set 1:Sergey, are you ok with this? Can it be committed now? Thanks."
39143,1,AbandonedI will not be doing this. Remote support will be broken in CDT until this is fixed.
39150,0,Change has been successfully rebased as 33c37b7d11b665941ee3aadfd33e1babe3e42fe0
39166,0,"Patch Set 5: -Code-Review -Verified""IMO, it's better to implement a better behaviour..."" - OK, agree :)"
39168,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4456/ : UNSTABLE
39171,0,Change has been successfully merged into the git repository.
39173,0,Patch Set 11: Code-Review+1All those changes are good IMO.
39175,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2533/ : UNSTABLE
39176,0,Patch Set 2: Code-Review+2All seems well. Thanks!
39178,0,Change has been successfully merged into the git repository.
39182,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2532/ : UNSTABLE
39192,0,Change has been successfully merged into the git repository.
39195,0,Change has been successfully merged into the git repository.
39206,0,Change has been successfully cherry-picked as 8542f7a5dc1c22801a823e70e225fdf2ef388f6d
39209,0,Change has been successfully cherry-picked as 2fb2f1a6847be1a2e50b985230d550d8f2be850c
39218,0,Change has been successfully merged into the git repository.
39223,0,"Patch Set 20:Looks fine to me Steven, thanks a bunch for your great work. Sorry for the long processing time."
39224,0,Change has been successfully merged into the git repository.
39232,0,"Patch Set 3:(2 comments)First glance this looks very good, two minor style nits."
39233,1,"Patch Set 3:With https://git.eclipse.org/r/#/c/43679/ is remove all unnecessary whitespace, so if you rebase this should also be gone."
39235,0,"Patch Set 3:> * You put javadoc on an overriden method? Should this not go into > the API. @wim I put the documentation there because I did not know if ALL model fragments would implement this?  Are there other implementations out there that do not / will not support this?We should put some documentation on a wiki page too;  How best to proceed with that?I will implement test cases, but need some guidance on that."
39238,0,Patch Set 11:(1 comment)Javadoc looks fine to me (with one minor style nit). Can you put the MModelFragment Javadoc into a separate Gerrit review so that I can commit it?
39240,1,Patch Set 17: Code-Review-1This is wrong.  Please wait for fix.
39241,0,"Patch Set 17: Code-Review+1 Verified+1Thanks Steven, good point with the model service. Lets leave it like it is. I test this tomorrow, and if I do not find anything anymore I merge it."
39245,1,Patch Set 6:Default eclipse formatter does not indenting switch statements.  I needed to override the default settings to match the recent whitespace fix.
39254,0,"Patch Set 16:(4 comments)Looks good, but I think we should have a separate test for the functionality."
39263,0,Change has been successfully cherry-picked as fbeb900d946ed87ecbf76992fb9b13f0bc5b11d2
39265,0,Change has been successfully merged into the git repository.
39270,0,"Patch Set 2:(1 comment)Thanks Marc-Andre, looks fine, except the CR header"
39275,0,Change has been successfully cherry-picked as b676f6610c8b03be2e660bc28e0595bb4379c78a
39278,0,Change has been successfully cherry-picked as 81667b3ed941fb0cca45716cb575870947e1d132
39284,0,Change has been successfully cherry-picked as fe178c399ec9e848eb92f7613ffb5e1f6e80785a
39288,0,Change has been successfully merged into the git repository.
39298,0,Change has been successfully merged into the git repository.
39303,0,Change has been successfully merged into the git repository.
39308,0,Change has been successfully merged into the git repository.
39324,0,Change has been successfully rebased as 76f57d0b7fbf11644e3d01199563b80e70207371
39331,0,Change has been successfully merged into the git repository.
39336,0,Change has been successfully merged into the git repository.
39339,0,Change has been successfully merged into the git repository.
39342,0,Change has been successfully cherry-picked as ec9894845a8d74185aaace88ae028bb91bb1f620
39353,0,Change has been successfully cherry-picked as df57fb5a79c56526765b84b5aa9ed27ca0de1eb9
39360,0,Change has been successfully cherry-picked as fc20d876e3c42117edb2623221ca7aa51d605275
39368,0,Change has been successfully merged into the git repository.
39371,0,Change has been successfully merged into the git repository.
39374,0,Change has been successfully merged into the git repository.
39376,0,Change has been successfully merged into the git repository.
39382,0,Change has been successfully merged into the git repository.
39387,0,Change has been successfully merged into the git repository.
39398,0,Change has been successfully merged into the git repository.
39400,0,"Patch Set 1:The reason why the read-only state of resources wasn't being cached at all in the scenario of showing the context menu in the Model Explorer is because the vast majority of accesses to the read-only manager were to query the read-only state of a resource directly, not indirectly via an EObject contained in the resource.  That was the only API that was cached before:  read-only state of a model element.So, the first major change in this patch is to additionally cache the read-only state of resources in the FSReadOnlyHandler, itself.  This was easily and safely done by a minor refactoring of the AbstractReadOnlyHandler to make the cache available to subclasses.However, this was not sufficient because the cache was actually always a no-op in the context-menu scenario.  The problem here is that caching was only active during the scope of a transaction in the read-only manager's editing domain.  However, the vast majority (if not all) of the read-only queries in the context-menu scenario are done without a transaction.  And even if they were done in a transaction, each and every one probably would have had its own transaction, nullifying any cache and probably making performance a bit worse by always setting up and tearing down the cache machinery.So, the second major change in this patch is to eliminate the cache's tie to transactions.  Now, the cache is implicitly initialized when read-only state is queried and is purged in an async exec (abstracted through an injected Executor).  This fixes the read-only part of the performance problems in the context menu.A bit of work was needed to fix the read-only JUnit tests, by injecting a custom executor that the tests can use to control when the cache is purged to force re-calculation of read-only state of resources as they change state.  Note that the read-only manager's makeWritable(...) API still *synchronously* purges the cache as before, so the make-writable use cases should still work (which is born out by the tests, actually)."
39402,0,Change has been successfully cherry-picked as cfd5e356715c4ec194961f3499514012c9144057
39405,0,Change has been successfully cherry-picked as 656e4ef5bed59f9e983e2d45572750b9ccef4d7f
39408,0,Change has been successfully merged into the git repository.
39412,0,Change has been successfully merged into the git repository.
39415,0,Change has been successfully merged into the git repository.
39421,0,Change has been successfully merged into the git repository.
39425,0,Change has been successfully merged into the git repository.
39441,0,Change has been successfully merged into the git repository.
39462,0,Change has been successfully merged into the git repository.
39473,0,Change has been successfully merged into the git repository.
39476,0,Change has been successfully cherry-picked as 7ec913bb6cf213abefec82f9f6f119adb2582034
39483,0,Change has been successfully merged into the git repository.
39491,0,Change has been successfully cherry-picked as abdedeac563ed695b061b4cc73d39ac26fcbf8c7
39495,0,Change has been successfully merged into the git repository.
39501,0,Change has been successfully merged into the git repository.
39505,0,Change has been successfully merged into the git repository.
39509,0,Change has been successfully merged into the git repository.
39514,0,Change has been successfully merged into the git repository.
39523,0,Change has been successfully merged into the git repository.
39529,0,Patch Set 3:(1 comment)Good point. I might remove the last checking for different resource output. See the draft comment in file BuildResource.java
39530,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2527/ : UNSTABLE
39531,0,"Patch Set 5:> I have no idea what that code does and why, I hope you tested it..I did indeed. Every change I do is cherry picked and carefully tested in the context of the Visual Studio Plugin. However I guess I might be the only one needed it until now."
39532,1,Patch Set 5: Verified+1override verified (gdb tests failing)
39534,0,Change has been successfully merged into the git repository.
39537,0,"Patch Set 4: Code-Review+2I have no idea what that code does and why, I hope you tested it.."
39543,0,Change has been successfully merged into the git repository.
39556,0,Change has been successfully cherry-picked as fbe6fa6fad1f8a21328f7f2bc97a79837904fe43
39561,0,Change has been successfully merged into the git repository.
39568,0,Change has been successfully merged into the git repository.
39571,0,Change has been successfully merged into the git repository.
39576,0,Change has been successfully merged into the git repository.
39580,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4230/ : UNSTABLE
39594,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4226/ : UNSTABLE
39597,0,Change has been successfully merged into the git repository.
39608,1,Patch Set 5: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4231/ : UNSTABLE
39611,0,Change has been successfully merged into the git repository.
39613,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4205/ : UNSTABLE
39616,1,Patch Set 9: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4475/ : UNSTABLE
39619,0,Patch Set 9:(15 comments)Thanks ! a new patset is on its way
39628,0,Change has been successfully merged into the git repository.
39630,0,Change has been successfully merged into the git repository.
39634,1,"Patch Set 1: Code-Review+1Does look ok to me, from quick read, but someone from equinox will need to review and commit. (I'll move bug). Would it help if ""carbon"" were simply removed from the repository?"
39635,1,"Patch Set 1:The ""carbon"" folder actually contains cocoa code... I guess it kept its name to avoid unpredictable side effects ;)"
39639,0,Change has been successfully merged into the git repository.
39642,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/p2/job/p2-gerrit/291/ : UNSTABLE
39647,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/p2/job/p2-gerrit/293/ : UNSTABLE
39649,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/p2/job/p2-gerrit/297/ : UNSTABLE
39652,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/p2/job/p2-gerrit/296/ : UNSTABLE
39655,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/p2/job/p2-gerrit/292/ : UNSTABLE
39657,0,Change has been successfully merged into the git repository.
39660,0,Change has been successfully merged into the git repository.
39669,0,Change has been successfully merged into the git repository.
39672,0,Change has been successfully merged into the git repository.
39677,0,Change has been successfully merged into the git repository.
39680,0,Change has been successfully merged into the git repository.
39685,0,Change has been successfully merged into the git repository.
39689,0,Change has been successfully merged into the git repository.
39692,0,Change has been successfully cherry-picked as b6b4e8b46cd403d28cc086063a7fe0e79702413e
39698,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/713/ : UNSTABLE
39700,0,Change has been successfully merged into the git repository.
39703,0,Change has been successfully merged into the git repository.
39707,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6874/ : UNSTABLE
39709,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6863/ : UNSTABLE
39712,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6862/ : UNSTABLE
39717,0,Change has been successfully merged into the git repository.
39720,0,Change has been successfully merged into the git repository.
39723,0,Change has been successfully merged into the git repository.
39726,0,Change has been successfully merged into the git repository.
39729,0,Change has been successfully merged into the git repository.
39733,0,Change has been successfully merged into the git repository.
39738,0,Change has been successfully merged into the git repository.
39739,0,Patch Set 3: Verified+1 Code-Review+2Looks ok. Tests run fine too.
39745,0,Change has been successfully merged into the git repository.
39747,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6865/ : UNSTABLE
39748,0,"Patch Set 3:Is not the rebase button in Gerrit the one to create a consistent patch series?This change actually depends on the other, once I fixed the other one this should also be good to do according to your comment."
39751,0,"Patch Set 5: Code-Review+1By moving the removal to fhe (Non-Javadoc) annotations to the other review, this become independent of the @Override commmit. Sorry for the inconvienance, it should be hopefully fine now."
39752,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6876/ : UNSTABLE
39754,1,"Patch Set 2: Code-Review-1please avoid inconsistent patch series like this one. This change depends on another change which has a newer patchset than the one this change is depending on. Same problem in the other direction, this change has a successor change depending on it but there's a newer patchset of this change than the one pointing to this change.If changes don't depend on each other then best don't push them as a series but instead push each change based on origin/master. Iff you anyway want to push it as a series then the series should be consistent otherwise reviewers have to take extra steps to review and accept such changes which is annoying.I would immediately accept this change if it wouldn't depend on a non-current patchset of change Ib70dcb109468e8aa6d8dae7fbcf41ee67a050064"
39758,0,Change has been successfully merged into the git repository.
39761,0,Change has been successfully merged into the git repository.
39767,0,Change has been successfully merged into the git repository.
39770,0,Change has been successfully merged into the git repository.
39774,0,"Patch Set 1: Code-Review+1 Verified+1Ok, now situation with hanging looks better. Thanks:)"
39775,1,Patch Set 1:Are you still able to reproduce deadlock on quick outline with this patch?
39776,0,Patch Set 1:I used generated code from bug description and before I was able to deadlock PDT after few attempts. With this patch this case was working fine for me.
39778,0,Change has been successfully merged into the git repository.
39785,0,Change has been successfully rebased as ab6c210d1d50a2cb56f76536bc9dcc6b240880c9
39790,0,Change has been successfully rebased as 689d3ce8cfe66be006ce8c215e2ca9fc02576505
39793,0,Change has been successfully merged into the git repository.
39795,1,"Patch Set 3:(1 comment)Just a small question.Maybe the Node constructor should check that the parameter it receives is not null (fail-fast), so we could get rid of the additional null check.Otherwise, it seems dangerous."
39800,0,Change has been successfully merged into the git repository.
39811,0,Change has been successfully merged into the git repository.
39814,0,Change has been successfully merged into the git repository.
39826,0,Patch Set 1:(3 comments)This seems to work!! I have a few questions as I'm trying to better understand what's going on.
39827,0,"Patch Set 1:(3 comments)> (3 comments) >  > This seems to work!! I have a few questions as I'm trying to better > understand what's going on.I'll be the first to admit that this workaround isn't the prettiest in the world, but given we have to deal with a custom GdkWindow and an older version of GTK+ we can't change the source to, I don't know how else we can fix this crasher."
39842,0,Change has been successfully merged into the git repository.
39845,0,Change has been successfully merged into the git repository.
39847,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
39849,0,Change has been successfully merged into the git repository.
39853,0,Change has been successfully merged into the git repository.
39857,0,Change has been successfully merged into the git repository.
39861,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2474/ : UNSTABLE
39865,0,Change has been successfully rebased as dc57ba11a41818c1efced32fef57eae6a3486d42
39867,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2494/ : UNSTABLE
39871,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2473/ : UNSTABLE
39876,0,Change has been successfully merged into the git repository.
39878,0,Change has been successfully merged into the git repository.
39880,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/674/ : UNSTABLE
39884,0,Change has been successfully merged into the git repository.
39886,1,"Patch Set 1:Strange compiler error on unrelated code:[ERROR] Failed to execute goal org.eclipse.tycho:tycho-compiler-plugin:0.23.0-SNAPSHOT:compile (default-compile) on project org.eclipse.core.databinding.observable: Fatal error compiling: class ""org.eclipse.jdt.internal.compiler.lookup.AptSourceLocalVariableBinding""'s signer information does not match signer information of other classes in the same packageReported bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=462783"
39891,0,Change has been successfully cherry-picked as faeb45e2e0fa96fc8f774f0286eb84439dddeba3
39898,0,Change has been successfully cherry-picked as 1d6a2139034b7d4c3d20f9510236bd40bf5a2d20
39905,0,Change has been successfully cherry-picked as 938dc14167973df1712149c8de7375db2dd29139
39908,0,Patch Set 1:(3 comments)thanks!
39914,0,Change has been successfully merged into the git repository.
39922,0,Change has been successfully merged into the git repository.
39924,0,"Patch Set 2: Code-Review+2 Verified+1With this patch the highlighting of the matches using the reqex in the colum is correct. For example, before .*value.* would only highlight the occurances of value, but actually it should highlight the whole cell if it contains value."
39925,0,Change has been successfully cherry-picked as 17dd85d75aa6aa875b0f68f2eab6bf4215504f14
39929,0,Change has been successfully merged into the git repository.
39931,0,Change has been successfully merged into the git repository.
39933,0,"Patch Set 2: Code-Review+2 Verified+1Thanks Sebastian, looks good. This week is M6 freeze, I apply it beginning of next week"
39936,0,"Patch Set 1:(1 comment)Thanks Sebastian, that was fast. :-) I suggest to update the copyright date also."
39941,0,Change has been successfully merged into the git repository.
39944,0,Change has been successfully merged into the git repository.
39952,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2490/ : UNSTABLE
39953,1,Patch Set 2: Verified+1test failure are unrelated
39956,0,Change has been successfully rebased as 535f49a7db11a4a7f7fb3a5cc7431d5b5cd1ad66
39960,0,Change has been successfully merged into the git repository.
39963,0,Change has been successfully merged into the git repository.
39966,0,"Patch Set 2: Code-Review+2 Verified+1Thanks, looks good."
39967,0,Change has been successfully merged into the git repository.
39968,0,"Patch Set 2:> No, I think we should go with this solution which is why I approved > it.  We would still have the issue that tools are called within the > make file and could conceivably react to the V=1 environment > variable themselves.  Just venting at the lack of forethought in > the Autotools maintenance group.I see. Just double checking ;) Thanks for the review!"
39970,1,"Patch Set 1: Verified+1 Code-Review+2I'm ok with this, but I really disapprove of the way that the Autotools group handled this.  With this change we are setting the V=1 for all tools used by autotools (including autoconf, automake, autoheader, and configure itself - not just the make call).  It should be ok, but the Autotools maintainers should have made the new terse output require the setting instead of the other way round."
39971,1,"Patch Set 1:> I'm ok with this, but I really disapprove of the way that the > Autotools group handled this.  With this change we are setting the > V=1 for all tools used by autotools (including autoconf, automake, > autoheader, and configure itself - not just the make call).  It > should be ok, but the Autotools maintainers should have made the > new terse output require the setting instead of the other way > round.Do you prefer we investigate the approach of passing V=1 as an argument? Meaning 'make all V=1'. I thought it might be tricker, especially since the user can define targets in the Make Target view."
39974,0,Change has been successfully rebased as 862705bb45d13bcb45e860b9a97b358db9f1b92f
39977,0,Change has been successfully merged into the git repository.
39980,0,Change has been successfully merged into the git repository.
39986,0,Change has been successfully merged into the git repository.
39995,0,Change has been successfully merged into the git repository.
40000,0,Patch Set 1:Thanks fo the review!
40001,0,Change has been successfully cherry-picked as 03bd936a2d760e40ee867771affb6a02b33985db
40003,0,Change has been successfully pushed.
40006,0,Change has been successfully merged into the git repository.
40009,0,Change has been successfully merged into the git repository.
40012,0,Change has been successfully merged into the git repository.
40016,1,"Patch Set 3: Code-Review-1I could argue that a @Nullable is more robust than throwing an undeclared runtime exception, but I don't have that much fight left in me for this one.I will, however, add @throws tags to the interface Javadoc. I also add it to some other interface methods where it can occur. I hope you don't mind."
40020,0,"Patch Set 5:> I hope you don't mind.Not at all, thanks. In general, unchecked exceptions are an implementation-dependent behavior, so it's weird to see this in an interface. But ITmfStateSystem is ""special"", it's @noextend and closely linked to its implementation in StateSystem, so it makes sense.> a @Nullable is more robust than throwing an undeclared runtime exceptionThat's a good point. This or having a ""QuarkNotFoundException"" to be symmetrical with AttributeNotFoundException.However, the quark ints should always come from another getQuark... method, and those should always return valid ones (""Quark"" would have been a typedef, if Java offered such a thing). So if one somehow passes an invalid quark, it's because they're doing something wrong in the program.Whereas with getQuark*(), the input is usually arbitrary strings, so these may or may not exist (hence a checked exception).I did not think about it at first, but right now we do the polymorphism trick of adding the ""throws AttributeNotFoundException"" only to the ITmfStateSystem sub-interface. We couldn't go with @NonNull -> @Nullable return value though."
40022,0,Change has been successfully cherry-picked as 04927a83c26022d575f60d3941d282b30efed14c
40026,0,Change has been successfully merged into the git repository.
40031,0,Change has been successfully merged into the git repository.
40033,0,"Patch Set 2: Code-Review+2 Verified+1Thanks Mickael, thanks worked."
40034,0,Change has been successfully merged into the git repository.
40036,1,"Patch Set 1:Mickael, do you know what I'm doing wrong here? I'm getting the following error message: Execution default-p2-metadata-default of goal org.eclipse.tycho:tycho-p2-plugin:0.23.0-SNAPSHOT:p2-metadata-default failed. IllegalArgumentExceptiong"
40041,0,Change has been successfully cherry-picked as 572a949fac72d9b7330d13e3b2c29d53da34caac
40043,0,Patch Set 1: Code-Review+2 Verified+1This changes seems good!
40044,0,Change has been successfully merged into the git repository.
40046,0,Patch Set 1: Code-Review+2 Verified+1This looks fine to me.
40047,0,Change has been successfully cherry-picked as 7eee91e610d31b67d6266b7744cf78b87e0bb883
40049,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/676/ : UNSTABLE
40052,0,Change has been successfully merged into the git repository.
40058,0,Change has been successfully merged into the git repository.
40068,0,Change has been successfully merged into the git repository.
40089,0,Change has been successfully merged into the git repository.
40095,1,"Patch Set 1: Code-Review-1If a new contribution implies to change existing, unrelated contributions (Handlers, in this case), then there is probably something wrong with the APIConsider the following pattern instead, which won't break any API (And won't require to change any unrelated handler), while still improving the flexibility of the Command Handlers:protected Command getCommand(ExecutionEvent event){    return getCommand(); //Implement an overridable, default behavior. Extend it only when you actually need the ExecutionEvent (i.e. for your own contribution)}protected abstract Command getCommand(); //Leave the existing API unchanged, to a avoid breaking unrelated components"
40100,0,"Patch Set 14: Code-Review+1Hey there,integration of the new function is operational, could you please review it?Thanks"
40103,1,"Patch Set 9: Code-Review+1Dear gentlemans,please find here a proposition for upper/lower case quick format.once you accept this function, I will create a disting bug related to the migration of the papyrus toolbar to org.eclipse.papyrus.infra.uibut it will be a separated ticket.Thanks for your comments"
40115,0,Change has been successfully merged into the git repository.
40119,0,Change has been successfully merged into the git repository.
40125,0,Change has been successfully merged into the git repository.
40127,1,"Patch Set 1: Code-Review+1This is the last commit in chain, copy-pasting the comment for the whole sequence here: This is the second iteration (first chain had been abandoned). It still has a couple of problems after migration, but overall it is +1 from me.I.p, for all known migration problems we either have tests already or will add new ones as a separate gerrit."
40128,0,Change has been successfully pushed.
40131,0,Change has been successfully pushed.
40134,0,Change has been successfully pushed.
40137,0,Change has been successfully pushed.
40139,1,"Patch Set 1: Code-Review+1(The same commit is applicable for the whole chain of 6 gerrits, copying here the last time): This is the second iteration (first chain had been abandoned). It still has a couple of problems after migration, but overall it is +1 from me.I.p, for all known migration problems we either have tests already or will add new ones as a separate gerrit."
40140,0,Change has been successfully pushed.
40142,1,"Patch Set 1: Code-Review+1This is the second iteration (first chain had been abandoned). It still has a couple of problems after migration, but overall it is +1 from me.I.p, for all known migration problems we either have tests already or will add new ones as a separate gerrit."
40143,0,Change has been successfully pushed.
40145,1,Patch Set 3:This change seems less aggressive in that it only fixes the problem that an EModelElement resolve proxies when calculating eURIFragmentSegment.
40146,1,"Patch Set 3:I think the test failure is bogus, i.e., I think it's testing the against an older base build..."
40149,0,Change has been successfully merged into the git repository.
40151,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/xtext/job/emf.gerrit/275/ : UNSTABLE
40153,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/xtext/job/emf.gerrit/288/ : UNSTABLE
40157,0,Patch Set 3: Verified+1 Code-Review+2Looks good
40158,0,Change has been successfully merged into the git repository.
40163,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4433/ : UNSTABLE
40166,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4432/ : UNSTABLE
40168,1,"Patch Set 7:Thanks Alexander, sorry for the delay in the review."
40169,0,Change has been successfully merged into the git repository.
40170,0,Patch Set 2: Code-Review-1Thanks. Change looks fine but we need a bug reference. Can you open a bug and adjust the Bug commit message?Bug xxxx - Description from the bug
40171,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4423/ : UNSTABLE
40176,0,Change has been successfully merged into the git repository.
40178,0,Change has been successfully pushed.
40180,0,Change has been successfully pushed.
40187,0,Change has been successfully merged into the git repository.
40189,0,Change has been successfully merged into the git repository.
40196,0,Change has been successfully merged into the git repository.
40198,0,Change has been successfully merged into the git repository.
40203,0,Change has been successfully merged into the git repository.
40208,0,Change has been successfully merged into the git repository.
40217,0,Change has been successfully merged into the git repository.
40219,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2360/ : UNSTABLE
40223,0,Change has been successfully cherry-picked as 0fff5fa03a10553c8273658b5fa92ad4e9a43c83
40224,1,Patch Set 4:Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2373/ : UNSTABLE
40226,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2346/ : UNSTABLE
40229,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2369/ : UNSTABLE
40233,0,Change has been successfully pushed.
40235,0,Change has been successfully pushed.
40237,0,Change has been successfully pushed.
40239,0,Change has been successfully pushed.
40241,0,Change has been successfully pushed.
40243,0,Change has been successfully pushed.
40245,0,Change has been successfully pushed.
40247,0,Change has been successfully pushed.
40249,0,Change has been successfully pushed.
40251,0,Change has been successfully pushed.
40253,0,Change has been successfully pushed.
40255,0,Change has been successfully pushed.
40257,0,Change has been successfully pushed.
40260,0,Change has been successfully merged into the git repository.
40266,0,Change has been successfully cherry-picked as 0306a843241082be2aebd3d52e60aaf3a5052265
40279,0,Change has been successfully merged into the git repository.
40282,0,Change has been successfully merged into the git repository.
40285,0,Change has been successfully merged into the git repository.
40289,0,Change has been successfully rebased as 2e988477718a8e97a648732da3d6f08e06915e59
40290,0,Patch Set 2:Thank you!
40292,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/825/ : UNSTABLE
40295,0,Change has been successfully merged into the git repository.
40299,0,Change has been successfully merged into the git repository.
40301,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/760/ : UNSTABLE
40308,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/761/ : UNSTABLE
40317,0,Change has been successfully merged into the git repository.
40322,0,Change has been successfully merged into the git repository.
40326,0,"Patch Set 2: Code-Review+1I only checked APIs. Looks good, and it's great that you added proper Javadoc links.One minor nit for an old problem: org.eclipse.core.filesystem.provider.FileStore#getChild(IPath) still doesn't have a deprecation message. Should copy the one from IFileStore."
40330,0,Change has been successfully merged into the git repository.
40338,0,Change has been successfully merged into the git repository.
40340,0,Patch Set 1: Code-Review+2 Verified+1Ship it!
40341,0,Change has been successfully merged into the git repository.
40344,0,Patch Set 1: Code-Review+2 Verified+1Ship it!
40345,0,Change has been successfully merged into the git repository.
40347,0,Change has been successfully merged into the git repository.
40352,1,"Patch Set 1:I don't understand the code path that leads to a diagramType==NONE. Are you loading a bpmn2 file that was created by an external tool? If so, the file is invalid because targetNamespace is required (according to the BPMN 2.0 spec) and the error really SHOULD be reported. The user can always set targetNamespace in the Property view."
40354,1,"Patch Set 1:the problem is that I set the targetNamespace on the editor input, but with the Bpmn2DiagramType.NONE, in importDiagram() the targetNamespace is not set on the modelHandler, which leads then to validations errors durring store"
40355,0,Change has been successfully merged into the git repository.
40360,1,Patch Set 3:Is that page using Phoenix/Solstice correctly?  I'm worried about possible regressions to our website.
40368,0,Change has been successfully merged into the git repository.
40372,0,Change has been successfully merged into the git repository.
40377,0,Change has been successfully merged into the git repository.
40381,0,Change has been successfully merged into the git repository.
40388,0,Change has been successfully merged into the git repository.
40392,0,Change has been successfully merged into the git repository.
40395,0,Change has been successfully cherry-picked as 952b90394dd7e8037b393dd7702d6442e4347ea5
40398,0,Change has been successfully merged into the git repository.
40402,0,Change has been successfully merged into the git repository.
40404,0,"Patch Set 1:I've a question on this fix. With it in place, does the initial <prerequisites> section stay as-is? If so, it seems we have two places we specify ""3.1.1"", so I just wanted to be sure they both had to stay, and if that's the case, perhaps we'll add a comment ""if one changed, be sure to change the other"". Thanks for the patch."
40405,0,"Patch Set 1:David, your question is answered in the commit message, second paragraph. :)"
40406,0,"Patch Set 1: Verified+1 Code-Review+2Ok, thanks. I'll add comments in code."
40407,0,Change has been successfully merged into the git repository.
40409,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2317/ : UNSTABLE
40411,0,Change has been successfully cherry-picked as 29fb0f50456e0ea6dbc2b72705f2b773d1383c8e
40414,0,Change has been successfully merged into the git repository.
40417,0,"Patch Set 2:(2 comments)It seems quite good, just a few questions have drawn my attention."
40426,0,Change has been successfully merged into the git repository.
40428,0,Change has been successfully merged into the git repository.
40435,0,Change has been successfully merged into the git repository.
40437,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2315/ : UNSTABLE
40439,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2316/ : UNSTABLE
40441,0,Change has been successfully cherry-picked as 13bee807f461697b25f6f06fd994dff453d6b005
40444,1,"Patch Set 1:> Currently, the SysML Stylesheet is contributed to all ""known"" > Papyrus Themes. Would it make sense to contribute it as a User > Agent Stylesheet instead? Or would it introduce Priority Conflicts?I don't thinks that will be a problem if we use user agent stylesheet instead of theme for sysml.css. this is more logic. More I should put in umlbase.css the stylesheet include in uml.css, which is define trought theme. Want you that I push a new patch set ?"
40448,0,Change has been successfully merged into the git repository.
40450,0,"Patch Set 2:> But If I put uml.css and sysml.css on the user agent scope, there is no more reason to have the black&white theme(which only contains these two css) ?? Must we delete this theme ?We should still keep the Black & White Theme, at least for backward compatibility, and because it is more explicit than ""No Theme"". Additionally, we 'may' need to contribute some rules to the Black & White Theme if we need to solve some priority issues between rules (Maybe), so it is probably a good idea to keep it."
40458,0,Change has been successfully merged into the git repository.
40463,0,Change has been successfully merged into the git repository.
40466,0,Change has been successfully merged into the git repository.
40482,1,Patch Set 9:(2 comments)The example implementation should be a bit more bulletproof.
40490,0,Change has been successfully merged into the git repository.
40497,0,Change has been successfully merged into the git repository.
40507,0,Change has been successfully merged into the git repository.
40511,0,Change has been successfully merged into the git repository.
40519,0,Change has been successfully merged into the git repository.
40522,0,Change has been successfully merged into the git repository.
40527,0,"Patch Set 6: Code-Review+2 Verified+1Thanks, looks good."
40528,0,Change has been successfully merged into the git repository.
40540,0,Change has been successfully merged into the git repository.
40545,1,Patch Set 2:(2 comments)sorry - the header changes were unintentional.Changeset 3 coming up ...
40548,1,"Patch Set 1:(BTW: this needs the 'transparent' patch to work, but not the 'initial' one, I didn't remove the erroneous dependency before pushing, sorry :-()"
40549,1,"Patch Set 1: Code-Review-1I suggest to modify the existing dark theme, instead of making a copy. We are still in the development mode and thus are allowed to make errors (we still have cycles to fix them)"
40554,0,Change has been successfully rebased as db30c4d63632e1c2d75595c1fb7f7dd1ce61212b
40557,0,Change has been successfully cherry-picked as 7ad06be03b708f420fc50aa641ef717e32247ac5
40561,0,Change has been successfully merged into the git repository.
40565,0,Change has been successfully merged into the git repository.
40571,0,Change has been successfully merged into the git repository.
40578,0,Change has been successfully merged into the git repository.
40584,0,Change has been successfully merged into the git repository.
40586,0,Change has been successfully cherry-picked as b80b17b0e6bf6b4ef45d4098c62363fd3dd18406
40587,1,Patch Set 2:Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2313/ : UNSTABLE
40590,1,Patch Set 1:Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2311/ : UNSTABLE
40592,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2310/ : UNSTABLE
40595,0,Change has been successfully cherry-picked as 45ff076cee3353596c3ac3adfd25946f4482b0a8
40596,1,Patch Set 2:Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2312/ : UNSTABLE
40598,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2309/ : UNSTABLE
40600,0,Change has been successfully cherry-picked as 8b0269ef79b6b71aedc968d64ba5b0223d743826
40603,0,Change has been successfully merged into the git repository.
40606,0,Change has been successfully cherry-picked as 51e271447c73aaeec16962b8c8fac2f04f4178f4
40614,0,Change has been successfully merged into the git repository.
40615,1,"Patch Set 3:> Interesting. I don't recall changing any IDE settings, but it does> compile for me in Eclipse. Anyhow, I don't see how it would compile> without the package import, even using another build system...?> Interesting. I don't recall changing any IDE settings, but it does> compile for me in Eclipse. Anyhow, I don't see how it would compile> without the package import, even using another build system...?In order to see the additional problems you should have installed an API baseline (see http://wiki.eclipse.org/EGit/Contributor_Guide#Checking_for_JGit_API_Changes_using_API_Baseline).Maybe you have silenced API tooling in your eclipse.It does compile with maven even without your fix. Otherwise our automated builds would have detected this bug before.I guess the reason is that the pom.xml already contains the needed dependency. Yes, it's a shame that we have two parallel ways how we define dependencies. See Matthias commit c18694e0 where he added slf4j and had to do that in pom.xml and MANIFEST.MF in parallel.Try this out:    > git checkout d1bda470d4      # That's the commit before your fix  HEAD is now at d1bda47... Merge ""ArchiveCommand: Allow to pass options to underlying stream""  > mvn clean install -DskipTests  [INFO] Scanning for projects...  ...  [INFO] ------------------------------------------------------------------------  [INFO] BUILD SUCCESS  [INFO] ------------------------------------------------------------------------  [INFO] Total time: 02:42 min  [INFO] Finished at: 2015-03-13T08:44:21+01:00  [INFO] Final Memory: 49M/686M  [INFO] ------------------------------------------------------------------------  >"
40620,1,Patch Set 3:(1 comment)sorry for the very late answer. I overlooked this change.
40622,1,Patch Set 1: I would prefer that you didn't submit thisI think JGit should reject such garbage.
40627,0,Change has been successfully merged into the git repository.
40633,0,Change has been successfully merged into the git repository.
40635,0,"Patch Set 3: Code-Review+1Matthias, I am fine with you changes."
40637,1,Patch Set 1:I guess the build fails because it compiles against an older version of args4j. I am not sure how to update it properly to build against 2.0.21.
40641,0,Change has been successfully merged into the git repository.
40647,0,Change has been successfully merged into the git repository.
40652,0,Change has been successfully rebased as 27dd96cb72d80cc2777ddcfdd04a4894412aebdb
40656,0,Change has been successfully merged into the git repository.
40660,0,Change has been successfully merged into the git repository.
40670,0,Change has been successfully merged into the git repository.
40671,0,Patch Set 7:Doug told me to submit it :-)
40681,0,Change has been successfully merged into the git repository.
40685,0,Change has been successfully merged into the git repository.
40688,0,Change has been successfully merged into the git repository.
40693,0,Change has been successfully merged into the git repository.
40713,0,Change has been successfully merged into the git repository.
40725,0,Change has been successfully merged into the git repository.
40730,0,Change has been successfully merged into the git repository.
40745,0,Change has been successfully rebased as 6981a0eaafa55b782af0854c1fbd1acc2bf81fba
40748,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/453/ : UNSTABLE
40752,0,Change has been successfully merged into the git repository.
40757,0,Change has been successfully merged into the git repository.
40758,1,Patch Set 2: Code-Review+1I imported the sample project and was able to reproduce this issue.The removeDynamicMenuContributions call on the renderer actually did the trick. I even had a look at the workbench.xmi file between application sessions and really the xml with several menu items.I also run the menu tests without any failures.Thanks for your patch and patience Marco.The Copyright info may be changed from 2014 to 2015.
40761,0,Change has been successfully merged into the git repository.
40768,0,Change has been successfully merged into the git repository.
40771,0,Change has been successfully merged into the git repository.
40773,0,"Patch Set 1: Code-Review+2 Verified+1It seems the call to this method is checked towards null, so OK with this contribution.Thanks!"
40774,0,Change has been successfully merged into the git repository.
40779,0,Change has been successfully cherry-picked as a391f2cb89922953ef0d82ec70bd922fd7c23161
40783,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2425/ : UNSTABLE
40786,0,Change has been successfully rebased as b2460aaf539f4b26db24950b95a3ac8176e5aedf
40790,0,Change has been successfully merged into the git repository.
40792,0,"Patch Set 2:Hi Christian, I hope the rebasing worked."
40794,0,Change has been successfully merged into the git repository.
40796,1,"Patch Set 1:Hi Daniel,thanks for the patch. I do not really understand the idea behind this constraint. Could you explain it a bit?Cheers,Christian"
40799,1,"Patch Set 1:hi,i am not sure that i understand the problem. Can you share an example in graphical syntax with us?Matthias"
40800,1,"Patch Set 1:Sorry for the delay. I uploaded a small example at http://www.mathematik.uni-marburg.de/~strueber/henshin_container_example.pngIn the meta-model underlying this example, ""club"" and ""player"" are EOpposite containment/container references. Consequently, both rules in this example have the same effect, which includes the removing and adding of the Player at a different place in the containment hierarchy (potentially a different model instance). However, B does not indicate this effect in the graphical syntax, which makes it difficult for the developer to understand the meaning of this rule.In a small example, the maintainability drawback might not be too drastic. But imagine that the meta-model might be complex and, worse, evolving over time. In an earlier version of the meta-model, Players might have been contained somewhere else, so that Version B actually meant something different at that time. In this case, the warning should definitively make sense."
40801,0,Patch Set 1:In my opinion there is no need for a warning if the user chooses the inverse edge. I would find it more useful to create warnings in situations were side effects could occur.
40804,1,Patch Set 1:Setting a non-containment 0..1 reference can delete an existing edge and therefore have a side effect. We should try to detect all these side effects. For this particular problem we could change the edge create command such that it always creates the containment edge (and not the container edge). Would that be okay?
40814,0,Change has been successfully merged into the git repository.
40818,0,Change has been successfully merged into the git repository.
40831,0,Change has been successfully merged into the git repository.
40833,0,Change has been successfully merged into the git repository.
40837,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2307/ : UNSTABLE
40839,0,Change has been successfully cherry-picked as 56f06ab5bd3e063da8e62aa0dcbc4c3c8370ba0f
40843,0,Change has been successfully merged into the git repository.
40848,0,Change has been successfully merged into the git repository.
40857,0,Change has been successfully merged into the git repository.
40866,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2306/ : UNSTABLE
40868,0,Change has been successfully cherry-picked as 59c87917e1ede635b771b0868be7465bf1a9d846
40877,0,Change has been successfully merged into the git repository.
40884,0,Change has been successfully merged into the git repository.
40888,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2304/ : UNSTABLE
40890,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2302/ : UNSTABLE
40893,0,Change has been successfully cherry-picked as a04cc46cf06edc0a7c85202a58813f879fe8889b
40895,1,Patch Set 5: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4276/ : UNSTABLE
40899,0,Change has been successfully merged into the git repository.
40915,1,Patch Set 6: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4330/ : UNSTABLE
40927,0,Change has been successfully merged into the git repository.
40931,0,Change has been successfully merged into the git repository.
40937,0,Change has been successfully merged into the git repository.
40942,0,Change has been successfully merged into the git repository.
40947,0,Change has been successfully merged into the git repository.
40949,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/605/ : UNSTABLE
40954,0,Change has been successfully merged into the git repository.
40955,0,Patch Set 3: Verified+1The patch looks good. Could you only update copyrights date in AllUtilityTests.java?
40956,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4800/ : UNSTABLE
40958,0,Patch Set 5: Code-Review+2 Verified+1Thanks Tomasz!
40959,0,Change has been successfully merged into the git repository.
40962,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4780/ : UNSTABLE
40968,0,Change has been successfully merged into the git repository.
40973,0,Change has been successfully merged into the git repository.
40975,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/608/ : UNSTABLE
40977,0,Change has been successfully merged into the git repository.
40981,0,Change has been successfully cherry-picked as 0451d4d743d79d533cf5f6aba7db591aa256c970
40989,0,Change has been successfully cherry-picked as dbc7991df7eb532d31b35cfaaccb395a9adf0ead
40995,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2393/ : UNSTABLE
40998,0,Change has been successfully rebased as a1b9cc4fbd3a181e0ea4df33bdf2592bd6d321ed
41006,0,Change has been successfully merged into the git repository.
41010,0,Patch Set 1: Code-Review+1Seems fine
41012,0,Change has been successfully cherry-picked as 34df415a6b4f75fa8c292befed6fbf7ce1d6c051
41014,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2396/ : UNSTABLE
41015,0,Patch Set 1: Code-Review+2Looks good.
41018,0,Change has been successfully merged into the git repository.
41027,0,Change has been successfully merged into the git repository.
41030,0,Change has been successfully merged into the git repository.
41033,0,Change has been successfully merged into the git repository.
41036,0,Change has been successfully cherry-picked as ae09c4ad11542af46a11d270e81dd8707d3da2b2
41044,0,Change has been successfully merged into the git repository.
41047,0,Change has been successfully merged into the git repository.
41049,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4223/ : UNSTABLE
41050,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4227/ : UNSTABLE
41056,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4156/ : UNSTABLE
41065,0,Change has been successfully merged into the git repository.
41071,0,Change has been successfully merged into the git repository.
41079,1,Patch Set 10: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4106/ : UNSTABLE
41082,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3395/ : UNSTABLE
41095,0,Change has been successfully merged into the git repository.
41099,1,Patch Set 10: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4107/ : UNSTABLE
41107,0,"Patch Set 4:I addressed the comments on the code change. Please do not submit yet as I'd like to investigate if I an adapt the algorithm to take in account the cases with ""empty border lines"" in the image and see what kind of performance cost it leads to."
41113,1,Patch Set 5: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3416/ : UNSTABLE
41119,0,Change has been successfully pushed.
41120,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/sirius/job/ecoretools.gerrit/7/ : UNSTABLE
41122,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/ecoretools.gerrit/2/ : UNSTABLE
41125,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/ecoretools.gerrit/3/ : UNSTABLE
41131,0,Change has been successfully merged into the git repository.
41139,0,Change has been successfully merged into the git repository.
41142,0,Change has been successfully pushed.
41143,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/sirius/job/ecoretools.gerrit/6/ : UNSTABLE
41145,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/ecoretools.gerrit/4/ : UNSTABLE
41147,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/ecoretools.gerrit/5/ : UNSTABLE
41150,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6774/ : UNSTABLE
41151,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6775/ : UNSTABLE
41152,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6776/ : UNSTABLE
41154,0,Change has been successfully merged into the git repository.
41156,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6663/ : UNSTABLE
41157,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6664/ : UNSTABLE
41158,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6665/ : UNSTABLE
41166,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6667/ : UNSTABLE
41172,0,Change has been successfully merged into the git repository.
41178,0,Change has been successfully merged into the git repository.
41185,0,Change has been successfully rebased as f517c704bc0d6df4a718503a25f8e3fec21f1439
41187,0,Patch Set 1:Looks good.  Please publish.
41189,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2377/ : UNSTABLE
41192,0,Change has been successfully merged into the git repository.
41194,0,Patch Set 1: Code-Review+2 Verified+1Thanks for the patch!
41195,0,Change has been successfully merged into the git repository.
41198,0,Change has been successfully merged into the git repository.
41208,0,Change has been successfully merged into the git repository.
41213,0,Change has been successfully merged into the git repository.
41218,0,Change has been successfully merged into the git repository.
41221,0,Change has been successfully merged into the git repository.
41224,0,Change has been successfully merged into the git repository.
41229,0,Change has been successfully merged into the git repository.
41232,0,Change has been successfully merged into the git repository.
41235,0,Change has been successfully merged into the git repository.
41239,0,Change has been successfully merged into the git repository.
41240,1,Patch Set 9:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2392/ : UNSTABLE
41247,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2366/ : UNSTABLE
41256,1,Patch Set 4:Oups- the formatting is lost :(  You can check under your own workspace
41257,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2378/ : UNSTABLE
41259,0,Patch Set 4:(1 comment)Good catch - new patch pushed.
41260,0,"Patch Set 6: Verified+1 Code-Review+2Marc, thanks for the review!"
41261,0,Change has been successfully merged into the git repository.
41263,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2348/ : UNSTABLE
41265,0,"Patch Set 3:(8 comments)Elegant change.  I have some minor in-line comments.I'm also gonna try to play around with the generics to see if we can simplify, but not right now, it's getting late.  I'll won't spend too much time on it though, so as not to delay you."
41267,0,"Patch Set 3: Code-Review+1(1 comment)If you don't mind addressing the in-line comments, the rest looks good for me.Thanks!"
41268,0,Patch Set 3:(12 comments)Thanks Marc for the review. I will soon post another version of the patch. Hopefully it makes things better / more clear
41271,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2383/ : UNSTABLE
41281,0,Change has been successfully merged into the git repository.
41283,1,"Patch Set 10: Code-Review-1(5 comments)In addition to the inline comments, it looks like there is quite a lot of duplicate code in helper code for implementing interpreters between:* old-old stuff like VariableManager* not-so-old stuff like AbstractInterpreter (introduced to share common code for var:/feature:/service:)* new code introduced here in AcceleoAbstractInterpreter and AQLSiriusInterpreter.I know this is not strictly the scope of this ticket, but maybe it is time to refactor this and ensure consistent behaviors between the various interpreters we offer in terms of: variable handling (incl. stack discipline), error handling/reporting, service classes and methods lookup and dispatch, type coercion between raw values returned by the underlying language and expected types as asked by evaluateXXX() methods."
41285,0,"Patch Set 10:Regarding : > old-old stuff like VariableManager> not-so-old stuff like AbstractInterpreter (introduced to share common code for var:/feature:/service:)> new code introduced here in AcceleoAbstractInterpreter and AQLSiriusInterpreter.I'll have a look, but that would likely involve breaking the IInterpreter API, would that be ok for you ? Or defining an IInterpreter2 ?I did some performance measures and the Variable management introduce some noticeable overhead when refreshing a big diagram, about 25% of the time is spent in set/unset variables which is done X times, X being the number of interpreters which are declared, whereas passing the variable current state in the interpreters sound easy enough.If you agree I would do that in a separate changeset (and dedicated bugzilla)"
41292,1,Patch Set 5: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3792/ : UNSTABLE
41296,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3537/ : UNSTABLE
41299,0,Change has been successfully merged into the git repository.
41302,0,Change has been successfully merged into the git repository.
41307,1,"Patch Set 8:Yes, I wasn't arguing that the code is wrong, but I'd expect that if we create 40 new instances each time and never dispose them (unless the 2 fixed by this change), then it looks like we have a bigger problem elsewhere."
41311,0,Change has been successfully merged into the git repository.
41313,1,"Patch Set 10:Dani, I've filed bug 460523 for leaked(?) CommandContributionItem's.Can we proceed with this review?"
41316,1,"Patch Set 9:CommandContributionItem's aren't disposed even on window.close()...I did some experiments and tried for example dispose CommandContributionItem's on CoolBarToTrimManager.dispose(). The funny thing is that some of the most prominent buttons disappeared from the main window toolbar after closing CustomizePerspectiveDialog - save, debug, external tools etc.It looks like if there is some magic behind. So it is definitely not clear for me who is responsible for disposing created CCI's and how the new CCI instances created *for CPD only* are connected to the already existing buttons on the main toolbar. One need to spend much more time in the debugger or to RTFM how this is supposed to work. But WHERE ARE THE MANUALS???"
41317,1,"andIt looks like the CommandContributionItems either aren't in the corresponding managers, or, they got removed before the manager gets disposed."""
41331,0,Patch Set 6: Code-Review+1(2 comments)Looks good. See comments in-lined.
41337,0,Change has been successfully merged into the git repository.
41347,0,Change has been successfully merged into the git repository.
41348,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4221/ : UNSTABLE
41350,0,Patch Set 2:That would be good for me except for the dispose() methods.
41352,0,Change has been successfully merged into the git repository.
41357,0,Change has been successfully cherry-picked as d5960da96bce69476a55c17c9822bcac60bf21b6
41360,0,Change has been successfully merged into the git repository.
41369,0,Change has been successfully merged into the git repository.
41375,0,Change has been successfully merged into the git repository.
41379,0,Change has been successfully cherry-picked as c07150f8a2c177739d76b7c642359999418ff537
41382,0,Change has been successfully merged into the git repository.
41385,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/433/ : UNSTABLE
41388,0,Change has been successfully merged into the git repository.
41391,0,Change has been successfully merged into the git repository.
41394,0,Change has been successfully cherry-picked as f4648c68ad5a7c0357f563c39caaea900aff66b3
41395,0,"Patch Set 2: Code-Review+2 Verified+1Please ignore my request from my previous comment. The ""rebase"" button showed up after I gave +1/+2. Thanks!"
41396,0,Change has been successfully merged into the git repository.
41397,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4799/ : UNSTABLE
41399,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4758/ : UNSTABLE
41400,1,Patch Set 1:> Build UnstableThe failure is unrelated.
41412,0,Change has been successfully rebased as 498bfb6509259b8bf9997a66e6710a26a969bf02
41417,0,Change has been successfully merged into the git repository.
41421,0,Change has been successfully merged into the git repository.
41423,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4756/ : UNSTABLE
41424,1,Patch Set 2:> Build UnstableThe failure is unrelated.
41426,0,Patch Set 3: Code-Review+2 Verified+1Thanks Tomasz!
41427,0,Change has been successfully merged into the git repository.
41428,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4798/ : UNSTABLE
41430,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4755/ : UNSTABLE
41431,0,Patch Set 5: Code-Review+2 Verified+1Looks good to me. Thanks Tomasz!
41432,0,Change has been successfully merged into the git repository.
41433,1,Patch Set 5:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4797/ : UNSTABLE
41436,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4759/ : UNSTABLE
41437,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4760/ : UNSTABLE
41443,0,Change has been successfully merged into the git repository.
41449,0,Change has been successfully cherry-picked as b2f62cb5a7dbd04cc03bc58e23a6f26f91eaea60
41452,0,Change has been successfully merged into the git repository.
41453,1,Patch Set 9:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6771/ : UNSTABLE
41463,0,Patch Set 8:Thank you Dani for your review.Do you know when this will be merged insce it now seems to be satisfactory?
41465,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5591/ : UNSTABLE
41466,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5592/ : UNSTABLE
41483,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6726/ : UNSTABLE
41484,1,Patch Set 3:Now the test failure is interesting. I'll investigate.
41485,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6734/ : UNSTABLE
41487,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6766/ : UNSTABLE
41488,1,"Patch Set 5:Matthias, any recommendation for the unstable test? I saw you also retriggered the build a couple of times for https://git.eclipse.org/r/43044."
41489,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6767/ : UNSTABLE
41490,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6770/ : UNSTABLE
41491,0,Patch Set 5: Code-Review+2 Verified+1* tested locally* symlinked repository works like a charm :-)
41492,0,Change has been successfully merged into the git repository.
41496,0,Change has been successfully merged into the git repository.
41499,0,Change has been successfully merged into the git repository.
41501,1,"Patch Set 1:Could this explain the intermittent problem we had with https://git.eclipse.org/r/#/c/42583/ ?Also, would it be worth to update the 4.4 target too?"
41502,1,"Patch Set 1:> Could this explain the intermittent problem we had with > https://git.eclipse.org/r/#/c/42583/ ?Maybe, I think it's worth a try. It's a good thing to upgrade either way. > Also, would it be worth to update the 4.4 target too?It's already using that version. So staging was using an older version than 4.4 target!"
41503,1,"Patch Set 1:> Could this explain the intermittent problem we had with > https://git.eclipse.org/r/#/c/42583/ ?BTW, master-nightly is failing consistently since it was mergedhttps://hudson.eclipse.org/tracecompass/job/tracecompass-master-nightly/"
41506,0,Change has been successfully cherry-picked as 85742cccf52942a5e2f13c7c67d4dd9e59071d8c
41510,0,Change has been successfully cherry-picked as 553603c1b114c9e68e51158785e831af06fa81f1
41513,0,Change has been successfully cherry-picked as eab2c340888e009498282eff172cbc3c0ce06c70
41516,0,Change has been successfully merged into the git repository.
41519,0,Change has been successfully merged into the git repository.
41522,1,"Patch Set 4: Code-Review+2 Verified+1I love this!!! I have to prepare CQ for your patch. Before I'll do it, can you use pngs with alpha? These gifs looks horrible in dark mode :(We can defer this into another bug."
41523,0,"Patch Set 4:Hi Dawid, nice to hear that you like this one :) I will enhance the icons today so you can wait a little bit more time before sending patch to CQ. Thanks for merging :)"
41526,0,Change has been successfully merged into the git repository.
41539,0,Change has been successfully merged into the git repository.
41542,0,Change has been successfully merged into the git repository.
41549,0,Change has been successfully merged into the git repository.
41552,0,Change has been successfully merged into the git repository.
41559,0,Change has been successfully rebased as bb4b74b3673fefdc396709a1bfc1585512fbfe7b
41562,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2356/ : UNSTABLE
41563,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2357/ : UNSTABLE
41568,0,Change has been successfully cherry-picked as d42cf262f2fce1db03518d5e383aff7165030690
41571,0,Change has been successfully merged into the git repository.
41574,0,Change has been successfully merged into the git repository.
41577,0,Change has been successfully merged into the git repository.
41580,0,Change has been successfully merged into the git repository.
41592,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4169/ : UNSTABLE
41593,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/4184/ : UNSTABLE
41601,0,Change has been successfully merged into the git repository.
41604,0,Change has been successfully cherry-picked as 1a035d80694e93f1c6120948e394d58e798cbaa0
41607,0,Patch Set 1:> Patch Set 1: Code-Review+1 Verified+1I am glad you are reviewing my patches while on vacation :)
41610,0,Change has been successfully merged into the git repository.
41613,0,Change has been successfully cherry-picked as 7a8a7454c78c4fa620daa6a29bd245f1446fb7bb
41616,0,Change has been successfully merged into the git repository.
41618,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2254/ : UNSTABLE
41620,0,Change has been successfully cherry-picked as e7783d6a3d6083e5641acc34b6e9ef27243922b0
41627,0,Change has been successfully merged into the git repository.
41629,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2253/ : UNSTABLE
41631,0,Change has been successfully cherry-picked as 27114440fafd8fb94c06a1d2f67d65666b1b19c5
41633,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2245/ : UNSTABLE
41638,0,Change has been successfully merged into the git repository.
41642,0,Change has been successfully merged into the git repository.
41646,0,Change has been successfully merged into the git repository.
41648,0,Change has been successfully merged into the git repository.
41649,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/604/ : UNSTABLE
41651,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/600/ : UNSTABLE
41656,0,Change has been successfully merged into the git repository.
41660,0,Change has been successfully merged into the git repository.
41667,0,Change has been successfully merged into the git repository.
41668,0,Patch Set 2: Code-Review+1 Verified+1(1 comment)Looks good but I think we should prefer the usage of an enhanced for loop
41671,0,Change has been successfully merged into the git repository.
41675,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1720/ : UNSTABLE
41678,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1700/ : UNSTABLE
41690,0,Change has been successfully rebased as 5664514d004573b98c448f3f06aac6cbe6247e46
41692,0,Change has been successfully merged into the git repository.
41700,0,Change has been successfully merged into the git repository.
41704,0,Change has been successfully merged into the git repository.
41708,0,Change has been successfully merged into the git repository.
41711,0,Change has been successfully merged into the git repository.
41713,0,Patch Set 1:(2 comments)Looks great!
41716,0,Patch Set 2: Verified+1Works great!
41720,0,Change has been successfully rebased as 04eba2e00c8eb35796e597d8a7876d2201a0c4ff
41723,0,Change has been successfully merged into the git repository.
41741,0,Change has been successfully merged into the git repository.
41753,0,Change has been successfully merged into the git repository.
41767,1,"Patch Set 1: -Code-ReviewAnyway, I won't nak this patch only because of a list implementation. It just seems silly to not use a linked list in what is a textbook example of when to use one."
41768,1,"Patch Set 1:I think that linked lists are more attractive in textbooks than in reality ;) In Java's LinkedList you don't have access to the node element, so inserting an object at a specific position requires iterating through, on average, a quarter of the list.But the main reason I dislike LinkedList over ArrayList is that it's much more annoying to follow in the debugger. So when other factors have negligible impact I'll pick ArrayList every time."
41769,1,"Patch Set 1:> so inserting an object at a specific position requires iterating through, on average, a quarter of the listBut inserting in the middle of an Array list requires rewriting the whole rest of the list! And in worst cases, re-allocating and rewriting the whole list.> it's much more annoying to follow in the debuggerThat's a good concern. It's something the debugger could improve. In fact, it should show the contents of all Collections in a more straightforward way."
41770,0,"Patch Set 1: Code-Review-1Now unrelated to the list, but can this class be accessed by multiple threads? Now it's exposing various methods on a bare list with no synchronization, is it safe?-1 for question"
41771,1,"Patch Set 1:> Now unrelated to the list, but can this class be accessed by multiple threads? Now it's exposing various methods on a bare list with no synchronization, is it safe?It is indeed not safe if accessed by multiple threads. The known code that uses these methods only runs on the main thread, though.If we want to make it safe, it's not enough to use synchronization. The index returned by indexOf() might be wrong by the time addChild() is called. Either it has to be synchronized externally, or we have to replace these methods with the required atomic operations (addBefore, addAfter, moveUp, moveDown, etc...) and make those synchronized.This is just a merged patch being ported from Linux Tools to Trace Compass, though. I didn't plan to do any big design change. The class is internal, if that makes a difference."
41772,0,"Patch Set 1: Code-Review+1 Verified+1It's fine for a class to not be re-entrant, as long as it is known and ideally documented. If the current usage does not need it, it should be fine.Ok, nothing else to complain about!"
41774,0,Change has been successfully cherry-picked as 2745b5d8349c13df34cf6f52d348f44ed4f850be
41777,0,Change has been successfully merged into the git repository.
41781,0,Change has been successfully merged into the git repository.
41784,0,Change has been successfully merged into the git repository.
41787,0,Change has been successfully merged into the git repository.
41790,0,Change has been successfully merged into the git repository.
41793,0,Change has been successfully merged into the git repository.
41795,0,Change has been successfully pushed.
41797,0,Change has been successfully pushed.
41800,0,Change has been successfully merged into the git repository.
41814,1,Patch Set 2:(1 comment)I'll also update the 4.4 target. I missed that.
41817,0,"Patch Set 6: Code-Review+2 Verified+1Fixed the 2 small comments I had on PS5.Compiles on both targets, Control view hasn't broke, lgtm!"
41818,0,Change has been successfully cherry-picked as 533d0bc3fad4832b67fdcf9ba39ba7f3c70da7c9
41822,0,Change has been successfully merged into the git repository.
41824,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2311/ : UNSTABLE
41826,0,Change has been successfully merged into the git repository.
41828,0,Change has been successfully merged into the git repository.
41833,0,Change has been successfully merged into the git repository.
41836,0,Change has been successfully merged into the git repository.
41859,0,Change has been successfully merged into the git repository.
41867,0,Change has been successfully merged into the git repository.
41873,0,Change has been successfully cherry-picked as 59baa1b42d447b846aa033f2cb6895663aaecc1e
41876,0,Change has been successfully merged into the git repository.
41882,1,"Patch Set 1:I saw this. Many of potential NPE are reported on Sonar also.PDT very often have a problem with CA on EOF. Sometimes have also ton of workaround due simple BadLocationException. This also generate a lot of performance issues ;) Change looks safe. BTW: Eclipse Mars since M5 have built-in auto reporter, so we may expect a lot of NPE, BLE and similar exception reports :D"
41884,1,Patch Set 1:I'm afraid that students want working on new shiny features instead of maintain legacy code :P
41887,0,Change has been successfully merged into the git repository.
41890,0,Change has been successfully merged into the git repository.
41892,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/622/ : UNSTABLE
41894,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/595/ : UNSTABLE
41901,0,Change has been successfully merged into the git repository.
41908,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/592/ : UNSTABLE
41911,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/626/ : UNSTABLE
41912,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/629/ : UNSTABLE
41913,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/630/ : UNSTABLE
41914,0,Change has been successfully merged into the git repository.
41918,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/594/ : UNSTABLE
41922,0,Change has been successfully merged into the git repository.
41925,0,Change has been successfully merged into the git repository.
41927,1,Patch Set 1:You might not want to commit api_changes.textiles which are so ugly yet ;)Please note that the latest build of the baseliner (from last night) now generates an api_changes.html which is way more readable.
41931,0,Change has been successfully merged into the git repository.
41936,0,Change has been successfully merged into the git repository.
41937,0,Patch Set 2: Code-Review+2 Verified+1Look good
41938,0,Change has been successfully merged into the git repository.
41942,0,Patch Set 1: Code-Review+1Fix is good to be merged.
41945,0,Change has been successfully merged into the git repository.
41948,0,Change has been successfully merged into the git repository.
41954,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3991/ : UNSTABLE
41957,0,Change has been successfully merged into the git repository.
41960,0,Change has been successfully merged into the git repository.
41965,0,Change has been successfully merged into the git repository.
41975,0,Change has been successfully merged into the git repository.
41979,0,Change has been successfully merged into the git repository.
41984,0,Change has been successfully merged into the git repository.
41993,0,Change has been successfully merged into the git repository.
41996,0,Change has been successfully merged into the git repository.
42003,0,Change has been successfully merged into the git repository.
42005,0,Change has been successfully merged into the git repository.
42010,0,Change has been successfully merged into the git repository.
42011,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3998/ : UNSTABLE
42015,0,Change has been successfully pushed.
42022,0,Change has been successfully merged into the git repository.
42029,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4062/ : UNSTABLE
42031,0,Change has been successfully merged into the git repository.
42039,0,Change has been successfully merged into the git repository.
42041,0,Change has been successfully merged into the git repository.
42044,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3983/ : UNSTABLE
42048,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/339/ : UNSTABLE
42051,0,Change has been successfully merged into the git repository.
42054,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/337/ : UNSTABLE
42057,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/338/ : UNSTABLE
42060,0,Change has been successfully merged into the git repository.
42066,0,Change has been successfully merged into the git repository.
42071,0,Change has been successfully merged into the git repository.
42075,0,Change has been successfully merged into the git repository.
42078,0,Change has been successfully merged into the git repository.
42083,0,Change has been successfully merged into the git repository.
42094,0,Change has been successfully merged into the git repository.
42098,0,Change has been successfully rebased as 3e7f1d284b97d128a363c7bd5f466a81e5ab4c51
42102,0,Change has been successfully rebased as 32d1a28f49fc85639e024b9f1d19367410422e96
42106,0,Change has been successfully rebased as 2fca26b8e54ae703bffc4f8b94533ba38db66e30
42110,0,Change has been successfully merged into the git repository.
42113,0,Change has been successfully merged into the git repository.
42119,0,Change has been successfully merged into the git repository.
42121,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/554/ : UNSTABLE
42123,0,Change has been successfully merged into the git repository.
42124,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/557/ : UNSTABLE
42128,0,"Patch Set 2: Verified+1 Code-Review+2Thanks, Mat!"
42129,0,Change has been successfully merged into the git repository.
42133,0,"Patch Set 1:None as far as I can see. The class (PathEnvironmentVariable) is private and only used to contribute to the PATH environment variable when cross-compiling. The contribution is the path to the cross compiler you specify in your project settings. Normally that path is prepended. It normally works fine, unless you use say ${ARM_TOOL_PATH} which java.io.File does not understand. It assumes ${ARM_TOOL_PATH} is some form of weird folder name in cwd and hence prepends c:\program files\...\eclipse\bin resulting in a non-existing directory being added to the path. I can't image you'd want to use a relative path to your compiler. If relative, relative to what? Here's a few examples:Cross path: C:\myarmcompilerBefore: C:\myarmcompilerAfter: C:\myarmcompilerCross path: myarmcompilerBefore: C:\program files\Eclipse\myarmcompilerAfter: C:\myarmcompilerCross path: ${ARM_TOOL_PATH} (and ARM_TOOL_PATH=c:\mycompiler)Before: C:\program files\Eclipse\c:\mycompilerAfter: c:\mycompilerIf some user really depends on specifying the cross compiler relative to the eclipse bin dir, I suggest they use ${ECLIPSE_HOME}\myarmcompiler which is also a lot more explicit."
42137,0,Change has been successfully rebased as f680519739ded84b25cbdfc6d45d3e6fee588d55
42140,0,Change has been successfully merged into the git repository.
42142,0,Change has been successfully pushed.
42151,0,Change has been successfully merged into the git repository.
42154,0,Change has been successfully merged into the git repository.
42158,0,Change has been successfully merged into the git repository.
42166,0,Change has been successfully merged into the git repository.
42168,0,Change has been successfully pushed.
42177,0,Change has been successfully merged into the git repository.
42179,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2290/ : UNSTABLE
42183,0,Change has been successfully rebased as 7328220fe6601dd1b70e9f2384096c71d3e3fca0
42185,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2277/ : UNSTABLE
42188,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2192/ : UNSTABLE
42192,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2260/ : UNSTABLE
42199,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2190/ : UNSTABLE
42201,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2256/ : UNSTABLE
42204,0,Change has been successfully rebased as 6f0f5d1cc49eda278edf5ceb4f4aa0ef45b09972
42206,0,Change has been successfully merged into the git repository.
42208,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2187/ : UNSTABLE
42213,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2255/ : UNSTABLE
42216,0,Change has been successfully pushed.
42224,0,Change has been successfully merged into the git repository.
42225,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2293/ : UNSTABLE
42228,0,Patch Set 3:Good find!
42235,0,Change has been successfully merged into the git repository.
42238,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2292/ : UNSTABLE
42241,0,Change has been successfully rebased as 18a8a45323e37c0264ce4dd401a61b75c8160b39
42245,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1704/ : UNSTABLE
42251,0,Change has been successfully rebased as b67e0bcc56fc32bc48e57eb502deabf05215dbc2
42255,0,Patch Set 3: -Code-Reviewwas rebased :)
42256,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1706/ : UNSTABLE
42267,0,Change has been successfully cherry-picked as 5aea6f361d4ba9d4b897d029ac7e038a9e48cf73
42268,1,Patch Set 1:Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2198/ : UNSTABLE
42271,0,Change has been successfully merged into the git repository.
42277,0,Change has been successfully merged into the git repository.
42280,0,Change has been successfully merged into the git repository.
42283,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3969/ : UNSTABLE
42286,0,Change has been successfully pushed.
42288,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3975/ : UNSTABLE
42293,1,Patch Set 6: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3877/ : UNSTABLE
42295,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3454/ : UNSTABLE
42300,0,Change has been successfully pushed.
42304,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3650/ : UNSTABLE
42309,1,Patch Set 11: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3968/ : UNSTABLE
42312,1,Patch Set 12: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3972/ : UNSTABLE
42315,1,Patch Set 9: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3895/ : UNSTABLE
42318,0,Change has been successfully pushed.
42326,1,Patch Set 12: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3971/ : UNSTABLE
42338,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3649/ : UNSTABLE
42341,1,Patch Set 7: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3887/ : UNSTABLE
42348,0,Change has been successfully pushed.
42356,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3648/ : UNSTABLE
42358,1,Patch Set 6: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3879/ : UNSTABLE
42363,0,Change has been successfully cherry-picked as 01a5abd75f0a5f040ea2c12fe6af3d6e648bb713
42365,0,Change has been successfully merged into the git repository.
42369,0,Change has been successfully cherry-picked as 32d71d2420924147ad7355a27f828710e63dbe2b
42376,0,Change has been successfully cherry-picked as 414dd7f4c3888afa04041cb1df66f9235a3c976b
42380,0,Change has been successfully cherry-picked as c0f11b833d3fc9f9720a9cb5ff92133bba3ea290
42385,1,"Patch Set 2:Then I'd argue we should mark them as deprecated. GDB-trace is not a ""standard"" extension, it does not even respect the guidelines we defined on http://projects.eclipse.org/projects/tools.tracecompass/governance :> The following items would be considered outside of the scope of this project:> Parsers/readers depending on native utilities or libraries. Parsers should be implemented in the framework, in Java, as much as possible. Keeping the native third-party libraries to a minimum makes distribution easier.It was there beforehand, so it got a free pass. But if an external contributor arrived and proposed to add another parser like that, we would/should not accept it."
42386,0,"Patch Set 2:> Then I'd argue we should mark them as deprecated.  We can make a patch to deprecate them first and remove it from the doc. In a separate patch. > GDB-trace is not > a ""standard"" extension, it does not even respect the guidelines we > defined on http://projects.eclipse.org/projects/tools.tracecompass/governance > : >  > > The following items would be considered outside of the scope of > this project: >  > > Parsers/readers depending on native utilities or libraries. > Parsers should be implemented in the framework, in Java, as much as > possible. Keeping the native third-party libraries to a minimum > makes distribution easier. >  > It was there beforehand, so it got a free pass. But if an external > contributor arrived and proposed to add another parser like that, > we would/should not accept it.It doesn't really matter whether or not it's standard, it shows that the extensions can be useful. If we don't want trace parsers that depend on native libraries in Trace Compass that's fine but we don't have to prevent people from doing it as an extension. Also, I don't think the fact that one would want to extend or replace the events table or the default editor is intrinsically related to the fact that one uses a native parser. In any case, the discussion of whether or not the extensions are useful and if they should be deprecated is out of the scope of this patch and would be best left out IMO."
42387,1,Patch Set 2:> Then I'd argue we should mark them as deprecated.We can make a patch to deprecate them first and remove it from the doc. In a separate patch.(reposted because Gerrit parsed it in a weird way)
42392,0,Change has been successfully cherry-picked as 66b734ddb16edc2dbd8748d8f1da882b89f3b854
42394,0,Change has been successfully cherry-picked as 0d717cee34e49a65b1d1d3c360f2e40875d1ab12
42397,0,Change has been successfully cherry-picked as b5d1ea36f5c06722c8d623bd756d2478b1e9ff2c
42403,0,Change has been successfully cherry-picked as 44696ae2198c6506f7bd515b06233ff252f52c99
42406,0,Change has been successfully merged into the git repository.
42408,0,Change has been successfully merged into the git repository.
42409,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4517/ : UNSTABLE
42415,0,Change has been successfully cherry-picked as 14ab36417799fe5557d51c5971443d107a7558e8
42418,0,Change has been successfully cherry-picked as 7a1c6e71ecf94a6d9c6f640873623e5e23022ed9
42425,0,"Patch Set 2:I would have thought that we have designed the framework to support events without timestamps. However, 1) there are a lot of places where it is already assumed non-null that would throw a NullPointerException, 2) even custom parsers where timestamp is optional use TmfTimestamp.ZERO if none are defined.So perhaps we can make the jump to non-null timestamps. However, I would prefer if the default was ZERO instead of BIG_BANG, because the latter creates a odd value when represented as a string.Alternatively, perhaps even better, we could create a NULL constant that overloads toString() to return an empty string (and can't be normalized/offset?).Maybe we should revive Matthew's patch that creates special classes for these timestamp constants. https://git.eclipse.org/r/24880"
42426,1,"Patch Set 2:Seeing the code, indeed we could still support null value for timestamp at constructor (that would make this patch much smaller), but use TmfTimestamp.ZERO (or TmfTimestamp.NULL) for the @NonNull field. I didn't see the ZERO, alphabetical order made it very low in my autocomplete ;-), but it makes more sense than BIG_BANG."
42431,0,Change has been successfully cherry-picked as cbf0057c0f380c065e97f96d9ad8c8d6394c7039
42440,0,"Patch Set 2:> Hi Genevieve. I just want to let you know that I am reviewing your chain of patches next.Thanks Marc-Andr├®. You can review the first 6 patches of the chain (the ones before the new plugins are added). I already have a newer version of those that fixes a few bugs and issues, but I'll wait for a few of the first ones to be in before re-pushing those."
42445,0,Change has been successfully cherry-picked as 5dca27ae670b302372f0e8c052b91294ecc86354
42450,0,Change has been successfully cherry-picked as 25af0e4c391585e805ee2fbb386a3f1459f6ff22
42456,0,Change has been successfully merged into the git repository.
42458,0,"Patch Set 2:(2 comments)Two minor formatting issues, other this is good to go."
42462,0,Change has been successfully merged into the git repository.
42466,0,Change has been successfully cherry-picked as e740b3f0a93a6b236643a4706633e3473dfdcdd6
42471,0,Change has been successfully cherry-picked as e5ecc9ace4ceca32d658e69d56e8936a5be93fda
42476,0,Change has been successfully cherry-picked as 318c06c9f03a9e7e76e6344ef5c546efacd8fd51
42483,0,Change has been successfully cherry-picked as 7886dd5660aa81826f6e62911e2021c03f4117e0
42492,0,Change has been successfully merged into the git repository.
42496,0,Change has been successfully merged into the git repository.
42502,1,Patch Set 3: Verified+1 Code-Review+2> Uploaded patch set 3.Cherry pick to master to remove the (useless) dependency to https://git.eclipse.org/r/#/c/39389/
42503,0,Change has been successfully merged into the git repository.
42506,0,Change has been successfully merged into the git repository.
42509,0,Change has been successfully merged into the git repository.
42512,0,Change has been successfully merged into the git repository.
42518,0,Change has been successfully merged into the git repository.
42521,0,"Patch Set 4:Looks much better, thanks.One thing: I haven't yet time to load this into the IDE, but can you please check if the modified git plugin works fine with C++ IDE https://eclipse.org/downloads/packages/eclipse-ide-cc-developers/lunasr1a or PHP IDE https://eclipse.org/downloads/packages/eclipse-php-developers/lunasr1a ?Can you please attach screenshots to the bug where one can see *where* in the preferences one can find or configure new template variables and how it looks like in the editor afterwards? This helps to understand what we are going to deliver with this change and can be reused for N&N page. It is all about ""better marketing"" of your change :-)"
42523,0,"Patch Set 4:> Looks much better, thanks. >  > One thing: I haven't yet time to load this into the IDE, but can > you please check if the modified git plugin works fine with C++ IDE > https://eclipse.org/downloads/packages/eclipse-ide-cc-developers/lunasr1a > or PHP IDE https://eclipse.org/downloads/packages/eclipse-php-developers/lunasr1a > ?This change does not appear to cause any issues with C++ or PHP IDEs. Please note however this change only adds template variables for Java; you can only access git_config() template variables from Java projects. >  > Can you please attach screenshots to the bug where one can see > *where* in the preferences one can find or configure new template > variables and how it looks like in the editor afterwards? This > helps to understand what we are going to deliver with this change > and can be reused for N&N page. It is all about ""better marketing"" > of your change :-)"
42528,0,Patch Set 6:thanks for this nice contribution :-)Could you add a short section to the user guide [1] explaining how this can be used ? We generate the Eclipse documentation from that wiki.[1] https://wiki.eclipse.org/EGit/User_Guide
42529,0,Change has been successfully merged into the git repository.
42533,0,"Patch Set 1: Code-Review-1Adding strong dependency to JDT is a no go IMHO.The problem is that egit can be used in Eclipse installations without JDT.If the dependency is really needed and can't be avoided, it should be made optional and the related code should be written in the way that it can gracefully terminate if JDT classes aren't abailable. It can be done either with try/catch around related code oder with checks before if the related JDT bundle is available in the current system.Small small issues with the patch: - formatting is inconsistent (check especially the spaces around ""if"" conditions) - most external class names are written full qualified in the code which avoids imports and made the code not that readable - commit message format: we use ""Bug: number"" style."
42542,0,Change has been successfully merged into the git repository.
42551,0,Change has been successfully merged into the git repository.
42556,0,Patch Set 1: Code-Review+1It looks safe to include this for cdt_8_6Thanks Marc.
42559,0,Change has been successfully merged into the git repository.
42564,0,Change has been successfully merged into the git repository.
42569,0,Change has been successfully merged into the git repository.
42572,0,Change has been successfully merged into the git repository.
42574,0,"Patch Set 1: Code-Review+1It looks good, I am just wondering if it's worth spending some time merging the two mechanisms used for these labels e.g. debug and thread filter dialog.  So changes for both labels can be triggered from a single location e.g. using a common .properties file"
42575,1,"Patch Set 1: Code-Review+2 Verified+1> It looks good, > I am just wondering if it's worth spending some time merging the > two mechanisms used for these labels e.g. debug and thread filter > dialog. > So changes for both labels can be triggered from a single location > e.g. using a common .properties fileYes, that would be better if possible.  I wanted to have this in the 8.6 branch though, so we can start with this simple solution.Do you agree to put this in cdt_8_6?  I don't believe there is any part of the change that can introduce a new bug compared to the previous behaviour."
42576,0,Change has been successfully merged into the git repository.
42581,0,Change has been successfully merged into the git repository.
42584,0,Change has been successfully merged into the git repository.
42587,0,Change has been successfully merged into the git repository.
42600,0,Change has been successfully merged into the git repository.
42605,0,Change has been successfully merged into the git repository.
42609,0,Change has been successfully cherry-picked as 39b82fd016ce6cc545e4819f002de37df46c8655
42611,0,Change has been successfully merged into the git repository.
42614,0,Change has been successfully merged into the git repository.
42617,0,Change has been successfully merged into the git repository.
42620,0,Change has been successfully merged into the git repository.
42624,0,Change has been successfully merged into the git repository.
42626,0,Change has been successfully merged into the git repository.
42630,0,Change has been successfully merged into the git repository.
42636,0,Change has been successfully merged into the git repository.
42639,0,Change has been successfully merged into the git repository.
42642,0,Change has been successfully merged into the git repository.
42645,0,Change has been successfully merged into the git repository.
42648,0,Change has been successfully merged into the git repository.
42650,1,"Patch Set 2:The bug is fixed but, when you edit and save the property value, the model becomes inconsistent. The parser fails to read the persisted property name."
42651,1,"Patch Set 2: Code-Review+1> The bug is fixed but, when you edit and save the property value, > the model becomes inconsistent. The parser fails to read the > persisted property name.The detected bug comes from EMF layer [1] so I validate the review.[1] : https://bugs.eclipse.org/bugs/show_bug.cgi?id=459697"
42653,0,Change has been successfully merged into the git repository.
42661,1,"Patch Set 1: Code-Review-1The bug is fixed but, when you edit and save the property value, the model becomes inconsistent. The parser fails to read the persisted property name."
42662,1,"Patch Set 1: Code-Review+1> The bug is fixed but, when you edit and save the property value, > the model becomes inconsistent. The parser fails to read the > persisted property name.The detected bug[1] comes from EMF layer so I validate the review.[1]: https://bugs.eclipse.org/bugs/show_bug.cgi?id=459697"
42664,0,Change has been successfully merged into the git repository.
42667,0,Change has been successfully merged into the git repository.
42671,0,Change has been successfully merged into the git repository.
42678,0,Change has been successfully merged into the git repository.
42681,0,Change has been successfully merged into the git repository.
42685,0,Patch Set 2: Code-Review+2 Verified+1Looks good.
42686,0,Change has been successfully merged into the git repository.
42689,0,Change has been successfully merged into the git repository.
42694,0,Change has been successfully pushed.
42695,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3864/ : UNSTABLE
42697,0,Patch Set 4: Code-Review+1super ! (in french) great
42699,0,"Patch Set 4:Hi Christian,I think you can merge it :) !It would be easier for you to merge it before I merge :https://git.eclipse.org/r/#/c/41594/and https://git.eclipse.org/r/#/c/41634/It will also allow me to check the configuration of some project before adding them to the build"
42700,0,Change has been successfully merged into the git repository.
42703,1,"Patch Set 1:(1 comment)(In reply to comment #4)> Patch Set 1:> > (1 comment)> > Hi Christian,> > Something is bothering me : Why duplicate the configuration ? Once in> pluginManagement and another time in plugins ?I don't understand.  What duplication?  The project's configuration in the .settings/, .classpath, etc. is what JDT uses to compile in the workbench.The pluginManagement change that I'm proposing is to instruct Tycho to use the project's settings.> It also seems that the one in plugins is used and not yours:Because now Tycho is configured to use the plugin's own configuration.  Or am I misunderstanding the question?  (probably ;-)> I think we should probably move the configuration from plugins to> pluginManagememnt.Do you mean move it out of the .settings/ and .classpath?  Then JDT won't work.I think projects should manage their own settings is that they may have different compilation requirements, depending on their purpose.  One compiler setting won't suffice for all projects."
42705,0,Patch Set 2:Hah!  Now the build is finding misconfigured source projects.  This is good.
42706,1,"Patch Set 2:So, it turns out that a great many plug-ins lied about their requirement of Java SE 1.6, either in the BREE or in the classpath/compiler settings or both."
42708,0,Patch Set 3: Code-Review+1I think you got my point since you merged the configuration between patch set 1 and 2 :)
42711,0,Patch Set 3:I've uploaded another patch that implements Fran├ºois's suggestions concerning the <pluginManagement>.  It seems to work.  :-)
42716,1,"Patch Set 6: Code-Review+1Sorry, I missed this one at the time"
42718,0,Change has been successfully merged into the git repository.
42722,0,Change has been successfully pushed.
42727,0,"Patch Set 5:(4 comments)Thanks for the review.I just have a question, appended to one of your comment."
42737,0,Change has been successfully merged into the git repository.
42743,0,Change has been successfully pushed.
42745,0,Change has been successfully merged into the git repository.
42749,0,"Patch Set 5:Unit tests seems good, can be review. Thanks"
42754,0,Patch Set 8: Code-Review+1Looks good to me !
42755,0,"Patch Set 8: Code-Review-1Ok, final step :)Can you please rebase the commit to synchronize with the latest changes?Thanks!"
42759,1,"Patch Set 6:Can you please verify Bug 457404 while working on this figure? I'm not sure if it's directly related, but since the figure is being refactored, it might be worse to have a look at that"
42760,1,Patch Set 6:>  it might be worse*worth
42766,0,Change has been successfully cherry-picked as c4bfe69054fa453320fc24079f539d70cfc50357
42768,0,Change has been successfully cherry-picked as 5bfa772fb3fafed4cde9ae01743d8dabf27854ae
42773,0,Change has been successfully cherry-picked as afae19ecd7f58367e9f8bb97c00a225bbc9f8b51
42779,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2144/ : UNSTABLE
42781,0,Change has been successfully cherry-picked as f6695a44140cae860371d43e2538034061660dbc
42787,0,Change has been successfully pushed.
42791,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3832/ : UNSTABLE
42793,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3838/ : UNSTABLE
42795,1,Patch Set 5: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3852/ : UNSTABLE
42797,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3837/ : UNSTABLE
42799,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3850/ : UNSTABLE
42801,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3839/ : UNSTABLE
42803,0,Change has been successfully pushed.
42805,1,Patch Set 6: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3855/ : UNSTABLE
42809,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3849/ : UNSTABLE
42811,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3841/ : UNSTABLE
42815,0,Change has been successfully pushed.
42817,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3851/ : UNSTABLE
42819,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2136/ : UNSTABLE
42823,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2134/ : UNSTABLE
42825,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2138/ : UNSTABLE
42827,0,Change has been successfully cherry-picked as 4181ed6e1ac99fa40d667f192c494d4172cdc3cd
42829,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/534/ : UNSTABLE
42832,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/535/ : UNSTABLE
42835,0,Change has been successfully merged into the git repository.
42841,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4424/ : UNSTABLE
42847,0,Change has been successfully merged into the git repository.
42849,1,Patch Set 2:Are examples part of the SDK? I agree with you about things in the SDK but for the rest we would better be more aggressive.
42850,1,"Patch Set 2:Being ""aggressive"" is usually a bad thing ;-).If we allow users to run the SDK why would should we let them fail when running the examples?We can consider this for Mars+1."
42854,0,Change has been successfully merged into the git repository.
42857,0,Change has been successfully merged into the git repository.
42861,0,Change has been successfully merged into the git repository.
42865,0,Change has been successfully merged into the git repository.
42868,0,Change has been successfully merged into the git repository.
42871,0,Change has been successfully cherry-picked as d303b99cf2377bf166a63f7de9763fd91851ef87
42874,0,Change has been successfully cherry-picked as 73a8eaf84568e01401c48fe867b8c3b271dc92b4
42877,0,Change has been successfully merged into the git repository.
42886,0,Change has been successfully merged into the git repository.
42889,0,Patch Set 1: Code-Review+1Looks like a reasonable expectation. A trace should validate with a confidence higher than zero to be displayed.
42896,1,"Patch Set 4:Bernd, the problem I was having is not related to this patch. It's a problem with handling '~' (home folder)."
42897,0,Change has been successfully cherry-picked as d3c2bf8d8ad992b78eab0922f6ba5e447399007b
42901,0,Change has been successfully cherry-picked as 0fca9497222ac6fd379d1b3cb1ce29f22e7186a1
42903,1,"Patch Set 1:I will propose an equivalent commit to https://git.eclipse.org/r/#/c/41687/ for the stable branch, but only that one. The other changes are more invasive and can remain in master."
42904,0,Change has been successfully cherry-picked as 6a97488c94225d1a923db0d6ab3905b7e56c821a
42906,0,Change has been successfully merged into the git repository.
42916,0,Change has been successfully merged into the git repository.
42921,0,"Patch Set 2: Code-Review+2 Verified+1This change looks fine to me. I believe the text content may be null in cases where there is no content and it has not been updated, or where the log file doesn't exist."
42922,0,Change has been successfully cherry-picked as d1da5b2d0554a775d7119d577b04d4358f74aee3
42931,0,Change has been successfully rebased as d266f8656e76295d170b789011b3c87b1957c87d
42936,0,Change has been successfully cherry-picked as 3a723766250b794122bef138fb2e558184346845
42940,0,Change has been successfully cherry-picked as df854ddb27550ed4c040d5e4b2d978a117db24d9
42943,0,Patch Set 1: Code-Review+1 Verified+1It looks good to me.
42945,0,"Patch Set 3:I showed this to Matthew, and he thought it was nicer to have Instance under Source and also Instance under Target."
42946,0,"Patch Set 3:(4 comments)> I showed this to Matthew, and he thought it was nicer to have Instance under Source and also Instance under Target.I thought it would be desirable to show the whole event data without needing to expand any tree item. But I can put it back."
42953,0,Change has been successfully cherry-picked as 5825a9ad1dc504e369a8f31fd2ef2ca5eeada66e
42961,0,Change has been successfully merged into the git repository.
42965,0,Change has been successfully cherry-picked as cfe2f40c503e7f07db3f205c5e45524d933dee66
42978,1,"Patch Set 1:(3 comments)I'll fixed the compilation error, too. The order of patches doesn't matter anymore"
42988,0,Change has been successfully cherry-picked as c9b31f606321336dcbba0804aef2ab84547781cf
42997,0,Change has been successfully merged into the git repository.
43000,0,Change has been successfully merged into the git repository.
43002,0,"Patch Set 3:> (1 comment) >  > Frank, this looks great!! I just have a couple of nits: >  > * the table should grab vertical space so that all links are > visible without scrolling (currently a vertical scroll bar is shown > if there are 2 links)Sorry this need changes in LayoutHint and AbstractTaskEditorAttributeSection because we only can say single or multiple row but not how many rows > * there is a horizontal scroll bar even when all the links are > small enough to fit without scrollingDone with the next patch set."
43004,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/797/ : UNSTABLE
43007,0,"Patch Set 5:> On my system, it needs about 55 pixels. I think 60 should be enough > to be safe.Does with patch set 5"
43008,0,Patch Set 5: Code-Review+2Nice work!
43009,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/802/ : UNSTABLE
43012,0,Change has been successfully rebased as d09b0012bb7d7665367fd51a0f1bb65c19c644c0
43016,0,"Patch Set 1:(1 comment)Frank, this looks great!! I just have a couple of nits:* the table should grab vertical space so that all links are visible without scrolling (currently a vertical scroll bar is shown if there are 2 links)* there is a horizontal scroll bar even when all the links are small enough to fit without scrolling"
43018,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/799/ : UNSTABLE
43019,0,"Patch Set 4: Code-Review+1(In reply to comment #4)> Patch Set 3:> > > (1 comment)> >> > Frank, this looks great!! I just have a couple of nits:> >> > * the table should grab vertical space so that all links are> > visible without scrolling (currently a vertical scroll bar is shown> > if there are 2 links)> Sorry this need changes in LayoutHint and AbstractTaskEditorAttributeSectionAh, you're right of course. But now that the horizontal scroll bar is gone, there is enough room for two links which is pretty good.I would still like the Remove column to be a bit wider."
43020,0,"Patch Set 4:> (In reply to comment #4)...  > Ah, you're right of course. But now that the horizontal scroll bar > is gone, there is enough room for two links which is pretty good. >  > I would still like the Remove column to be a bit wider.Should I change the widths from 50 to 75?Or do you want an other value?"
43021,0,"Patch Set 4:On my system, it needs about 55 pixels. I think 60 should be enough to be safe."
43023,0,Change has been successfully merged into the git repository.
43032,0,Change has been successfully merged into the git repository.
43035,0,Change has been successfully merged into the git repository.
43038,0,Change has been successfully cherry-picked as 74fd68d5efd17f4912a0473ecc44c52ad9c89b3d
43049,0,Change has been successfully merged into the git repository.
43054,0,Change has been successfully merged into the git repository.
43060,0,Change has been successfully merged into the git repository.
43062,0,Patch Set 2:It looks good. Could you rebase it to Alex's multiple patch sets related to User Guide updates?
43067,0,Patch Set 4:Thank you!
43068,0,Change has been successfully cherry-picked as 61fd6eaefa243e61f552694bdea6f47f7b74ed28
43072,1,"Patch Set 3: -Code-Reviewgah, ""mv"" fail... so just replacing the ""linuxtools"" part of the path with ""tracecompass"" would be fine?"
43078,0,Change has been successfully cherry-picked as f20af9d97611a454ea6f251de0f848b0347555cb
43083,0,Change has been successfully cherry-picked as f23e1d8cfd9384e6137e0584f4c8255112a709c0
43086,0,Change has been successfully cherry-picked as 6c230e507c94e612a4b83e56a29f6225cdd04340
43092,0,Change has been successfully merged into the git repository.
43095,0,Patch Set 1:Looks great.
43097,0,Change has been successfully cherry-picked as eddb25602ef914978d11a273ec8ee5954bfab657
43101,0,Change has been successfully rebased as d3718b536fb193fe0ba2b9c1d02d6f4e84e0f366
43105,0,Change has been successfully merged into the git repository.
43108,0,Patch Set 1: Code-Review+1 Verified+1I tested it with a local docDestination and it worked fine. We just have to remember to create the relevant sub-directories at docDestination beforehand.
43110,0,Change has been successfully cherry-picked as 963f45d55bf2464171fdfcaf98d156e85b406416
43113,0,"Patch Set 1: Code-Review+2I did not put a TOC for the pcap and RCP guides on purpose, because they are so short and fit on one page.Good remark though, it pointed out that the RCP guide gets split over many pages, where it should all be in one instead, since it's so short. We should be heading ""h2"" headings instead of h1's. I'll fix that in a follow-up patch."
43114,0,Change has been successfully cherry-picked as 39191d766d9f673e5951e82b63c7a97fb570479e
43118,0,Change has been successfully cherry-picked as 502334c40d6ef761b07373762fb9505823647e86
43121,0,Patch Set 2: Code-Review+2 Verified+1Thanks for the quick review!
43122,0,Change has been successfully cherry-picked as 8995fed0a650514247e86b364a736d84f8593add
43131,0,Change has been successfully cherry-picked as e883975e22f93e805ffc55e709d3be9f90685fa4
43136,0,Change has been successfully cherry-picked as ec4e56da4920cac7e59bf8b3e21e40e708f025ee
43145,0,"Patch Set 2:(3 comments)I can accept some complexification (""cruftification""!) of the EventAspect class, but this imo is a bit too much. Especially considering the sole point of all this is for the Filter View."
43151,0,"Patch Set 1:It would be good to add some unit tests for TmfEventFieldAspect class (especially forField(), createAspect()). Also, having some tests for the filter nodes around TmfEventFieldAspects and subfields would be good. A separate patch for that is fine."
43154,0,"Patch Set 5: Code-Review-1(2 comments)Now I like this better :)We were really talking about two different things, one being the whole ""content"" element of ITmfEvent, and the other being an individual field from the content. It makes sense to have two separate classes.So we're past the design comments, now on to the real comments ;)The class names of the two aspects are a bit confusing. I'd say the content aspect (the one now used in the BASE_ASPECTS) should be called TmfContentAspect (or TmfEventContentAspect?) And TmfEventFieldAspect should remain the ""singular"" one.The contents of https://git.eclipse.org/r/#/c/38512/6 are touched again by this patch. They could be squashed together, or maybe put that one after this patch here, since it will add the code directly in the correct class.Changing some inner classes to constructor calls is unrelated to the rest of the patch. I do agree it is better, but it adds noise to this patch, should be done separately."
43156,0,"Patch Set 5:Sorry, missed the global comments.> The class names of the two aspects are a bit confusing. I'd say the content aspect (the one now used in the BASE_ASPECTS) should be called TmfContentAspect (or TmfEventContentAspect?) And TmfEventFieldAspect should remain the ""singular"" one.TmfEventFieldAspect is a generic aspect that resolves to any event member that is an ITmfEventField. Any aspect that is an instance of this class will have special UI in the filter viewer where an optional (sub)field can be specified. We could make a specific subclass for the event.getContent() but I don't think it would add any value.TmfContentFieldAspect is specific to the event.getContent() (hence 'Content' in the name). But since it is not an instanceof TmfEventFieldAspect, it does not have the special UI in the filter viewer, which is what we want (there are not subfields in the BTF and GDB aspects that use it).> They could be squashed together, or maybe put that one after this patch hereDo you feel strongly about this? It would make the review process yet longer by breaking the dependency chain.> Changing some inner classes to constructor calls is unrelated to the rest of the patch. I do agree it is better, but it adds noise to this patch, should be done separately.The aspects needed to be changed because they can no longer be subclass of TmfEventFieldAspect (to prevent the special UI). I thought it better to update the aspects only once."
43158,1,"Patch Set 5:(2 comments)> (about class names)I was just suggesting swapping the two. Keep the existing TmfEventFieldAspect the ""simple"" one. That would avoid having to touch the existing implementations. One such aspect refers to one field, ""field aspect"" sounds like the correct name to me. While ""content field"" sounds more like a compound field.>> They could be squashed together> Do you feel strongly about this?No not really. But it's trivial to do with git rebase --interactive. Does EGit not support this? ;)"
43162,1,Patch Set 3:Hi Alex and PatrickPlease come to an agreement. This patch blocks several other patches and multiple bug fixes. Right now the FilterView is not working. I don't want to release Trace Compass 0.1.0 with a non-functional FilterView which is one of the core features of Trace Compass./Bernd/Bernd
43163,1,"Patch Set 3: Code-Review-1Is *this* patch *really* ""blocking other patches and multiple bug fixes""? Or is it just due to some strange refusal of merging anything in this branch without it?For instance, the *8* patches before this one were reviewed and approved previously, why were they not merged already?The Filter View was broken since before the event-aspect change. I don't understand how it HAS to completely take over the ITmfEventFieldAspect to work again. Can't it keep using the ITmfEventField API if it likes it so much?If it wants to use the aspect API, then it should fold to its known guidelines, or ""by-design limitations to keep complexity in check"". Not the other way around. As in, no sub-fields, no ITmfEventField.ROOT_FIELD craziness, and other things that make a simple Object getter much more complicated than it should be."
43164,1,"Patch Set 3:We get that you're not a fan of ITmfEventField, but it's there. CTF uses it, PCAP uses it, the Properties view for events uses it. It can't be removed without providing an alternative way to generically support an hierarchy of fields and sub-fields.This patch allows any aspect to support an hierarchy. But considering only the existing case of the event contents, the patch allows the field filter to be specified directly on the visible 'Contents' aspect instead of exposing a generic 'Event field' aspect to the user, who doesn't have to guess that the field applies to and only to the internal event content. It is an improvement for the user experience.As for migrating the filter viewer to event aspects, that is a huge improvement as it removes the old ugly solution that used special field id strings for base event members, and required a trace event type to provide its possible fields in a dummy root event field given by the empty event type constructor. It also allows for filters on any event member that is neither a base event member or a sub-field of the event content member. Keeping the filter viewer based on event fields is not a sound alternative.I think the solution is neither crazy nor overly complex. I find it quite elegant actually. You want an event field aspect based on any ITmfEventField, you provide a way to access that ITmfEventField, and an optional field or sub-field string."
43165,1,"Patch Set 3:> We get that you're not a fan of ITmfEventField, but it's there.> CTF uses it, PCAP uses it, the Properties view for events uses it.Yet, none of these required adding a bunch of unintuitive and seemingly-redundant methods to TmfEventFieldAspect (getField(), forField(), when we have a resolve() already; createAspect() when we have a public constructor already).I do think ITmfEventField in general is redundant with the aspect API, but you are right that right now ""it's there"", and that it's not going away anytime soon. But that doesn't mean we have to replicate all its APIs and functionalities in the TmfEventFieldAspect class. An aspect is supposed to be a singular ""quanta"" of information from an event. A TmfEventFieldAspect is supposed to represent a single field from a event. Not a way to access all the fields of an event, that's what ITmfEvent#getContent is for.That being said, I don't think it's helpful to keep arguing our little points here. It is merely a symptom of a bigger ""design clash"" underneath. We should have a big discussion with everyone and decide where we want to go with the event fields, the event aspects, the filters, etc.For now, I would suggest that the rest of the branch goes in, and that a less invasive solution is investigated to retrieve event fields."
43168,0,Change has been successfully cherry-picked as 40dfafb347ccadbb8d2de8cf2d2f06095f26dbd3
43171,0,Change has been successfully cherry-picked as 97de0bcaa0d35de4159365c6da140cfe303990ff
43173,0,"Patch Set 1: Code-Review-1(4 comments)Good change overall, we could simplify a couple things even further."
43178,0,Change has been successfully merged into the git repository.
43194,0,Change has been successfully cherry-picked as ebc1e9923a17dc2147135661985664243d6ccec0
43199,0,Change has been successfully cherry-picked as d3c3d0e76a12609317ec503f1521b3f9562898f7
43221,0,Change has been successfully cherry-picked as 3bd950a7b64ec5bb51a893650bbf6f133c42f9ab
43226,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2052/ : UNSTABLE
43229,0,Change has been successfully merged into the git repository.
43230,1,Patch Set 7:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2130/ : UNSTABLE
43235,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2069/ : UNSTABLE
43241,0,Change has been successfully merged into the git repository.
43251,0,Change has been successfully rebased as a96fcd5a37f2eb909aeb236c3345798cd196a768
43255,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2059/ : UNSTABLE
43267,0,Change has been successfully rebased as 3cf930056601fadf3cf8ec9f8ab84270bd580cb8
43273,0,Change has been successfully rebased as 1f1b38b639e97131888153460cdf14c9e72b7732
43278,0,Change has been successfully cherry-picked as ec34bf4809e46125d2df87c88ebd688d812429ae
43301,0,Change has been successfully cherry-picked as 0214cc078f6d97471db8eb802ac6101e77021f86
43321,1,"Patch Set 4:(1 comment)Sorry, I don't agree with the separator handling. We should use a utility for that. Otherwise we have the same issues we once had before we had the TmfTraceType utility."
43328,0,Change has been successfully cherry-picked as 2b0005f0afb2933ab786f3aa7818ef23219b3cf2
43336,0,Change has been successfully rebased as 9ca379e67fba17f0c948f5fb85a0dd57184bfd9f
43345,0,Change has been successfully merged into the git repository.
43351,0,"Patch Set 9: Code-Review+1 Verified+1(6 comments)Some of the copied files needs an update to the copyright header to state the correct initial contributor and copyright year. Except from that, looks good to me. Feel free to merge it to master."
43357,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3670/ : UNSTABLE
43361,0,Change has been successfully merged into the git repository.
43362,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3736/ : UNSTABLE
43363,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3741/ : UNSTABLE
43367,0,Change has been successfully merged into the git repository.
43370,0,"Patch Set 1:Hi Simon,Here are my comments:* please do a search for ""an textpath"" and change it to ""a textpath""Thanks!Alex"
43374,0,Change has been successfully merged into the git repository.
43380,0,Change has been successfully merged into the git repository.
43382,0,"Patch Set 1:Incorrectly the Commit Message says ""Non sprint task"".This is a sprint task!"
43384,0,"Patch Set 2: Code-Review-1Hi Simon,I'd like to see the following changes made:* In the menu entries, you have used the text from the context menus, which isn't correct. For the actions check enablement of menupath (indexpath and textpath), please use the menu action descriptions.* The description of check selection of tab by index say that it checks the enablement, not the selectionThanks!Alex"
43386,0,Change has been successfully cherry-picked as 94338d9ad40d5b1bdcae1963f3ef7d2a490188d5
43388,0,Change has been successfully cherry-picked as b64d730c068bd611e10a31f66dd71fe6dc64c2cc
43393,0,Change has been successfully cherry-picked as 23118577b236d53c2ff8c3f70822abcaafad918e
43395,0,Change has been successfully merged into the git repository.
43396,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/327/ : UNSTABLE
43407,0,Change has been successfully cherry-picked as b0201295edfcd49ba41e1f63b37e88e957fb6f64
43412,0,Change has been successfully merged into the git repository.
43416,0,Change has been successfully merged into the git repository.
43418,0,Change has been successfully merged into the git repository.
43423,1,Patch Set 1:Quick and dirty fix.
43424,0,Patch Set 1:I was impressed with the elegance of the solution... :-)
43427,0,Change has been successfully merged into the git repository.
43430,0,Change has been successfully merged into the git repository.
43433,0,Change has been successfully merged into the git repository.
43435,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2077/ : UNSTABLE
43437,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2078/ : UNSTABLE
43439,0,Change has been successfully cherry-picked as bd3f3612081a59b7fc69fa4b28d8fbd806e689ff
43442,0,Change has been successfully merged into the git repository.
43446,0,Change has been successfully merged into the git repository.
43449,0,Change has been successfully merged into the git repository.
43453,0,Change has been successfully merged into the git repository.
43455,0,Patch Set 2: Code-Review-1The change looks good so far.org.eclipse.team.tests.cvs.core plug-in has some references to the old plug-in. We should remove them too.And also the one in /org.eclipse.team.core/component.xml
43456,1,"Patch Set 2:For this bug I just wanted to stop building the bundle and then remove all references via a separate bug, but if you prefer, we can do everything at one shot."
43458,1,Patch Set 1:The build failed because org.eclipse.team.cvs.ssh2 has an optional dependency on org.eclipse.team.cvs.ssh and it seems Tycho does not like optional dependencies in Require-Bundle. Will try again with removed optional dependency because it looks redundant.
43461,0,Change has been successfully merged into the git repository.
43464,0,Change has been successfully merged into the git repository.
43466,1,"Patch Set 1:Important note: manually disposing TreeNodes often causes hard-to-track NullPointerExceptions to occur, so I opted for a design that lets the garbage collector take care of discarded TreeNodes (which seems to work fine). So if you are wondering why I removed the calls to TreeNode#dispose(), that's why."
43468,0,Change has been successfully cherry-picked as a9b1446426b640054fc4e27681f1e233aa8bddf7
43470,0,"Patch Set 1: Code-Review-1Hi Simon,* please do a search for ""canbe"" and replace it with ""can be""* in the section on external input text, please make the heading ""Native Dialogs in SWT and RCP AUT's"" bold* Please remove any --> [*] references to the user manual and refer only textually to the user manualThanks!Alex"
43473,0,Change has been successfully merged into the git repository.
43475,1,"Patch Set 1: Code-Review-1Thanks for the patch Simon. I'm going to look at this from a documentation perspective. For validation we'll add a story later to validate the reference manual before we use it productively. There are some things I'd like to have changed:* Anywhere the user manual is referenced, please remove the --> [*]  and just refer to the user manual textually (example: in activate application)* The ""Expand Node By Textpath"" and ""Expand Node by Indexpath"" action descriptions (tree) seem to be the descriptions for drag, not for expand.* Please do a search for the string ""muxt"" and correct it to ""must"" where you find it* Search for the phrase ""an textpath"" and correct it to ""a textpath"" where you find it."
43477,0,Patch Set 2: Verified+1 Code-Review+2Thanks Simon!
43478,0,Change has been successfully merged into the git repository.
43481,0,Change has been successfully merged into the git repository.
43484,0,Change has been successfully merged into the git repository.
43487,0,Change has been successfully merged into the git repository.
43488,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3735/ : UNSTABLE
43495,0,Change has been successfully merged into the git repository.
43498,0,Change has been successfully merged into the git repository.
43501,1,"Patch Set 2: Code-Review+1To me the solution might no be perfect (change of behavior in case of element creation) but at least it solves the unwanted blocking behavior: the diagrams are no more invalid and can me managed and used again, even if the usage change and can be misleading."
43503,0,Change has been successfully merged into the git repository.
43506,1,"Patch Set 1:Probably, but we don't have any document listing what was allowed in Kepler (and no more in luna).This migration is a bit specific, since we have to add an owning rules in the default viewpoint. The default viewpoint is restrictive for the ownership.Do we want to keep that? Or change to allow all sort of classifier ? => I personally will prefer to open everything, especially for classifier (Ref to the ""Neighborhood Diagrams"" concept, having the default class diagram created in a class with nearestpackage as root. See Bug 439872)"
43509,0,Change has been successfully merged into the git repository.
43512,0,Change has been successfully merged into the git repository.
43514,0,Change has been successfully merged into the git repository.
43520,0,Change has been successfully merged into the git repository.
43525,0,Change has been successfully merged into the git repository.
43527,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/574/ : UNSTABLE
43529,0,Change has been successfully merged into the git repository.
43532,0,Change has been successfully merged into the git repository.
43537,0,Change has been successfully rebased as 8581d940c9d89088455ac601c9bf0d11e5b457e9
43545,0,Change has been successfully cherry-picked as 3d04a31445dd219f646c1387c461e0b7e81becbd
43552,0,Change has been successfully merged into the git repository.
43558,0,Change has been successfully merged into the git repository.
43561,0,Change has been successfully merged into the git repository.
43565,0,Change has been successfully cherry-picked as 6984ab7fd29b127b5df78879d34def58a2fcdf09
43568,0,Change has been successfully merged into the git repository.
43571,0,Change has been successfully cherry-picked as 38d284ebcd566536cb3ffda11f4af5b280a0b49e
43581,0,"Patch Set 1:That would require that tmf.ui depend on pcap.core.I wasn't aware that we want to move away from sub-fields and I don't see the benefit of discouraging the extensions from using them if they need to, or want to.It's part of the ITmfEventField interface so I think it's desirable for the event field aspect to support it."
43582,1,"Patch Set 1:I wasn't aware that sub-fields are supposed to be removed. IMHO, they can be useful to have them in the base implementation.In any case, the FilterViewer is broken and filtering is not working either. Patrick patches fix this. I'd like to get it fix in sooner than later. Alex if you could please could lift the -1 so that we can go forward with the review. Any architectural changes can be discussed and implemented afterwards if needed."
43584,0,"Patch Set 1:I think the event content and the event field aspect are useful as they allow for searchable fields that are determined only by the trace data and not its definition. For example it allows us to create a numerical compare filter on a specific CTF event field.If subfields are useful for PCAP, one of the few known extensions, it's not unreasonable to think that they can be useful for any of the unknown extensions.The event field aspect is a special case in the filter viewer, it is the only aspect that requires an additional user input (the field string). It's nice to be able to provide out-of-the-box support for subfields with that aspect. It wouldn't be as easy to have the extensions need to override or extend the filter viewer UI for special-case aspects."
43585,1,"Patch Set 1:Now that we have event aspects, the whole ITmfEventField interface is redundant. All queries for event information can go through aspects now. Look at BtfEventType#generateContent. Or the unholy mess that is CtfTmfEventField. Those just cram the event information into the ITmfEventField format, and they don't even have to anymore.That aside, we won't realistically get rid of ITmfEventField any time soon. But I really think this is something we should strive to.I'm also a bit skeptical about the usefulness of typing manually field paths with slashes. How would the user know which fields actually exist? Is it useful to someone other than those who wrote the parser? A big advantage of aspects is discoverability, it can tell the user which information exists for an event. Couldn't we ""unroll"" all the subfields and display a list to the user?"
43586,1,"Patch Set 1:> Now that we have event aspects, the whole ITmfEventField interface is redundant. All queries for event information can go through aspects now. Look at BtfEventType#generateContent. Or the unholy mess that is CtfTmfEventField. Those just cram the event information into the ITmfEventField format, and they don't even have to anymore.At the risk of repeating myself, I think the event content and the event field aspect are useful as they allow for searchable fields that are determined only by the trace data and not its definition. For example it allows us to create a numerical compare filter on a specific CTF event field.> How would the user know which fields actually exist?For CTF the user can look at the Content column, for example field1=[sub1=1, sub2=2].For PCAP and CTF the user can look at the tree structure of the event content in the Properties view.> Couldn't we ""unroll"" all the subfields and display a list to the user?Not in the filter viewer as this depends on the trace event's data. The user can create the filter without any trace being selected."
43588,1,"Patch Set 3:> What I find restrictive about it is that it can only be used for fields that are stored in the event content. I'll update it so that it can be extended to use any other member of the event (that is an ITmfEventField). That will allow for more than one column with fields, without needing them both to be necessarily stored as their own roots in the event content.Wait... that last sentence made no sense ;) Of course we can already have more than one aspect that is made of fields and that is not stored in the event content. The change is rather to facilitate filtering on a specific field/sub-field of those aspects."
43592,0,"Patch Set 2:(1 comment)> ... the trace data and not its definitionYou are still thinking of ""fields"" and ""aspects"" as two different layers. They can be the same. We are not poking at bits directly here, everything is a ""definition"". It's just a matter of ""what we've implemented to put stuff in ITmfEventField's"" vs ""what we've implemented to put stuff in event aspects"".We could (and eventually should) create aspects programmatically for each field found in a CTF event. This will avoid for example having CTF fields and CTF contexts be both considered as the same thing, while they are slightly different (the context aspects can be defined per channel/trace, the field aspects per event type, etc.)> The user can create the filter without any trace being selected.What is the point of that?? And how can the user create filters with no trace opened if he has to go look for field names in another view, which will be empty because no trace is opened?We are building a graphical tool, we're supposed to make the user's life easier. Like, reading what's in the trace, and offering what can be selected. Not having to have the user read field names in another view then re-type them manually elsewhere. A prepopulated drop-down list would be much more useful than an empty text box here.Anyways, if you really feel that typing subfield names manually is such a desirable feature, I won't nak this. (One small comment though.) In a sense TmfEventFieldAspect is just a shim between the new aspect API and ITmfEventField. If we ever get rid of the latter, then TmfEventFieldAspect will be unneeded too. So it doesn't really matter what bloat gets put in there in the meantime."
43593,1,"Patch Set 2:(1 comment)> We could (and eventually should) create aspects programmatically for each field found in a CTF event.But we have! It's called TmfEventFieldAspect ;)> What is the point of that?? And how can the user create filters with no trace opened if he has to go look for field names in another view, which will be empty because no trace is opened?Well you could create a filter monitoring for a certain critical alarm detail without any trace where the alarm has ever happened.> In a sense TmfEventFieldAspect is just a shim between the new aspect API and ITmfEventField.I think it's a useful framework support for any aspect that is made of fields and sub-fields.What I find restrictive about it is that it can only be used for fields that are stored in the event content. I'll update it so that it can be extended to use any other member of the event (that is an ITmfEventField). That will allow for more than one column with fields, without needing them both to be necessarily stored as their own roots in the event content."
43598,0,Change has been successfully cherry-picked as 11124ee6204a151d42fcbb91f8a331e02ae65105
43604,0,"Patch Set 5: Code-Review-2filterview tests needs to go in first (otherwise, looks good)"
43609,0,Change has been successfully cherry-picked as a5c211e197e2d41f8e2c8ac5ab6c02c479292ce0
43623,0,Change has been successfully cherry-picked as d87a963389d791fc07365411a6c971ff5d7e8d14
43628,0,Change has been successfully cherry-picked as 2470d687aba656d3b98ffeb53ed45c8b874d2ef0
43640,0,Change has been successfully cherry-picked as 1051a3d6dfcae7479e96676e495e1cfa077b6591
43642,0,Patch Set 1:This looks good to me David.  I'm not sure why we need both endDocument and flush().  When would you prefer to use flush()?
43645,0,"Patch Set 2:>  I'm not sure why we need both endDocument and flush(). When would you prefer to use flush()?endDocument() with some document types often corresponds to some markup (e.g. HTML you get </body></html>) whereas sometimes it's useful to emit HTML as a document fragment (i.e. without the document-related tags such as body and html).  In those cases you wouldn't cal startDocument/endDocument, however since some builder implementations are stageful, a call to flush is needed to flush the content if endDocument is not called."
43647,0,Change has been successfully merged into the git repository.
43650,0,Change has been successfully merged into the git repository.
43656,0,Change has been successfully merged into the git repository.
43658,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/796/ : UNSTABLE
43662,0,Change has been successfully rebased as 95b90c8d110129fb6e422ac6a79d2ec75b6bb325
43668,0,Change has been successfully cherry-picked as a7d1bf98cacf1f979f1cdc5d9920fd32801e585f
43672,0,Change has been successfully merged into the git repository.
43681,0,Change has been successfully merged into the git repository.
43684,0,Change has been successfully merged into the git repository.
43686,0,Change has been successfully merged into the git repository.
43690,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3638/ : UNSTABLE
43692,0,Change has been successfully pushed.
43694,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3578/ : UNSTABLE
43698,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3579/ : UNSTABLE
43701,0,Change has been successfully pushed.
43704,1,"Patch Set 1:""1) Do you know if it's possible to configure a the runtime instance to use a specific default perspective e.g. C++ ?, the one used today is Resource""Always forcing the same perspective is easy (-perspective) but setting the *default* perspective would be harder. The only way I know is with plugin_customization.ini. We would need to add one to the repo and use the -pluginCustomization argument to point to it (using variables?).""2) When I restart the Eclipse instance I am getting Null pointer exception which does not seem to affect the Eclipse functionality""I saw this too, I'll report it."
43706,0,Patch Set 1: Verified+1 Code-Review+2Thanks for the review!
43708,0,Change has been successfully rebased as e3830010d7131c84c6e08b409f03e7b8870a57f8
43711,0,Change has been successfully merged into the git repository.
43719,0,Patch Set 5: Verified+1 Code-Review+1I'm fine with it although e(fx)clipse users will probably not consume this - e4+swt devs are the target audience!
43722,1,"Patch Set 2:Lets start this with the trivial things, please remove the whitespace."
43724,1,Patch Set 3:I'm not able to remove the last two trailing whitespaces as they are added again on save. And I don't find the setting to avoid this in my current Luna SR1.
43726,1,Patch Set 4:Thanks Dirk. I change the project setup via Bug 449089 to avoid whitespace issues in the future.
43730,1,"Patch Set 6:Adding Dani, I vaguely remember that he said on EclipseCon Europe that such a caching approach had in the past an issue, but I might be wrong here. If I do not hear from Dani, I assume it is ok to merge this."
43731,1,"Patch Set 6:IIRC Dani was talking about the whole new translation mechanism, not just the message registry. That was the reason why the static mechanism was chosen back in the days instead of the instance approach.We will need to test the performance on the IDE when trying to using the new translation mechanism in the platform itself."
43734,0,"Patch Set 9: Code-Review+2 Verified+1Thanks Dirk, I finally managed to get your Github exmample to work. Change looks good for project < Java 8."
43735,0,Change has been successfully merged into the git repository.
43741,1,Patch Set 6:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3645/ : UNSTABLE
43743,0,Change has been successfully merged into the git repository.
43753,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3456/ : UNSTABLE
43756,0,Change has been successfully merged into the git repository.
43758,0,Change has been successfully merged into the git repository.
43760,0,Change has been successfully merged into the git repository.
43764,0,Patch Set 1: Verified+1 Code-Review+2Thank you!
43765,0,Change has been successfully merged into the git repository.
43768,0,Change has been successfully merged into the git repository.
43771,0,"Patch Set 2: Code-Review-1(1 comment)Respect the value of the ""loadOnDemand"" boolean."
43777,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3577/ : UNSTABLE
43780,0,Change has been successfully pushed.
43783,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2016/ : UNSTABLE
43786,0,Change has been successfully rebased as 5a7e047ab5468154189e936f0929cfb9382b3297
43788,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2008/ : UNSTABLE
43789,0,"Patch Set 2: Code-Review-1(5 comments)Interesting improvement.  It is hard to be clear on what is happening since it is in the error path, which also means I can't really test it.I'll rely on your results but I put some points on things that may need to be changed."
43796,0,Change has been successfully merged into the git repository.
43798,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3575/ : UNSTABLE
43800,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3595/ : UNSTABLE
43803,0,Change has been successfully pushed.
43805,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2018/ : UNSTABLE
43808,0,Change has been successfully rebased as b7829381f22eed7b334f45d56611d5e8d31ca827
43811,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2022/ : UNSTABLE
43814,0,Change has been successfully rebased as b44dbb9ea584c8be6894ee3d2e63a31bd5c5678b
43820,0,Change has been successfully merged into the git repository.
43824,0,Change has been successfully pushed.
43826,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3596/ : UNSTABLE
43828,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3576/ : UNSTABLE
43832,0,Change has been successfully merged into the git repository.
43835,0,Change has been successfully merged into the git repository.
43838,0,"Patch Set 4: Code-Review+2 Verified+1Looks fine Denis, thanks a bunch. I think we should also remove the related constants in IPreferences. I comment in the bug."
43839,0,Change has been successfully merged into the git repository.
43841,0,"Patch Set 2:(1 comment)Thanks looks good, but I think can also remove the constants."
43847,0,Change has been successfully rebased as 674e89ad8f5fbf6280a3a18a916a8a3490a2fa33
43848,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2060/ : UNSTABLE
43853,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2014/ : UNSTABLE
43854,0,"Patch Set 2: Verified+1(2 comments)Looks pretty good !A couple of minor inline comments,"
43855,0,Patch Set 2:(2 comments)Thanks for the reviews.
43859,1,"Patch Set 2: Code-Review-1Some IOExceptions are transient; some aren't. In particular, PackInvalidException (which is an IOException) may be thrown when a pack is present but contains unrecoverably corrupt data.Removing the pack from the list is an attempt to recover from such a corruption. If we no longer do that, how do we recover a corrupt repository? Will the corrupt pack get dropped on GC?Would it make sense to single out a few subclasses of IOException as indicating known-permanent corruption, and treating all others as potentially transient?"
43861,1,"Patch Set 3:I did a couple of experiments manipulating pack files and checked how JGit behaves with this patch when accessing affected packs.manually truncated pack file:Pack file /Users/d029788/tmp/jgit4/.git/objects/pack/pack-ee197cd9ab8256d59d7147f3c0bd5949283c97ba.pack is corruptorg.eclipse.jgit.errors.PackInvalidException: Pack file invalid: /Users/d029788/tmp/jgit4/.git/objects/pack/pack-ee197cd9ab8256d59d7147f3c0bd5949283c97ba.pack  at org.eclipse.jgit.internal.storage.file.PackFile.doOpen(PackFile.java:599)  at org.eclipse.jgit.internal.storage.file.PackFile.beginWindowCache(PackFile.java:583)  at org.eclipse.jgit.internal.storage.file.WindowCache.load(WindowCache.java:284)  at org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(WindowCache.java:368)  at org.eclipse.jgit.internal.storage.file.WindowCache.get(WindowCache.java:179)  at org.eclipse.jgit.internal.storage.file.WindowCursor.pin(WindowCursor.java:354)  at org.eclipse.jgit.internal.storage.file.WindowCursor.copy(WindowCursor.java:226)  at org.eclipse.jgit.internal.storage.file.PackFile.readFully(PackFile.java:556)  at org.eclipse.jgit.internal.storage.file.PackFile.load(PackFile.java:714)  at org.eclipse.jgit.internal.storage.file.PackFile.get(PackFile.java:257)  at org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedObject(ObjectDirectory.java:423)  at org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedFromSelfOrAlternate(ObjectDirectory.java:392)  at org.eclipse.jgit.internal.storage.file.ObjectDirectory.openObject(ObjectDirectory.java:384)  at org.eclipse.jgit.internal.storage.file.WindowCursor.open(WindowCursor.java:145)  at org.eclipse.jgit.lib.ObjectReader.open(ObjectReader.java:229)  at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:840)  at org.eclipse.jgit.revwalk.RevWalk.parseCommit(RevWalk.java:753)  at org.eclipse.jgit.lib.BranchTrackingStatus.of(BranchTrackingStatus.java:93)  at org.eclipse.egit.ui.internal.GitLabels.getStyledLabel(GitLabels.java:107)  at org.eclipse.egit.ui.internal.GitLabels.getStyledLabelExtendedSafe(GitLabels.java:172)  at org.eclipse.egit.ui.internal.repository.RepositoriesViewLabelProvider.getStyledText(RepositoriesViewLabelProvider.java:351)  ...  removed pack file at runtime:ERROR: Exception caught while accessing pack file /Users/d029788/tmp/jgit4/.git/objects/pack/pack-7c55a08a6e437c10ec50169b4b841a175d457ca0.pack, the pack file might be corruptjava.io.EOFException  at java.io.RandomAccessFile.readFully(RandomAccessFile.java:421)  at org.eclipse.jgit.internal.storage.file.PackFile.onOpenPack(PackFile.java:679)  at org.eclipse.jgit.internal.storage.file.PackFile.doOpen(PackFile.java:603)  at org.eclipse.jgit.internal.storage.file.PackFile.beginWindowCache(PackFile.java:583)  at org.eclipse.jgit.internal.storage.file.WindowCache.load(WindowCache.java:284)  at org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(WindowCache.java:368)  at org.eclipse.jgit.internal.storage.file.WindowCache.get(WindowCache.java:179)  at org.eclipse.jgit.internal.storage.file.WindowCursor.pin(WindowCursor.java:354)  at org.eclipse.jgit.internal.storage.file.WindowCursor.copy(WindowCursor.java:226)  at org.eclipse.jgit.internal.storage.file.PackFile.readFully(PackFile.java:556)  at org.eclipse.jgit.internal.storage.file.PackFile.load(PackFile.java:714)  at org.eclipse.jgit.internal.storage.file.PackFile.get(PackFile.java:257)  at org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedObject(ObjectDirectory.java:423)  at org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedFromSelfOrAlternate(ObjectDirectory.java:392)  at org.eclipse.jgit.internal.storage.file.ObjectDirectory.openObject(ObjectDirectory.java:384)  at org.eclipse.jgit.internal.storage.file.WindowCursor.open(WindowCursor.java:145)  at org.eclipse.jgit.lib.ObjectReader.open(ObjectReader.java:229)  at org.eclipse.jgit.revwalk.RevWalk.parseAny(RevWalk.java:840)  at org.eclipse.jgit.internal.storage.file.RefDirectory.doPeel(RefDirectory.java:482)  at org.eclipse.jgit.internal.storage.file.RefDirectory.peel(RefDirectory.java:461)  at org.eclipse.jgit.lib.Repository.peel(Repository.java:953)  at org.eclipse.jgit.lib.Repository.getAllRefsByPeeledObjectId(Repository.java:969)  at org.eclipse.jgit.revplot.PlotWalk.<init>(PlotWalk.java:93)  at org.eclipse.egit.ui.internal.history.SWTWalk.<init>(SWTWalk.java:18)add some random characters to 2 places in a pack file using a text editor, have a redundant pack which contains all the objects of this repository, then run jgit GC:ERROR: Exception caught while accessing pack file /Users/d029788/tmp/jgit3/.git/objects/pack/pack-04ed5033284af9c3fa04e9687ef0488e4d58b9d1.pack, the pack file might be corruptjava.io.IOException: Unknown object type 0.  at org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(PackFile.java:981)  at org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(PackFile.java:943)  at org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPackedObjectSize(ObjectDirectory.java:512)  at org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPackedSizeFromSelfOrAlternate(ObjectDirectory.java:481)  at org.eclipse.jgit.internal.storage.file.ObjectDirectory.getObjectSize(ObjectDirectory.java:473)  at org.eclipse.jgit.internal.storage.file.WindowCursor.getObjectSize(WindowCursor.java:164)  at org.eclipse.jgit.lib.ObjectReader$2.next(ObjectReader.java:371)  at org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(PackWriter.java:1212)  at org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(PackWriter.java:1018)  at org.eclipse.jgit.internal.storage.file.GC.writePack(GC.java:724)  at org.eclipse.jgit.internal.storage.file.GC.repack(GC.java:550)  at org.eclipse.jgit.internal.storage.file.GC.gc(GC.java:169)  at org.eclipse.jgit.api.GarbageCollectCommand.call(GarbageCollectCommand.java:175)  at org.eclipse.egit.core.op.GarbageCollectOperation.execute(GarbageCollectOperation.java:45)  at org.eclipse.egit.ui.internal.repository.tree.command.GarbageCollectCommand$1.run(GarbageCollectCommand.java:72)  at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)=> should we throw CorruptObjectExcpeption instead of IOException herePack file /Users/d029788/tmp/jgit3/.git/objects/pack/pack-04ed5033284af9c3fa04e9687ef0488e4d58b9d1.pack is corruptorg.eclipse.jgit.errors.CorruptObjectException: Object at 317,182 in /Users/d029788/tmp/jgit3/.git/objects/pack/pack-04ed5033284af9c3fa04e9687ef0488e4d58b9d1.pack has bad zlib stream  at org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(PackFile.java:988)  at org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(PackFile.java:943)  at org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPackedObjectSize(ObjectDirectory.java:512)  at org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPackedSizeFromSelfOrAlternate(ObjectDirectory.java:481)  at org.eclipse.jgit.internal.storage.file.ObjectDirectory.getObjectSize(ObjectDirectory.java:473)  at org.eclipse.jgit.internal.storage.file.WindowCursor.getObjectSize(WindowCursor.java:164)  at org.eclipse.jgit.lib.ObjectReader$2.next(ObjectReader.java:371)  at org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(PackWriter.java:1212)  at org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(PackWriter.java:1018)  at org.eclipse.jgit.internal.storage.file.GC.writePack(GC.java:724)  at org.eclipse.jgit.internal.storage.file.GC.repack(GC.java:550)  at org.eclipse.jgit.internal.storage.file.GC.gc(GC.java:169)  at org.eclipse.jgit.api.GarbageCollectCommand.call(GarbageCollectCommand.java:175)  at org.eclipse.egit.core.op.GarbageCollectOperation.execute(GarbageCollectOperation.java:45)  at org.eclipse.egit.ui.internal.repository.tree.command.GarbageCollectCommand$1.run(GarbageCollectCommand.java:72)  at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)JGit's gc currently chokes on corrupt pack files and doesn't clean them up. We should fix this.I also tried with git-core's gc and this doesn't raise an error and removes the corrupt pack file."
43862,1,"Patch Set 3: Code-Review-1(1 comment)Thanks for checking on that. If GC can't currently cope with these packs, that's a separate problem worth fixing, but I don't think this will be a regression."
43867,0,Change has been successfully merged into the git repository.
43874,0,"Patch Set 1: Verified+1 Code-Review+2Good catch, thank you!"
43875,0,Change has been successfully merged into the git repository.
43878,0,Change has been successfully merged into the git repository.
43880,0,Patch Set 1: Verified+1 Code-Review+2Looks good to me. Thanks.
43881,0,Change has been successfully merged into the git repository.
43886,0,Change has been successfully merged into the git repository.
43889,0,Change has been successfully pushed.
43891,0,Patch Set 1: Verified+1 Code-Review+2Perfect. Thanks :)
43892,0,Change has been successfully merged into the git repository.
43905,0,Change has been successfully merged into the git repository.
43909,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
43911,0,Change has been successfully merged into the git repository.
43927,0,Change has been successfully merged into the git repository.
43934,0,Change has been successfully merged into the git repository.
43939,0,Change has been successfully merged into the git repository.
43943,0,Change has been successfully merged into the git repository.
43947,0,Change has been successfully merged into the git repository.
43949,0,Change has been successfully merged into the git repository.
43968,0,Change has been successfully merged into the git repository.
43971,0,Change has been successfully cherry-picked as 7981e28249c5bd71598513a9a93b77b043dc5076
43974,0,Change has been successfully merged into the git repository.
43976,1,Patch Set 2: Verified+1 Code-Review+2It seems good to me. Have you tried to cherry-pick a commit that is already on the branch history. It failed in the previous version but I'm not sure about this one.
43977,0,Change has been successfully merged into the git repository.
43981,0,Change has been successfully merged into the git repository.
43984,0,Patch Set 2: Verified+1 Code-Review+2Looks good. Please see my comments on https://bugs.eclipse.org/bugs/show_bug.cgi?id=458308 ;-)
43985,0,Change has been successfully merged into the git repository.
43989,0,Change has been successfully merged into the git repository.
43991,0,Change has been successfully merged into the git repository.
43993,1,"Patch Set 1: Code-Review+1Is there large open source project with structure you mention in bug description I can use to test it? I'm asking in general also for future cases. My tests projects are to ""small"" or my machine is to fast;)"
43996,1,Patch Set 1: Verified+1Thanks for help:)Regarding this issue I also agree that nobody is using this first search and it is killing performance. So +1 :)
43999,0,"Patch Set 1: Verified+1 Code-Review+2Thanks for patch:)Btw, if you have simple NPE fix or something else you feel sure about it, don't hesitate to merge it by yourself:)"
44000,0,Change has been successfully merged into the git repository.
44013,0,"Patch Set 8:I did some initial review and testing, and things look good so far:- all our tests pass- the search tests run a little bit faster- .options file and build.properties change look goodNow I have to set aside some time to carefully review the rest of the code.Stay tuned!"
44014,0,Patch Set 8: Verified+1The fix is good and ready to be committed. There are just three style issues that need to be resolved:1. non-static fields get an 'f' prefix2. we don't use this.<field>3. copyright date needs to become 2015
44016,0,"Patch Set 9:I rebased the change to master, addressed the style issues, and pushed patch set #9. Thanks for the review, Dani."
44017,0,Patch Set 9: Verified+1 Code-Review+2Thanks Terry!
44018,0,Change has been successfully merged into the git repository.
44020,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2019/ : UNSTABLE
44024,0,Change has been successfully rebased as 80ff1f872fd049f0ba4792ce99175da483ccc2c6
44027,0,Change has been successfully merged into the git repository.
44030,0,Change has been successfully merged into the git repository.
44033,0,Change has been successfully merged into the git repository.
44034,1,"Patch Set 1:I'm sorry. As expected, I did something wrong - the commit is in the repo, but it has ""merged"" prefix and the author is wrong. I've read the gerrit docu, but didn't found why it went wrong. Should I first rebase the change before approving next time, or do not use review and submit button?"
44035,0,"Patch Set 1:that's all fine, we have set submit type ""Merge if necessary"" on the jgit and egit repositories [1], this means if the change you approve and submit isn't a successor of the current branch tip Gerrit will automatically merge it [2]. This allows to reduce number of round trips until a change is accepted. If you want to avoid the auto-merges first rebase before you submit a change.[1] https://git.eclipse.org/r/#/admin/projects/egit/egit[2] https://git.eclipse.org/r/Documentation/project-setup.html#submit_type"
44038,0,Change has been successfully merged into the git repository.
44040,0,Change has been successfully merged into the git repository.
44049,0,Change has been successfully merged into the git repository.
44052,0,Change has been successfully merged into the git repository.
44060,0,Change has been successfully merged into the git repository.
44064,1,Patch Set 5:Deep done one of the dependent changes wasn't rebased.
44066,1,"Patch Set 4:The parent commit *is* up-to-date, and I don't know why but both gerrit web interface and eclipse egit plugin rejects to rebase this change... Any idea why?"
44068,1,"Patch Set 2: Code-Review+1Cool, thanks. I haven't tried this patch but it makes definitely sense. Scratching the head that I'm missed such obvious case :-("
44072,0,Change has been successfully merged into the git repository.
44073,1,"Patch Set 3: Code-Review+1Can't see why hudson fails (and I can't retrigger the build), but the change itself is fine."
44075,1,Patch Set 10: Code-Review-1I get an NPE failure while running the UIAllTests.
44082,0,Change has been successfully merged into the git repository.
44087,1,"Patch Set 4:Lars, I have no idea what did you mean by your last comment. Wrong review? I haven't introduced here anything new, it's just a fix of broken implementation."
44103,0,"Patch Set 9: Code-Review-1(3 comments)I liked almost all of this patch, it's a good direction.  But the CommandContributionItems need to be changed into model elements only so they can be rendered by the menu or tool renderer."
44111,0,"Patch Set 15:(7 comments)Looks fine to me and my tests were fine. While we wait for Paul to review this again, I have some small improvement suggestions."
44118,0,Change has been successfully merged into the git repository.
44128,0,"Patch Set 21: Code-Review+1I think it looks good, I'd like to get it in so we can move onto the next set of patches.  I have 3 comments, but only one is an absolute must fix (the display.getCurrent())."
44131,0,"Patch Set 3:(2 comments)I like this a lot!  And the handling between DSF and DSF-GDB is nicely done.There are just two copyright headers missing.You still have to go to the list to get approval, but I'll +1 it on the list.Do you have any ideas on how we could help the user figure out the other things that can be done? e.g.,- pattern matching   =myvar*  =$xmm??- array ranges  =myarray[30-40]- groups  myvar;=myarray[10,11];$eax  =myarray[10];*;=$e?x"
44132,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2010/ : UNSTABLE
44135,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2011/ : UNSTABLE
44136,1,Patch Set 4: Verified+1Checked test failure is unrelated
44139,0,Change has been successfully merged into the git repository.
44142,0,Patch Set 1:(10 comments)This might just work enough to teach users about it.I'd like to give it a bit more thought to see if we can improve a bit to show actual grouping syntax.Thanks for doing this.We'll need to get approval from the list if we are to put this in 8.6
44143,0,"Patch Set 1:I was wondering if maybe a submenu would be better?  Maybe something like:Add Expression Group        Local Variables        Registers        I'm feeling lucky        HelpThe ""I""m feeling lucky"" and ""Help"" have to be clarified.  I was thinking that ""I'm feeling lucky"" (maybe should be ""Random Example"") could create a complex group based on the local vars and registers of the current session.  This aims at teaching the user what can be done; e.g.,=i;$eax;$xx*=topVar;*The ""Help"" would pop up an explanatory dialog giving examples.Maybe we don't both of those."
44144,1,"Patch Set 1:Ok I will move it to gdb, I was not sure where it is implemented. I will also would then do visibleWhen checkEnabled, so they don't show up at all when not available.Putting them in submenu also not a bad idea, but I don't know what happens to menu if non of its items active.""I am feeling Lucky"" is kind of lame. We don't usually put jokes like this in any other part of CDT, so it would be kind of weird. Help is also not a right thing to do in a menu. Eclipse has standard ways to provide help and it should just work. Btw if you want to more visiblity on syntax one place to put it is in Add Watch Expression dialog itself, is it ours or platform?"
44147,1,"Patch Set 2:Hi Mohamed. Can you try to rebase on your patch on the latest master? Your code is based on an old commit which used Eclipse 4.4 milestones (unreleased versions) to build the documentation. The milestone that gets used is Eclipse 4.4.1 RC2 which has a regression (the NullPointerException). If you rebase your patch on master, it will use the released Eclipse 4.4.0 which doesn't have the regression."
44149,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1979/ : UNSTABLE
44154,1,"Patch Set 4:Elena,I added a couple of test cases for cpp and for c.And I needed to change something in the ParameterGuessingProposal class to fix a bug I didn't notice before.Also I needed to add a couple of functions in the AbstractContentAssistTest to be able to test parameters guessing. And I did some refactoring to avoid code duplication."
44157,0,"Patch Set 3:You modified existing test but it would be nice if you add more tests for this specific case.Some C functions, methods with multiple parameters,overloaded methods, etc. How does it guess parameters? There is no tests for guessing..."
44159,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1950/ : UNSTABLE
44161,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/877/ : UNSTABLE
44165,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2003/ : UNSTABLE
44168,0,Change has been successfully rebased as 69aa2d0bf02ee3d1629407bbc09fec30fcdc8440
44174,0,Change has been successfully merged into the git repository.
44178,0,Change has been successfully merged into the git repository.
44180,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6651/ : UNSTABLE
44183,0,Change has been successfully merged into the git repository.
44186,0,Change has been successfully merged into the git repository.
44194,0,Change has been successfully merged into the git repository.
44196,0,Change has been successfully merged into the git repository.
44204,0,Change has been successfully pushed.
44205,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3625/ : UNSTABLE
44208,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3545/ : UNSTABLE
44211,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3551/ : UNSTABLE
44213,0,"Patch Set 1: Code-Review+2 Verified+1Looks good, thanks Philip"
44214,0,Change has been successfully merged into the git repository.
44218,0,Change has been successfully rebased as 7f875b59041af215ebe9e0072cb33c9a4be3bf68
44220,0,Change has been successfully pushed.
44223,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3560/ : UNSTABLE
44225,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3546/ : UNSTABLE
44231,0,Change has been successfully merged into the git repository.
44235,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3547/ : UNSTABLE
44238,0,Change has been successfully pushed.
44239,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3623/ : UNSTABLE
44241,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3601/ : UNSTABLE
44243,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3557/ : UNSTABLE
44244,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3567/ : UNSTABLE
44247,0,Change has been successfully merged into the git repository.
44249,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3602/ : UNSTABLE
44251,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3548/ : UNSTABLE
44254,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3558/ : UNSTABLE
44256,0,Change has been successfully pushed.
44260,0,Change has been successfully pushed.
44262,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3569/ : UNSTABLE
44266,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3570/ : UNSTABLE
44268,0,Change has been successfully pushed.
44271,0,Change has been successfully merged into the git repository.
44276,0,Change has been successfully pushed.
44278,0,Change has been successfully pushed.
44282,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3572/ : UNSTABLE
44287,0,Change has been successfully rebased as 55c5b148d5487ab9728f65eded04bf1b4210eaa4
44289,0,Patch Set 1:(9 comments)This looks great!
44292,0,Change has been successfully pushed.
44294,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3573/ : UNSTABLE
44301,0,Change has been successfully merged into the git repository.
44303,0,Change has been successfully merged into the git repository.
44308,1,"Patch Set 10: Verified-1- When you add a new package, you also have to add it to the manifest. I would name the package ""nested"" not ""nesting"", since you use the term ""nested"" at all other places.- The content provider name should be 'Nested Projects' (uppercase 'p')- I think you can set the radio state by using HandlerUtil.updateRadioState(event.getCommand(), VALUE); I think there is no API to listen to content provider enablement/disablement in the Customize dialog, but you can update the radio state when the content provider is created, and when it is disposed. Enabling/disabling the content provider when the menu state changes is a little bit more tricky. You'd probably have to use code similar to what's in org.eclipse.ui.internal.navigator.filters.CommonFilterSelectionDialog.okPressed().- I take the filtering change back - let's leave it unconnected. When we disable the Java content, we also keep the Java related filters (not optimal, but that's how it currently is).- Project Presentation: it should be in the same group as Package Presentation - we can leave this as is since we don't want to introduce a dependency on JDT.- dialog store vs. preference: if you want to set it via plugin_customization.ini, then I'm OK to use a preference - but not show it in the preferences dialog."
44310,1,"Patch Set 6:Thanks for the review. My comments/answers are prefixed with ""**"" Done:* We don't want fancy/new names like ""nastor"" in the code or UI. It looks like a product or brand name. Please replace it everywhere with e.g. ""nesting"" or ""nested"", and move the classes into the 'org.eclipse.ui.internal.navigator.resources.workbench' package.* ""and others"" in the copyright needs a dot* the content provider should not contain ""show"" in the name, just ""Nested Projects""* Project Presentation: the label needs mnemonic - suggest to use 'r'* Project Presetion - the sub-menu labels also need mnemonic ('F' and 'P')** -> I used 'F' and 'H' Still TODOs with questions/comments: * Project Presentation: it should be in the same group as Package Presentation  -> The 'label' group is contributed programatically by JDT UI. It's not easy to depend on it. * Out of the box the new content provider should not be selected. Only when toggling via menu or by the user, it should get (de-) selected accordingly.* The toggle action should also toggle the content provider, otherwise there will be strange things in the UI when the user (accidentally) disables the content provider.I would hard-wire the action and the content provider, i.e. if the user disables the content provider I would toggle the action to 'Flat'.** -> I like those 3 proposals. However, I don't know I could implement a good RadioState based on content provider activation. Do you have an example of how to do this? Or will I have to use programatic menu contributions to deal with selection? * Same applies to the filters. Here I'd even vote to not surface them in the UI, and do the filtering directly in the content provider. Otherwise, you also have to enable/disable them when toggling the menu.** -> What do you mean by ""filtering directly in the content provider"". I don't think CNF content provider provide a good way to do that. Do you have an example? * The content provider does not react to changes: 'Import as Project' does not let the new project appear, and deleting a nested project does not bring it back as folder. I have to press 'F5' to get the view refreshed.** -> That's indeed an issue. This feature should place a few more workspace/resource listeners to trigger refresh on project creation/deletion. There are already some for some cases, I'll have a look at the reported scenario. * The state of nesting should be stored as dialog setting and not as preference. Maybe this can even be computed by the enabled state of the content provider.** -> ok for persisting it as dialog settings. However, I'd like to keep the preference as a default activation of nested view of projects, so RCP apps could enable this by default from the plugin_customization.ini. Other TODOs:* The content provider does not have an icon."
44323,0,Patch Set 17: Verified+1 Code-Review+2Thanks Mickael!
44324,0,Change has been successfully merged into the git repository.
44332,1,Patch Set 2: Code-Review-1I found some necessary changes to do in code and a bug I need to fix before 3rd-party review.
44338,1,Patch Set 2:Not having a test is a definite oversight. I added a test in patch set #2.
44342,0,"Patch Set 2: Verified+1 Code-Review+2Looks good, thanks Terry!"
44343,0,Change has been successfully merged into the git repository.
44345,0,Change has been successfully merged into the git repository.
44351,0,Change has been successfully merged into the git repository.
44356,0,Patch Set 1: Code-Review-1(2 comments)See inline comments (minor improvement)
44359,0,Change has been successfully merged into the git repository.
44361,0,Change has been successfully merged into the git repository.
44379,0,Change has been successfully merged into the git repository.
44386,0,Change has been successfully merged into the git repository.
44389,0,Change has been successfully merged into the git repository.
44391,0,Change has been successfully merged into the git repository.
44397,1,Abandonedalready pushed to master
44408,1,"Patch Set 1:> Adding Camille to the review as it seems the ctx files now have Identifiers and Id-based references rather than position-based references.I'm not again this (That's actually a good thing), but for this specific contribution it makes it difficult to see whether there is any semantic change in the UML.ctx configuration.Does the CTX model contain any change other than XMI::IDs?"
44410,0,"Patch Set 1: Code-Review+2> The CTX contains no changes for this patch. I added only the Location field for SingleProfile XWT component.OK, thanks"
44411,0,Change has been successfully merged into the git repository.
44414,0,Change has been successfully merged into the git repository.
44416,0,Change has been successfully merged into the git repository.
44418,1,Patch Set 5:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3604/ : UNSTABLE
44434,0,Patch Set 1: Verified+1 Code-Review+1Works great
44436,0,Change has been successfully merged into the git repository.
44439,0,Change has been successfully merged into the git repository.
44442,0,Change has been successfully merged into the git repository.
44446,0,Change has been successfully cherry-picked as ef004692928ae79534da675531a4f1c421ddb055
44449,0,Change has been successfully merged into the git repository.
44455,0,Change has been successfully merged into the git repository.
44462,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6640/ : UNSTABLE
44464,0,Change has been successfully merged into the git repository.
44466,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6637/ : UNSTABLE
44471,0,Change has been successfully merged into the git repository.
44474,0,Change has been successfully merged into the git repository.
44478,0,Change has been successfully merged into the git repository.
44480,0,Change has been successfully merged into the git repository.
44481,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3436/ : UNSTABLE
44485,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3430/ : UNSTABLE
44489,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3435/ : UNSTABLE
44490,0,Change has been successfully cherry-picked as a0fd70a09e044b451ee3d51f893600732b3e2c1a
44492,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1946/ : UNSTABLE
44496,1,Patch Set 1: Code-Review+1Thanks for fixing up the warning!> This change makes the API tools raise an API breakage warning since > the value of the public constant CAPABILITY_ATOMIC changed compared > to 3.6. I understood from the commit message that this feature> didn't yet fully pass review in git-core so I guess we can safely> suppress the API warning without breaking anyone using what we> released in 3.6. I pushed a patch for this here> https://git.eclipse.org/r/#/c/39496/. Correct me there if I > got this wrong.You're spot on.
44498,0,Change has been successfully merged into the git repository.
44502,1,Patch Set 5:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3432/ : UNSTABLE
44505,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3428/ : UNSTABLE
44508,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3429/ : UNSTABLE
44510,0,Change has been successfully merged into the git repository.
44511,1,Patch Set 6:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3433/ : UNSTABLE
44515,0,Change has been successfully merged into the git repository.
44519,0,Change has been successfully merged into the git repository.
44522,1,Patch Set 3:For me the tests still fail with this change.
44525,1,"Patch Set 2: Code-Review-1After I reverted https://git.eclipse.org/c/platform/eclipse.platform.ui.git/commit/?id=da659658ad1a77e30af02f366904124d19769a82 and rebased this commit and fixed the rebase conflict so it was on HEAD, this doesn't compile any more."
44532,0,Change has been successfully merged into the git repository.
44543,0,Change has been successfully merged into the git repository.
44544,0,Change has been successfully cherry-picked as f513f29047c62791ea788a76129fbf9dc692b4ab
44549,0,Change has been successfully merged into the git repository.
44552,0,Change has been successfully merged into the git repository.
44555,0,Change has been successfully merged into the git repository.
44559,0,Change has been successfully merged into the git repository.
44562,0,Change has been successfully merged into the git repository.
44565,0,Change has been successfully merged into the git repository.
44572,0,Change has been successfully cherry-picked as 5adce1b31102963d3008cae3fa401658d378eb12
44574,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1926/ : UNSTABLE
44575,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1928/ : UNSTABLE
44576,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1931/ : UNSTABLE
44584,0,Change has been successfully merged into the git repository.
44587,0,Change has been successfully cherry-picked as 971176c83f93f39daf74620e38937cb09a2d24e1
44588,0,Patch Set 5:Can you put a note in the N&N about it and a little explanation about what it means?Thanks
44592,0,Change has been successfully cherry-picked as eb5d03de5c888e54e5acd4fa791ecca4f2462f5d
44593,0,Patch Set 2:This is very nice.  A small change that just looks so much better.  Thanks.Can you put a note in the N&N about it?
44600,0,Change has been successfully merged into the git repository.
44601,1,Patch Set 9:Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3418/ : UNSTABLE
44619,0,Change has been successfully merged into the git repository.
44624,0,Change has been successfully cherry-picked as 7bbaa4d7b324aba04594fc64a09b353000b4d9fe
44629,0,"Patch Set 1:It is probably more workaround than solution but I didn't want to change general ""parsing"" algorithm. If someone have better idea fell free to update/rewrite something:)"
44634,0,Change has been successfully merged into the git repository.
44636,1,"Patch Set 2:@Thierry, I will review your comments and if everything will work fine I will reopen this bug and apply new patch. Thanks:)"
44637,0,"Patch Set 2:(1 comment)@Michal: ok :) I updated my previous untested code, it should look better now ;)"
44638,1,"Patch Set 2:(1 comment)@Michal: updated again, sorry lol"
44640,1,"Patch Set 2:@Michal : sadly I don't know well this part of code, and I'm travelling next days, but I just wanted to give you some clues before lacking of time ;)"
44641,0,"Patch Set 2:Sure, I will do the rest of work:)"
44642,0,"Patch Set 2:Thank you Michal, hope my suggestions will really help you ;)"
44645,1,Patch Set 12: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1644/ : UNSTABLE
44650,0,"Patch Set 14:(7 comments)Thanks for the review, Elena.On change I did is that I renamed ""breakpoint tags"" to ""line tags"", since they are tags to identify lines, and are not specific to breakpoints (they could be used for something else)."
44652,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1571/ : UNSTABLE
44655,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1610/ : UNSTABLE
44657,1,Patch Set 13: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1650/ : UNSTABLE
44658,1,Patch Set 13: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1654/ : UNSTABLE
44663,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1567/ : UNSTABLE
44666,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1565/ : UNSTABLE
44669,0,Change has been successfully cherry-picked as d0e93b665b3052b80ed6ede986e5882f96ec4627
44672,1,Patch Set 17: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1737/ : UNSTABLE
44679,1,Patch Set 19: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1881/ : UNSTABLE
44683,0,Change has been successfully merged into the git repository.
44686,0,Patch Set 1: Code-Review+2thanks for the patch!
44687,0,Change has been successfully merged into the git repository.
44690,0,Change has been successfully merged into the git repository.
44693,0,Change has been successfully merged into the git repository.
44696,0,Change has been successfully merged into the git repository.
44702,0,Change has been successfully merged into the git repository.
44708,0,"Patch Set 4: Code-Review+1Haven't tested with ""bundle pools"", but the Eclipse builders still seem to work fine."
44709,0,Patch Set 4: Verified+1 Code-Review+2I tested it with a bundle pool and it worked. Thanks!
44713,0,Change has been successfully cherry-picked as 9298e69568d4f9387af5674962498903fd836521
44717,1,"Patch Set 8:(1 comment)I'm not sure why you're moving the information about disabled actionSets from the actionSets into the page hidden.  Is it just the regular mechanism is disconnected?  For any given window, the perspective worked with the ActionSetManager to turn on or off actionSets (it seems to do it via the IContextService).  It doesn't matter what the defaults were when the perspective was created, only that the perspective remember what actionSets are active at the moment."
44718,1,"// action set that's been manually disabled."""
44739,0,Change has been successfully merged into the git repository.
44743,0,Change has been successfully cherry-picked as 5ccf3aa8a141e6f986127edea57d5a07158f9a7a
44747,0,Change has been successfully merged into the git repository.
44756,0,Change has been successfully merged into the git repository.
44760,0,Patch Set 5: Code-Review+1Right now everything works ok and looks very nice:)
44766,0,Patch Set 2: Verified+1 Code-Review+2@Dawid : Good catch ;)
44767,0,Change has been successfully merged into the git repository.
44771,0,Change has been successfully merged into the git repository.
44773,0,Change has been successfully merged into the git repository.
44780,1,"Patch Set 1: Code-Review-1(2 comments)Good catch. Same problem exists with tmf.pcap.help, rcp.help and gdbtrace.help. I'll upload an update."
44781,0,"Patch Set 1:wow, I forgot about all of those!"
44782,0,Change has been successfully cherry-picked as 772fb5094ada006f7b4abd39e721bfcf6a3dabf8
44785,0,Change has been successfully merged into the git repository.
44790,0,Change has been successfully cherry-picked as 578f579dfe9e442ba939b0c1b2340237f7ad01a8
44792,0,"Patch Set 2: Code-Review+1This change looks fine to me, and makes the UI much simpler in case of capabilities that aren't provided."
44798,0,Change has been successfully merged into the git repository.
44805,0,Change has been successfully cherry-picked as 086cd39c85e5bd066ca3fd46efd84ea2f7185c21
44817,0,"Patch Set 1:Hi Paul, if you find some time, could you take a look at this change? Since this is fragile part of code I tried to change it as minimally as possible. It fixes all issues described in bugzilla. Thank you in advance!"
44823,0,Patch Set 2: Code-Review+2 Verified+1Looks good.
44824,0,Change has been successfully merged into the git repository.
44829,0,Change has been successfully merged into the git repository.
44830,0,Change has been successfully cherry-picked as de405a2e28973515dac41bf6b8e46167ccce344c
44836,0,Change has been successfully merged into the git repository.
44840,0,Patch Set 1: Code-Review+1Looks good to me. Thanks Simon
44841,0,Patch Set 3: Verified+1 Code-Review+2pde.ui test run fine. Previous issue is fixed. Works well for me.
44842,0,Change has been successfully merged into the git repository.
44845,0,Change has been successfully merged into the git repository.
44848,0,Change has been successfully merged into the git repository.
44851,0,Change has been successfully merged into the git repository.
44857,0,Change has been successfully merged into the git repository.
44861,0,Change has been successfully merged into the git repository.
44863,0,Change has been successfully merged into the git repository.
44870,0,Change has been successfully cherry-picked as 3af32a349a6b4e5a0d6e2ceeb5ef911a1961844e
44871,0,"Patch Set 2:Very cool!I think this deserves to be mentioned in the N&N for the user-visible part.One thing to note is that the package explorer view is part of JDT, and the the Project Explorer that CDT uses does not have a Plugin-in dependencies node.  Is there another way to make use of this nice improvement without installing JDT?"
44874,0,"Patch Set 1: Verified+1 Code-Review+2I tested it using a local maven build and imported CDT plugins automatically from a cloned git repository on my work space (part of the same automated process), these were taken directly form the master branch, which I guess is the reasonable behavior to expect.Pretty nice !!"
44876,0,Change has been successfully merged into the git repository.
44886,0,Change has been successfully cherry-picked as 4816391d36962bcb425629fa08f30aa46b947665
44894,0,Change has been successfully merged into the git repository.
44900,0,Change has been successfully merged into the git repository.
44910,0,Change has been successfully merged into the git repository.
44914,1,Patch Set 10: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3388/ : UNSTABLE
44916,0,Change has been successfully merged into the git repository.
44918,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3363/ : UNSTABLE
44930,0,Change has been successfully merged into the git repository.
44938,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3401/ : UNSTABLE
44941,0,Change has been successfully merged into the git repository.
44944,0,Change has been successfully merged into the git repository.
44948,0,Change has been successfully merged into the git repository.
44952,0,Change has been successfully merged into the git repository.
44955,0,Change has been successfully merged into the git repository.
44962,0,Change has been successfully merged into the git repository.
44966,0,Change has been successfully merged into the git repository.
44974,0,Change has been successfully merged into the git repository.
44977,0,Change has been successfully merged into the git repository.
44985,0,Change has been successfully merged into the git repository.
44991,0,Change has been successfully merged into the git repository.
44994,0,Change has been successfully merged into the git repository.
45000,0,Change has been successfully merged into the git repository.
45003,0,Change has been successfully merged into the git repository.
45007,0,Change has been successfully merged into the git repository.
45016,0,Change has been successfully merged into the git repository.
45019,0,Change has been successfully merged into the git repository.
45022,0,Change has been successfully merged into the git repository.
45025,0,Change has been successfully merged into the git repository.
45028,0,Change has been successfully merged into the git repository.
45034,0,Change has been successfully merged into the git repository.
45036,1,Abandoned
45044,0,Change has been successfully merged into the git repository.
45048,0,Change has been successfully cherry-picked as 6e6c6aa9ec74d1fa28f98a283cbf7912585b8487
45051,0,Change has been successfully cherry-picked as 41bf7cb28a57e09bc0b9e412af850f892f7ffef3
45055,0,Change has been successfully merged into the git repository.
45064,0,Change has been successfully merged into the git repository.
45067,0,Change has been successfully merged into the git repository.
45073,0,Change has been successfully merged into the git repository.
45075,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/511/ : UNSTABLE
45077,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/512/ : UNSTABLE
45078,0,Change has been successfully merged into the git repository.
45083,0,Change has been successfully merged into the git repository.
45086,0,Change has been successfully merged into the git repository.
45089,0,Change has been successfully merged into the git repository.
45092,0,Change has been successfully merged into the git repository.
45093,0,Change has been successfully cherry-picked as ff7056130e0df32328d56ab9af95412fbb2d0eca
45100,0,Change has been successfully cherry-picked as d7e2618b8f8f5363dcb9834b0da2fd3e4190e20a
45104,0,Change has been successfully merged into the git repository.
45107,0,Change has been successfully merged into the git repository.
45110,0,Change has been successfully merged into the git repository.
45113,0,Change has been successfully merged into the git repository.
45116,0,Change has been successfully merged into the git repository.
45119,0,Change has been successfully merged into the git repository.
45122,0,Change has been successfully merged into the git repository.
45126,0,Change has been successfully merged into the git repository.
45129,0,Change has been successfully merged into the git repository.
45132,0,Change has been successfully merged into the git repository.
45135,0,Change has been successfully merged into the git repository.
45138,0,Change has been successfully merged into the git repository.
45140,0,Change has been successfully merged into the git repository.
45146,0,Change has been successfully merged into the git repository.
45149,0,Change has been successfully merged into the git repository.
45152,0,Change has been successfully merged into the git repository.
45153,0,"Patch Set 3: Verified+1 Code-Review+2Good job, thanks!"
45154,0,Change has been successfully merged into the git repository.
45157,0,Patch Set 2: Verified+1 Code-Review+2Thanks Bartek!
45164,0,Patch Set 2: Verified+1 Code-Review+2Thanks Bartek!
45165,0,Change has been successfully merged into the git repository.
45166,0,"Patch Set 3: Verified+1 Code-Review+2Great job, thanks!"
45167,0,Change has been successfully merged into the git repository.
45174,0,Change has been successfully merged into the git repository.
45175,0,Patch Set 2: Verified+1 Code-Review+2Thanks Bartek!
45176,0,Change has been successfully merged into the git repository.
45179,0,Patch Set 2: Verified+1 Code-Review+2Thanks Bartek!
45180,0,Change has been successfully merged into the git repository.
45188,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/xtext/job/emf.gerrit/267/ : UNSTABLE
45190,0,Change has been successfully pushed.
45191,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/xtext/job/emf.gerrit/269/ : UNSTABLE
45193,0,Patch Set 5:Build SUCCESSFUL. Now starting integration tests...
45194,1,"Patch Set 5:Sorry for spamming patchsets... the first 2 one I needed to figure out that it is not a good idea to implicit test the key order of a hashmap. 3rd an IT test failed, looked like an hudson env issue, with the 4rd I tried to trigger a new build and improved the test failure message, the 5th includes the fix for Jans comment - the osgi property for the default level is taken from the parameter in case it is specified there."
45197,0,Patch Set 6:Build SUCCESSFUL. Now starting integration tests...
45200,0,Patch Set 7:Build SUCCESSFUL. Now starting integration tests...
45201,0,"Patch Set 7: Code-Review+2Forgot to mention: You should make sure that the upper bound of the copyright year is the current year when you make non-trivial changes to a file, e.g. update ""2008, 2011"" -> ""2008, 2014"", or ""2012"" to ""2012, 2014"".IMHO this change is good."
45204,0,Change has been successfully merged into the git repository.
45208,0,Patch Set 3:Build SUCCESSFUL. Now starting integration tests...
45209,0,Patch Set 3:I have no idea why the IT test is failing. Locally everything works fine. Any hints?
45210,1,Patch Set 3:(1 comment)see inlineIT failure seems unrelated to me. Might be a jenkins hiccup.
45213,0,Patch Set 4:Build SUCCESSFUL. Now starting integration tests...
45215,0,"Patch Set 1: Code-Review+2 Verified+1Content is fine, thanks."
45216,0,Change has been successfully merged into the git repository.
45218,0,"Patch Set 1: Code-Review+2 Verified+1Images are screenshots, content is fine."
45219,0,Change has been successfully merged into the git repository.
45220,0,Patch Set 5: Verified+1 Code-Review+2Thanks for patch Thierry!
45221,0,Change has been successfully merged into the git repository.
45225,1,"Patch Set 4:Since you are PDT commiter, you can retrigger build directly from hudson. Just login to hudson with your bugzilla privs, open broken build and click retrigger (sidebar)."
45226,0,"Patch Set 4:@Dawid : yes, that's what I did for last build... I discovered it a bit late ;) Thank you anyway !"
45229,1,"Patch Set 1:Some explanations about the patch :Before patch, flushContent()'s processing can be interrupted by refresh() which calls handleDispose() to free resources (resulting later in NullPointerException) :PhpMergeViewer(ContentMergeViewer).flush(IProgressMonitor) line 1329 : flushContent(getInput(), monitor);PhpMergeViewer(TextMergeViewer).flushContent(Object, IProgressMonitor) line 4701 : flushLeftSide(oldInput, monitor);SaveableCompareEditorInput$1.compareInputChanged(ICompareInput) line 173 : propogateInputChange();PhpMergeViewer(ContentMergeViewer).handleCompareInputChange() line 1453 : call to refresh() when (isLeftDirty() || isRightDirty()) is falseSaveableCompareEditorInput$1.compareInputChanged(ICompareInput) line 167 : closeEditor(true);PhpMergeViewer(ContentViewer).handleDispose(DisposeEvent) line 183 : contentProvider = null;PhpMergeViewer(TextMergeViewer).flushContent(Object, IProgressMonitor) line 4702 : flushRightSide(oldInput, monitor);PhpMergeViewer(TextMergeViewer).flushRightSide(Object, IProgressMonitor) line 4929 : NPE on content.getRightContent(oldInput); because content = contentProvider = nullAfter patch, refresh() is only called when there are differences on left or right panels :PhpMergeViewer(ContentMergeViewer).flush(IProgressMonitor) line 1329 : flushContent(getInput(), monitor);PhpMergeViewer(TextMergeViewer).flushContent(Object, IProgressMonitor) line 4701 : flushLeftSide(oldInput, monitor);SaveableCompareEditorInput$1.compareInputChanged(ICompareInput) line 173 : propogateInputChange();PhpMergeViewer(ContentMergeViewer).handleCompareInputChange() line 1453 : NO call to refresh() when (isLeftDirty() || isRightDirty()) is falsePhpMergeViewer(TextMergeViewer).flushContent(Object, IProgressMonitor) line 4702 : flushRightSide(oldInput, monitor);SaveableCompareEditorInput$1.compareInputChanged(ICompareInput) line 167 : closeEditor(true);PhpMergeViewer(ContentViewer).handleDispose(DisposeEvent) line 183 : contentProvider = null;"
45230,0,Patch Set 1:Is this final version? Because there is no link to patch on bugzilla:)
45237,0,Change has been successfully merged into the git repository.
45240,0,Change has been successfully merged into the git repository.
45245,0,Change has been successfully merged into the git repository.
45248,0,Change has been successfully merged into the git repository.
45253,0,Change has been successfully merged into the git repository.
45256,0,Change has been successfully merged into the git repository.
45261,0,Change has been successfully merged into the git repository.
45263,0,Change has been successfully cherry-picked as d6a8728c80e028e49804f6795034845cdab902d4
45266,0,Change has been successfully merged into the git repository.
45273,0,"Patch Set 6: Code-Review+2Seems to work fine, tested with the steps described at https://bugs.eclipse.org/bugs/show_bug.cgi?id=447675#c5"
45283,0,Change has been successfully cherry-picked as e85c1ae236fa9d8ae7446b3a3153cda3a24a6b64
45287,0,Change has been successfully merged into the git repository.
45289,0,Change has been successfully cherry-picked as 2f5be5c1c9e548c7b104112f791ac22fce001e0b
45291,0,Change has been successfully cherry-picked as e24435046cc7dffd6382fc11a95ff46305f5fb7a
45300,1,"Patch Set 4: Code-Review-1(1 comment)I solved the problem with number colors.The only issue that remains is that the editor does not update the highlighting according to the preference changes unless you restart the IDE or make a change directly in the Xtext highlighting preference page.I opened a topic on the Xtext forum to ask for some help [1].I'm still giving it a -1 as the editor does not update changes as it should, and I think it is still missing something. But if you want to merge it, and have this fix in a different change, I will not stand in your way :-)"
45304,0,Change has been successfully merged into the git repository.
45306,0,"Patch Set 3: Code-Review-1(2 comments)Added JDT default for brackets, keyword 'return' and SL comments.There is an issue with numbers, as the colour manager returns null for the number colour preference key, even if the syntax highlighting for numbers is enabled from the preference page. See more on this in-line.>AFAIK, that's not a regression, though. Previously, changes on the Snipmatch syntax coloring preference page also did *not* affect open snippet editors.For me, open snippets were affected by changes in the highlighting page when pressing the Apply button. Anyhow, even if you open a snippet after you make the changes in the JDT page, it still won't apply them.In order to see the changes in the editor you either need to restart the IDE, or modify a setting in one of the styles in the Source Page/Syntax Highlighting page and then hit the Restore Defaults button.It is a bit odd, but if you consider that it is not something to worry about, I'm ok with it :-)"
45307,0,Change has been successfully cherry-picked as 878aa2500df3b031ec8c93adc2af59c902f5cf2f
45309,0,Change has been successfully cherry-picked as 19c3222f34eca3386547588fc575bdd86b897920
45315,0,Change has been successfully merged into the git repository.
45316,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/503/ : UNSTABLE
45320,0,Change has been successfully merged into the git repository.
45330,0,Change has been successfully merged into the git repository.
45332,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1679/ : UNSTABLE
45335,1,"Patch Set 6:In fact, the only way 'child' is null if constructor got an error response as MIOutput. In that case, the object is not usable anyway - accessing default values in case of error is quite wrong. It never actually happens, DSF only uses methods of this class if request succeeded, but if anybody fails to check for error in future, I'd argue NPE is better than silently getting wrong data. I can add assert to every method if that's more clear."
45338,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1684/ : UNSTABLE
45341,0,Change has been successfully cherry-picked as 7aa9cf6efc513d7fc52ec8a8e94f3ea17bfc8863
45343,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1712/ : UNSTABLE
45345,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1680/ : UNSTABLE
45346,1,"Patch Set 2:I don't get the failure that gerrit reports, but it's suspiciously close to the code I'm changing. I'll take a closer look tomorrow."
45352,0,Change has been successfully merged into the git repository.
45357,0,Change has been successfully merged into the git repository.
45365,0,Change has been successfully cherry-picked as a95c07ab566e39ef32349addf2957a783e9e6934
45368,0,Change has been successfully cherry-picked as 0795302d2a9a978007fdf736535f252ce178acc5
45379,0,Change has been successfully merged into the git repository.
45398,0,Change has been successfully cherry-picked as b286f6ba2f148efdf5fd8d786a2119618532d2b4
45399,0,Change has been successfully cherry-picked as 8b9d897d11cfb9afd9f9b5025567d82d2556156f
45407,0,Change has been successfully merged into the git repository.
45411,0,Patch Set 1: Code-Review+1(2 comments)Thanks!
45412,0,Change has been successfully cherry-picked as 84add6a4bd5a60cc006aeb2f589180f8e8dd6273
45417,0,Change has been successfully merged into the git repository.
45420,0,Change has been successfully merged into the git repository.
45423,0,Change has been successfully merged into the git repository.
45424,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/500/ : UNSTABLE
45427,0,Change has been successfully merged into the git repository.
45430,0,Change has been successfully merged into the git repository.
45433,0,Change has been successfully merged into the git repository.
45434,0,Change has been successfully cherry-picked as b039392cbbac2282409328d4d8cfd20fb3eb5f33
45436,0,Change has been successfully cherry-picked as e89e7bd1c63b1c53e9f8824a081d1a436e101fdc
45439,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/1909/ : UNSTABLE
45443,0,Change has been successfully merged into the git repository.
45448,0,Change has been successfully merged into the git repository.
45453,0,Change has been successfully merged into the git repository.
45457,0,Change has been successfully merged into the git repository.
45460,0,Patch Set 4:Build SUCCESSFUL. Now starting integration tests...
45461,0,Patch Set 4: Code-Review+2(2 comments)... and a bunch of other JavaDoc and code style things should still be changed. Other than that good.
45464,0,Patch Set 3:Build SUCCESSFUL. Now starting integration tests...
45466,0,Change has been successfully pushed.
45467,0,Patch Set 5:Build SUCCESSFUL. Now starting integration tests...
45470,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
45473,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
45476,0,Change has been successfully merged into the git repository.
45478,1,Patch Set 1:Please create a bug to describe the problem and refer to that bug in the patch.
45485,0,Change has been successfully cherry-picked as 690fc119bbf9239ad29234aa9980de37c197e23a
45493,1,Patch Set 2: Code-Review+2 Verified+1Perfect.I installed the result from our Gerrit Verification Job #73 into a plain SDK (and disabled all other p2 repository). Everything could be installed without warning and there is no old Jetty bundle pulled in any more.
45494,0,Change has been successfully merged into the git repository.
45498,0,Change has been successfully pushed.
45500,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
45505,0,Change has been successfully merged into the git repository.
45508,0,Change has been successfully merged into the git repository.
45512,0,Change has been successfully merged into the git repository.
45515,0,Change has been successfully merged into the git repository.
45518,0,Change has been successfully merged into the git repository.
45521,0,Change has been successfully merged into the git repository.
45531,0,Change has been successfully merged into the git repository.
45534,0,Change has been successfully merged into the git repository.
45543,0,Change has been successfully merged into the git repository.
45546,0,Change has been successfully merged into the git repository.
45549,0,Change has been successfully merged into the git repository.
45552,0,Change has been successfully merged into the git repository.
45556,0,Change has been successfully merged into the git repository.
45559,0,Change has been successfully merged into the git repository.
45562,0,Change has been successfully cherry-picked as cc7bf7b392af6f7cabdae7d7ec959cc7378fa72f
45565,0,Change has been successfully cherry-picked as 787d0e16422cbfe473407b9209aeb2c8bf23e0ae
45568,0,Change has been successfully merged into the git repository.
45569,0,Patch Set 4: Verified+1 Code-Review+2Thanks for patch!
45570,0,Change has been successfully merged into the git repository.
45572,0,Patch Set 2:I tested this patch and works good for me:) Can you add new test for at least case from bug description? Thanks!
45574,0,Patch Set 3:@Michal : Done!
45579,0,Patch Set 3: Verified+1 Code-Review+1Ok :-)
45580,0,"Patch Set 3: Code-Review+2Great job, thanks!"
45581,0,Change has been successfully merged into the git repository.
45584,0,Patch Set 2:From code point of view everything looks nice:) But I'm not sure about including namespace separator into syntax coloring and occurrences marking. I compared it with Netbeans and PhpStorm and there it is not included. But it doesn't mean we shouldn't:) I will add Dawid as reviewer.
45589,0,Change has been successfully merged into the git repository.
45592,0,Change has been successfully merged into the git repository.
45595,0,Change has been successfully merged into the git repository.
45596,0,Change has been successfully cherry-picked as d2a7ac0ff5a7e13aa28223784724024fa42bcaf4
45598,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1740/ : UNSTABLE
45599,0,Patch Set 1: Code-Review+1This should do it. Thanks Marc!
45602,0,Change has been successfully merged into the git repository.
45609,0,Change has been successfully merged into the git repository.
45611,0,Change has been successfully merged into the git repository.
45617,0,Change has been successfully merged into the git repository.
45621,0,Change has been successfully cherry-picked as 50a5e021a58a8620d06bddc61e94b0d22961c350
45624,0,Change has been successfully merged into the git repository.
45627,0,Change has been successfully merged into the git repository.
45630,0,Change has been successfully cherry-picked as a7b8718f499c29c36872b4e1ed02b466ff964a1c
45633,0,Change has been successfully cherry-picked as 22d3f1a445b1c8e1ae22dcc70765e779172706cf
45636,0,Change has been successfully cherry-picked as 0318b3e9e9e6183c71d5737d1e12927c0dec2c02
45641,0,Change has been successfully merged into the git repository.
45644,0,Change has been successfully merged into the git repository.
45649,0,Change has been successfully merged into the git repository.
45651,0,Change has been successfully merged into the git repository.
45660,0,Change has been successfully merged into the git repository.
45663,0,Change has been successfully merged into the git repository.
45667,0,Change has been successfully merged into the git repository.
45671,0,Change has been successfully rebased as 34127e2655244224b65078d4094431db2f4f245d
45679,0,Change has been successfully rebased as 18d5563cf25d824d0b97962cdfd8d0cb22d19d23
45681,0,"Patch Set 1: Code-Review+1Code change looks reasonable, works like a charm for me on stable-3.6 :)"
45683,0,"Patch Set 2: Code-Review+2cherry-picked onto stable-3.6 (it was based on master), works like a charm :-)"
45684,0,Change has been successfully merged into the git repository.
45687,0,Change has been successfully merged into the git repository.
45690,0,Change has been successfully merged into the git repository.
45694,0,Change has been successfully merged into the git repository.
45702,0,Patch Set 1:(2 comments)looks good. Only one minor comment.
45706,0,Change has been successfully merged into the git repository.
45708,0,Change has been successfully merged into the git repository.
45712,0,Change has been successfully merged into the git repository.
45720,0,Change has been successfully merged into the git repository.
45723,0,Change has been successfully merged into the git repository.
45726,0,Change has been successfully merged into the git repository.
45729,0,Change has been successfully merged into the git repository.
45732,0,Change has been successfully merged into the git repository.
45735,0,Change has been successfully merged into the git repository.
45738,0,Change has been successfully merged into the git repository.
45741,0,Change has been successfully merged into the git repository.
45743,0,Change has been successfully merged into the git repository.
45746,0,Change has been successfully merged into the git repository.
45750,0,Change has been successfully merged into the git repository.
45752,0,Change has been successfully cherry-picked as ed78c91ecfaf24abc354730eb3a180e51ad7ee2f
45753,0,Change has been successfully cherry-picked as 867fc48a4b2ef050999e6debe03b47e6b515d116
45764,0,Change has been successfully merged into the git repository.
45767,0,Patch Set 1: Verified+1 Code-Review+2trying to submit this as fast as possible... thanks!
45768,0,Change has been successfully merged into the git repository.
45771,0,Change has been successfully merged into the git repository.
45774,0,Change has been successfully merged into the git repository.
45776,1,Patch Set 1:Please add a test that would fail without this change.
45783,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1748/ : UNSTABLE
45785,0,Change has been successfully cherry-picked as 702f5cb4c8adbfedfbfce18bd6dc732621024f71
45789,0,Change has been successfully cherry-picked as 07dcb970fab42e8af9e3bf87a1014a9bfefbcfc5
45790,0,Patch Set 3:Thanks a lot Marc and Elena !
45792,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1663/ : UNSTABLE
45795,0,Change has been successfully cherry-picked as 4fc7a1cf91494b224fff012c12d920a63e1c7c1a
45799,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1696/ : UNSTABLE
45800,1,Patch Set 1: Verified+1The test failure is unrelated
45804,0,Change has been successfully cherry-picked as 7f206c037ae48a5b5827f4fe88f716caa5beae73
45808,0,Change has been successfully merged into the git repository.
45818,0,Change has been successfully merged into the git repository.
45821,0,"Patch Set 2: Verified+1 Code-Review+2I tested time graph views a bit (CFV, RV, XML-driven one), they still seem to be working fine."
45825,0,Change has been successfully cherry-picked as 2e7d9caabf37117bb27d6e6b41e3ddafead3fdd0
45830,0,Change has been successfully merged into the git repository.
45836,0,Change has been successfully merged into the git repository.
45842,0,Change has been successfully merged into the git repository.
45846,0,Change has been successfully merged into the git repository.
45852,0,Change has been successfully merged into the git repository.
45860,0,Change has been successfully merged into the git repository.
45861,0,Change has been successfully cherry-picked as c817c3aed55178efce7751f2d40a4bfbcb0691e5
45864,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1695/ : UNSTABLE
45866,0,Patch Set 2: Verified+1 Code-Review+2I just added a comment to explain where the $(OS) variable came from.Thanks Simon.
45867,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1739/ : UNSTABLE
45870,0,Change has been successfully merged into the git repository.
45873,0,Change has been successfully cherry-picked as 06ec7bf6e9326c07b3612eb38e32be11f128dfd9
45877,0,Change has been successfully merged into the git repository.
45885,0,Change has been successfully cherry-picked as cacb3d663d8ec5ff90685babe6804ce172d34a95
45891,0,Change has been successfully merged into the git repository.
45893,0,Patch Set 1:To merge to shape branch. thanks.
45895,0,Change has been successfully merged into the git repository.
45898,0,Change has been successfully merged into the git repository.
45902,0,Change has been successfully merged into the git repository.
45907,0,Change has been successfully merged into the git repository.
45911,0,Change has been successfully merged into the git repository.
45922,0,Change has been successfully merged into the git repository.
45926,1,"Patch Set 1:I would suggest not doing any operations in the static initializer, it might be called in some not appropriate moments, so it should be safer not touching platform there."
45927,1,"Patch Set 1:Alex, there is a lot already done in the static initializer even before my patch. And my patch does not add to the complexity of the static initializer - it still uses the Eclipse Extension API that is already in use inside this block. Do you mean that this patch may cause any regression? If yes, please clarify. Or perhaps, you just propose further improvement to get completely rid of the static initializer - perhaps a topic for another patch?"
45928,1,"Patch Set 1:The static initializer is called while class loader is holding some lock. Instantiating a class from it could cause activation of another plugin, etc, and executing it's activator, etc.If another thread is loading classes too, but in different order - there could be a deadlock IMHO."
45933,0,Change has been successfully merged into the git repository.
45936,0,Change has been successfully merged into the git repository.
45938,0,Change has been successfully merged into the git repository.
45943,0,Change has been successfully merged into the git repository.
45944,0,Change has been successfully cherry-picked as 8e2ca2e9b7571942acb9b1e5f3c5030bccb64af5
45948,0,Patch Set 1: Verified+1 Code-Review+2Thanks for patch Bartek!
45949,0,Change has been successfully merged into the git repository.
45953,0,Change has been successfully cherry-picked as cd3fbf5ce6b7e68ec372e78a5006afac175ed6f4
45959,1,"Patch Set 5: Code-Review+1(1 comment)But will we get unnecessary warnings when java finally annotates its methods? Like when Collections.EMPTY_LIST is @NonNull, we will still have the check(Collections.EMPTY_LIST) and we won't know. Though I'm pretty sure you or your clone will notice and remove it all by then, or we'll be using java 10, which will obsolete all that stuff anyway ;-)"
45960,1,"Patch Set 5:(1 comment)Once everything will be annotated we won't need this class at all anymore, so we'll be able to remove it and see everywhere it was called. But yeah that won't be anytime soon, so I guess this class will be useful for a while.> you or your cloneB-but I'm not Cloneable, that API is bad! :P"
45975,0,Change has been successfully cherry-picked as 159a57e3351a4b3ca85a620a63d1d390e2b7abdd
45976,0,Change has been successfully cherry-picked as 9c4430e262db22f59fefe19a856c5b95bb6c9e93
45980,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/1829/ : UNSTABLE
45981,0,Change has been successfully cherry-picked as c783c941c721336cfdb9b9f8c8585dda7d2ac297
45984,0,Change has been successfully cherry-picked as 8f5719acabbcd250e9cf763d3ba649787ef2308d
45991,0,Change has been successfully merged into the git repository.
45994,0,Change has been successfully merged into the git repository.
45997,0,Change has been successfully merged into the git repository.
46005,0,Change has been successfully merged into the git repository.
46011,0,Change has been successfully merged into the git repository.
46016,0,Change has been successfully merged into the git repository.
46021,0,Change has been successfully merged into the git repository.
46026,0,Change has been successfully merged into the git repository.
46028,0,Patch Set 1:Can be merged to shape branch. Thanks
46030,0,Change has been successfully merged into the git repository.
46036,0,Change has been successfully cherry-picked as bf6ab3be615a3c33a03815df85b3863729bafad4
46040,0,Change has been successfully merged into the git repository.
46042,0,Change has been successfully merged into the git repository.
46047,0,Change has been successfully pushed.
46049,0,Patch Set 1: Verified+1 Code-Review+2Test review to test gerrit!
46050,0,Change has been successfully merged into the git repository.
46054,0,Change has been successfully merged into the git repository.
46057,0,Change has been successfully merged into the git repository.
46061,0,Change has been successfully merged into the git repository.
46063,0,Change has been successfully merged into the git repository.
46067,0,Change has been successfully merged into the git repository.
46074,0,Change has been successfully merged into the git repository.
46078,0,Change has been successfully merged into the git repository.
46080,0,Change has been successfully merged into the git repository.
46088,0,Change has been successfully merged into the git repository.
46093,0,Change has been successfully merged into the git repository.
46096,0,Change has been successfully merged into the git repository.
46104,0,Change has been successfully merged into the git repository.
46113,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1676/ : UNSTABLE
46117,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1678/ : UNSTABLE
46123,0,Change has been successfully cherry-picked as 0f49ec201507feaf2e1d21bbd4db1c9fa07ea62f
46125,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1660/ : UNSTABLE
46127,0,Change has been successfully cherry-picked as dfa0ef96635bafc6788f303084cb0a5fb0769cb6
46141,1,Patch Set 4: Code-Review-1(1 comment)Sorry!
46155,0,"Patch Set 3:Patrick, I'd like you to take a look at this patch, just to be sure I'm not doing something silly here. Thanks"
46156,1,"Patch Set 3:I really dislike this patch and ""I would prefer that you didn't submit this"" but I don't know if it's a valid reason to -1 it."
46157,1,"Patch Set 3:Could you expand on your reason for really disliking this patch? With those null checks, the views implementing it can be NonNullByDefault and that avoids having to check every field and parameter that we know from the base class shouldn't be null."
46158,1,"Patch Set 3:I don't mind when null annotations are used to avoid null checks on something non-nullable or to force null checks on something that is known to be nullable.What I dislike is the cruft that is added when you have to null check something that can never be null but isn't tagged as non-nullable, e.g. the illegal state exceptions being thrown, having to create dummy empty strings, or adding unnecessary local variables.Is there a way to assume non-null what is unknown? You can fix a missing null check but that cruft stays forever ;)"
46159,1,"Patch Set 3:> cruftAin't that a fun word? ;)> You can fix a missing null check but that cruft stays foreverNot technically forever. Once we move to Java 8, type annotations will also apply for generic types, for instance List<@NonNull String>, so all the List.get() methods will be able to return @NonNull things.And when/if the Java methods themselves are instrumented with standardized @NonNull annotations, all the .toString() and such will be able to return @NonNull objects directly.At these points, we will get ""unnecessary null check"" warnings, so we'll know where to remove all these extra checks.I dislike cruft too, but knowing it's cruft that one day will warn use when/where we can remove it, it eases my mind a bit. ;)"
46169,0,Change has been successfully cherry-picked as 5a5977986920eac2a3d5bbcd2665c0e03b480c43
46175,0,Change has been successfully cherry-picked as f44be666f279a4493bb2ad1e218f668dc4eace1f
46188,0,Change has been successfully merged into the git repository.
46192,0,Change has been successfully merged into the git repository.
46194,0,Change has been successfully merged into the git repository.
46204,0,Change has been successfully merged into the git repository.
46208,0,Change has been successfully merged into the git repository.
46217,0,Change has been successfully cherry-picked as 12685851a54fed76b2af25335f748bfd89e0e8bf
46218,0,Patch Set 3: Code-Review-1(4 comments)Looks mostly harmless. I prefer removing all illegalStateException(null)s
46219,0,Patch Set 3:No warnings added! :)
46223,0,Change has been successfully cherry-picked as cd055d37e68c1d61d9acb4571b4f656c0636b561
46226,0,Patch Set 3: Code-Review+1Looks good here!
46229,0,"Patch Set 1: Code-Review+1(3 comments)Looks good to me, only minor nitpicks as comments."
46235,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1671/ : UNSTABLE
46239,0,Change has been successfully cherry-picked as 1e517e23e45c19d5601d62d6b66d26b5cae4665d
46243,0,Change has been successfully cherry-picked as 6eb9f03b27c31493bf32b8112bde71051c8a0f42
46244,0,Change has been successfully cherry-picked as 6b11be5292950be9835e2e899403384e03581a9a
46248,0,Change has been successfully cherry-picked as dc327459b137e28965af4c6cded4a847a91e6c86
46250,0,Patch Set 1: Code-Review+1I like this. It pleases me
46259,0,Change has been successfully merged into the git repository.
46263,0,Change has been successfully merged into the git repository.
46269,0,Patch Set 2: Verified+1 Code-Review+2Looks good.  Thanks!
46270,0,Change has been successfully cherry-picked as 8667f5a5aee85c8a663f2c0773f9bcf021e91a1c
46275,0,Change has been successfully merged into the git repository.
46282,0,Change has been successfully merged into the git repository.
46285,0,Change has been successfully merged into the git repository.
46288,0,"Patch Set 1: Code-Review+1Tests are working fine for me but it would make more sense for me to place them in :   - org.eclipse.papyrus.uml.modelexplorer.tests  - org.eclipse.papyrus.infra.nattable.modelexplorer.test (New Plugin)The tests are using an uml model as data. (We may have problems/other behavior on other diagrams Sysml, Profile...).Also we should try to keep the same dependencies bewtween XXX and XXX.tests plugins (except for junit dependencies)since org.eclipse.papyrus.views.modelexplorer doesn't depend on nattable, we should avoid this dependency in the tests."
46292,0,Change has been successfully merged into the git repository.
46294,0,Change has been successfully cherry-picked as f327ccd103adce493f034dc64d45c23da7f9b9af
46296,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1665/ : UNSTABLE
46297,0,"Patch Set 2: Code-Review+1It makes sense to me, as you mentioned, not easy to reproduce.Thanks Marc !"
46300,0,Change has been successfully merged into the git repository.
46306,0,Change has been successfully merged into the git repository.
46310,0,Change has been successfully merged into the git repository.
46312,0,Change has been successfully merged into the git repository.
46316,0,"Patch Set 2:(1 comment)use a constant for common used strings like ""test"" the rest looks fine"
46320,0,Change has been successfully merged into the git repository.
46324,0,Change has been successfully merged into the git repository.
46327,0,Change has been successfully cherry-picked as 3831e6d0678e38b97b9685610ab258a72ea27e20
46331,0,Change has been successfully pushed.
46332,1,"Patch Set 2:It look that by accident I pushed patch directly to master, to be honest I'm not sure how I did it. I need to check my configuration.But beside this, I changed PHPTextSequenceUtilities.getStatement to not return null and I found issue that was causing problem with negative length. I decide to remove null from getStatement method result because AbstractCompletionContext is heavily using getStatement method and adding everywhere null checking would be bad idea in my opinion. @ThierryLet me know what you think about it."
46333,1,"Patch Set 2:Oh, and I also changed null checking into zero length checking to avoid unnecessary computation."
46334,0,"Patch Set 2:@Michal : your solution & latest patch looks nice so, good job ;)"
46337,0,Patch Set 1:(1 comment)Thanks for review! I will use your comments and will prepare updated patch:)
46340,0,Change has been successfully merged into the git repository.
46343,0,Change has been successfully merged into the git repository.
46346,0,Change has been successfully merged into the git repository.
46351,0,Change has been successfully merged into the git repository.
46355,0,Change has been successfully merged into the git repository.
46359,0,Change has been successfully merged into the git repository.
46362,0,Change has been successfully merged into the git repository.
46363,1,"Patch Set 1:This got reverted, see bug 453379 for details."
46366,0,Change has been successfully merged into the git repository.
46369,0,Change has been successfully merged into the git repository.
46380,0,Change has been successfully merged into the git repository.
46384,0,Change has been successfully merged into the git repository.
46386,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/423/ : UNSTABLE
46387,1,"Patch Set 1: Code-Review-1I think the intention to show the base version in the right hand pane was that the other two stages are shown already in the left hand pane. So it's kind of a poor man's 3 way compare.If we do what you propose here we should offer 3 way compare like in the merge tool and show the same stage in the right pane like the merge tool does (currently it shows the other branch than your change. We should also show the shortened commit message in the title to make it easier to recognize which version is shown in which pane.Alternatively we could simply correct the title of the right pane to ""Common base version"" or ""Common ancestor"".Ideally we should have a 4 way compare which can show all 3 stages from the index and the workspace content in a 4th pane. p4merge [1] is a tool doing that in a nice way.[1] http://www.perforce.com/product/components/perforce-visual-merge-and-diff-tools"
46388,1,"Patch Set 1:> I think the intention to show the base version in the right hand pane was that the other two stages are shown already in the left hand pane. So it's kind of a poor man's 3 way compare.I don't think there was any intention when this was chosen, apart from ""CONFLICT"" files are shown in unstaged changes, so compare against index like the other cases. It just so happens that the first index entry is the base stage.Also, ""two stages are shown already in the left hand pane"" -> this is no longer the case after you started resolving conflicts.I'm not sure. When someone wants the merge tool behavior, they can just use the merge tool instead, no? Or what would be the difference between this new compare and merge tool?> Alternatively we could simply correct the title of the right pane to ""Common base version"" or ""Common ancestor"".-1. I've heard from several people that the right pane ""makes no sense"", including the bug reporter. I myself sometimes just staged the conflict and then did compare to see the diff I actually wanted.For modified files, comparing shows the differences to what is committed (or staged in case of partial staging). This is just as useful for conflicting files, for a ""what's the effective result of this merge?"".So, in summary, I think the merge tool should be used for a nice real 3-way compare, and compare should be a simple ""what would be the changes if I commit the file"", as in other cases.(Btw, I'll be on vacation the next few weeks, so won't be able to do any changes, sorry :).)"
46390,0,"Patch Set 2:>I don't think there was any intention when this was chosen, apart from ""CONFLICT"" files are shown in unstaged changes, so compare against index like the other cases. It just so happens that the first index entry is the base stage.probably you are right, I was just guessing> Also, ""two stages are shown already in the left hand pane"" -> this is no longer the case after you started resolving conflicts.true, I missed this use case> I'm not sure. When someone wants the merge tool behavior, they can just use the merge tool instead, no? Or what would be the difference between this new compare and merge tool?again you are right> I've heard from several people that the right pane ""makes no sense"", including the bug reporter. I myself sometimes just staged the conflict and then did compare to see the diff I actually wanted.understood> For modified files, comparing shows the differences to what is committed (or staged in case of partial staging). This is just as useful for conflicting files, for a ""what's the effective result of this merge?"".+1> So, in summary, I think the merge tool should be used for a nice real 3-way compare, and compare should be a simple ""what would be the changes if I commit the file"", as in other cases.agreed, now I understand the motivation> (Btw, I'll be on vacation the next few weeks, so won't be able to do any changes, sorry :).)enjoy your vacation :-)rebased this change"
46392,0,Change has been successfully merged into the git repository.
46395,0,Change has been successfully merged into the git repository.
46399,0,Change has been successfully merged into the git repository.
46404,0,Change has been successfully merged into the git repository.
46407,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/431/ : UNSTABLE
46408,0,Change has been successfully merged into the git repository.
46410,0,Change has been successfully merged into the git repository.
46423,0,Change has been successfully merged into the git repository.
46426,0,Change has been successfully cherry-picked as 67a0ee8c965da2ec4bee77707481a01cf3b00380
46430,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1657/ : UNSTABLE
46432,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1669/ : UNSTABLE
46433,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1670/ : UNSTABLE
46436,0,Change has been successfully cherry-picked as b53246227a4f3470545094eb0657dd5873a0b0e6
46442,0,Change has been successfully cherry-picked as 579acd0197026ff10930d259761c14408d443619
46443,0,Change has been successfully cherry-picked as 80f680bea71509392ecb38ff8e277276881e8ec7
46450,0,Change has been successfully cherry-picked as 73fce654eb027eefa888a36d79097e6acf567fdc
46460,0,Patch Set 4: Verified+1 Code-Review+2Thanks for patch Thierry!
46461,0,Change has been successfully merged into the git repository.
46465,1,Patch Set 3:Patch works ok for me. No more exceptions. Thanks :) Can you update commit message with bug id?
46469,0,Change has been successfully merged into the git repository.
46477,0,Change has been successfully cherry-picked as 351f1b86a4d04bff792fd4a36505ae2e03bd6625
46479,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1673/ : UNSTABLE
46480,1,Patch Set 2: Verified+1 Code-Review+2Test failure is unrelated.
46482,0,"Patch Set 4: Code-Review+1> What do you mean by ""String -> Integer -> String"".Yeeeaah, in my mind, the aspect was still using the old getSource(), which returned a String. But yes it's Integers all the way down now!Updated to latest branch. This is looking good!"
46485,0,"Patch Set 1: Code-Review+1Looks good. Obviously it will have to wait until the prerequisite patches are merged ;)Once we add the new IKernelTrace plugin, that interface could provide methods for all its get*Criterion, so we wouldn't need to iterate through all of them to find a specific one.Side note about criteria, I was thinking the resolve() method could instead return an Object, and every specific criterion type could return a more specific type. So a CpuCriterion.resolve() could return a Integer, which is slightly better than doing Integer.parseInt(String) if you just want to use the int value."
46486,0,"Patch Set 1:Indeed, returning an Object would make sense. But doesn't that sound real close to weak-typing to you? ;-)Anyway, for now, we only cases where criterion return a simple type that is easy to go back and forth from String, but in a not so remote future, the criterion might return... an analysis! or a state system! or another criterion!Remember that discussion we had a while ago about ""how to get data from an analysis"" and we suggested a stream of <something> like from ""trace A"", get ""analysis X"", get ""the state system"", get ""this path"". That <something> might be the criterion! Oh right, you just wanted to replace the table columns concept... :p"
46487,0,Change has been successfully cherry-picked as 1786026ded6c8196bf863a766894d5d2778a8df2
46492,0,"Patch Set 3:What do you mean by ""String -> Integer -> String"". Actually, the aspect itself (CtfCpuAspect for instance) has the data directly as an int, so it returns an int, no cast. And though the attribute tree uses a String, most of the analysis code use the int value that can now be used without cast.It's the original resolve of the cpu that forced int -> String -> Integer.parseInt() when an Integer is required in code. Just saying."
46499,0,Change has been successfully cherry-picked as 52293ccd97b6738740118a89d135bf4518a2e2a9
46500,0,Change has been successfully cherry-picked as f55292fa09996731abf7dffb6baf9b72ebda125a
46507,0,Change has been successfully cherry-picked as 7a6017331c4b7a548f09ee220d5de5d4270e2a92
46510,0,Change has been successfully merged into the git repository.
46513,0,Change has been successfully merged into the git repository.
46517,0,Change has been successfully merged into the git repository.
46520,0,Change has been successfully merged into the git repository.
46521,0,Change has been successfully cherry-picked as 71dcfb166f7dfca91b386850d76e62701fc662ff
46527,0,Change has been successfully cherry-picked as 1dc4a9c20e7e70ea3df00d21bcf307217661afa9
46530,0,Change has been successfully cherry-picked as a0ec5505b8e46bc54b1ed3185c5820ac57b4bb5d
46534,1,"Patch Set 1: Code-Review+1Looks good, I like the lack of surprise try-catches"
46536,0,Change has been successfully cherry-picked as 39e576457cb40f601f1ad68296f990dc2bf5f759
46539,0,Change has been successfully cherry-picked as 39b5e5fbf8c9b61a616659c17757900e5d1d88d3
46540,0,Change has been successfully cherry-picked as 510829ccb8c979d25647609cedcc74387b79207c
46543,0,Change has been successfully cherry-picked as b982479356e888df99467687a7f97fd4c3ad8e08
46547,0,Change has been successfully merged into the git repository.
46553,0,Change has been successfully merged into the git repository.
46565,0,Change has been successfully merged into the git repository.
46573,0,Change has been successfully merged into the git repository.
46586,0,Change has been successfully merged into the git repository.
46594,0,Change has been successfully merged into the git repository.
46597,0,Change has been successfully merged into the git repository.
46601,0,Change has been successfully merged into the git repository.
46602,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6521/ : UNSTABLE
46603,0,Patch Set 2:Hi Matthias. Have you intentionally waited until Nov 29 before you uploaded this pathset? Look at the history of this change .... exactly 3 years dormant until beeing rebased and accepted. :-)
46611,0,Change has been successfully cherry-picked as ad648477fe1948f2e9b74ebb354dfc219215edb9
46615,0,Change has been successfully merged into the git repository.
46620,0,Change has been successfully merged into the git repository.
46624,0,Change has been successfully merged into the git repository.
46633,0,Change has been successfully merged into the git repository.
46637,0,Change has been successfully rebased as f03ff91d4591d559783e8970172d62fc1ceb25d0
46643,0,Change has been successfully merged into the git repository.
46646,0,Change has been successfully merged into the git repository.
46649,0,Change has been successfully merged into the git repository.
46653,0,Change has been successfully merged into the git repository.
46659,0,Change has been successfully merged into the git repository.
46673,0,Change has been successfully merged into the git repository.
46676,0,Change has been successfully merged into the git repository.
46678,0,Patch Set 6:Build SUCCESSFUL. Now starting integration tests...
46681,0,Patch Set 5:Build SUCCESSFUL. Now starting integration tests...
46683,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
46686,1,"Patch Set 1:Integration test has really helped me to design this patch. And a first iteration of the patch was failing and integration-test caught it. The failure was in the retrieval of the property from command-line.I believe there is value for integration test here since there is room for errors, or at least, there was.Anyway, I'll apply your suggestion to this patch, and I'll try to add a unit test."
46689,0,Patch Set 7:Build SUCCESSFUL. Now starting integration tests...
46693,0,Patch Set 4:Build SUCCESSFUL. Now starting integration tests...
46698,0,Patch Set 9:Build SUCCESSFUL. Now starting integration tests...
46700,0,Change has been successfully merged into the git repository.
46701,0,Patch Set 9:Thanks a lot!
46703,0,Change has been successfully merged into the git repository.
46717,0,Change has been successfully merged into the git repository.
46719,1,"Patch Set 4: Code-Review+2 Verified+1I get this error frequently now, I commit this to find out what the cause of this error is."
46720,0,Change has been successfully merged into the git repository.
46727,0,Change has been successfully merged into the git repository.
46735,0,Change has been successfully merged into the git repository.
46738,0,Change has been successfully merged into the git repository.
46741,0,Change has been successfully merged into the git repository.
46748,0,Change has been successfully merged into the git repository.
46753,0,Change has been successfully merged into the git repository.
46756,0,Change has been successfully merged into the git repository.
46759,0,Change has been successfully merged into the git repository.
46762,0,Change has been successfully merged into the git repository.
46765,0,Change has been successfully merged into the git repository.
46766,0,Change has been successfully cherry-picked as 4540412a7fc426b969761c34000bdebf0696dd92
46769,0,Patch Set 2: Code-Review+1looks familiar and good
46780,0,Change has been successfully merged into the git repository.
46784,0,Change has been successfully merged into the git repository.
46787,0,Change has been successfully merged into the git repository.
46789,0,Patch Set 1:Would it be fine to update the hudson verification job to build with Java 7 ?
46790,1,"Patch Set 1:Short answer: Yes and noLonger answer:We can change the build to run maven with 1.7. But then we should also set up a toolchain to make sure the build compiles against proper JRE version.Even longer answer:I think it's important to make sure we compile against a JRE matching our BREE, so no new JRE API sneaks in. MPC currently has a BREE of J2SE-1.5, but we should update that to JavaSE-1.6 for Mars, since we already have a lot of dependencies to bundles with BREE Java-1.6. We can't update to JavaSE-1.7 however, because MPC is part of all EPP packages and some have decided against a move to require 1.7 for now."
46793,0,Patch Set 2: Code-Review+2All looking good now that build runs with java 7 and a bree-based toolchain. Thanks for the patch and for making me finally set up toolchains properly ;)
46795,0,Change has been successfully merged into the git repository.
46798,0,Change has been successfully merged into the git repository.
46802,0,Change has been successfully merged into the git repository.
46804,1,"Patch Set 1:This can be tested like this:# browserwget -qO - --header ""User-Agent: Mozilla/1.7.1"" http://www.eclipse.org/downloads/download-dev.php?file=/technology/epp/downloads/release/luna/SR1/eclipse-java-luna-SR1-linux-gtk.tar.gz\&format=xml# Machinewget -qO - --header ""User-Agent: Java/1.7.1"" http://www.eclipse.org/downloads/download-dev.php?file=/technology/epp/downloads/release/luna/SR1/eclipse-java-luna-SR1-linux-gtk.tar.gz\&format=xml"
46807,0,Change has been successfully merged into the git repository.
46817,0,"Patch Set 4:> The patch includes the following changesIMHO it is very good that you explain your modifications here, but it may also be worth to edit the commit message, e.g.- remove ""(Requires that the host and all fragments have the same qualifier.)""- add a comment on the buildSWT.xml changes, e.g. ""Modified buildSWT.xml to generate the time stamp qualifiers and write the qualifiers in the pom files in source and binaries repos."""
46819,0,Change has been successfully merged into the git repository.
46821,0,Change has been successfully merged into the git repository.
46833,0,Change has been successfully merged into the git repository.
46837,0,Change has been successfully merged into the git repository.
46841,0,Change has been successfully merged into the git repository.
46849,0,Change has been successfully cherry-picked as 83dcfe09bb3865e27b76181f5385329ee2208494
46850,0,Change has been successfully cherry-picked as 46167f03cd0ca28084902ad12ba1bec3531e1de2
46864,0,Change has been successfully cherry-picked as 089968cdf6221405020576a788afcc7bd66bb1fb
46866,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1528/ : UNSTABLE
46869,0,Change has been successfully cherry-picked as f9c68218c869d9caad783b5de5ac62583d2efd49
46872,0,Change has been successfully merged into the git repository.
46876,0,Change has been successfully merged into the git repository.
46879,0,Change has been successfully merged into the git repository.
46882,0,Change has been successfully merged into the git repository.
46885,0,Change has been successfully merged into the git repository.
46889,0,Change has been successfully merged into the git repository.
46891,1,Abandoned
46896,0,Change has been successfully merged into the git repository.
46902,0,Patch Set 2: Verified+1 Code-Review+2Thanks for patch Bartek!
46903,0,Change has been successfully merged into the git repository.
46904,0,Change has been successfully cherry-picked as a0eb229b0ec5bace7298473c54f7006e4ece5fa3
46914,0,Change has been successfully merged into the git repository.
46915,0,Change has been successfully cherry-picked as be4ab8c92a0b2584fd21d816b9f00541b73ca825
46921,0,Change has been successfully merged into the git repository.
46926,0,Change has been successfully merged into the git repository.
46933,0,Change has been successfully merged into the git repository.
46935,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
46937,0,Change has been successfully merged into the git repository.
46942,0,Change has been successfully merged into the git repository.
46947,0,Change has been successfully merged into the git repository.
46949,0,Patch Set 1: Verified+1 Code-Review+2Looks perfect.
46950,0,Change has been successfully merged into the git repository.
46963,0,Change has been successfully merged into the git repository.
46967,0,Change has been successfully merged into the git repository.
46970,0,Change has been successfully merged into the git repository.
46975,0,Change has been successfully merged into the git repository.
46986,0,Change has been successfully merged into the git repository.
46993,0,Change has been successfully cherry-picked as b562a24f965a18096a9698b4c14450dc26c28cce
47004,0,Change has been successfully cherry-picked as 95cf17fff3afd8bffcf30d20db0ca4c033363149
47007,0,Change has been successfully merged into the git repository.
47018,0,Change has been successfully merged into the git repository.
47024,0,Change has been successfully merged into the git repository.
47032,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/670/ : UNSTABLE
47036,0,Change has been successfully merged into the git repository.
47038,0,Change has been successfully merged into the git repository.
47041,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/671/ : UNSTABLE
47048,0,Change has been successfully cherry-picked as 7d3e68110d50c87d8edf336efeb1afd2d53b010f
47049,0,Patch Set 2:oh just noticed this is linuxtools and not trace compass ;-) I was wondering why it didn't cherry-pick!
47051,0,"Patch Set 2:yeah, I forgot to update them. thanks for the test :)"
47052,1,"Patch Set 4: Code-Review+1Looks good, and works with the faulty trace"
47056,0,Patch Set 2: Verified+1 Code-Review+2We finished this contribution by pair programming. Verified with manual test cases in an Eclipse 4 test application. Everything looks fine. Thanks for the help!
47057,0,Change has been successfully merged into the git repository.
47065,0,Change has been successfully merged into the git repository.
47068,0,Change has been successfully merged into the git repository.
47074,0,Change has been successfully merged into the git repository.
47078,0,Change has been successfully merged into the git repository.
47081,0,Change has been successfully merged into the git repository.
47085,0,Change has been successfully merged into the git repository.
47090,0,Patch Set 6: Verified+1 Code-Review+2Looks good.
47098,0,Patch Set 2: Verified+1 Code-Review+2Thanks for patch Bartek!
47099,0,Change has been successfully merged into the git repository.
47102,0,Change has been successfully merged into the git repository.
47105,0,Change has been successfully merged into the git repository.
47108,0,Change has been successfully merged into the git repository.
47111,0,Change has been successfully merged into the git repository.
47113,0,Change has been successfully merged into the git repository.
47115,0,"Patch Set 2: Code-Review+2 Verified+1Updated patch looks good to me, can't commit because of Danis -2."
47119,0,"Patch Set 1:Code change looks fine, but the complete reformatting of the file should be avoided. Can you update the patch Tom to remove the format change?"
47123,0,Change has been successfully merged into the git repository.
47127,0,Patch Set 4: Code-Review+1Thanks for the rebase. Still looks good. :)
47130,0,"Patch Set 2: Code-Review-1(7 comments)From a technical point of view, I don't see any issues and think the solution is fine! I only added some more minor style suggestions (sorry for not checking them earlier).Thanks!"
47132,0,Change has been successfully merged into the git repository.
47134,0,Patch Set 3: Code-Review+1Thanks for the revision! Looks good to me!
47138,0,"Patch Set 7:Thanks for your detailed comments and your pushed Patch Set! I looked at it by debugging some testcases and I think you did a very good job in abstracting away from the ""concrete"" cases to a more general approach.I also integrated your comment to the test from Patch Set 4."
47139,1,"Patch Set 7: Verified+1 Code-Review+1Ha.... forgot to change the test when I pushed the modifications :). Thanks for catching that.This change seems to solve your use cases, but I'd like someone else to review the latest patch set in case we've missed something on this."
47144,0,Change has been successfully merged into the git repository.
47149,0,Change has been successfully merged into the git repository.
47151,1,"Patch Set 1:This looks good to me, and optional dependencies are indeed the right way to go since you want it by default unless it can't be installed.Is there anything more specific you'd like me to check?"
47153,1,"Patch Set 1:If we do that, it would mean that in general, people installing this feature would also get the source feature installed. Is this what they want? My first intuition is that it's not necessary."
47159,0,Change has been successfully rebased as ba97d6368377a31c9e90e665f2f293f6df01b618
47162,0,"Patch Set 1:(1 comment)CQ seems to be not needed, and the rest I will do next week. Thanks!"
47172,0,Change has been successfully merged into the git repository.
47175,0,Change has been successfully merged into the git repository.
47180,0,Change has been successfully rebased as df5c59d9fd4be540deba9c76d43bfbc3bdda7050
47184,0,Change has been successfully rebased as e1b1de959820d4a71c1549a77b05e306c5ca7a12
47187,0,Change has been successfully merged into the git repository.
47190,0,Change has been successfully merged into the git repository.
47194,0,Change has been successfully merged into the git repository.
47196,0,Change has been successfully merged into the git repository.
47214,0,Change has been successfully merged into the git repository.
47219,0,Patch Set 1: Verified+1 Code-Review-1The reference to base images such as the info bulb has been in-lined into the style template as a base64 encoded string.This will lead to a lot of duplicate data in the generated HTML output: ((HTML file count - 1) * size of images) instead of the approach that is currently used.I'd like to see a solution referencing those pictures instead of in-lining them.
47222,0,Change has been successfully merged into the git repository.
47226,0,Change has been successfully merged into the git repository.
47232,0,Change has been successfully merged into the git repository.
47240,0,Change has been successfully merged into the git repository.
47271,0,Change has been successfully cherry-picked as 9e1aea82a55afc6a84d7c54783c08bf3e9509573
47279,0,Change has been successfully merged into the git repository.
47284,0,Change has been successfully cherry-picked as 8f9ad413373838ae116dcbd95d61e370585cc7e4
47285,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/638/ : UNSTABLE
47289,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/652/ : UNSTABLE
47291,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/663/ : UNSTABLE
47298,0,Change has been successfully merged into the git repository.
47300,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/653/ : UNSTABLE
47301,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/651/ : UNSTABLE
47310,0,Change has been successfully merged into the git repository.
47314,1,"Patch Set 2:yup. Sorry I should've said ""we don't need to update master"""
47315,0,Change has been successfully cherry-picked as f88086ac4baa24853d02881406b1c4660ec526aa
47321,0,Change has been successfully merged into the git repository.
47324,0,Change has been successfully merged into the git repository.
47328,0,Change has been successfully merged into the git repository.
47335,0,Change has been successfully merged into the git repository.
47339,0,Change has been successfully merged into the git repository.
47348,0,Patch Set 3: Verified+1 Code-Review+2Ok for me. Thanks for contribution
47351,0,"Patch Set 4: Verified+1 Code-Review+2Ok for me, thanks for rebase."
47354,0,Change has been successfully merged into the git repository.
47362,1,Patch Set 1:Agreed. My fault.
47364,0,Change has been successfully merged into the git repository.
47365,1,"Patch Set 2: Verified+1 Code-Review+2I think ""null"" was a mistake in this case. accepting contribution"
47366,0,Change has been successfully merged into the git repository.
47369,0,"Patch Set 1:Remi & Camille, please take a look at the change https://git.eclipse.org/r/#/c/34447/1/plugins/uml/diagram/org.eclipse.papyrus.uml.diagram.clazz/custom-src/org/eclipse/papyrus/uml/diagram/clazz/custom/edit/commands/RestoreRelatedLinksCommand.javaIt should help with the very first invocations of the UmlViewProvider where ""null"" is filtered by xml declaration. In just a normal GMF-T this would be safe change, but you may know better whether the old null hint here was intentional."
47374,0,Change has been successfully merged into the git repository.
47379,0,Change has been successfully merged into the git repository.
47382,1,"Patch Set 1: Verified+1 Code-Review+2Accepted as a temporary patch. we are working on the code generation to remove edition command and to move them in a centralized service, so that should not be placed in specific code like this. Moreover, I would prefer not to add generated not tags on generated code, as this is a bad solution for maintenance and evolution of code generators.This code is pushed more for documentation of the bug resolution than real bug fix."
47389,0,Change has been successfully merged into the git repository.
47392,1,Patch Set 1:Failing because of :org.eclipse.papyrus.uml.alf.ui .................... FAILURE [  0.973 s][ERROR] import org.eclipse.xtext.ui.codetemplates.ui.partialEditing.IPartialContentAssistParser;[ERROR] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[ERROR] The import org.eclipse.xtext.ui.codetemplates cannot be resolved=> simply try to rebaseI didn't find any new commit on alf.ui that brokes the build (works on alf integration #447580 are still in gerrit)
47395,1,"Patch Set 2:What you indicates it's  the fix to have also the undo/redo menu when there is no diagram open. I would have same Properties View ( i.e. Undo/Redo) than Editor but, effectively, it seems too fragile. I will directly manage (i.e. create and clear) Properties View. I am going to create its own PropertySheetPage for Model Explorer view to contribute to Undo/Redo menu."
47397,0,Change has been successfully merged into the git repository.
47400,0,Patch Set 2: Verified+1 Code-Review+2Pushing to master. Thanks for contribution
47401,0,Change has been successfully merged into the git repository.
47409,0,Change has been successfully merged into the git repository.
47412,1,"Patch Set 1: Code-Review-1This changeset contains changes to 3 files, 2 of them are non-functional changes unrelated to the issue at hand:- Changes in PapyrusPaletteService.java- Changes in XMLPaletteApplicator.javaWhile the changes in these two files are of interest for another reason I would recommend to submit them in another patch for the the support of i18n (or lack of in this case).Beware that FilteringPaletteProvider used to only proxy palettes providers of type DefaultPaletteProvider, and not the generic IPaletteProvider because it was not guaranteed to work on all GMF IPaletteProvider. This is important because the FilteringPaletteProvider is part of the public API (per Papyrus policy of having all publicly exposed component as part of the public API). This could induce false expectations from the user, especially if a custom user-defined provider does not support the way it is proxied.Indeed, the FilteringPaletteProvider have a peculiar way of using the proxied palette provider by resetting its contributions repeatedly (on line 260). This works for the DefaultPaletteProvider because we know the inner workings of this class, but this is not guaranteed to work on all IPaletteProvider. Note that relying on the knowledge of the inner workings of DefaultPaletteProvider is not a nice pattern ...Other mprovement track: Now that WalkerPaletteContributionHelper (in FilteringPaletteProvider.java) has non-static methods and uses instance fields, we could optimize its member (private) methods so that they do not instantiate a bunch of lists for nothing but all contribute to the same. We can do that by passing the resulting list as a parameter, or as an instance field.Side note regarding style: there are some trailing whitespaces in the contributed changes in FilteringPaletteProvider.java"
47413,0,"Patch Set 1:About cleaning (//$NON-NLS-1) I don't think that there is any  official Papyrus recommendation for this sort of improvement. (continuously vs standalone commit)About FilteringPaletteProvider, it should work on any IPaletteprovider. For example it should also work recursively and on ExtendedpluginPaletteProvider (new recommended way of palette customization)=> Is there any know use case where this doesn't work ? About WalkerPaletteContributionHelper  : I think there will be another feature for this. We are reading the file for each palette, although it could be read only the first time."
47415,0,Change has been successfully merged into the git repository.
47418,1,Patch Set 2:We should retrigger the build of this change because it failed due to an internal error of Tycho (cause unknown).
47420,1,"Patch Set 2: Verified+1 Code-Review+2Ok for me, but unfortunately, I won't be able to push until CI is up again."
47425,0,Change has been successfully merged into the git repository.
47433,0,Change has been successfully merged into the git repository.
47440,0,"Patch Set 2: Verified+1 Code-Review+2Ok for me, pushing to git. thanks for cherry-pick"
47441,0,Change has been successfully merged into the git repository.
47443,0,"Patch Set 1: Code-Review+1cherry pick (manually rebased, should be good?)"
47447,0,Change has been successfully merged into the git repository.
47455,0,Patch Set 4: Verified+1 Code-Review+2OK for me. thanks foir contribution and rebase.
47456,0,Change has been successfully merged into the git repository.
47466,0,Change has been successfully merged into the git repository.
47469,0,Change has been successfully merged into the git repository.
47471,0,Change has been successfully merged into the git repository.
47478,0,Change has been successfully merged into the git repository.
47484,0,Change has been successfully merged into the git repository.
47487,0,Change has been successfully merged into the git repository.
47497,0,Change has been successfully merged into the git repository.
47501,0,Change has been successfully merged into the git repository.
47503,0,"Patch Set 1: Code-Review-1(1 comment)Thank you for this snippet. I would like to change a little bit, though.If you want to change your snippet, just reclick ""Share Snippet(s)"" but make sure to include the Change-Id from this change in the commit message."
47510,0,Change has been successfully merged into the git repository.
47514,0,Change has been successfully merged into the git repository.
47518,0,Change has been successfully merged into the git repository.
47534,0,Change has been successfully merged into the git repository.
47537,0,Change has been successfully cherry-picked as 49ab632efd229b2b62c2ab462e9d121d8d807f4c
47538,0,Change has been successfully cherry-picked as af395d867660ccd39b749dc6605a2ab96e46a325
47540,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1429/ : UNSTABLE
47544,0,Change has been successfully cherry-picked as 8c23c86defbeaca1f8455fba9bfdd79d570f7a7d
47553,0,Change has been successfully cherry-picked as a6821a2a473475238dd08ab812b721bb58658004
47555,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/1659/ : UNSTABLE
47557,1,Patch Set 1: Verified+1(3 comments)This looks very good.  The service is a nice solution to the problem of attaching the listener to the resource set!  And the JUnit test suite is comprehensive.I only have a suggestion about the name of a constant and a few questions to clarify the intention of the code.
47560,0,Change has been successfully merged into the git repository.
47562,0,"Patch Set 2:(5 comments)Undo/redo works well.  Thanks!  It looks odd, though, that undo/redo changes the selection in the Model Explorer even when focus is currently in a diagram editor.  Especially if I have ""link with editor"" turned on in the explorer because in that case, the linking of the selection doesn't actually happen (which is a good thing, but looks like a bug).  I would expect the changed selection on undo/redo to be reflected in the diagram, but it isn't.  It's only selection changes caused by mouse or keyboard in the explorer view that are propagated to the diagram.Anyways, that can all be avoided simply by having the RevealResultCommand do its thing only if its view part is currently active.  That's actually better than what I suggested last time (I suggested then that the command should operate on whatever is the current view, but that would be bad, because that view may provide IRevealSemanticElement but not be the explorer, which would be confusing at best)."
47563,1,"Patch Set 2:(4 comments)Further to your comments, I modified the different labels before the minor changes sink to oblivion (or to transform into bug task).The issue about synchronisation with diagram, I didn't see generic solution which can publish event or something else to synchronise all selection listener (I confess I tried with view part's selection provider but nothing happens)."
47565,0,"Patch Set 1: Verified-1 Code-Review-1Redoing a new element creation that was undone does not select-reveal the (re)created element.I understand that we can't just do as an EMF-generated editor does and attach a command-stack listener that selects the affected objects of whatever was the last command executed/undone/redone, because it could have been a command in the diagram or other context that should not alter the Model Explorer selection.   So, the idea of the command wrapper is neat.However, the command-wrapper would be more reusable/safe if it didn't explicitly look for the Model Explorer view (maybe there are multiple instances of it!) but instead checked that the currently active view provides the IRevealSemanticElement protocol.  Also, it should account for selecting the object(s) affected by undo and redo.  In the case of redo, that's the same as execute, but in the case of undo, the affected object should be the one that the new object had been created in.Also, why select-reveal only the first result?  If multiple objects were created, I would expect all of them to be selected.  At least, this is how EMF-generated editors work."
47567,1,"Patch Set 3: Verified+1 Code-Review+2(In reply to comment #7)> > The issue about synchronisation with diagram, I didn't see generic solution> which can publish event or something else to synchronise all selection listener> (I confess I tried with view part's selection provider but nothing happens).Yes, I wasn't suggesting that the synchronization should be made to work, but actually that the selection management only be done if the Model Explorer view is (still) the active view when undoing/redoing.  But on further reflection, I think that would also be confusing, and seeing the impact of undo/redo on the model is useful whatever the context."
47568,0,Change has been successfully merged into the git repository.
47576,0,Change has been successfully merged into the git repository.
47580,0,Change has been successfully merged into the git repository.
47583,0,Change has been successfully merged into the git repository.
47585,0,Change has been successfully cherry-picked as 4e34c18eeadc10cef990db8571a8c6d9053b05a4
47590,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/1658/ : UNSTABLE
47598,0,Change has been successfully merged into the git repository.
47603,0,Change has been successfully merged into the git repository.
47608,0,Change has been successfully merged into the git repository.
47610,0,Patch Set 1: Verified+1 Code-Review+2Ok for me. Thanks for contribution
47613,0,Patch Set 2: Verified+1 Code-Review+2still OK for me. Thanks for contribution
47614,0,Change has been successfully merged into the git repository.
47618,0,Patch Set 3: Verified+1 Code-Review+2Patch is good to go.
47619,0,Change has been successfully merged into the git repository.
47622,0,Change has been successfully merged into the git repository.
47627,0,Change has been successfully merged into the git repository.
47631,0,Change has been successfully merged into the git repository.
47634,0,Patch Set 1: Verified+1 Code-Review+2Ok for me. Thanks for contribution.
47635,0,Change has been successfully merged into the git repository.
47638,0,Change has been successfully merged into the git repository.
47641,0,Change has been successfully merged into the git repository.
47645,0,Change has been successfully merged into the git repository.
47648,0,Patch Set 1: Verified+1 Code-Review+2Sounds good to me. Thanks for contribution
47649,0,Change has been successfully merged into the git repository.
47653,0,Change has been successfully merged into the git repository.
47655,0,Change has been successfully cherry-picked as b0874844fcd6b9489eb0b90cde2660e0430bbc5d
47657,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1443/ : UNSTABLE
47658,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1444/ : UNSTABLE
47663,0,Change has been successfully merged into the git repository.
47667,0,Change has been successfully merged into the git repository.
47672,0,Change has been successfully merged into the git repository.
47675,0,Change has been successfully merged into the git repository.
47677,0,"Patch Set 1: Verified+1 Code-Review+2Merged, thank you for the change!"
47682,0,Change has been successfully merged into the git repository.
47689,0,Change has been successfully merged into the git repository.
47694,0,Change has been successfully merged into the git repository.
47698,0,Change has been successfully merged into the git repository.
47703,0,Change has been successfully merged into the git repository.
47707,0,Change has been successfully merged into the git repository.
47715,0,Change has been successfully merged into the git repository.
47718,0,"Patch Set 2: Code-Review+2 Verified+1Thanks Simon, looks good. I think we should ""modernize"" the ""new"" dialog a bit (use List/Collections, Varargs) as input and output but this fixes the warning reported by Dani."
47719,0,Change has been successfully merged into the git repository.
47723,0,Change has been successfully merged into the git repository.
47737,0,Change has been successfully merged into the git repository.
47742,0,"Patch Set 1: Verified+1 Code-Review+2Looks good, thank you!"
47743,0,Change has been successfully merged into the git repository.
47747,0,Change has been successfully cherry-picked as 6170ef08dc7c6ee984e5113c3508bb06f713e64d
47752,0,Change has been successfully merged into the git repository.
47757,0,Change has been successfully merged into the git repository.
47763,0,Change has been successfully cherry-picked as cebec05602c1e49eea2cb5b5e84f77af442c798c
47771,0,Change has been successfully cherry-picked as d40ddf8a7d4dc69295deb39571046a394d37041c
47782,0,Change has been successfully cherry-picked as 6d8922ce777ad1da3287e84ab90a32974b235880
47786,0,Change has been successfully cherry-picked as 8b56808c2fa4e2c7e04b352f6f6a2653e0a5761f
47788,0,Change has been successfully merged into the git repository.
47794,0,Change has been successfully merged into the git repository.
47796,0,Change has been successfully merged into the git repository.
47800,0,Change has been successfully cherry-picked as bf95b80b0543269677655d558765c2288f640a97
47801,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1440/ : UNSTABLE
47804,1,"Patch Set 1: Code-Review+2(1 comment)The changes look good to me.I'm getting failures on the tests though, mostly TestToolActions.t7canAccessAutoreconf"
47805,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1436/ : UNSTABLE
47814,1,Abandonedfix message
47821,0,Change has been successfully merged into the git repository.
47827,0,"Patch Set 5: Code-Review+2 Verified+1Thanks Simon, looks good to me."
47828,0,Change has been successfully merged into the git repository.
47837,0,Change has been successfully merged into the git repository.
47840,0,Change has been successfully merged into the git repository.
47844,1,"Patch Set 3:Hi Axel,Thanks for the contribution. It seems we are having trouble with the Papyrus HIPP instance (Building Gerrit contributions), which keeps failing on a NullPointerException in Maven for all builds.I will retrigger the failed build(s) when the server issue is fixed"
47845,0,"Patch Set 3: Code-Review+2Looks good, thanks!"
47847,0,Change has been successfully merged into the git repository.
47854,0,Change has been successfully merged into the git repository.
47858,0,Change has been successfully merged into the git repository.
47861,0,Change has been successfully merged into the git repository.
47866,0,Change has been successfully merged into the git repository.
47870,0,Change has been successfully merged into the git repository.
47872,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1441/ : UNSTABLE
47874,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1442/ : UNSTABLE
47877,0,Change has been successfully cherry-picked as 4b833a066ad116e94ff9b5dcbcc7491a214512db
47881,0,Patch Set 3:(2 comments)Thank you. Verified works. Can you please update as well the copyright years
47897,0,Change has been successfully merged into the git repository.
47900,0,Change has been successfully merged into the git repository.
47903,0,Change has been successfully merged into the git repository.
47913,0,Patch Set 7: Code-Review+1Looks good to me. Thanks Lars.
47915,0,Change has been successfully merged into the git repository.
47919,0,Change has been successfully merged into the git repository.
47925,0,Change has been successfully merged into the git repository.
47927,0,Patch Set 1: Code-Review+2Heh heh ... sure! I'll approve my own changes. :-)
47928,0,Change has been successfully merged into the git repository.
47930,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1389/ : UNSTABLE
47935,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1385/ : UNSTABLE
47937,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1384/ : UNSTABLE
47940,0,Change has been successfully cherry-picked as 88a494349a02c4045d5ff5643b6ac6b15303ef84
47943,0,Change has been successfully merged into the git repository.
47946,0,Change has been successfully merged into the git repository.
47949,0,Change has been successfully merged into the git repository.
47952,0,Change has been successfully merged into the git repository.
47955,0,Change has been successfully merged into the git repository.
47958,0,Change has been successfully merged into the git repository.
47961,0,Change has been successfully merged into the git repository.
47963,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/p2/job/p2-gerrit/284/ : UNSTABLE
47965,0,Change has been successfully merged into the git repository.
47969,0,"Patch Set 2:Chris, any estimate on when you'll have some time to look over the change ? It would be nice to get this in to make 'fragment' creation easy for packagers."
47971,0,Change has been successfully pushed.
47973,0,Change has been successfully pushed.
47976,0,Change has been successfully pushed.
47978,0,Change has been successfully pushed.
47980,0,Change has been successfully pushed.
47982,0,Change has been successfully pushed.
47984,0,Change has been successfully pushed.
47987,0,Change has been successfully pushed.
47990,0,Change has been successfully pushed.
47992,0,Change has been successfully pushed.
47994,0,Change has been successfully pushed.
47996,0,Change has been successfully pushed.
48002,0,Change has been successfully merged into the git repository.
48003,0,Change has been successfully cherry-picked as 99bab2981325bb9155875fa7b555b7cd2b2b52fd
48009,0,Change has been successfully merged into the git repository.
48016,0,Change has been successfully merged into the git repository.
48027,0,Change has been successfully merged into the git repository.
48029,0,"Patch Set 3: Code-Review-2I tested it in different situation (auto save without editors, save) but I also tried some control (ecore model, with several sub package and diagrams) and it does nothing."
48037,0,Change has been successfully cherry-picked as 558a0f89b937f9a84e0c4cc8f4f1f07f30b92527
48040,0,Change has been successfully cherry-picked as cfd634253319ef5780e51a894f1c1f65a53cb473
48044,0,Change has been successfully cherry-picked as 4abc90ce8697e245dbd128f717f175a4f053f7ee
48047,0,Change has been successfully merged into the git repository.
48051,0,Change has been successfully merged into the git repository.
48054,0,Change has been successfully cherry-picked as 3bcd9b672b20ff206521058d4b077d16c055b3b6
48055,0,Change has been successfully cherry-picked as ac99d7ae7189fa7a37efadd398a0332ca40ffbfc
48061,0,Change has been successfully merged into the git repository.
48065,0,Change has been successfully cherry-picked as 58f47f09321698ac3fd310345f9e7d29fae0b523
48074,0,Change has been successfully cherry-picked as 0597fe979b435bc5e8f020045d61758e614fbcc6
48078,0,Change has been successfully merged into the git repository.
48079,0,Change has been successfully cherry-picked as 572b3e917f9e6ac60a811fd9d04452e6f01aa9d6
48083,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1383/ : UNSTABLE
48090,0,Change has been successfully cherry-picked as a6d5525d0f11b8cd54cb8caa0d6cc5277ac936cc
48094,0,Change has been successfully merged into the git repository.
48097,0,Change has been successfully cherry-picked as 9f01b5fd5137fd3f5bd4e307421311fc159306d6
48099,1,"Patch Set 2:We could make sure the XtextSavingPolicy is only used when there is an Xtext resource in the current session by changing the XtextSessionManagerListener this way :   @Override    public void notify(Session updated, int notification) {        super.notify(updated, notification);        switch (notification) {        case SessionListener.OPENED:            changeSavingPolicyIfXtextIsUsed(updated);            break;        case SessionListener.SEMANTIC_CHANGE:            changeSavingPolicyIfXtextIsUsed(updated);            break;        }    }    private void changeSavingPolicyIfXtextIsUsed(Session session) {        if (session.getTransactionalEditingDomain() != null && session.getTransactionalEditingDomain().getResourceSet() != null) {            if (!(session.getSavingPolicy() instanceof XtextSavingPolicy)) {                if (Iterators.any(session.getTransactionalEditingDomain().getResourceSet().getResources().iterator(), Predicates.instanceOf(XtextResource.class))) {                    session.setSavingPolicy(new XtextSavingPolicy(new IsModifiedSavingPolicy(session.getTransactionalEditingDomain())));                }            }        }    }"
48102,0,Change has been successfully merged into the git repository.
48107,0,Change has been successfully cherry-picked as f527143184b76799a06ae5106f5496034ffb6adf
48112,0,Change has been successfully merged into the git repository.
48117,0,Change has been successfully cherry-picked as eaa4cf8f4a57822a10b02172fe2f3f93eda5efd5
48120,0,Change has been successfully merged into the git repository.
48123,0,Change has been successfully cherry-picked as 982e0b1877afe71099a670d849361cc7f49161fc
48124,0,Change has been successfully cherry-picked as 5230365a9996ccb134693b36f20dd33c42e8ef6d
48133,0,Change has been successfully merged into the git repository.
48138,0,Change has been successfully merged into the git repository.
48150,0,Change has been successfully merged into the git repository.
48152,0,"Patch Set 2:Hi Lars, the change looks good to me, however I would like to wait for Paul's general opinion about E4 Help Service API before pushing any changes."
48153,0,"Patch Set 2:In general this rename should be save to do, as it does not change any API. But lets wait and hope that Paul has his platform.ui day soon. :-)"
48154,0,"Patch Set 2:Paul commented on the bug and it was more a general question about the API design. This does not create any API just makes the naming of the service more consistent, which was suggested by Wojciech. I assume it is save to merge."
48157,0,Change has been successfully merged into the git repository.
48164,0,Change has been successfully cherry-picked as b66bccb06c08dc8192c8ea50d1cbd564e7c26ecd
48166,0,Change has been successfully cherry-picked as 5aab51a91d34ab1412268e90a5a73a904c9ff102
48171,0,Change has been successfully cherry-picked as d9c683874e3284db5be733970971edc635f17be9
48177,0,Change has been successfully cherry-picked as e207c4dca6a0943cf8c905dc21533aa7b355a843
48180,0,Change has been successfully merged into the git repository.
48184,0,Change has been successfully merged into the git repository.
48187,0,Change has been successfully merged into the git repository.
48191,0,Change has been successfully merged into the git repository.
48195,0,Change has been successfully merged into the git repository.
48197,1,Patch Set 1: Verified-1Build fails.
48205,0,Change has been successfully cherry-picked as a0f9f9ad0c363de051fb49010de48b4276121dbc
48208,0,Change has been successfully cherry-picked as 8dc5d6170c53f22dbef02922237f936967f4f668
48211,0,Change has been successfully merged into the git repository.
48214,0,Change has been successfully cherry-picked as b8208677d415deaef12cd4600de39762570e415d
48219,0,Change has been successfully merged into the git repository.
48222,0,Change has been successfully cherry-picked as c657ea06ed9f5cc4ab9fa0d756f4d9ed46639b59
48228,0,Change has been successfully cherry-picked as ac4d325f3a70cb48e4bd3e9827157454697789a2
48232,0,Change has been successfully merged into the git repository.
48237,0,Change has been successfully merged into the git repository.
48243,0,"Patch Set 2:(5 comments)Thanks for your constructive and well performed review. I added a response for each of your comments. I agree with most of them, however i could not follow the argumentation for the isSet method in the AbstractMerger. Can you please look at this again? I appreciate the good work you do in reviewing this commit. I think this leads to a better and cleaner code-base. Great!"
48244,1,"Patch Set 2:(4 comments)Tried to explain myself properly (I did make a mistake in the example I took). I think I'll need at least one more unit test to demonstrate my point though, since it involves diffs from the right side, and that can only be in three-way cases."
48246,0,"Patch Set 3:You've reverted the code to exactly what I proposed in a comment. Though that fits me, was the explanation for this demand clearer in my latest review?0 for now, looks good to me, but I need to check if the latest patch goes through checkstyle."
48247,0,"Patch Set 3: Verified+1 Code-Review+2It suprises me that four levels of nested ifs doesn't violate our ""nested if"" checkstyle rule... We'll fix that later, the patch seems good anyway :)."
48248,0,Change has been successfully merged into the git repository.
48250,0,"Patch Set 1: Code-Review-1(1 comment)Thanks Dirk, See inline comment for a suggestion how to group the context handling for localization."
48254,1,Patch Set 2:(1 comment)Perfect but JDT added a whitespace. Sorry
48256,0,Change has been successfully merged into the git repository.
48259,0,Change has been successfully merged into the git repository.
48262,0,Change has been successfully merged into the git repository.
48265,0,Change has been successfully merged into the git repository.
48270,0,Change has been successfully merged into the git repository.
48277,0,"Patch Set 1: Code-Review-1(2 comments)This looks fine to me, with just a few changes to be made :- Extraneous whitespace in every file- Old Code that can probably be removed rather than uncommented- toArray usage"
48279,0,Change has been successfully cherry-picked as 75704836bd061a8d66588792170d9528a0946b3c
48282,0,"Patch Set 2: Verified+1 Code-Review+2This looks fine to me. Just waiting for the result of the hudson test run, and we can push to master."
48289,0,Change has been successfully merged into the git repository.
48297,0,Change has been successfully merged into the git repository.
48311,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/696/ : UNSTABLE
48314,0,Change has been successfully merged into the git repository.
48318,0,Change has been successfully cherry-picked as 1fc93ad397a07225819f503e05ff174a94cca402
48322,0,Change has been successfully merged into the git repository.
48328,0,Change has been successfully merged into the git repository.
48334,0,Change has been successfully cherry-picked as 0d2a0336b9a53c877ecfc1895a507ebc8877bf87
48337,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/183/ : UNSTABLE
48339,0,Patch Set 7: Code-Review+2Very good. Thanks!
48341,0,Change has been successfully merged into the git repository.
48354,1,"Patch Set 1: Code-Review+2 Verified+1Approved without verification job (probably another, unrelated problem)."
48355,0,Change has been successfully merged into the git repository.
48357,1,"Patch Set 1: Code-Review+2 Verified+1Approved without verification job (probably another, unrelated problem)."
48358,0,Change has been successfully merged into the git repository.
48366,0,"Patch Set 1:Hi Bill,A really small review, if you have time.Thanks,Marc"
48367,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1381/ : UNSTABLE
48368,0,"Patch Set 1: Code-Review+2Yep, that makes sense -- thanks!"
48369,0,Change has been successfully cherry-picked as 6542690eff7c8015d4ffe7e940d5af1cceb0d3b9
48373,0,Change has been successfully cherry-picked as 9b65ccd480f6e6dd78f896a040b9f7a21c6a23c3
48377,1,Patch Set 3: Verified+1 Code-Review+2Thanks for filing the bug and looking into this change :)
48379,1,"return result instanceof String && result != NULL_CONFIG ? (String) result : null;- initializeProperties(..) operates on a this.configuration that can already contain NULL_CONFIG values. The """"configuration.get(..)"""" calls were already unsafe with the non-String NULL_CONFIG. The """"configuration.getProperty(.."""") calls used to return null for NULL_CONFIG, but now they return the NULL_CONFIG. I think initializeProperties should be made non-static, and it should use getConfiguration(..) instead of a """"Properties configuration"""" parameter."""
48381,0,"Patch Set 3: Code-Review+1The changes looked good, but there were still cases where the NULL_CONFIG could be leaked for required properties. Fixed those cases and added regression tests."
48383,0,Patch Set 2:Thanks for the initial review Markus.  I attached a new patchset for your review.  I'd appreciate another look.  Thanks.
48386,0,Change has been successfully merged into the git repository.
48390,0,Change has been successfully merged into the git repository.
48391,0,"Patch Set 7: Verified+1 Code-Review+2Looks good! The new tests pass, and smoke testing found no regressions against the non-JNI style traces."
48400,0,Change has been successfully merged into the git repository.
48404,0,Change has been successfully pushed.
48406,0,Change has been successfully pushed.
48408,0,Change has been successfully pushed.
48411,0,Change has been successfully pushed.
48413,0,Change has been successfully pushed.
48416,0,Change has been successfully pushed.
48418,0,Change has been successfully pushed.
48421,0,Change has been successfully merged into the git repository.
48426,0,Change has been successfully merged into the git repository.
48435,0,Change has been successfully merged into the git repository.
48438,0,Patch Set 2: Verified+1 Code-Review+2looks good.
48439,0,Change has been successfully merged into the git repository.
48442,0,Change has been successfully cherry-picked as 5d5dde8e3089464aacf0a47fc34b263f9c09ba7d
48445,0,Change has been successfully merged into the git repository.
48449,0,Change has been successfully merged into the git repository.
48451,0,"Patch Set 1:(1 comment)Looks very good, once comment looks worth saving."
48457,0,Change has been successfully merged into the git repository.
48462,0,Change has been successfully merged into the git repository.
48465,0,Change has been successfully merged into the git repository.
48472,0,Change has been successfully merged into the git repository.
48474,0,Patch Set 1: Verified+1 Code-Review+2Looks fine.
48475,0,Change has been successfully merged into the git repository.
48476,0,Change has been successfully cherry-picked as eed54af1673a91b31f8d4b6b3b6238c3c94daf4d
48481,0,Change has been successfully merged into the git repository.
48484,0,Change has been successfully merged into the git repository.
48489,0,Patch Set 1: Code-Review-1Change looks good. I put in -1 so that others don't commit before the SWT changes.
48490,1,Patch Set 1:The build failure is expected because https://git.eclipse.org/r/#/c/33582/ hasn't been submitted yet.
48493,0,Change has been successfully merged into the git repository.
48494,1,Patch Set 2:I expect this to compile tomorrow. See Bug 445535.
48504,1,"Patch Set 1:Andreas, can you review this? A perhaps not obvious behavior is, that if the BadLocationException occurs, the text ""BadLocationException"" is displayed in the raw-source editor's header message. I think, this is the correct behavior."
48507,0,Change has been successfully merged into the git repository.
48512,0,Change has been successfully merged into the git repository.
48515,0,Change has been successfully merged into the git repository.
48522,0,Change has been successfully merged into the git repository.
48525,0,Change has been successfully merged into the git repository.
48532,0,Change has been successfully merged into the git repository.
48535,0,Change has been successfully merged into the git repository.
48539,0,Change has been successfully merged into the git repository.
48544,0,Change has been successfully merged into the git repository.
48548,0,Change has been successfully merged into the git repository.
48553,0,Change has been successfully merged into the git repository.
48556,0,Change has been successfully merged into the git repository.
48561,0,Change has been successfully merged into the git repository.
48563,0,"Patch Set 2: Code-Review+1(1 comment)Just a small thing, otherwise looks good."
48568,0,Change has been successfully merged into the git repository.
48570,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6391/ : UNSTABLE
48577,0,Change has been successfully merged into the git repository.
48580,0,Change has been successfully merged into the git repository.
48583,0,Change has been successfully merged into the git repository.
48595,0,Change has been successfully merged into the git repository.
48604,0,Change has been successfully merged into the git repository.
48612,0,Change has been successfully merged into the git repository.
48614,0,Change has been successfully cherry-picked as ead5d54e4bf9c0463d11bbd0eb8949da6150ae5d
48617,0,Change has been successfully cherry-picked as e39e96bd9cbf0ff958080ebb1637f90288dd2a18
48621,1,Patch Set 14: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/604/ : UNSTABLE
48623,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/575/ : UNSTABLE
48628,0,"Patch Set 29: Code-Review+1Thanks Frank, this looks good. Steffen, do you want to have a look?"
48634,1,Patch Set 15: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/605/ : UNSTABLE
48636,1,Patch Set 13:Couldn't we simply inject all required dependencies? I would stay way from complicated mocks but rather try changing the design of the settings page / wizard slightly to make them testable.
48643,1,Patch Set 16: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/606/ : UNSTABLE
48645,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/582/ : UNSTABLE
48650,1,Patch Set 27: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/661/ : UNSTABLE
48651,1,"Patch Set 27: Code-Review-1(6 comments)See my comments - I think it's a mistake to make the connector field of connectorUi mutable, even with the @noreference annotation, and I think it's unnecessary, since we can just provide a constructor that takes the connector as an argument."
48654,1,Patch Set 24: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/650/ : UNSTABLE
48655,1,Patch Set 24: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/654/ : UNSTABLE
48665,1,Patch Set 28:(9 comments)I think this is close! Sorry it took me a while to get back to it.
48669,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/578/ : UNSTABLE
48672,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/591/ : UNSTABLE
48678,0,Patch Set 20:If we can change the extension point reader to inject the core connector that seems like a good idea but I'm not sure we want to invest in creating that logic (rather than use something like guice). It seems to me that you need to deal with connector UIs having a null connector anyways in that case due to backwards compatibility so an initialize/setConnector() method seems more reasonable.
48682,0,Patch Set 17:(7 comments)The idea looks good. A few comments inline.
48685,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/590/ : UNSTABLE
48688,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/576/ : UNSTABLE
48690,1,Patch Set 30: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/685/ : UNSTABLE
48692,0,Change has been successfully merged into the git repository.
48694,1,Patch Set 25: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/656/ : UNSTABLE
48701,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/600/ : UNSTABLE
48703,0,Change has been successfully merged into the git repository.
48712,0,Change has been successfully merged into the git repository.
48719,0,Change has been successfully merged into the git repository.
48722,0,Change has been successfully merged into the git repository.
48726,0,Patch Set 2: Verified+1 Code-Review+2Looks good.
48727,0,Change has been successfully merged into the git repository.
48738,0,Change has been successfully merged into the git repository.
48742,1,"Patch Set 2:Hi Lars, sorry for making review harder. I understand you concern, I just following the Coding Conventions (https://wiki.eclipse.org/Coding_Conventions). Maybe this should be updated since JDT automatically adds Tab instead of Spaces. I'm updating the patch."
48747,0,Change has been successfully merged into the git repository.
48753,0,"Patch Set 1: Code-Review-1I'm fine with the page in itself, but I don't like the ""smell"" of a commercial product page in an open source demo. Tim's suggestion was to use http://xkcd.com, I like it!"
48755,0,"Patch Set 2:(In reply to comment #5)> Patch Set 1: Code-Review-1> Tim's suggestion was to use http://xkcd.com, I like it!Done!"
48757,0,Change has been successfully merged into the git repository.
48760,0,Change has been successfully merged into the git repository.
48764,0,Change has been successfully merged into the git repository.
48767,0,Change has been successfully merged into the git repository.
48770,0,Change has been successfully merged into the git repository.
48773,0,Change has been successfully merged into the git repository.
48776,0,Change has been successfully merged into the git repository.
48778,1,"Patch Set 1: Code-Review-1Pushed to fast, there's a bug"
48783,0,Change has been successfully cherry-picked as a3ead63d8dd9ba9ad0988413ea7635583036e229
48785,0,"Patch Set 2: Code-Review-1(2 comments)Looks good, but as mentioned in the comments this will probably break the API. Should wait for 4.0/TraceCompass."
48791,0,Change has been successfully merged into the git repository.
48793,0,Change has been successfully merged into the git repository.
48800,0,Change has been successfully merged into the git repository.
48805,0,Change has been successfully merged into the git repository.
48813,0,Change has been successfully merged into the git repository.
48818,0,Change has been successfully merged into the git repository.
48826,0,Patch Set 2: Verified+1 Code-Review+2Thank you for the fixes!
48827,0,Change has been successfully merged into the git repository.
48830,0,Change has been successfully cherry-picked as f42b92f49f57368956052a8a16698e1f16f4f83f
48846,0,Change has been successfully merged into the git repository.
48847,0,Change has been successfully cherry-picked as f1dece4c8195f21605a31177fce8c69b8fd80e9f
48850,0,Change has been successfully cherry-picked as e1b2e5a27ba6cd0714e89219a245d23d02748a91
48854,0,Change has been successfully pushed.
48856,0,Change has been successfully pushed.
48858,0,Change has been successfully merged into the git repository.
48868,0,Change has been successfully merged into the git repository.
48876,0,Change has been successfully cherry-picked as 90353d8fd1480633a5303fcfa264bf50ca95824b
48882,1,"Patch Set 1: Code-Review-1From Bug 441185, Comment 2:> Model Explorer -> Diagram : Graphical Display When I drop a Class from the Model Explorer to a Package in a Class Diagram, nothing happens (The mouse cursor doesn't show an error, but nothing happens)"
48885,0,Change has been successfully merged into the git repository.
48886,0,Change has been successfully cherry-picked as b887ff32f7ceac707e99a5c7d81912947dbe22b0
48890,0,Patch Set 1: Verified+1 Code-Review+2It's fine.
48891,0,Change has been successfully merged into the git repository.
48893,0,Change has been successfully merged into the git repository.
48903,0,Change has been successfully merged into the git repository.
48915,0,Change has been successfully merged into the git repository.
48928,0,Change has been successfully cherry-picked as 671fea7f494a7dcb1d796ff0a534331b6aa7a58c
48932,0,Change has been successfully merged into the git repository.
48936,0,Change has been successfully merged into the git repository.
48939,0,Change has been successfully merged into the git repository.
48941,0,Change has been successfully merged into the git repository.
48943,0,Patch Set 1: Code-Review-1(1 comment)One more comment which can be deleted. :-)
48949,0,Change has been successfully merged into the git repository.
48951,0,"Patch Set 1: Code-Review-1(1 comment)Thanks, but for the removal of Non-Javadoc statements we do not add the names to the copyright. The change it to minor."
48957,0,Change has been successfully merged into the git repository.
48960,0,Change has been successfully merged into the git repository.
48961,0,Change has been successfully cherry-picked as fca237edbcecb3f3f0f80be1ce49b42a0ee7c872
48965,0,"Patch Set 1:Hi Sergey, thanks for your comments.I can confirm that the ""org.hamcrest.core"" bundle has shipped with every release of Eclipse since at lease 3.8."
48968,0,Change has been successfully pushed.
48970,0,Change has been successfully pushed.
48972,0,Change has been successfully pushed.
48974,0,Change has been successfully pushed.
48975,0,Change has been successfully cherry-picked as 16f2f4717d9d92c15d95a6c13db1b9875c5d0ccb
48977,0,Change has been successfully cherry-picked as 98ff5df1a1cf1e3cfc6867db7bba1c8f14749795
48980,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1357/ : UNSTABLE
48984,1,"Patch Set 1:Perhaps a revert was a bit drastic, turns out there is an easy way to get around this problem (@noimplement)."
48987,0,Change has been successfully cherry-picked as 802eb806023d1422ac164644c076adcec8aed713
48988,0,Patch Set 2:Congratulations on your first patch Naser! (for real this time ;) )
48990,0,Change has been successfully merged into the git repository.
49003,0,Change has been successfully merged into the git repository.
49006,0,Change has been successfully merged into the git repository.
49009,0,Change has been successfully merged into the git repository.
49021,0,Change has been successfully merged into the git repository.
49026,0,Change has been successfully merged into the git repository.
49038,0,Change has been successfully merged into the git repository.
49046,0,Change has been successfully merged into the git repository.
49049,0,Change has been successfully merged into the git repository.
49051,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
49052,0,Patch Set 2: Code-Review+2thanks for the patch!
49056,0,Change has been successfully merged into the git repository.
49057,0,Patch Set 3:Build SUCCESSFUL. Now starting integration tests...
49059,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
49064,0,Change has been successfully merged into the git repository.
49067,0,Change has been successfully merged into the git repository.
49077,0,Change has been successfully merged into the git repository.
49086,0,Change has been successfully merged into the git repository.
49102,0,Change has been successfully merged into the git repository.
49112,0,Change has been successfully merged into the git repository.
49122,0,Change has been successfully merged into the git repository.
49131,0,Change has been successfully merged into the git repository.
49138,0,Change has been successfully merged into the git repository.
49145,1,Patch Set 2: Code-Review-1I've looked over this and currently this only deletes the temp files on a successful import. On an unsuccessful the temp files are lost on the server. These need to be removed.
49150,0,Change has been successfully merged into the git repository.
49157,0,Change has been successfully merged into the git repository.
49159,0,Change has been successfully merged into the git repository.
49165,1,"Patch Set 1:If ""border"" property is defined in the theme XML file, all border edge properties *must* be defined too (border is only a shorthand of its four edges). This is currently the case in all our theme XML files. Probably, this is only a problem for custom *themeable* widget developers which create thier own theme XML files and need to know that ""border"" always needs its four edge properties.Instead excluding the ""border"" in ThemeDefinitionReader we could ""expand"" it to it's four edge properties. Is this better?"
49167,1,"Patch Set 1:My idea was to avoid the word ""shorthand"", as border-top and etc. are also shorthands. Specifying additional attribute in theme xml files is a good idea, but will be confusing because of that - border is marked as shorthand, but not border-top. But at the end I thing it's acceptable."
49168,1,"Patch Set 1:(In reply to comment #7)> My idea was to avoid the word ""shorthand"", as border-top and etc. are also> shorthands. Specifying additional attribute in theme xml files is a good idea,> but will be confusing because of that - border is marked as shorthand, but not> border-top. But at the end I thing it's acceptable.Good point, I missed the fact that in the spec, border-top etc. are also shorthands. However, in our current model, they are not. If we ever implemented the terminals (border-top-style, etc.), border-top would also be marked as shorthand.Still I would like to avoid another term for the same concept."
49175,0,Change has been successfully merged into the git repository.
49178,0,Change has been successfully merged into the git repository.
49181,0,Change has been successfully merged into the git repository.
49184,0,Change has been successfully merged into the git repository.
49187,0,Change has been successfully pushed.
49190,0,Change has been successfully merged into the git repository.
49193,0,Change has been successfully merged into the git repository.
49196,0,Change has been successfully merged into the git repository.
49199,0,Change has been successfully merged into the git repository.
49202,0,Change has been successfully merged into the git repository.
49205,0,Change has been successfully merged into the git repository.
49210,0,Change has been successfully merged into the git repository.
49214,0,Change has been successfully merged into the git repository.
49218,0,Change has been successfully merged into the git repository.
49221,0,Change has been successfully merged into the git repository.
49224,0,"Patch Set 2: Code-Review+2 Verified+1Thanks Dirk. I also activated to remove whitespace, I hope that is OK for tests."
49225,0,Change has been successfully merged into the git repository.
49230,0,Change has been successfully merged into the git repository.
49232,0,Change has been successfully merged into the git repository.
49238,0,Change has been successfully merged into the git repository.
49245,0,Change has been successfully merged into the git repository.
49250,0,Change has been successfully pushed.
49254,0,Change has been successfully pushed.
49256,0,Change has been successfully pushed.
49259,0,Change has been successfully pushed.
49261,0,Change has been successfully merged into the git repository.
49271,1,"Patch Set 3:This change requires change 33614, which still fails. Please update change 33614 first."
49279,0,Change has been successfully merged into the git repository.
49287,0,Change has been successfully merged into the git repository.
49290,0,Change has been successfully merged into the git repository.
49292,0,Change has been successfully merged into the git repository.
49293,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
49295,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
49299,0,Change has been successfully merged into the git repository.
49302,0,Change has been successfully merged into the git repository.
49309,0,Change has been successfully merged into the git repository.
49317,0,Change has been successfully merged into the git repository.
49325,0,Change has been successfully merged into the git repository.
49333,0,Change has been successfully merged into the git repository.
49337,0,Change has been successfully merged into the git repository.
49340,0,Change has been successfully merged into the git repository.
49346,0,Change has been successfully merged into the git repository.
49350,0,Change has been successfully merged into the git repository.
49355,0,Change has been successfully merged into the git repository.
49358,0,"Patch Set 1: Code-Review+1(2 comments)It looks pretty good !I have added a couple of minor inline comments, I have also done some manual test and works fine !Note. This class is perfect for Junit, it populates the collection with interface types which can be easily mocked outside of the actual implementation."
49359,0,Patch Set 1:(2 comments)Nice!A couple of possible optimizations.
49362,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1295/ : UNSTABLE
49368,0,Change has been successfully cherry-picked as db67b263b9178a593abc04277aecfa85482a8b3a
49371,0,Change has been successfully merged into the git repository.
49374,0,Change has been successfully merged into the git repository.
49377,0,Change has been successfully merged into the git repository.
49381,0,Change has been successfully merged into the git repository.
49391,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1294/ : UNSTABLE
49395,1,"Patch Set 3: Code-Review-1The Bug number in the commit message and the description in this change seem to point to the wrong bug, it should be:https://bugs.eclipse.org/bugs/show_bug.cgi?id=444395"
49398,0,Patch Set 5: Code-Review+2Looks good.
49400,1,"Patch Set 5:> otherwise it may behave a bit worse than before this fixThe two issues are similar but I don't quite see why starting with this one would make things worse.I think this fix reduces the number of possible race conditions, even if it does not fix them all.Is there a scenario you have in mind that would be worse with this fix?"
49401,1,"Patch Set 5: -Code-Review> Is there a scenario you have in mind that would be worse with this fix?I don't see the null pointer exception before this patch and I see it quite frequently after this correction, it's is fact more frequent than the breakpoint being deleted."
49402,0,Change has been successfully cherry-picked as 0c0b6ef6ff26b318dd00915ffae000249e853b96
49406,0,Change has been successfully merged into the git repository.
49422,0,Change has been successfully merged into the git repository.
49424,0,Change has been successfully merged into the git repository.
49446,0,Change has been successfully merged into the git repository.
49457,0,Change has been successfully merged into the git repository.
49467,0,Change has been successfully merged into the git repository.
49476,0,Change has been successfully merged into the git repository.
49478,0,Change has been successfully merged into the git repository.
49487,0,Change has been successfully merged into the git repository.
49493,0,Change has been successfully merged into the git repository.
49495,0,Change has been successfully merged into the git repository.
49502,0,Change has been successfully merged into the git repository.
49504,0,Change has been successfully merged into the git repository.
49516,0,Change has been successfully merged into the git repository.
49520,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
49522,0,Change has been successfully merged into the git repository.
49527,0,Change has been successfully merged into the git repository.
49532,0,Change has been successfully merged into the git repository.
49536,0,Change has been successfully merged into the git repository.
49541,0,Change has been successfully merged into the git repository.
49545,0,Change has been successfully cherry-picked as 223df27ec04a0e6752a3166ad4594c20d8e217f8
49548,0,Change has been successfully merged into the git repository.
49551,0,Change has been successfully merged into the git repository.
49554,0,Change has been successfully merged into the git repository.
49556,0,Change has been successfully pushed.
49558,0,Change has been successfully pushed.
49560,0,Change has been successfully pushed.
49562,0,Change has been successfully pushed.
49564,0,Change has been successfully pushed.
49565,0,Change has been successfully cherry-picked as 31c57f25f6d213c615ed15a865739e80da71ac4c
49570,0,Change has been successfully merged into the git repository.
49571,0,Change has been successfully cherry-picked as 4074c0e910638424c9a597840257a1727d606b91
49579,0,Change has been successfully merged into the git repository.
49581,1,"Patch Set 2: Code-Review-1(1 comment)Sorry for the late answer, I was in holidays for the two last weeks.Just a little style nit to fix and this review can be pushed."
49587,0,Change has been successfully merged into the git repository.
49590,0,Change has been successfully merged into the git repository.
49591,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/387/ : UNSTABLE
49594,0,Change has been successfully merged into the git repository.
49595,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/386/ : UNSTABLE
49604,0,Change has been successfully merged into the git repository.
49609,0,Change has been successfully merged into the git repository.
49611,0,Change has been successfully merged into the git repository.
49626,0,Change has been successfully merged into the git repository.
49628,1,"Patch Set 2: Code-Review+2re: my message on bug, the reason it didn't fail is that I forgot I'd already checked out this fix!3 for 3. Nice."
49639,0,Change has been successfully merged into the git repository.
49642,0,Change has been successfully merged into the git repository.
49645,0,Change has been successfully merged into the git repository.
49648,0,Change has been successfully cherry-picked as b87ac57ebc3d1f7920ed0d4efa15781f765cc069
49649,0,Change has been successfully cherry-picked as fac2c102e19b01acff758ea3d7c88b6c2dbbebcc
49652,0,Change has been successfully cherry-picked as 74e67faa37dfe5503ec065039504dcf9e2d027e2
49658,0,Change has been successfully merged into the git repository.
49665,0,Change has been successfully merged into the git repository.
49669,0,Change has been successfully cherry-picked as 45f860768ec1720f4a36e0c6d2efa483850f5a16
49674,0,Patch Set 2: Code-Review+2 Verified+1Thanks Jeanderson. Looks good to me.
49675,0,Change has been successfully merged into the git repository.
49679,0,Change has been successfully merged into the git repository.
49683,0,Change has been successfully merged into the git repository.
49686,0,Change has been successfully merged into the git repository.
49689,0,Change has been successfully merged into the git repository.
49694,0,Change has been successfully cherry-picked as 7c91c269a7e2c1f055f469e9b98e21d2df406de2
49704,0,"Patch Set 5: Code-Review+1This now places sources in target/generated-sources/xcore (where they are subject to ""mvn clean"" and .gitignore).Tested that the o.e.r.stacktraces.rcp.feature installs fine into Luna and Kepler SR2 Standard packages.Juno, however, by default lacks an update site that has org.eclipse.emf.ecore.xcore.lib 0.0.0. I don't see this as a blocker for this change, however."
49708,0,Change has been successfully merged into the git repository.
49717,0,Change has been successfully merged into the git repository.
49732,0,Change has been successfully merged into the git repository.
49736,0,Change has been successfully pushed.
49739,0,Change has been successfully merged into the git repository.
49740,0,Change has been successfully cherry-picked as 198d2d96e6025e7624f5bcd55d741618d2594bc8
49742,1,"Patch Set 1: Code-Review+2Good going. Back when it was a manual .dispose() it would do it in the correct order, then 6933194b4 came along and screwed it all up...+1 for having CI run on Windows too, it's annoying to find these months later!"
49744,0,"Patch Set 4: Verified+1 Code-Review+2(1 comment)Very nice, that's much cleaner!"
49750,0,Change has been successfully cherry-picked as cb17068a0d7888c49db381cd2ca8033002e752f5
49751,0,Change has been successfully cherry-picked as fea90ec094ccb0597a981bc57a2b37e00cd950b4
49755,0,Change has been successfully cherry-picked as ebb6db7d7291a076f4a6fe18665aeb2190d8916d
49757,1,Patch Set 6: Code-Review+2Opinions noted. The abstract classes are pretty useless now since there is no longer anything in them. Tests are a work in progress. At lest now they really test with the extension point mock.
49759,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1234/ : UNSTABLE
49760,0,Change has been successfully cherry-picked as 63b9ba54f56110f23d2f16c61435770e7adeb34d
49762,1,"Patch Set 5: Code-Review-2Removing tests and writing new ones is not the sameas fixing existing ones,you don't know now if tests I wrote before are passing.You cannot say it is not applicable anymore becausemost of them are still applicable with little tweaks.I disagree that launch config should be saved unlessuser edits it, because it pollutes workspace with configsthat nobody cares aboutI disagree that all abstract classes are removedI disagree with removal of launchObjectChanged, it allows to change descriptors, for example when project nature changed"
49763,0,Change has been successfully cherry-picked as 172bab8f1dec56993679867049af95cae10f9833
49769,0,Change has been successfully cherry-picked as 8e09af897cccf30e6cfd4462eb96d46f1b2304cd
49772,0,Change has been successfully merged into the git repository.
49777,0,"Patch Set 3: Code-Review+1(2 comments)Other than the two missing distribution statements, it looks fine."
49787,0,Change has been successfully merged into the git repository.
49794,0,Change has been successfully pushed.
49796,0,Change has been successfully pushed.
49798,0,Change has been successfully pushed.
49800,0,Change has been successfully pushed.
49802,0,Change has been successfully pushed.
49804,0,Change has been successfully pushed.
49808,0,Change has been successfully cherry-picked as df08ef1869afecb778490f255c809a6278b38f81
49813,0,Change has been successfully pushed.
49814,0,Change has been successfully cherry-picked as 1ffa0a9bb26ee1721bd7019d0dc016c0570805dd
49818,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1236/ : UNSTABLE
49819,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1237/ : UNSTABLE
49822,0,Change has been successfully pushed.
49824,1,"Patch Set 1:This change replace change 28611. (Sorry for the inconveniences, I got some troubles with Gerrit)The requested event is now propagated.The mispelled class is corrected."
49825,1,Patch Set 1:(2 comments)I haven't been able to test this yet because of errors in my workspace.  I have added two questions though.
49830,1,"Patch Set 1:builds locally with maven (openJdk 8). fails on Oracles java8 builds with many errors, but there are no more javaDoc errors in the profiling.ui package at least."
49831,1,Patch Set 1:correction. With Oracle's java 8 it fails on profiling testing:[INFO] Linux Tools Profiling Provider Tests Plug-in ...... FAILURE [3.773s]
49833,0,Change has been successfully cherry-picked as e841f966ea8b950313ec69f7ffc8f95e2e3e9f9a
49835,0,Change has been successfully merged into the git repository.
49840,0,Change has been successfully pushed.
49852,0,Change has been successfully rebased as fc3a5fe3bad25a3743d7e3a935918f5be3f61666
49856,0,Change has been successfully merged into the git repository.
49859,0,Change has been successfully merged into the git repository.
49863,0,Change has been successfully merged into the git repository.
49870,0,Patch Set 1: Code-Review+1Same fix than in master. Looks good.
49872,0,Change has been successfully cherry-picked as d1c34e4239a724a2c85d0cc6355c9d62c31b2b7c
49873,0,Change has been successfully cherry-picked as fac6f1e79c65078f1e3acbadc85d6d2c3e206837
49878,1,"Patch Set 1:""Will you put it also in stable-3.1?""I asked this in the bug :)"
49884,0,Change has been successfully merged into the git repository.
49886,1,"Patch Set 1: Verified-1 Code-Review-1Warning annotations are not always updated.I see this with PDT-Eg Core plugin, but probably same problem will be with any other external plugin (like Zend semantic validation). PDT-Eg Core plugin use standard DLTK api to report problems during build.Example: class Test { public function x() {} }Now create unused variable inside x() method, save.Sometimes Test and x have a warning badge, sometime none have, sometimes only one have it.Next problem is a ModelException if file is not in build path."
49888,1,Patch Set 4:Yet another attempt;)I discovered that IImportContainer has source module as a parent not namespace. It forced me to add some additional code for finding imports container valid parent. Is this state is by design or it is inherited from DLTK api?
49889,1,Patch Set 4:Its by DLTK api (inherited from JDT).IImportContainer should have name as IPackageDeclaration.We are using IType to store namespaces (on bugzilla is a bug to migrate it IPackageDeclaration).See PHPSourceElementRequestor.
49892,0,"Patch Set 3:Ehh, this wasn't my best tested patch. Dawid, thanks for help. Hopefully right now it should work well."
49897,1,"Patch Set 2:@DawidUpdating members with 'problems' was limited to default DLTK marker type ""org.eclipse.dltk.core.problem"" and I think this was problem with incorrect behavior. I removed this limitation. Now each marker that is sub-type of IMarker.PROBLEM is processed. I tested new version with semantic validation from Zend Studio and from PDT-Eg. I didn't encounter any problems. Sometimes I had situation that warning/error was displayed in editor, but there was no overlay in Outline and in PHP Explorer also so I think this is another issue.Which case exactly you were talking about when you mention ModelException? I added null checking for 'ISourceModule.getCorrespondingResource', but I'm not sure if this is problem you mentioned."
49901,0,Change has been successfully merged into the git repository.
49911,0,Change has been successfully merged into the git repository.
49919,0,Patch Set 2:Done :)
49921,0,Change has been successfully merged into the git repository.
49924,0,Change has been successfully cherry-picked as c57a1bc47f2eab14179483803c70d90606aeac1f
49927,0,Change has been successfully cherry-picked as 6e450572c729f3716adc2f127916c4e7b3e1e0cb
49929,0,Change has been successfully merged into the git repository.
49933,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
49935,0,Change has been successfully merged into the git repository.
49938,0,Change has been successfully merged into the git repository.
49940,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
49942,0,Change has been successfully merged into the git repository.
49946,0,Change has been successfully merged into the git repository.
49949,0,"Patch Set 2: Code-Review+2Looks good, thanks"
49950,0,Change has been successfully merged into the git repository.
49954,0,Change has been successfully merged into the git repository.
49963,0,Change has been successfully merged into the git repository.
49976,0,Change has been successfully merged into the git repository.
49979,0,Change has been successfully cherry-picked as fb311606da48ddc11556cce1c03dd2bec78b1a4b
49986,0,Change has been successfully merged into the git repository.
49989,0,Change has been successfully merged into the git repository.
49991,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/365/ : UNSTABLE
49992,0,Patch Set 1: Code-Review+2nice :-)
49993,0,Change has been successfully merged into the git repository.
49996,0,Change has been successfully cherry-picked as afe89f5cb32a537639f7dd3f7652c9adc8dc2a29
49998,0,Change has been successfully merged into the git repository.
50008,0,Change has been successfully merged into the git repository.
50009,0,Change has been successfully cherry-picked as 777e0f6dd4da928d06e74c1190f1dbfcf33369fa
50018,0,Change has been successfully merged into the git repository.
50019,0,Patch Set 5:Thanks Lars :)
50023,1,"Patch Set 4:(1 comment)Hi Lars, glad to hearing from you.I'm resolving the conflicts (just realized that this is why I can't use the rebase button) and I will update this very patch as soon as possible."
50036,0,Patch Set 5:(4 comments)Thanks for the review Lars. I resolved all the issues.
50044,1,"Patch Set 9:Within Patch 9 I also removed unnecessary ""throw Exception"" declaration for the test methods"
50047,0,Change has been successfully merged into the git repository.
50048,0,Change has been successfully cherry-picked as 456920367b27bd78e8836d5b721e2fcc0a77e53a
50050,0,Change has been successfully cherry-picked as 36883b559383aa9e004392daa07195f6b7b15a90
50055,0,"Patch Set 3: Verified+1 Code-Review+2The code modifications are looking good. As I didn't got response to my latest comments, I added the code cosmetics myself so I can go on with publishing the upcoming bugfix release."
50056,0,Change has been successfully merged into the git repository.
50058,1,"Patch Set 1:From looking into the changes in Gerrit there are two little things I would like to be modified:- there are whitespaces that should be removed. you can see them in the compare view.- you named the internal variables columnIndex and rowIndex. Although it doesn't has an impact, I would suggest to name those variables e.g. ""pos"" or ""columnPos"". I know we are in a IDataProvider where index == pos, but if somebody is looking into the sources it might be confusing using position and index in one method without transition.As said before, this is more about code cosmetic rather than functionality. From the functionality point it looks good. I will test that against several projects to verify that everything works well.BTW, are you able to create some test cases if there aren't any already? Or, if there are any, add some for your use case of huge dataset spanning?"
50059,1,"Patch Set 1:Hi Dirk, Thank you for your advices, i will attention those format problem, by the way, do we have the code style and check style for nattable project?   Did you push the modified codes?  You said "" you can see them in the compare view"", it means click ""Unified"" link, or others? i am sorry, i amn't sure where whitespaces was removed.  I add a test for huge data. i don't know which place is good for those files, if they are wrong place, please tell me. thank you.  https://git.eclipse.org/r/#/c/32673/Change-Id: I958f25579e19abeb4eb40b3b69a3f3ec9d8400be"
50060,0,"Patch Set 1:Hi Neal,you messed things up a bit.1. On updating a patch you need to amend you changes so they have the same change id and we can see it in Gerrit in a clean timeline. You have created a new patch, which is not that good.2. You created a new example, which is also good. :) But I asked for tests. We have several JUnit test cases in the org.eclipse.nebula.widgets.nattable.core.test project. Adding the test cases will help us to verify that everything is working as expected and if anybody changes code later, it still works.3. I can see the whitespace issues in the Gerrit web view. Just open your changes there and you will see them marked red.I haven't pushed the modified code as I'm waiting for your modifications. :) And Gerrit will nofify you when I've done it.Greez,DirkP.S. I just noticed that you forgot to add yourself to the copyright header of the AutomaticSpanningDataProvider."
50062,0,Change has been successfully cherry-picked as 7f6ec0e80baf6038f8dfba3f0a2d15b2654c5109
50067,0,Change has been successfully merged into the git repository.
50074,0,"Patch Set 1: Code-Review+1I am agree, this message is much clearer than original that sounded like Florian :p"
50076,0,Change has been successfully cherry-picked as 62a50caa5e03ef399130dc896359dc2a0f4e4869
50080,0,Change has been successfully merged into the git repository.
50082,0,Change has been successfully merged into the git repository.
50089,0,Change has been successfully cherry-picked as 99ce15158c4c6ee243654f0a7445442181ed4ec4
50098,0,Change has been successfully merged into the git repository.
50101,0,Change has been successfully merged into the git repository.
50108,0,Change has been successfully merged into the git repository.
50120,0,Change has been successfully merged into the git repository.
50130,0,Change has been successfully merged into the git repository.
50131,0,Change has been successfully cherry-picked as d70ea66e07ab4dbf1886f827edbdb165c9a82800
50141,0,Change has been successfully merged into the git repository.
50143,0,"Patch Set 1:Hi Markus,Can you please review this patch? Thank youSravan"
50146,0,Change has been successfully merged into the git repository.
50150,0,Change has been successfully cherry-picked as 181c9d483a62dd1b9c4afee22b66d964f88b409d
50154,0,Change has been successfully merged into the git repository.
50155,0,Change has been successfully cherry-picked as 2e142b3fa754fec7d309f2d36270387a9270ff44
50163,0,Change has been successfully merged into the git repository.
50167,0,Change has been successfully merged into the git repository.
50174,0,Change has been successfully merged into the git repository.
50175,0,Change has been successfully cherry-picked as e520e50be70f14cccca7a5087d60455f4632b0a7
50180,0,Change has been successfully merged into the git repository.
50188,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6323/ : UNSTABLE
50190,0,Change has been successfully merged into the git repository.
50195,0,Change has been successfully pushed.
50198,1,"Patch Set 3:@Johannes: My suspicion is that the debug port was already used by another Eclipse, causing the JVM to quit during start-up."
50213,0,Change has been successfully merged into the git repository.
50220,0,Change has been successfully merged into the git repository.
50223,0,Change has been successfully merged into the git repository.
50229,0,Change has been successfully merged into the git repository.
50232,0,Change has been successfully merged into the git repository.
50235,0,Change has been successfully merged into the git repository.
50238,0,Change has been successfully merged into the git repository.
50241,1,Patch Set 1: Verified+1Gerrit build: +1 random error(Test: Autocomplete). Verified.
50243,0,Change has been successfully merged into the git repository.
50247,0,Change has been successfully merged into the git repository.
50250,0,Change has been successfully merged into the git repository.
50257,0,Change has been successfully merged into the git repository.
50259,1,Patch Set 1: Verified+1 Code-Review+2No defects. Suspiciously good test results (-8 failing).
50260,0,Change has been successfully merged into the git repository.
50265,0,Change has been successfully merged into the git repository.
50268,1,"Patch Set 3:Thank you for the hint Lars, but actually I tried exactly this several times yesterday, but unfortunately with the same result.I guess it has something to do with the ""carriage return"", which is used in the original.My ""Text file encoding"" is set to UTF-8 and my ""New text file line delimiter"" is set to Unix, which should be ok, isn┬┤t it?"
50273,0,"Patch Set 1:(2 comments)Thanks looks, good. Minor suggestions included"
50274,0,Patch Set 1:(2 comments)Thanks Lars. I just implemented your proposals in the comments.
50279,0,Change has been successfully merged into the git repository.
50285,0,Change has been successfully merged into the git repository.
50287,0,Patch Set 1:Looks good. Most committer will advice you to avoid unnecessary dependencies in your Gerrit reviews. Maybe as practice you use interactive rebase for this review to remove the dependencies on the clean JFace commit?
50292,0,Change has been successfully merged into the git repository.
50298,0,Change has been successfully merged into the git repository.
50301,0,Change has been successfully merged into the git repository.
50307,0,Change has been successfully pushed.
50312,0,Change has been successfully merged into the git repository.
50314,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6214/ : UNSTABLE
50318,0,Change has been successfully merged into the git repository.
50322,0,Change has been successfully merged into the git repository.
50324,0,Change has been successfully merged into the git repository.
50329,0,Change has been successfully merged into the git repository.
50332,0,Change has been successfully merged into the git repository.
50335,0,Change has been successfully merged into the git repository.
50339,0,Change has been successfully merged into the git repository.
50342,0,Change has been successfully merged into the git repository.
50345,0,Change has been successfully merged into the git repository.
50348,0,Change has been successfully merged into the git repository.
50352,0,Change has been successfully merged into the git repository.
50355,0,Change has been successfully merged into the git repository.
50358,0,Change has been successfully merged into the git repository.
50361,0,Change has been successfully merged into the git repository.
50364,0,Change has been successfully merged into the git repository.
50367,0,Change has been successfully merged into the git repository.
50371,0,Change has been successfully merged into the git repository.
50374,0,Change has been successfully merged into the git repository.
50376,0,"Patch Set 1:(2 comments)Thanks Maarten, this looks good. Just a couple of nits."
50379,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-builds/81/ : UNSTABLE
50381,0,Change has been successfully merged into the git repository.
50386,0,Patch Set 3: Verified+1 Code-Review+2Looks good.
50391,0,Change has been successfully merged into the git repository.
50393,0,"Patch Set 2:I am happy with the existing comparator. I just couldn't find it.When comparing a small number of strings such as when sorting tags, the effiency of the existing implementation is probably sufficient."
50395,0,Change has been successfully merged into the git repository.
50397,1,"Patch Set 1: Code-Review-1+1 for the change in behavior.That said, we already have a natural String comparator, see CommonUtils (a bit of a bad class name).But it would be good to compare the two and see if there's an improvement that we can take from yours. From looking at it your version looks more efficient. This is a good micro-benchmark tool if you want to compare: https://code.google.com/p/caliper/"
50400,0,Change has been successfully merged into the git repository.
50404,0,Change has been successfully merged into the git repository.
50419,0,Change has been successfully merged into the git repository.
50424,1,"Patch Set 2:Thanks for figuring out what the problem was Jacques, but your solution doesn't work for me, and it adds a dependency on awt. Could you try this? It fixes the problem for me."
50425,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/564/ : UNSTABLE
50426,0,"Patch Set 2: Verified+1 Code-Review+1Works fine, no dependencies on awt"
50432,0,Change has been successfully merged into the git repository.
50439,0,Change has been successfully merged into the git repository.
50443,0,Change has been successfully merged into the git repository.
50446,0,Change has been successfully merged into the git repository.
50467,0,Change has been successfully merged into the git repository.
50479,0,Change has been successfully merged into the git repository.
50480,0,Change has been successfully cherry-picked as dde49392e7e1bdbc29be06686529d5627e66dc64
50493,0,Change has been successfully merged into the git repository.
50495,0,Patch Set 1: Verified+1 Code-Review+2Looks good - thanks!
50498,0,Patch Set 1:Hi Michael - could you please rebase your patch and resubmit? There are some merge conflicts. Thanks!
50501,0,Patch Set 2: Verified+1 Code-Review+2Thanks for the patch(es) - they were both very useful!
50502,0,Change has been successfully merged into the git repository.
50505,0,Change has been successfully merged into the git repository.
50508,0,Patch Set 1: Code-Review+1Seems fine.
50512,0,Patch Set 1: Verified+1 Code-Review+2Looks good
50513,0,Change has been successfully merged into the git repository.
50521,0,Change has been successfully merged into the git repository.
50527,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
50529,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
50531,0,Change has been successfully merged into the git repository.
50533,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
50535,0,Change has been successfully merged into the git repository.
50538,0,Change has been successfully merged into the git repository.
50541,0,Change has been successfully merged into the git repository.
50543,0,Change has been successfully cherry-picked as 7c21d231a9144b7f271ae43cb34ff74a99de8819
50546,0,Change has been successfully cherry-picked as c4edef9f05219ed68ea19622dc9edf768cabbefa
50547,0,Change has been successfully cherry-picked as 35b578275af990b04c7e72ffe432c714c280f861
50553,0,Change has been successfully cherry-picked as dad3015cff9777715881ea8e0838f051b90abf26
50561,0,Change has been successfully merged into the git repository.
50563,0,"Patch Set 14:(3 comments)Hi,The problem with the save as action was that the data binding contexts were not update when the editor input was changed.Because of this, after a save-as action, when a change was made to one of the fields (e.g. the name in the metadata page), the corresponding page was marked as stale instead of dirty, as the databindings were still observing the old snippet.I hope this makes sense. Anyway, I added listeners in each page that will take care of updating the db contexts and the snippet when the editor input changes."
50567,1,"Patch Set 7:(4 comments)I added the snippet information in the metadata page, and re-enabled the data bindings.Form what I've seen, the editor works well now. It saves the changes properly (both when saving as a new snippet and when saving over the opened one), and it adds/removes the dirty mark when it's supposed to."
50573,1,"Patch Set 13: Code-Review-1Hi Stefan. I've discovered another problem with the current implementation. To reproduce:- Open a snippet (e.g., DateTime)- Add ""$$"" to its Raw Source.- Save (choosing ""Save as New"")- Doubleclick on the second DateTime snippet in the snippet view- Check on the Raw Source page that it indeed has ""$$"" in its source.- Go to the Metadata page and edit the Name.- The snippet will not be marked as dirty.Alternatively, you can also edit the Raw Source some more. Again, the snippet will not be marked as dirty."
50574,1,"Patch Set 13:(1 comment)Hi Andreas,>I've discovered another problem with the current implementationThanks for reporting this. I will try to reproduce the problem and see what causes it."
50576,1,Patch Set 10: Code-Review-1Just rebased.But there are still some problems:  Open the Snippet View  Open any snippet  Change its name (the editor is marked dirty)  Switch to the Raw Source page  Hit Ctrl+S to save (nothing happens!)
50582,0,Change has been successfully merged into the git repository.
50583,1,"Patch Set 5:(2 comments)Hi,I've been working on this change-set, but unfortunately I get an error when trying to push the changes to gerrit[2].Until I manage to solve it and push the code, I thought it's best to write some comments about the changes I made.I found this forum post [1] that describes a way to solve the dirty editor problems. Basically, we'll need to call the doSave() method for all the editor pages to remove their dirty status. After this, calling the editorDirtyStateChanged(); method will remove the * mark from the editor.There are more comments in-line.[1]: http://www.eclipse.org/forums/index.php/t/96716/[2]: Resolving deltas: 100% (16/16)Processing changes: refs: 1, done----------Reviewing commit: a88dc2a0Authored by: Andreas Sewe <andreas.sewe@codetrails.com>The author is a committer on the project.error: You are not a project committer.error: Only project committers can push on behalf of others.Please see http://wiki.eclipse.org/CLA"
50587,1,"Patch Set 3:The only bad feeling I have about the general solution is adding a factory to the API. Isn't there a way that we don't need it?If we need it, can we make that static inner classes of the pages? The name ""pageFactory"" sounds quite unspecific to me. Should we qualify it with ""editor.PageFactory ?"
50597,0,Patch Set 6:(4 comments)I was able to push the changes I made.I had to modify the author of the commit in order to be allowed to push though.Please see the in-line comments and the comments on patch-set #5 for details.I think that the following steps are (if you agree with this method of marking the editor dirty :-) to add the snippet information in the metadata page.
50598,1,"Patch Set 6:@Andreas:>Glad to see that you managed to add to the original change after all. What did you have to change?I e-mailed emo@eclipse.org about this, and the web master fixed the CLA status. Apparently something was wrong on their side.It worked afterwards :-)"
50600,1,"Patch Set 8: Code-Review-1(3 comments)Hi Stefan. I had to rebase the change and resolve some conflicts. Not sure whether I broke some things, but there's at least one *bug*: If I create a new snippet (Either through the ""Create Snippet"" context menu or through ""Add"" in the Snippets view) the snippet doesn't start out as needing to be saved (the little * symbol).Aside from that, I still have the feeling that we use two framework (FormEditor and data-bindings) to do the same thing. I am afraid they may get in each other's way, so I would prefer to just use FormEditors like they are supposed to. Thoughts?"
50601,1,"Patch Set 8:(3 comments)> If I create a new snippet (Either through the ""Create Snippet"" context menu or through ""Add"" in the Snippets view) the snippet doesn't start out as needing to be saved (the little * symbol).Hi Andreas,I am not sure if this is a bug. I think this is the normal behavior of an editor. For example, if you create a new Java class in your IDE, the java editor won't pop-up and expect you to save the class before making any modifications to it.I think the snippet editor should not do this either.And you are right, the data-binding framework and the form editor framework are both tracking changes in the view/model. If we use only the form editor framework, we'll have to update the model by hand. (See the in-line comments)Also, I just realized that I might have made a mistake when using the data binding framework. This will update the model whenever changes occur in the editor, but we need to update it only when the save action takes place (i.e. in the commit method of the form parts). Although this is not visible as it only updates the in-memory model, not the actual json file, I think we still should avoid it. So this would be another +1 for not using the data binding framework."
50602,0,"Patch Set 8:Hi Stefan. I don't think the analogy with the Java editor holds up. If you create a ""New > Class"", then as soon as the dialog is closed and before the editor opens, the file already exists on disk. This is *not* the case with snippets. If I use ""Add"" or ""Create Snippet"", then the editor just opened is for a snippet that does not yet exist on disk. It *only* exists in memory. In fact, the snippet editor does not even know where on disk the snippet will be saved and in what format. This is all handled by the snippet repository (in SnippetEditor.doSave):  repo.importSnippet(snippet);What importSnippet does (e.g., creating a .json file, doing a HTTP POST to a remote server, whatever) is hidden from the editor. The editor sees only the in memory snippet. See SnippetEditorInput.oldSnippet and SnippetEditorInput.snippet. The old snippet is immutable; the new snippet may overwrite this or save it under a new UUID instead.I hope this clarifies some things."
50603,1,"Patch Set 8:As for the databinding framework: I don't think that values should be updated only upon a save. See m2e's POM Editor for example:- Open a pom.xml- On the ""Overview"" page change the ""Artifact Id"" (but do *not* save).- Switch to the ""pom.xml"" page. The XML already reflects your edit, even though the editor is marked dirty (*).I think this is *very* similar to our use case: We have two pages (Raw Source, Xtext-based Editor Source) whose contents should be kept synchronized, even if I don't do a save. Essentially, whenever a page is switched to, its contents need to be updated to what's in the in-memory model.Does this make sense?"
50604,1,"Patch Set 8:Ok, I get it now.Should we open a bug for this or make the change in this change-set?"
50605,1,"Patch Set 8:It does make sense.I have a question here. When you said we should not use data bindings, were you referring to the source page only, or to the metadata page as well?Because in the metadata page it will be hard to keep track of all the changes, especially for list viewers (I at least have no idea how to track changes to list items without creating an observable object).Also, I don't think the two frameworks get in each others way:When a change occurs, the data binding framework will update the in-memory model (the editor does not do this by itself) and the editor is marked dirty through the change listeners on the observable objects.When the editor is saved, the on-disk file is updated, and the pages are cleared of their dirty states.So the databinding framework does not really influence the way the editor is marked dirty or not (note that we'll still need listeners to mark the editor dirty without databinding), it only helps us keep the model in sync with the view.I might be thoroughly mistaken though. At the moment I'm trying to make things clear for myself as well."
50606,1,Patch Set 8:Hi Stefan. Please amend this change rather than open a new one. Having to rebase two changes rather than one is just more work.Regarding the data-binding framework: You may be right; they may not get in each others way. There's one concept in the FormEditor I'd like to understand first to see how things interact: staleness. What does it mean for a form part to be stale. Can this even happen? And what is our model w.r.t. which dirtiness/staleness are evaluated? The in-memory Snippet or the on-disk snippet (which may not exist initially)? I think it's important to answer these questions first to come up with a clean solution.
50607,0,"Patch Set 8:> Please amend this change rather than open a new one.I did not express myself properly. I did not mean to make another commit, but solve the bug during this one.As for staleness, I'll look further into it.So, for the moment we agree not to make any changes to the data bindings? (just to be sure) :-)"
50609,1,Patch Set 8: Code-Review-1I found a big problem to the current implementation: changes in one page are not propagated to other pages. This has to do with marking pages stale and the fact that data-binding listeners do not seem to react to changes in the model.I commented more about this on bugzilla < https://bugs.eclipse.org/bugs/show_bug.cgi?id=436692 >.
50617,1,"Patch Set 11:>But there are still some problemsI forgot to override the commit method in the metadata page as well. My bad.If you look to the Source page, the commit method does a check that assures to commit that page only in the case of a save action.This is needed because when switching pages, the editor will commit any changes on the previous page, and that page will not be dirty anymore (unfortunately the editor stays dirty).I'll take care of it :-)"
50619,0,Patch Set 1: Code-Review+1This looks good but I haven't tested it yet
50621,0,Change has been successfully cherry-picked as f98d3e5bdb1086be66b1a47d6c9cc6ce80f73642
50626,0,Change has been successfully merged into the git repository.
50631,0,Change has been successfully merged into the git repository.
50634,0,Patch Set 7: Code-Review-1(5 comments)Hi Olav. There's one problem with the current code relating to the question who is allowed to depend on Lucene. Comments inline. It would be great if you could address them soon as I am on vacation from Saturday on (for a week).
50658,0,Change has been successfully merged into the git repository.
50663,0,Change has been successfully merged into the git repository.
50672,0,Change has been successfully merged into the git repository.
50675,0,Change has been successfully merged into the git repository.
50679,0,Change has been successfully merged into the git repository.
50680,0,Change has been successfully cherry-picked as 554c753e316b885ef563b9d341da017972c7b4ff
50681,0,Patch Set 3:Thank you for the review!
50687,1,Patch Set 1: Verified+1 Code-Review+1Cool feature of repo.eclipse.org I just discovered by accident.
50689,0,Change has been successfully merged into the git repository.
50694,0,Change has been successfully merged into the git repository.
50696,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6236/ : UNSTABLE
50697,0,Patch Set 1: Code-Review-1Normally we read top-down. Git also used top-down in the rebase editor. We're used to that. We're not used to tortoise.The reason the history is shown in reverse is that you are usually interested in the newest changes.
50701,0,Patch Set 5: Verified+1 Code-Review+2- rebased- fixed javadoc- improved commit message
50702,0,Change has been successfully merged into the git repository.
50704,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6262/ : UNSTABLE
50706,0,Patch Set 3: Code-Review-1(13 comments)the UI proposal looks good to me
50707,1,"Patch Set 3:(13 comments)Mathias, thanks for reviewing PS #3. I was planning to cleanup the code at a later stage when UI will stabilize, so it was filled with javadoc stubs, bad variable names, etc. :( Next time I will think of a better way to submit patches for UI evaluation only..."
50714,0,Change has been successfully merged into the git repository.
50724,0,Change has been successfully merged into the git repository.
50727,0,Change has been successfully merged into the git repository.
50730,0,Change has been successfully merged into the git repository.
50732,1,Patch Set 4: Code-Review+1I still couldn't figure out way the text decoration behaves like it does. Will submit now and open a bug about this later. The prefix length adjustment needs to be tested soon.
50738,0,Patch Set 5: Code-Review+2Using the three-arg constructor of ControlDecoration fixed the UI problem as well. Now all is well with this change. :-)
50739,0,Change has been successfully merged into the git repository.
50742,0,"Patch Set 1: Verified+1 Code-Review+2Looks simple, thank you!"
50743,0,Change has been successfully merged into the git repository.
50745,0,Patch Set 1: Code-Review+2Looks pretty good !!All test plugins are included.Will be nice to see the new stats !Thanks !
50746,0,Change has been successfully cherry-picked as 97079f6ad098c3f7e0f413e2280f56e20848717c
50748,0,Change has been successfully merged into the git repository.
50754,0,"Patch Set 4:Note that I moved unrelated dependency upgrades from this patchset, as I'm planning to do those across the board for the next milestone (as it saves time when handling the CQ process). I also fixed the generation of the help mojo and updated the MavenProject field to use @Parameter as recommended in http://jira.codehaus.org/browse/MPLUGIN-257"
50758,0,Change has been successfully merged into the git repository.
50764,0,Change has been successfully merged into the git repository.
50769,0,Change has been successfully merged into the git repository.
50775,0,Change has been successfully merged into the git repository.
50780,0,Change has been successfully merged into the git repository.
50782,0,Change has been successfully merged into the git repository.
50784,0,Patch Set 1: Code-Review+1love this change!
50793,0,Change has been successfully merged into the git repository.
50795,0,Change has been successfully cherry-picked as 9a25ff506e2e1e35439453aee236fc35f5527edb
50800,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1212/ : UNSTABLE
50804,0,Change has been successfully cherry-picked as 83169e23d6722ede825da4369a72b1937939048b
50818,0,Change has been successfully merged into the git repository.
50822,1,"Patch Set 4: Code-Review-1please look into ------------------------------------------------------- T E S T S-------------------------------------------------------Running org.eclipse.linuxtools.lttng2.control.ui.tests.AllTestsTests run: 129, Failures: 1, Errors: 4, Skipped: 0, Time elapsed: 85.611 sec <<< FAILURE!Results :Failed tests:   testTraceSessionTree(org.eclipse.linuxtools.lttng2.control.ui.tests.model.component.TraceControlSnapshotSessionTests)Tests in error:   testCreateLiveSessionErrors(org.eclipse.linuxtools.lttng2.control.ui.tests.service.LTTngControlServiceTest)  testCreateSnapshotSession(org.eclipse.linuxtools.lttng2.control.ui.tests.service.LTTngControlServiceTest)  testCreateLiveSessionErrors(org.eclipse.linuxtools.lttng2.control.ui.tests.service.LTTngControlServiceMiTest)  testCreateSnapshotSession(org.eclipse.linuxtools.lttng2.control.ui.tests.service.LTTngControlServiceMiTest)Tests run: 129, Failures: 1, Errors: 4, Skipped: 0"
50823,0,Change has been successfully cherry-picked as 2b4b6caa61db2b632b31b89e08eeb9ee9b65b1a2
50836,0,Change has been successfully merged into the git repository.
50839,0,Change has been successfully cherry-picked as 723c5b8034a9bb0dca3427241e8dd4c3b98a0104
50847,0,Change has been successfully merged into the git repository.
50850,0,Change has been successfully merged into the git repository.
50853,0,Change has been successfully cherry-picked as 5bd92ecc82307a19b7e546ea8a41534125009ef5
50856,0,Change has been successfully cherry-picked as 9758c0be77a8d6dbe813450c64b16cab5b750f5e
50861,0,Change has been successfully merged into the git repository.
50865,0,Patch Set 3: Code-Review+1(11 comments)looks good with some minor clarifications/cosmetic improvements
50868,0,Change has been successfully merged into the git repository.
50873,0,Change has been successfully cherry-picked as 3a81f6593214e6c38fb00c1d11b179e1243cb028
50875,0,Change has been successfully merged into the git repository.
50877,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6238/ : UNSTABLE
50878,0,Patch Set 2: Verified+1 Code-Review+1Looks good now!
50880,1,"Patch Set 1: Code-Review-1(4 comments)That's pretty handy.What I'm a bit worried about is that it will only find the visible branches/tags, so the user must be aware that they have to use ""Show All Branches and Tags"". But I think as all the search options work this way, it's ok.The next step for improving the history view would be to have a dropdown where one can select the branch(es) that the history view should start walking at, as opposed to just current/all."
50886,0,Change has been successfully merged into the git repository.
50888,0,Change has been successfully cherry-picked as 96c57d8ceb52e4363939233155868a705b02328f
50891,0,Change has been successfully cherry-picked as ae4a737a971cd286b03aad8a0c448fc9cc66a3b9
50895,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/1329/ : UNSTABLE
50908,0,Change has been successfully merged into the git repository.
50911,0,Change has been successfully merged into the git repository.
50916,0,Change has been successfully merged into the git repository.
50920,0,Change has been successfully merged into the git repository.
50925,0,Change has been successfully merged into the git repository.
50927,0,Patch Set 1: Code-Review-1(1 comment)One small change to copyright and this will be good to go.
50931,0,Change has been successfully merged into the git repository.
50933,0,Change has been successfully pushed.
50935,0,Change has been successfully pushed.
50938,0,Change has been successfully merged into the git repository.
50942,0,Change has been successfully merged into the git repository.
50944,0,"Patch Set 1: Code-Review-1(1 comment)See inline comment, otherwise looks good."
50945,1,AbandonedChange abandonned. Cf http://bugs.eclipse.org/441231
50951,0,"Patch Set 2:I'd suggest to add an input dialog to select the servlet path in order to avoid the HTTP 500 error - 500 feels worse than a 404. Apart from this, I'm fine with the change."
50955,0,Change has been successfully merged into the git repository.
50959,0,Change has been successfully merged into the git repository.
50961,1,"Patch Set 2: Verified-1 Code-Review-2(1 comment)The code looks good but the test is wrong: when running the test alone, it will execute the wrong test.Please fix and we can go ahead with this change."
50966,0,Change has been successfully merged into the git repository.
50971,0,Change has been successfully merged into the git repository.
50975,0,Change has been successfully merged into the git repository.
50979,0,Change has been successfully merged into the git repository.
50982,0,Change has been successfully merged into the git repository.
50987,0,Change has been successfully merged into the git repository.
50993,0,Change has been successfully merged into the git repository.
51000,0,"Patch Set 11:Jo├úo, your new png file is a screenshot of a ecore model opened in the Ecore tree editor !It is not a screenshot of a class diagram and does not illustrate your pattern ! You could open create a diagram with ecore tools 2 create some elements and take a screenshot (see the ecore tools 2 tuto/website)"
51024,0,"Patch Set 2:I will leave the image for when the wizard will be fine, about the action I don't know exactly how to start the wizard in action returning a command to action, if I put the code of open wizard in the action when I right click in viewpoint it open the wizard without choose any option."
51037,1,"Patch Set 4:I understand your comments Maxime Porhel, on ""Combo"" we need to add elements, from where we will get this ones? (I know we need to create the command just after click on finish otherwise it will create a UnexecutableCommand)Should I create a static int variables to identify any element on Combo?I have created a default list in action of command to get the ResourceSet and configure it with a method for the configuration single or multiple tools inside the command"
51043,1,Patch Set 1:The image is a default image to change in last version of wizard.
51045,1,"Patch Set 3:In this patch I already lunch the Wizard without use AbstractRefactoringAction, I am still try to find how to return the command and execute him from wizard."
51062,0,Change has been successfully merged into the git repository.
51064,1,Patch Set 5:Some changes in this new patch.To have a full functional wizard I think only need to configure the command and make it execute it when finalize the wizard.
51092,0,Change has been successfully merged into the git repository.
51112,0,"Patch Set 5:(6 comments)Jo├úo, I put some coments, it is a good start, continue ;-)"
51120,1,"Patch Set 2:> Patch Set 2: Verified-1FYI, since the branch is based on Papyrus/Kepler, the Tycho build is not configured. It is safe to ignore Gerrit failures"
51127,0,Change has been successfully merged into the git repository.
51131,0,Change has been successfully merged into the git repository.
51134,0,Change has been successfully merged into the git repository.
51136,0,Patch Set 1: Code-Review+2Thanks Marc!
51137,0,Change has been successfully cherry-picked as 0f9bc0bea4844b50f2d34d37e4325905e24f1f36
51142,0,Patch Set 2: Verified+1 Code-Review+1Looks good
51145,0,Change has been successfully merged into the git repository.
51161,0,"Patch Set 3:That seems fine to me. If you open two editors on the same comment you shouldn't expect both to be saved. I don't think that is a valid use case or something people would be likely to do so to me it's not a reason to make the dialog modal, and it certainly doesn't justify having a confirmation dialog on non-Windows systems."
51171,0,Change has been successfully merged into the git repository.
51173,0,Change has been successfully merged into the git repository.
51178,0,Patch Set 2: Verified+1 Code-Review+1Looks good
51184,0,Change has been successfully merged into the git repository.
51189,0,Change has been successfully merged into the git repository.
51191,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/203/ : UNSTABLE
51196,0,Change has been successfully merged into the git repository.
51201,0,Change has been successfully merged into the git repository.
51203,1,"Patch Set 1:This code was removed in https://git.eclipse.org/r/#/c/23534/ but without it I think there will be a memory leak because when we install() the support, it adds a listener to the preference store and if we don't uninstall() or dispose() it, the listener will never be removed, and we'll add another one every time we open an editor. Why was the code removed? I've tried it and it doesn't seem to cause any problems."
51204,1,"Patch Set 1: Verified+1 Code-Review+1I just tested it it seems to work fine. I don't know why it was removed , but lets put it back . One thing, it gets confusing always using the same bug  number for many push, why not using different bug number and we put a block other bug in the attribute !"
51205,1,"Patch Set 1:That's the bug I was working on when I pushed the reviews. A bug represents some work that needs to be done, in this case performing a code review. The Gerrit reviews provide a place to discuss the specific changes; I don't want to create a bug for each review as that is duplicative and risks spreading the discussion over mutiple artifacts. It's standard practice to have multiple reviews for the same bug as long as they have different summaries."
51209,0,Change has been successfully merged into the git repository.
51222,0,Change has been successfully merged into the git repository.
51225,1,"Patch Set 1:The code is reachable and it fixes a bug when there are comments on both sides. Just try it. You're right though, there is still a bug when there are comments on the same line on both sides."
51226,1,Patch Set 1:The tests I added fail without this code...
51227,1,"Patch Set 1:(In reply to comment #2)> You're right though, there is still a bug when there are comments> on the same line on both sides.I don't see a clean fix for this so I'm going to leave it for another review since it's a rare case."
51229,0,"Patch Set 1:I reviewed the code to calculate the next comment to show and the move forward is wrong. It should go to the right side. If the test is not there, it default to the next comment on the right which should be fine otherwise the moving forward to the next comment will stop there.For the Backward movement, it seems ok"
51230,0,"Patch Set 1:I reviewed the code to calculate the next comment to show and the move forward is wrong. It should go to the right side. If the test is not there, it default to the next comment on the right which should be fine otherwise the moving forward to the next comment will stop there.For the Backward movement, it seems okIf the test for FORWARD is there, the right comment do not show and if the test is not there, then it stops on the RIGHT SIDE anjd do not move forwards"
51231,0,"Patch Set 1: Code-Review+1I reviewed the code to calculate the next comment to show and the move forward is wrong. It should go to the right side. If the test is not there, it default to the next comment on the right which should be fine otherwise the moving forward to the next comment will stop there.For the Backward movement, it seems okIf the test for FORWARD is there, the right comment do not show and if the test is not there, then it stops on the RIGHT SIDE and do not move forwards.We need to review in depth the movement when there is comment on the left and right side . For most cases, there should be comments on one side only"
51232,1,"Patch Set 1:Thanks for testing. You are right, there is still a problem with the navigation, but I think it's a different problem than you think and not caused by this change. The problem is that when opening the compare editor, the first changed line is selected, so when navigating through the comments, it starts from there. If there are comments before the first changed line, they will be skipped the first time through. In the specific case where the first changed line coincides with the first comment, this change causes that comment to be skipped.I think the right fix for that issue would be,  when opening the editor, to set the selection to the first comment or the first change, whichever is earlier."
51233,1,"Patch Set 1: Code-Review+2I've opened a bug for that: 442005: when opening compare editor, set the selection to first comment or first change, whichever is earlierhttps://bugs.eclipse.org/bugs/show_bug.cgi?id=442005"
51237,0,Change has been successfully merged into the git repository.
51240,0,Change has been successfully merged into the git repository.
51246,0,Change has been successfully cherry-picked as 3d70ff205e59c57995002f711b6019b6d3d6212d
51252,0,Change has been successfully merged into the git repository.
51253,1,"Patch Set 3:Daniel, I've submitted that change after I noticed a bug in the current implementation which would likely be fixed by your code. Please create a new change set when adding the missing features.Thanks,Marcel"
51255,0,"Patch Set 1: Code-Review+1Ok, I think I have general idea whats happened :) Looks good. Thanks!"
51259,0,Change has been successfully merged into the git repository.
51263,0,Change has been successfully merged into the git repository.
51268,0,Change has been successfully merged into the git repository.
51273,0,Change has been successfully merged into the git repository.
51288,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/313/ : UNSTABLE
51291,0,Change has been successfully merged into the git repository.
51295,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-docs/289/ : UNSTABLE
51311,1,"Patch Set 6: -Code-ReviewHi Andreas, -1 just for the icon. sorry for the inconvenience."
51313,0,Change has been successfully merged into the git repository.
51322,0,Change has been successfully cherry-picked as bd13cffb445f083d1e065c96f355887e547cc410
51329,0,"Patch Set 1:I am basically fixing comments on the header patch that was merged. Even if later we convert to ints, it is probably good to keep the information as ""raw"" as possible as long as possible. (No pun intended"""
51333,0,Patch Set 4: Code-Review+1 Verified+1It's probably a good idea to keep the API internal for now. Later on we should implement a way to plug-in new protocols using an extension point. When doing that we can think about what is needed as API.
51335,0,Patch Set 4:Good point! Following step: data-driven protocols? ;)
51336,0,Patch Set 4: Code-Review+2Good point! Following step: data-driven protocols? ;)
51337,0,Change has been successfully cherry-picked as f386a1d053fc74851183755418d96661e2e90b04
51351,0,Change has been successfully rebased as 7adda4192570c3dc207e8e4141534d2f5aac37d0
51353,0,Change has been successfully merged into the git repository.
51360,0,Patch Set 3: Verified+1 Code-Review+2This looks fine to me.
51365,0,Change has been successfully cherry-picked as 49bd91f45da8df9d7a2c8b5bda09cd2d42db8712
51368,0,Change has been successfully merged into the git repository.
51372,1,Patch Set 9: Code-Review+2 Verified+1Thanks Stefan for this contribution and sorry for the delay in the review from my side.
51373,0,Change has been successfully merged into the git repository.
51378,0,"Patch Set 2: -Code-Review(6 comments)Thanks Stefen, Please also update the copyright header"
51386,0,Change has been successfully merged into the git repository.
51390,0,Change has been successfully merged into the git repository.
51394,0,Change has been successfully merged into the git repository.
51397,0,Change has been successfully cherry-picked as 642f51a5772a463d297683836034b2cdd5a038eb
51402,1,"Patch Set 7: Code-Review+2 Verified+1This makes the test suite work via Maven. To me it looks like this did not work before, at least the pom.xml was incorrect in several places."
51403,0,Change has been successfully merged into the git repository.
51410,0,Change has been successfully merged into the git repository.
51420,1,Patch Set 4:confirmation dialog: ok + cancel deleting while opening: repo is now closed first and then deleted. It waits till the opening is finished.If there is no snippet repository all buttons (except add repo) should be disabled: On windows this is already working. Do you have other behavior on mac?placeholder text: at the moment I did not have an idea how this could look like. I would prefer a new bug for this.
51431,0,Change has been successfully merged into the git repository.
51434,1,"Patch Set 8:@Olav: I have problems building this with Maven. In plugins/org.eclipse.recommenders.snipmatch I get a folder target/generated-sources/emf/target/generated-sources/emf/...This of course confuses Eclipse, as the package names of the generated Java sources don't match the directory. Do you have any idea what's causing this?"
51449,0,Change has been successfully merged into the git repository.
51455,0,Change has been successfully merged into the git repository.
51457,1,"Patch Set 3:Zhenni, I've attempted to merge your change with the refactoring I made separately. Unfortunately the JUnits are not passing, and I'm sure why.Some of the files you committed had mixed line DOS/Unix endings and are showing up as binary files in the diff tools, making it difficult. Also the JUnit tests give cryptic errors, so it's difficult to debug.Can you take a look at my change set? Since you know the code better, maybe you can debug?"
51459,1,"Patch Set 1: Verified-1Zhenni, I'm seeing JUnit failures when I build. Can you take a look?Failed tests:   testAgaisntrunExampleCheckerwithInputStreamInput(org.eclipse.lyo.examplechecker.junit.TestExampleCheckerTool)  testAgaisntrunExampleCheckerwithModelInput(org.eclipse.lyo.examplechecker.junit.TestExampleCheckerTool)  testAgainstStringInterface(org.eclipse.lyo.examplechecker.junit.TestExampleCheckerTool)Tests run: 3, Failures: 3, Errors: 0, Skipped: 0"
51463,0,"Patch Set 4: Verified+1 Code-Review+2Thanks, Zhenni! Works great. Really appreciate your help."
51464,0,Change has been successfully merged into the git repository.
51465,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
51467,0,Change has been successfully merged into the git repository.
51469,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
51473,0,"Patch Set 2: Verified+1 Code-Review+2Looks good, thanks!"
51474,0,Change has been successfully merged into the git repository.
51477,0,Patch Set 1: Code-Review+1Works for me. Thanks :)
51479,0,Change has been successfully merged into the git repository.
51481,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
51483,0,Change has been successfully merged into the git repository.
51485,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
51491,1,"Patch Set 3:correct, my bad - sorry"
51493,0,"Patch Set 3:Dani,Could you please advice in the considered version-related question?thanks for your help,Daniel"
51495,1,"Patch Set 3:HINT: Whenever you change a version in a branch and the new version is lower than the previous one, then you are about to make a mistake."
51496,0,"Patch Set 3:(1 comment)except the version numbering and mentioned minor issues, the patch looks good to me and works fine"
51498,0,Change has been successfully merged into the git repository.
51505,0,Change has been successfully merged into the git repository.
51508,0,Change has been successfully cherry-picked as aec4e5edefe578eeb9271366fda17730c8f1383f
51514,0,Patch Set 7:Build SUCCESSFUL. Now starting integration tests...
51516,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
51518,0,Patch Set 6:Build SUCCESSFUL. Now starting integration tests...
51520,0,Patch Set 5:Build SUCCESSFUL. Now starting integration tests...
51523,0,Patch Set 9:Build SUCCESSFUL. Now starting integration tests...
51524,0,"Patch Set 9: Code-Review+1(1 comment)Looks good, although I don't fully understand all the changes."
51527,0,Patch Set 10:Build SUCCESSFUL. Now starting integration tests...
51529,0,Change has been successfully merged into the git repository.
51531,0,Patch Set 4:Build SUCCESSFUL. Now starting integration tests...
51537,0,Change has been successfully merged into the git repository.
51542,0,Change has been successfully merged into the git repository.
51544,1,"Patch Set 1:Daniel, I assume you work on the related bug. I just created this download to help but I do not plan to release it. Mark it a ""Abandon"" if you don't need it."
51547,0,Change has been successfully merged into the git repository.
51549,0,Patch Set 1: Verified+1 Code-Review+2Thanks for your contribution !
51550,0,Change has been successfully merged into the git repository.
51552,1,"Patch Set 1:Daniel, I assume you work on the related bug. I just created this download to help but I do not plan to release it. Mark it a ""Abandon"" if you don't need it."
51555,0,Change has been successfully merged into the git repository.
51558,0,Change has been successfully merged into the git repository.
51561,0,Change has been successfully merged into the git repository.
51564,0,Change has been successfully merged into the git repository.
51567,0,Change has been successfully merged into the git repository.
51571,0,Change has been successfully merged into the git repository.
51573,1,"Patch Set 2: Code-Review-1The build.properties is invalid:- The resources should be included in the binary build (Not in the source build)- The about.html file is missing and should be included in both builds (Source + Binary)- The plug-in should be included into a test feature (Although this is not absolutely required with Tycho, this will probably break on the Buckminster build)"
51575,1,Patch Set 1: Code-Review-1The UMLRT Validation pom.xml is invalid: it uses top-pom-main-tests as a parent (Instead of top-pom-extra-tests)The new tests should be added to the Extra TestSuite
51578,0,Change has been successfully merged into the git repository.
51581,0,Change has been successfully merged into the git repository.
51584,0,Change has been successfully merged into the git repository.
51590,0,Change has been successfully merged into the git repository.
51596,0,Change has been successfully merged into the git repository.
51597,0,"Patch Set 3:Nice, moving the RCP-specific tests into their own fragment. :-)"
51599,0,"Patch Set 3:No, you doing merges is fine. I was just happy to see this bit of project restructuring being done by you."
51600,0,Patch Set 3:Ah :-DI wanted to do it before working on the completion proposals tests. :-)
51605,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
51607,0,Change has been successfully merged into the git repository.
51609,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
51611,0,Change has been successfully merged into the git repository.
51613,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
51617,0,Change has been successfully merged into the git repository.
51619,1,"Patch Set 2: Code-Review+1This is not something we can (yet) build against, but it is already useful to spot API changes."
51621,0,Change has been successfully merged into the git repository.
51623,0,"Patch Set 1: Code-Review-1FYI, setting this target platform won't result in a working build. However, setting this target platform will help you to discover those spots where the API changed from Juno to Kepler and beyond. As such, I think it is a good thing to have."
51626,0,Change has been successfully merged into the git repository.
51629,0,Change has been successfully merged into the git repository.
51633,0,Change has been successfully merged into the git repository.
51637,0,Change has been successfully merged into the git repository.
51640,0,Change has been successfully merged into the git repository.
51643,0,Change has been successfully cherry-picked as 2a3246fa84d256cd087e41ef71150a07b662fd8c
51646,0,Change has been successfully merged into the git repository.
51647,0,Change has been successfully cherry-picked as 4c8e2f3d913931ab8c57108334416b0cd888726c
51652,0,Change has been successfully merged into the git repository.
51656,0,Patch Set 2:I looked at it and I give it an enthusiastic +0.
51658,0,Change has been successfully cherry-picked as 640dde857f26904d052f6b0fdac3cf645aaa3f5f
51660,0,Change has been successfully merged into the git repository.
51667,0,Change has been successfully merged into the git repository.
51670,0,"Patch Set 4: Code-Review-1(3 comments)Just the tolerance thing (you're quite intolerant! xD), after that should be good to merge imo."
51671,0,Change has been successfully cherry-picked as 7b88510c20eb2a6bffdbf4d4abf32a20a40c2de8
51673,0,Patch Set 1: Code-Review+1looks fine
51677,1,"Patch Set 7:As Marc-Andre would say, shit's fixed yo"
51678,0,"Patch Set 7: Code-Review+2My bad, I guess it got lost in the sea of other errors I was having from other opened plugins... Gotta love these strict settings!"
51684,0,"Patch Set 3: Code-Review-1(7 comments)Interesting, some comments.Is it much slower to update the values every time we add a packet, compared to storing all the events and calculating them on demand?"
51685,0,"Patch Set 3:I don't think it is much slower (although this should be benchmarked) since the same computation will have to be performed for both cases. The reason for not holding the events is that we are supposed to be able to read traces that are bigger than memory. Thus, I think this solution is better :)"
51688,0,Change has been successfully merged into the git repository.
51698,0,Change has been successfully merged into the git repository.
51699,0,Change has been successfully cherry-picked as 5daf19f6a9c2ff082d085e435fc633e8e35b10fa
51707,0,Change has been successfully merged into the git repository.
51711,0,Change has been successfully merged into the git repository.
51714,0,Change has been successfully merged into the git repository.
51718,0,Change has been successfully merged into the git repository.
51723,0,Change has been successfully merged into the git repository.
51736,0,Change has been successfully merged into the git repository.
51740,0,Change has been successfully merged into the git repository.
51744,0,Change has been successfully cherry-picked as b24a49090a1761df9f8cbb05c39a26a7ce5e3dd8
51748,0,Change has been successfully cherry-picked as 9cafff55d61ad18a8fafff2497adf8ad5bf70fa3
51754,0,"Patch Set 3: Code-Review-1(4 comments)I'm fine with this change, but have some minor comments (see code).It seems to me that MeasurementOperator does not need to be a SessionSingleton anymore, as singletons only make sense with lazy loading. Since the instance is explicitly created in MeasurementUtil, it could be registered directly with the UISession. However, if this is not a simple change, it could also be changed later."
51757,0,Change has been successfully merged into the git repository.
51768,0,Patch Set 4: Code-Review+2Let's get it in!
51769,0,Change has been successfully cherry-picked as 8a0f02310b724c94468254a025f3aafa383b4cc1
51776,0,Change has been successfully merged into the git repository.
51783,0,Change has been successfully merged into the git repository.
51789,0,Change has been successfully rebased as 4c520d3e282146ef260cae0433ce52e8a4acc737
51791,1,"Patch Set 1:This commit message only explains *what* you did, not *why* the remaining RenderDispose_Test are obsolete. Could you change it?"
51793,0,Patch Set 2: Code-Review+2> Uploaded patch set 2.Rebased patch set 1 & solved conflict in the testsEverything's fine. Thanks!
51794,0,Change has been successfully merged into the git repository.
51800,0,Change has been successfully merged into the git repository.
51801,0,Patch Set 2:Thanks Dani!
51807,0,Change has been successfully merged into the git repository.
51808,0,Change has been successfully cherry-picked as 441ea5c3339421294ffce1a675230f5dbf73e206
51811,0,Patch Set 2: Verified+1 Code-Review+2This looks fine to me. Approving.
51815,0,Change has been successfully rebased as f90cf5e96a9cff2df52c488a30eb0e32fb5adeea
51818,0,Change has been successfully merged into the git repository.
51821,0,Change has been successfully merged into the git repository.
51827,0,Change has been successfully merged into the git repository.
51833,0,Change has been successfully merged into the git repository.
51836,0,Change has been successfully merged into the git repository.
51838,0,Change has been successfully pushed.
51840,0,Change has been successfully pushed.
51844,0,Change has been successfully pushed.
51847,0,Change has been successfully merged into the git repository.
51851,0,Change has been successfully merged into the git repository.
51852,0,Change has been successfully cherry-picked as 6658da875d44cd975c43f4bfc964c09496e0f495
51862,0,Change has been successfully merged into the git repository.
51870,0,Change has been successfully merged into the git repository.
51872,0,Change has been successfully pushed.
51874,0,Change has been successfully pushed.
51876,0,Change has been successfully pushed.
51878,0,Patch Set 1: Code-Review+2Packages look good to me. Tested the RCP/RAP package with positive results.
51879,0,Change has been successfully merged into the git repository.
51881,0,"Patch Set 6: Code-Review+2Looks good now! As this is a big change, we'll need some time to properly test it, so let's push it.Minor bug: the validation decorator is not removed from the widget when changing selection.Steps to reproduce:- Select an element with a validation warning/error- Select another element of the same typeFor example:- Create 3 Classes (Class1, Class2, Class3)- Rename Class3 to Class1 (Which adds a warning for conflicting name)- Select Class2: the warning is still displayed, although Class2 is not a conflicting name> Uploaded patch set 6.Rebased patch set 5 (Solved 1 trivial conflict on a Manifest)"
51882,0,Change has been successfully merged into the git repository.
51884,0,"  Part (c) is the implementation of the delegating observables.  They ensure that the entire contract of the underlying observable is provided (including all custom interfaces such as ICommitListener) via the dynamic proxy class mechanism.  The usual contract of observables is implemented, including tracking the invocation of getter methods, all verified with a fairly comprehensive suite of JUnits tests."""
51888,1,"Patch Set 3:Patch set 3 updates the DefaultDisplayEngine to re-use SWT controls on a per-tab basis, for tabs that present the same controls for the new selection as for the previous selection.  The equivalence of the contents of a tab is determined by new equals() semantics (and accompanying hash codes, of course) for XWTSectionDescriptors and XWTTabDescriptors.  Essentially, two XWTTabDescriptors are equal (and therefore would generate the same SWT controls) if their IDs are equal and their ordered lists of section descriptors are equal.With this change, the continuity of the property sheet UI is a bit better for the user:  when changing the selection, if the new selection presents the same tab with the same widgets as the currently active tab, then that tab just shows the newly selected element.  So, for example, once the user activates the Profile tab of an element to work with applied stereotypes, that tab seamlessly updates when selecting another shape in the diagram or another element in the Model Explorer (even going back-and-forth between diagram and explorer, where selections are GEF EditParts in the one case and facet tree-elements wrapping semantic model elements in the other).  There is no flashing of the UI as controls are destroyed and re-built to look as they did before.This new patch set also fixes a problem in the delegating observables, in the case that the delegate is a delegating observable implemented as a dynamic proxy (new test cases added to cover this scenario).  This problem was uncovered in testing the customization of property-sheet models (the binding of the observable list for view constraints blew up).  The ""Customization preview"" [sic] view seems to work correctly, although I don't know what special cases there are to exercise in this view."
51889,0,"Patch Set 3: Code-Review-1I've been playing a little bit with the selection and tab changes, and at some point the Appearance tab became completely empty. (Apparently, this happens when switching from the Diagram's ""General"" tab and a graphical element's ""Appearance"" tab. And the tab remains empty until I switch e.g. from a Class to a Property, probably because they have different contents in their appearance tab)Steps:- Create a Class diagram with classes and properties- Select the diagram and go to the General tab- Select a Class and go to the Appearance tab- Switch back to the diagram: the General tab is empty- Switch back to the class: the Appearance tab is empty- Select a Property: the Appearance tab is now populated- Select the Class: the Appearance tab is now populated- Select the Diagram: the General tab is still empty- Repeat from step 3 :)Performances are otherwise really good, when switching between similar elements. Maybe this could be extended to ""Similar Sections"" (In addition to ""Similar Tabs""): for the Appearance tab, almost all sections are the same, and this is the most heavy properties tab. Currently, if we reuse the same sections between two selections, but add a new one (or remove it), everything is redrawn (Although 80% of the contents is the same)I also have quite a lot of exceptions when switching selection, especially in the dispose() methods, when using multiple selection (I'll attach the log file to the associated bugzilla)"
51890,0,"Patch Set 3:Thanks, Camille.I had a brief look at one point at reuse on a section-by-section basis, but that is complicated by the need to maintain a consistent ordering of widgets in the layout.  When a section is removed, disposing its controls is easy enough, but adding widgets is more complicated.  Perhaps I'll be inspired to take another crack at it and will find some trick that makes it work."
51893,1,"Patch Set 4:Patch Set 4 fixes the two problems observed by Camille.  Firstly, and more simply, the problem of the General tab going blank.  The problem here was that the Tabbed Property Sheet would disposed of an entire tab and its contents if the new selection didn't need that tab at all, without any interaction with the XWT-based DisplayEngine.  So, the DefaultDisplayEngine would continue to try to show disposed controls for the General tab (or any other in the same situation).  Now the DefaultDisplayEngine listens for the disposal of the controls that it creates and cleans up its understanding of which reusable controls are still available for which sections in which tabs.The exceptions in multiple-selection scenarios all boiled down to observables being prematurely disposed, either by the composite MultipleObservableValue, or by a DelegatingObservable, or by a ModelElement.  So, now all of these various components that can aggregate/share observables participate in a simple reference-counting scheme so that observables will only be disposed (and will be disposed automatically) when they are no longer in use by any component."
51894,0,Change has been successfully cherry-picked as 9c2bc8fa5527955632a94c431da3f3a8d50919b6
51899,0,Change has been successfully cherry-picked as cdc0a98fb65721e1e6463a60c1eae42448cbd942
51905,0,Change has been successfully merged into the git repository.
51907,0,Change has been successfully merged into the git repository.
51913,0,Change has been successfully merged into the git repository.
51922,0,Change has been successfully merged into the git repository.
51928,1,"Patch Set 2: Verified+1 Code-Review-1The option works; it allows to choose the default name for sources folder.However, the following problems need to be resolved:- when a <<JavaSrcFolder>> uml::model is used with no taggedvalues, the name of the uml::model should be used as the source folder.- the name of the metamodel generatorOptionsMM is not consistent: wefound generatorOptionsMM.uml and generatoroptionsmm.ecore- a .gitignore file is commited (to exclude /bin/). Can we avoid this ?"
51929,1,"Patch Set 2:> - a .gitignore file is commited (to exclude /bin/). Can we avoid this ?The Papyrus repository already contains a global .gitignore to exclude the bin/ folder everywhere. So, additional .gitignore files should definitely not be contributed"
51934,0,Change has been successfully merged into the git repository.
51946,0,Change has been successfully merged into the git repository.
51954,0,Change has been successfully cherry-picked as 05ed4d406964fd7c13d2a431671bbb50ceb99a46
51957,0,"Patch Set 4: Code-Review+2Looks good! Unit tests would have been nice, but hey turns out there's no tests at all for the filter things atm..."
51960,0,Change has been successfully merged into the git repository.
51961,0,Change has been successfully cherry-picked as fd18d71252a8bbf541ecd93339e1cdac1713d85e
51966,0,Change has been successfully merged into the git repository.
51969,0,Change has been successfully merged into the git repository.
51974,0,Change has been successfully merged into the git repository.
51976,0,Change has been successfully merged into the git repository.
51986,0,Change has been successfully merged into the git repository.
51990,0,Change has been successfully merged into the git repository.
51992,0,Change has been successfully merged into the git repository.
51999,1,Patch Set 3: Code-Review+1(4 comments)This looks very good even but it seems that there is still a race condition between checking for the lock and opening the secure store. I'm a bit worried that we would end up with false positives if we fail everything the lock was acquired. I'm not sure what the implications are of only checking for dead locks on the UI thread and what the chances are we would still run into the problem then.
52005,1,"Patch Set 4:Thanks for looking at this. We tried using a Job in the previous attempt to fix this but in order to avoid a deadlock, it's necessary to spin the event loop while the job runs, and that causes problems due to UI events being reordered. So I don't think we can take advantage of ISchedulingRule."
52007,0,Change has been successfully merged into the git repository.
52009,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/199/ : UNSTABLE
52012,0,Change has been successfully merged into the git repository.
52016,0,Change has been successfully merged into the git repository.
52023,1,"Patch Set 4:Hi Paul, Can you undo the changes to OrionConfiguration as the end result is that you did not change anything.I think you can remove the extra if block around: ServerConstants.CONFIG_SEARCH_INDEX_LOCATION + "".test"" , while testing you just set orion.search.index.location to the test location, no need for a special test property.As a rule of thumb, anytime I added a property to what could go into orion.conf, I also add an example value in web-ide.conf:#uncomment this line to specify the root location to use for Orion search indices#orion.search.index.location={location}"
52026,0,Change has been successfully merged into the git repository.
52032,0,Change has been successfully pushed.
52034,0,Change has been successfully pushed.
52037,0,Change has been successfully merged into the git repository.
52043,0,Change has been successfully merged into the git repository.
52046,0,Change has been successfully merged into the git repository.
52049,0,Change has been successfully merged into the git repository.
52051,0,Change has been successfully pushed.
52053,0,Change has been successfully pushed.
52055,0,Change has been successfully pushed.
52057,0,Change has been successfully pushed.
52059,0,Change has been successfully pushed.
52061,0,Change has been successfully pushed.
52064,0,Change has been successfully merged into the git repository.
52066,0,Patch Set 2:Alex: you are true. I reported a test from the diagrma dialect but it was not done on the same level (done when looking for edit parts)
52068,0,Change has been successfully merged into the git repository.
52072,0,Change has been successfully merged into the git repository.
52075,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/16/ : UNSTABLE
52076,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/17/ : UNSTABLE
52079,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/21/ : UNSTABLE
52082,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/19/ : UNSTABLE
52083,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/20/ : UNSTABLE
52087,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/15/ : UNSTABLE
52088,1,"Patch Set 2:Hi Esteban, the @author name is wrong. I think that must be corrected. Otherwise it looks good ;-)"
52090,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/cdo/job/emf-cdo-gerrit/22/ : UNSTABLE
52098,0,Change has been successfully merged into the git repository.
52101,0,Change has been successfully merged into the git repository.
52104,0,Change has been successfully merged into the git repository.
52106,0,Patch Set 1: Code-Review+2 Verified+1(2 comments)Nice improvements.
52107,0,Change has been successfully merged into the git repository.
52108,0,Change has been successfully cherry-picked as c819ee49f4235ffcfb8477ef530cb3ae73085892
52113,0,"Patch Set 1:I tried things and it is a nice improvement on the previous behaviour.  I have a couple of questions/suggestions:1- the line delimiter is not very visible.  Maybe it is my own window manager, I'm not sure.2- Should the launches included in the top 3 be kept in the alphabetical order?  I personally think so.3- Should a launch triggered in the traditional ways (not using the launch bar) be included in the top 3?  It is not clear to me how much the traditional launch methods will be used when the launch bar is enabled, so I have no strong opinion about that point yet."
52115,0,"Patch Set 1:1. Separator visibility - Its Label(SWT.SEPARATOR). I think its not that visiblebecause we use custom background for this control, insteadof platform one (not sure why?). I can make 2 separators - it will make it thicker...2. Sort top in alpha order -  I don't think so. People really won't notice order when it is 3 elements. But nice thing about not keeping it in alpha order that currently selected element is always first, and previous is always second, which is nice if you switching between two. Otherwise it would be more confusing3. LC run not from toolbar - I don't think we need to keep them (and it would be hard to do also, model does have backward mapping)4. Persistence - its a good idea (maybe not in this patch though)"
52118,0,"Patch Set 1:2. Ah. I see, sure, I will keep all below the bar, thanks."
52122,0,Change has been successfully merged into the git repository.
52125,0,Change has been successfully merged into the git repository.
52127,0,Change has been successfully merged into the git repository.
52133,0,Change has been successfully merged into the git repository.
52137,0,Change has been successfully merged into the git repository.
52139,0,Change has been successfully merged into the git repository.
52145,0,Change has been successfully merged into the git repository.
52150,0,Change has been successfully merged into the git repository.
52153,0,Change has been successfully cherry-picked as 3f61875208a25f8f9492883c4e88440fcf076e6e
52156,0,Change has been successfully cherry-picked as ca0bb29292b67275ba9c780544738781da2b17b2
52157,0,Change has been successfully cherry-picked as f5b36f62f9a6c22ca38bb1b281a0d482d69389b6
52160,0,Change has been successfully cherry-picked as 9cb18afef90e3e4a321b4a5f7e6baa0d90f413b7
52166,0,Change has been successfully merged into the git repository.
52170,0,Change has been successfully merged into the git repository.
52174,0,Change has been successfully cherry-picked as 0e5509d414889599168ac3008a0c4de08d71ae03
52179,0,Change has been successfully merged into the git repository.
52180,0,Change has been successfully cherry-picked as 067a7f9f54110b5d02c805909493a570f6048dc4
52185,1,"Patch Set 5:Patch set 5 iterates on the previous patch set, adding:  * deferral of editor re-load to when the editor is next activated.    If the dependent editor is dirty and the user elects to save it,    it is saved immediately so that the user gets immediate feed-back    that it is saved (by means of the asterisk decoration being removed).    If the user opts not to save the dependent editor, then it is not    saved but re-loading is deferred nonetheless.  The option to ignore    a dirty editor altogether works as before  * updates to the JUnit tests to account for deferral of the editor    re-load, including a new test verifying that re-load is deferred  * fixed a problem in the restoration of the palette states of    diagrams when the Palette view is active (PapyrusPaletteSynchronizer    doing stuff in the wrong sequence when at initialization and    disposal)"
52186,0,"Patch Set 5: Code-Review+1This works fineMore testing will be required to identify remaining issues, and the best way for that is probably to merge it early. The only issue I have so far is with the read-only state, which is not restored (Make a library writable from model A; modify the library from the library's own editor; save the library; the library is now read-only in model A)."
52187,0,"Patch Set 5:Thanks, Camille.  I really appreciate you wading through such a large change set, and I agree that there's plenty of soak time to shake out bugs (and a very good QA resource to find them!)Good point about writable state.  I should be able to address that easily enough."
52189,0,Change has been successfully merged into the git repository.
52199,0,Change has been successfully merged into the git repository.
52201,0,"Patch Set 1:Hi Eugene,You were right for  map_to_sym_table. Probably when I added the flag, I was calling it from the wrong place.I made a forward declaration now to it because my hook is using it. As explained in https://git.eclipse.org/r/#/c/30210/, let me know if you think it's dangerous to call again find_by_name in my extension hook.Many thanks !Best Regards,Xavier."
52204,0,Change has been successfully merged into the git repository.
52209,0,Change has been successfully merged into the git repository.
52211,0,Patch Set 2: Code-Review+2Looks good.
52213,0,Change has been successfully cherry-picked as 22b4459a3734e9c1376ee6ae94000efff2b8a96f
52216,0,Change has been successfully cherry-picked as fef4adde2debb7427b59e39945efa7ea59bf88e1
52228,0,Change has been successfully cherry-picked as 9c682ce9adb04c68dae597d654ccf99ce2143a61
52234,0,Change has been successfully merged into the git repository.
52239,0,Change has been successfully cherry-picked as e736404f940c6d24e84a4e768091a541bebcada3
52241,0,Change has been successfully merged into the git repository.
52248,0,Change has been successfully merged into the git repository.
52253,0,Change has been successfully merged into the git repository.
52256,0,Change has been successfully merged into the git repository.
52259,0,Change has been successfully merged into the git repository.
52263,0,Change has been successfully merged into the git repository.
52267,0,Change has been successfully merged into the git repository.
52271,0,Change has been successfully merged into the git repository.
52276,0,Change has been successfully cherry-picked as 2986eab3158a279d08692e1932bd48b12c474213
52278,0,"Patch Set 1: Code-Review+2This looks pretty good, Thanks"
52281,0,Change has been successfully merged into the git repository.
52283,1,Patch Set 1: Code-Review+1Works ok for me. Sill problem with comments moving is very visible but it is different case :)
52284,1,"Patch Set 1:Nice patch Dawid ! It's a pretty aggressive patch but code is much much cleaner so. @Michal : yes, comments are still ""moving"", previously ""secondReplaceBuffer"" was a clumsy attempt to ""guess"" where to put closing brackets, parenthesis, etc... between comments.Somehow, ""replaceBuffer"" caching has to be introduce again (if we don't want to do more complex changes, like splitting list of comments, memorizing the position of brackets/parenthesis between comments, etc...), but it's less important than this patch ;)I will send a little cleanup patch over this one when it's merged (to correct things i've seen meanwhile in this class)."
52286,0,Change has been successfully merged into the git repository.
52287,0,Change has been successfully cherry-picked as d20cd0b3232b4e52f36053939728dc655ab46c78
52292,0,Change has been successfully cherry-picked as 448439735e681c8592567466f736247ac3f2ef70
52295,0,Change has been successfully cherry-picked as b7da7ea810827ea02d87004baaad528b9e2e69f1
52298,0,Change has been successfully merged into the git repository.
52301,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6095/ : UNSTABLE
52303,0,Change has been successfully merged into the git repository.
52305,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6082/ : UNSTABLE
52306,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6087/ : UNSTABLE
52307,1,"Patch Set 1:My ""copy/paste"" fault. Now should be fixed."
52309,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6090/ : UNSTABLE
52311,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6093/ : UNSTABLE
52314,1,"Patch Set 2:Here is the history: All that was initiated by a forum entry: http://www.eclipse.org/forums/index.php?t=rview&goto=1397170#msg_1397170 . While fixing that (sorry for not insisting on a bug for that) I wrote tests and only these new tests revealed the problem. So, there is no bug and no forum entry for exactly the problem I solved here."
52317,0,Change has been successfully merged into the git repository.
52320,0,"Patch Set 1:(1 comment)Small style nit.Logic looks good to me! Wonder why I didn't catch that, the ""initial checkout"" case seems to have been there for some time (in git-read-tree.txt).By the way, is there a bug report corresponding to this?"
52325,0,Change has been successfully merged into the git repository.
52326,0,Change has been successfully cherry-picked as 0544d1d000b5c6eecb8d620da3d7e37de87c6503
52328,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1001/ : UNSTABLE
52330,0,Patch Set 1: Verified+1 Code-Review+2The additionally failing tests on hudson seem unrelated.Thanks for the review Sergey!
52331,0,Change has been successfully cherry-picked as 1509165f8485ed26cb5744ba9ad5b72f88b55437
52336,0,Change has been successfully cherry-picked as a5341372956e4c673c37aebc8718845d1470ed08
52338,0,Change has been successfully merged into the git repository.
52346,0,Change has been successfully merged into the git repository.
52353,0,Change has been successfully cherry-picked as a3b915b92ecc387a80df541185399548043096e8
52356,0,Change has been successfully cherry-picked as 68d6d2c489667df89bb8f7358fd31cda1f98150b
52358,0,Patch Set 1: Code-Review-1(1 comment)This change looks fine to me. I would clean up the whitespace usage.
52362,0,Change has been successfully cherry-picked as a3f11a6312569af1c89e27bb47691f433107eb94
52368,0,Change has been successfully merged into the git repository.
52374,0,Change has been successfully merged into the git repository.
52387,0,Change has been successfully merged into the git repository.
52389,0,Change has been successfully merged into the git repository.
52394,0,Change has been successfully merged into the git repository.
52398,0,Change has been successfully cherry-picked as 220d6958f4757d8dea73a9cb1244199653a9f513
52404,0,Patch Set 3: Verified+1Let's get it in!
52407,0,Change has been successfully cherry-picked as 8be17f28d3f50247725b70b1dad20c5aad090bb0
52409,0,Patch Set 2: Code-Review-1(3 comments)Interesting contribution! Just missing some @since tags.
52416,0,Change has been successfully merged into the git repository.
52420,0,Change has been successfully merged into the git repository.
52425,0,Change has been successfully merged into the git repository.
52431,0,Change has been successfully merged into the git repository.
52433,0,Change has been successfully merged into the git repository.
52437,0,Change has been successfully pushed.
52439,0,Change has been successfully pushed.
52441,0,Change has been successfully pushed.
52444,0,Change has been successfully pushed.
52446,0,Change has been successfully pushed.
52448,0,Change has been successfully pushed.
52455,0,Change has been successfully merged into the git repository.
52457,0,"Patch Set 3:@Ashwin: You forgot to add the necessary bundles to the 3rd-party dependencies feature, I guess.That being said, HTTP Commons is quite a heavy-weight dependency. If you could do the URL construction using just classes from the JRE, using the 6-argument verison of the URI constructor, for example, that would be great. So feel free to revert my previous change."
52463,0,"Patch Set 2:(8 comments)Hi Andreas, thanks for your review. I have tried to answer your questions. Please have a look at your convenience."
52471,0,Change has been successfully cherry-picked as 4917921b6c587f3d79720532d5670bb789f2cf29
52482,1,"Patch Set 4:re-triggered, but it failed in event matching, this may actually be a problem"
52488,0,"Patch Set 1: Code-Review-1(7 comments)I like this, but it may be a bit slow on the fast path... please consider my code :)"
52490,1,Patch Set 1:Is this in the fast path (executed per event?) or in the slow path (run once?)
52491,0,Patch Set 1:Awesome suggestion! This is on the fast path so this will make filtering on subfields much faster! I'll submit a new patch on monday!
52502,0,Change has been successfully cherry-picked as 02fd8997d2a0db96565b5c169ab4d1f2a79e3af2
52503,1,"Patch Set 3: Code-Review+2 Verified+1Agree, looks really ugly on Windows 7."
52504,0,Change has been successfully merged into the git repository.
52510,0,Change has been successfully merged into the git repository.
52513,0,Change has been successfully merged into the git repository.
52521,0,Change has been successfully merged into the git repository.
52528,0,Change has been successfully merged into the git repository.
52530,0,Change has been successfully merged into the git repository.
52539,0,Change has been successfully merged into the git repository.
52544,0,"Patch Set 6: Code-Review+1(1 comment)looks fine, one minor nit"
52549,1,"Patch Set 1: Verified-1I haven't reviewed the code, but I did try the patches. Looks ok, as far as session create, but if you try to import a trace from a live session, it's the batch import wizard that opens instead of the window to import the trace.If it's a temporary drawback, please mention it in the commit message or in a comment, so I don't consider it as a fail ;-)  I'll review the code later if you guys don't get to it first."
52550,0,"Patch Set 1: Code-Review-1Thanks for the comment! I'll look into the import issue. At this point, I'm not even sure what ""import"" should be for live. But at least, when the session is stopped, it should import correctly so I'll look into that.I also want to add a few test and update the documentation as part of this patch (shouldn't be big). I'm also not sure about the term ""Normal mode""..."
52557,1,"Patch Set 7:This has been approved more than one month ago now. Do we still want to delay merging this?The more we wait, the more difficult it becomes to rebase. The goal of making small patches is to make it easier to review, but also to be able to merge big parts piecewise. If we decide only merge fully-reviewed branches, we lose the second point."
52564,1,"Patch Set 3:""You may want to give a warning for now, before opening the batch import wizard, telling the user he is doing a live session and how to get to his trace (it's actually in ~/lttng-traces/<username>/ and I was looking in lttng-traces/ as usual)""It's probably ~/lttng-traces/<username> for you because hostname == username for you. for me it's emalape-laptopmodel.We don't really know where the traces will be. One can start relayd and make it output to a different folder, for example:lttng-relayd -o /home/emalape/live-outputThen when the live session is created, it will write the trace to:/home/emalape/live-output/emalape-laptopmodel/mysessionThe control view currently doesn't know about anything about the relayd process, it could be a previously spawned relayd or an automatically started relayd at session creation time. In any case, we don't know which parameters were used to spawn it so the traces could be anywhere.We could guess the path and open the non-batch import but then the user can't change directory if it's wrong. We could open the batch import and used the guessed path as the default directory when the user adds directories but it's not a very big improvement is it? About the warning, I'm not sure what to put and how. Do you mean a dialog message before opening the batch import? I'm afraid the message can't be very helpful since it has to be stay a bit vague, like ""You are importing a trace generated by a streamed session. By default the traces will be outputed to ~/lttng-traces/hostname/sessionname but the location can vary"".Let me know what you think."
52571,0,"Patch Set 4: Code-Review-1(6 comments)Sorry for the late review. I' ve just installed LTTng 2.4 and I tried to create a live session. I noticed a view things (see inline comments)Also, the properties view should show if the session is a live session. I hope the tracer is able to provide that information. If not then you don't need change anything. We don't cache of any configuration parameter that are not provided by the tracer (e.g. context added)."
52575,0,Change has been successfully cherry-picked as abf232b1e18889c0b8b0b87a3ba323a13cf1143a
52581,0,Change has been successfully pushed.
52586,0,Change has been successfully pushed.
52588,0,Change has been successfully merged into the git repository.
52590,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6023/ : UNSTABLE
52597,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6018/ : UNSTABLE
52598,1,"Patch Set 1: Code-Review-1(2 comments)Oh, that's the same code duplicated in 3 places? Could you clean that up with this change?I'd move the RepositoryActionHandler#canMerge method into a static method on MergeActionHandler that takes a Repository and a Shell, and then call it from the other 2 places."
52605,0,Change has been successfully merged into the git repository.
52611,0,Change has been successfully merged into the git repository.
52616,0,Change has been successfully merged into the git repository.
52625,0,Change has been successfully merged into the git repository.
52630,0,"Patch Set 5:Even if we are sure with Alex, I have updated the patch set, the best practice is the use of EclipseUiUtil.getActivePage() which does all the nullity checks"
52638,0,Change has been successfully merged into the git repository.
52640,0,Patch Set 4: Verified+1 Code-Review+2Thanks for the fix!
52641,0,Change has been successfully merged into the git repository.
52642,0,"Patch Set 2: Verified+1 Code-Review-1(1 comment)It works fine, but I would like to simplify the patch according to my comment,Daniel"
52652,0,Change has been successfully cherry-picked as 8c6ba5368d6d1d32ac65c61f6680f7bddab2ced0
52654,0,Patch Set 3: Code-Review+1gotta test it but the code looks fine!
52666,0,Change has been successfully cherry-picked as 0e3b5e5f3747a1b226efb0d935bf7d03c4960edc
52674,0,Change has been successfully merged into the git repository.
52680,0,Change has been successfully merged into the git repository.
52681,0,Change has been successfully cherry-picked as 2e1daad3108de02923eab6bd4eed1daf03945240
52687,0,Change has been successfully rebased as dab76451c714d1616bd7a41e6546c75e98c01871
52690,0,"Patch Set 2: Code-Review+1As long as Patrick's ok with the new max confidence being 200 instead of 100, I say yes."
52692,0,Change has been successfully cherry-picked as 1d113245ffeb37b6181de74f52472a1c24474890
52697,0,Change has been successfully rebased as 15413aac7727aaaf761b091a0a1935377270b5f9
52699,0,Change has been successfully merged into the git repository.
52705,0,Change has been successfully cherry-picked as 2d11985214291f0149250944346d05c5c6e27a24
52707,0,Patch Set 4: Code-Review+1Don't forget the manifest!
52710,0,"Patch Set 6:(9 comments)and second partVery good work! It's not always fun to write tests, but it's very useful in the long term!The tests themselves look good, mostly some comments about ""how"" to write tests rather that ""what"" to test. For instance, many of your test methods are a bit long, you could make use of private ""fixture"" fields, @Before/@After methods, and smaller but more @Test methods."
52715,1,"Patch Set 15: Code-Review+2Ok, I'm happy with it now ;)Did some little tweaks:* Renamed TestAll -> AllTests (sorts better)* made the ""fixture"" fields initialized in @Before methods non-static* Renamed the static final variables to ALL_CAPSand other little things"
52717,0,Patch Set 15: Code-Review+2Let's do this!
52719,0,Patch Set 2: Code-Review-1(4 comments)Great start! don't forget to update the main pom.xml ;)
52724,0,Change has been successfully cherry-picked as 2fc169e1f0e9b6352d36bbaa60da8aa684b98758
52737,0,"Patch Set 9: Code-Review-1(1 comment)The download-skipping part... I can take care of it once I get to it, unless you do it before me!"
52741,0,Change has been successfully merged into the git repository.
52743,0,Patch Set 1: Code-Review+2Thanks. Looks good.
52744,0,Change has been successfully merged into the git repository.
52748,0,Change has been successfully cherry-picked as d46879360f3b92855c2d56e47da1f2a82473b43d
52751,0,Change has been successfully merged into the git repository.
52760,0,Change has been successfully cherry-picked as 97ebea5571c62c189c6f666cf427749c56c95f3a
52766,0,"Patch Set 3: Code-Review+2Looks good, thank you!"
52767,0,Change has been successfully merged into the git repository.
52783,0,Change has been successfully merged into the git repository.
52790,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
52791,1,Patch Set 1:Please open a bug report for this and explain the problem you are addressing (cf. [1])[1] https://wiki.eclipse.org/Tycho/Contributor_Guide#Starting_a_Contribution
52793,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
52795,0,Change has been successfully merged into the git repository.
52798,0,Change has been successfully cherry-picked as ecd1dca98efbff3841cbb3a1be88024333c14e45
52802,0,Change has been successfully cherry-picked as 43ca99b0c4140971f8c0a2cbbcc23842aca04c90
52808,0,Change has been successfully merged into the git repository.
52811,0,Change has been successfully merged into the git repository.
52816,0,Change has been successfully merged into the git repository.
52819,0,"Patch Set 3: Code-Review-1Comments from PS 1 are still valid (except one!), including:The changes in the 4 test classes don't bring anything, since the methods still return StructDefinitions."
52827,0,Change has been successfully cherry-picked as abb1286cd2021fa1e887d4cbdb1ab8a43fc47254
52832,0,Change has been successfully merged into the git repository.
52837,0,Change has been successfully merged into the git repository.
52848,0,Change has been successfully merged into the git repository.
52850,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6013/ : UNSTABLE
52852,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5948/ : UNSTABLE
52853,1,"Patch Set 1: Code-Review-1- I like this change, abandoned my simple patch in favor of this one- ""Stash Changes..."" should be disabled if the working tree is clean- modify a file and save that, click the stash changes button in the toolbar, click again in the editor open for the same file, then open the stash drop down in the toolbar -> list of stashes is empty. When clicking any resource in the project the drop down gets populated again"
52856,0,Change has been successfully merged into the git repository.
52861,0,Change has been successfully merged into the git repository.
52863,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5992/ : UNSTABLE
52867,0,Change has been successfully merged into the git repository.
52869,0,Change has been successfully merged into the git repository.
52873,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6012/ : UNSTABLE
52875,0,Change has been successfully merged into the git repository.
52877,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6005/ : UNSTABLE
52879,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6008/ : UNSTABLE
52881,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6011/ : UNSTABLE
52886,0,Change has been successfully cherry-picked as cfc5cb3b9b2d1aa61c84926c02878248473121df
52896,0,"Patch Set 6: Code-Review+12/3 comments addressed, good enough I guess.."
52901,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6007/ : UNSTABLE
52902,1,"Patch Set 1: Code-Review+1I think we could replace the implementation in SWTPlotRenderer with this in a follow-up. Although note that it treats the ellipsis as 3 characters, because in the worst case, it uses about the same amount of space as ""lll"".But LGTM."
52905,0,Change has been successfully merged into the git repository.
52909,1,Patch Set 11: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5966/ : UNSTABLE
52912,1,Patch Set 21: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6006/ : UNSTABLE
52913,0,"Patch Set 21: Code-Review+1Ah, I actually noticed the missing mnemonic in the history view context menu. But I now realize that this hasn't changed with this change, so let's do that in another change :).Looks good now, nice change :)! (I can't submit at the moment because I changed employers and the legal stuff isn't done yet.)"
52915,0,"Patch Set 21: Code-Review+2nice improvment, thanks Mickael :-)"
52916,0,"Patch Set 21:> nice improvment, thanks Mickael :-)Well, thanks a lot to both of you for this highly valuable review."
52917,0,Change has been successfully merged into the git repository.
52920,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5930/ : UNSTABLE
52921,1,"Patch Set 7: Code-Review-1- ""Push..."" is disabled if we have a detached HEAD, though you claim the command could be used to push (detached) HEAD- with this we end up with two menus called ""Push..."" which looks confusing (second one in ""Advanced"" submenu), we could fix that by dynamically naming the menu entry : ""Push HEAD..."" if we have a detached HEAD, otherwise ""Push branch <branch name>"" if a local branch is checked out- maybe we could present the local branch and commit on a single line similar to how we show branches with commit info in repositories view, this would make the dialog a bit more compact"
52923,1,Patch Set 16: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5979/ : UNSTABLE
52926,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5963/ : UNSTABLE
52928,1,Patch Set 12: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5967/ : UNSTABLE
52929,0,"Patch Set 12: Code-Review-1(10 comments)this looks great for the team menu and also the wizard now looks good :-)though the corresponding menu entry in the repositories view is now broken, we should also use the dynamic menu there"
52931,1,Patch Set 13: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5976/ : UNSTABLE
52933,1,Patch Set 18: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5994/ : UNSTABLE
52938,0,"Patch Set 18:Oh yeah, you're right. So we all agree then, that's good ;)"
52940,0,"Patch Set 8:This new patch set enables ability to push a detached HEAD (and fixes multiple bugs of previous patch set regarding pushing a single commit from history).I replaced ""Push..."" by ""Push HEAD..."" since I'm not sure how to do dynamic labels properly.I also kept the current layout of the wizard for further discussions. I have the impression I like to have commit and branch separated."
52941,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5959/ : UNSTABLE
52944,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5961/ : UNSTABLE
52949,1,Patch Set 15: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5978/ : UNSTABLE
52951,1,Patch Set 14: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5977/ : UNSTABLE
52952,0,"Patch Set 14: Code-Review-2(10 comments)See inline comments.Another comment: When the thing we are pushing is not a branch, the ""Configure upstream"" part must be hidden, because it's not possible to configure anything for a commit.This is one more reason why it may be better to leave the old ""ref push wizard"" in place for pushing a commit, see inline comments. When we do that, we could instead show the ""ref push wizard"" on ""Team > Push HEAD..."", which should be easy with the dynamic menu.Matthias, what do you think about this?"
52954,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5962/ : UNSTABLE
52962,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5904/ : UNSTABLE
52966,0,"Patch Set 17: Code-Review-1> Another comment: When the thing we are pushing is not a branch, the> ""Configure upstream"" part must be hidden, because it's not possible to> configure anything for a commit.> This is one more reason why it may be better to leave the old > ""ref push wizard"" in place for pushing a commit, see inline comments.> When we do that, we could instead show the ""ref push wizard"" on > ""Team > Push HEAD..."", which should be easy with the dynamic menu.> Matthias, what do you think about this?I would prefer to enhance the SimplePushRefWizard instead of using the old wizard since the UI of the new wizard looks cleaner. I think we should teach it to not show ""configure upstream"" if no branch is checked out, add content assist for existing branches and accept refs starting with ""refs/"" but not with ""refs/remotes/"" literally to allow pushing to non-standard refs. The latter two changes could go in separate changes.The tests succeed now, thanks"
52969,1,"Patch Set 17:native git rejects pushing to refs/foo if there is no branch refs/heads/refs/foo in the remote repository: [HelloWorld (master)]$ git push origin HEAD:refs/foo Counting objects: 9, done. Delta compression using up to 8 threads. Compressing objects: 100% (2/2), done. Writing objects: 100% (3/3), 277 bytes | 0 bytes/s, done. Total 3 (delta 1), reused 0 (delta 0) remote: error: refusing to create funny ref 'refs/foo' remotely To https://github.com/msohn/HelloWorld.git ! [remote rejected] HEAD -> refs/foo (funny refname) error: failed to push some refs to 'https://github.com/msohn/HelloWorld.git'If a branch refs/heads/refs/foo exists in the remote repository the push refspec refs/foo is accepted. I think we should disambiguate these cases in the same way. I would accept pushing to refs/for/... only if the repository is configured for Gerrit."
52970,1,"Patch Set 17:About the configure upstream, I'd like to advocate in favour of one of these 2 options:* make it unchecked and disabled when we are on a detached HEAD, or* Just remove the Configure upstream section from this page since at this time, we are configure Push, not Pull."
52971,1,"Patch Set 17:@Matthias: Didn't know that C Git is so strict :).Ok then, as long as Mickael implements this in another change for 3.5, I'm ok with removing this for now. I just don't want users complaining that this functionality was removed without having a replacement.(Would have been better to replace this in a separate change when the replacement is ready, but it's already done now.)@Mickael: I would go with ""make it unchecked and hidden when we are on a detached HEAD"". Not sure if this is your second option. It should definitely stay for the branch case (upstream configuration is used for both push and pull)."
52976,1,Patch Set 2:(1 comment)I'll make another shot of the wizard using Groups/Frames.
52982,0,Change has been successfully merged into the git repository.
52990,0,Change has been successfully merged into the git repository.
53002,1,"Patch Set 2: Code-Review-1(3 comments)Some comments on the implementation, for review's sake.But from a higher-level perspective, getTraceSet() vs. getCompleteTraceSet() is quite confusing and seems redundant. If the ""experiment"" is now a concept on its own, could getTraceSet() also include the experiment?or, if it's a method that is not called often, we could keep the old getTraceSet() and just add the experiment to the Set (changing to Set, plz) if needed?"
53003,1,"Patch Set 2:(1 comment)There are situations where we want the experiment along with the trace set and other cases where we only want the final traces, so that's 2 use cases.I wouldn't add the experiment in getTraceSet that would change the behavior, which is worst than breaking the API because much less possible to detect.And it is called somewhat often in the upcoming analysis (critical path, VM). I added this because otherwise the code looks ugly (if (trace instanceof TmfExperiment) { copy the array and add the experiment })maybe I should call it getTraceSetWithExperiment?"
53011,1,"Patch Set 4: Code-Review-1(6 comments)Ok, it's less confusing now. Some new comments ;)"
53017,0,Change has been successfully cherry-picked as 012a97dfd2f0e6aace57f9a7b5499eb13ff622f6
53019,0,"Patch Set 7: Code-Review-1(4 comments)I don't think the comments from patch set 6 were looked at, most still apply.We're now at +14 ""null type safety"" warnings, those need to be fixed!"
53026,0,"Patch Set 4:On the same machine, this generates a 25% performance increase!"
53027,1,"Patch Set 4: Code-Review-1(20 comments)Doesn't apply cleanly on latest master.I also get a major API breakage with this... not sure from where exactly, but that sounds bad!Some comments because why not."
53033,0,Change has been successfully cherry-picked as 93cc46bb019843f16badc791319c8d16332e58b6
53035,0,"Patch Set 3:On a core 2 quad with 4 gb ram and a 2tb wd black hdd, I get an average 7.5% read time improvement."
53039,0,Patch Set 9: Code-Review+1Ok looks good!
53043,0,Change has been successfully merged into the git repository.
53045,0,Change has been successfully merged into the git repository.
53055,0,Change has been successfully merged into the git repository.
53060,0,Change has been successfully merged into the git repository.
53063,0,Change has been successfully merged into the git repository.
53066,0,Change has been successfully merged into the git repository.
53072,0,Change has been successfully merged into the git repository.
53076,0,Change has been successfully merged into the git repository.
53079,0,Change has been successfully merged into the git repository.
53085,0,Change has been successfully merged into the git repository.
53091,0,Change has been successfully merged into the git repository.
53094,0,Change has been successfully merged into the git repository.
53103,0,Change has been successfully merged into the git repository.
53110,0,Change has been successfully merged into the git repository.
53117,0,Change has been successfully merged into the git repository.
53121,0,Change has been successfully merged into the git repository.
53127,0,Change has been successfully merged into the git repository.
53132,0,Change has been successfully merged into the git repository.
53135,0,Change has been successfully merged into the git repository.
53138,0,Change has been successfully merged into the git repository.
53141,0,Change has been successfully merged into the git repository.
53145,0,Change has been successfully merged into the git repository.
53158,0,Change has been successfully merged into the git repository.
53160,0,Change has been successfully merged into the git repository.
53164,0,Change has been successfully merged into the git repository.
53170,0,Change has been successfully merged into the git repository.
53173,0,Patch Set 1:(3 comments)Hey. Nice. The tests really give me much more confidence. One suggestion on how to better structure the grammar can be found inline.
53174,0,"Patch Set 1: Code-Review-1Giving this -1 for now, so that I can keep track of what I have commented on already. Not a bad change, though, but still could be improved."
53184,0,Change has been successfully merged into the git repository.
53186,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/919/ : UNSTABLE
53187,0,"Patch Set 1: Verified+1 Code-Review+2(1 comment)Thanks for committing this change! Now API baseline is satisfied.I'll make some minor adaptions to change after it is submitted. Furthermore, I'll extend the ASTWriter to cope with the new node. Perhaps we will rename IGNUASTGotoStatement to IGCCASTGotoStatement. I had a very similar commit recently, for which Sergey suggested to use GCC in the name for consistency reasons."
53188,0,Change has been successfully cherry-picked as bf0ac984648cf00b5b40fbd402afafd103ee8ced
53190,0,Change has been successfully merged into the git repository.
53196,0,Change has been successfully merged into the git repository.
53198,0,Patch Set 3:Third time's the charm.
53207,0,"Patch Set 1: Verified+1 Code-Review+2We should never get a project name with the name random, but this seems like a good workaround."
53208,0,Change has been successfully merged into the git repository.
53214,0,Change has been successfully rebased as e9ac60ef2686c423b1275e35ec3294d1fb314e75
53217,0,Change has been successfully merged into the git repository.
53220,0,Change has been successfully merged into the git repository.
53221,0,Change has been successfully cherry-picked as f13f51521d0633fdb43988a72bbc007e6dcbda2c
53228,0,Patch Set 3: Code-Review+1Nothing else to nitpick about!
53229,0,"Patch Set 3: Verified+1 Code-Review+2Cool, so now you are ready for the big xy chart patch!"
53231,0,Patch Set 2: Code-Review+1Looks good
53233,0,Change has been successfully cherry-picked as 371cffa87be3d209e7fcd0609d1d4a623eddc7c9
53236,1,"Patch Set 1:Yes that is true, and if the 'new' length is different in both concurrent calls to ensureCapacity(), there might be an ArrayIndexOutOfBoundsException thrown when trying to increment the event counter.However, I was really trying to avoid the cost of a synchronization call at every event in the trace. And with the current design, there can be only one writer thread (HistogramRequest) on the histogram buckets at a time.This patch only attempts to fix synchronization problems between the reader thread(s) and the writer thread.Note that a reader thread might miss an event in the middle of being counted by the writer thread, but that is OK because there should always be one last update (reader thread) after the writing is finished."
53237,1,"Patch Set 1:""with the current design"", that's dangerous. That class can be reused by anyone in any context. If it is not safe with more than one writer, then the one-writer rule should be enforced, or else this behavior well-documented.I know you're solving a bug and my comment applies also to the actual code, but they class might as well be fixed right away, before we forget, at least through documentation.So my -1 stays :D"
53241,0,Change has been successfully merged into the git repository.
53261,0,Change has been successfully merged into the git repository.
53270,0,Change has been successfully cherry-picked as cefc0dc25d30d8d7902a7e59ebfc50dc96c417a9
53275,1,Patch Set 1: Code-Review+2Ok. It is easier now to search for data in context spy ! Search is done with lowercase and I removed the 2 useless buttons (ignoreCase and wildcards). It is possible to filter only the results that match and it keeps the subnodes in the table if the parent is selected...Everything should be better now with this patch...
53276,0,Change has been successfully merged into the git repository.
53280,0,Change has been successfully merged into the git repository.
53282,0,Patch Set 3:You're right. Testing storing and loading sounds reasonable.I will add some tests for it.Thanks for advise.
53295,0,Change has been successfully cherry-picked as d9eacd098280530d862ab9e876c5236a65ee4463
53299,1,"Patch Set 2: Code-Review+1(1 comment)Unfortunately for you guys, I'm reading a book on Effective Java and I think I'll be getting worst than Alex on API stuff ;-) These classes shouldn't all have made it to the API. If they were internal only it wouldn't matter as much.But now it's adding 3 public API constants to 3 classes that can all possibly be used interchangeably in calls.Anyway, we cannot go back and hide these classes, so let's trust future developers/reviewers to not mess things around too much."
53304,0,Change has been successfully merged into the git repository.
53309,0,Change has been successfully merged into the git repository.
53312,0,Change has been successfully cherry-picked as ea81ac419e5067bcea70306e3875c94b865bb743
53315,0,Change has been successfully cherry-picked as d571c376a08b1d273fbfad2db156fbe40374d93c
53316,0,Change has been successfully cherry-picked as 10d6e4da070f9601f4112ac5ed660d204420f584
53320,0,Patch Set 3: Verified+1 Code-Review+2Tested and it's pretty good start. ControlExample starts and displays things. Crashes happen on actions but this is good initial support.
53321,0,Change has been successfully merged into the git repository.
53332,0,Change has been successfully merged into the git repository.
53335,0,Change has been successfully cherry-picked as 149630921814c09502d56795497ab8ce199004c0
53342,0,Change has been successfully merged into the git repository.
53351,0,Patch Set 1: Code-Review+2I tested it using a local built repository. Everything works fine. I will close the bug #428903
53352,0,Change has been successfully merged into the git repository.
53356,0,Change has been successfully merged into the git repository.
53358,0,Patch Set 2:Change looks good. Please update the javadoc of the methods. See javadoc of doSelectionLineDown() & doSelectionLineUp().
53362,0,Change has been successfully cherry-picked as e98aae29814253f492d1b6500f2504e36029ced5
53365,0,Change has been successfully cherry-picked as 659ac72e9ed9fbb870d7c1989964a118b86b0c96
53370,0,Change has been successfully merged into the git repository.
53371,0,Change has been successfully cherry-picked as 39508e79a5ffbb021a3b205d88f0068722fa9ca1
53376,0,Change has been successfully merged into the git repository.
53379,0,Change has been successfully merged into the git repository.
53381,0,"Patch Set 1:Hi Sam, I've fixed the update site and checked that it installs correctly.Thank you!"
53385,0,Change has been successfully merged into the git repository.
53389,0,Change has been successfully merged into the git repository.
53391,0,Change has been successfully merged into the git repository.
53415,0,Change has been successfully merged into the git repository.
53420,0,Change has been successfully merged into the git repository.
53423,0,Change has been successfully cherry-picked as 1d05fa900ef77c6c8756296efa083ee3bdbe5400
53425,0,Change has been successfully merged into the git repository.
53440,0,Change has been successfully cherry-picked as ae5d9d78e377961450a8cdff3ed30921a5a62559
53442,0,Change has been successfully cherry-picked as b9f706107012ff007d7716c00b69a43b87227a4b
53444,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/917/ : UNSTABLE
53449,0,Change has been successfully cherry-picked as 3b9551d96dceebe463baea3c5ca92ce02b8539c0
53452,0,Patch Set 2: Code-Review+1Looks good. Why -1?
53459,0,Change has been successfully merged into the git repository.
53461,0,Change has been successfully pushed.
53464,0,Change has been successfully cherry-picked as a48368b030b3de9621436aa6411a6d2e8654f7ed
53465,0,Change has been successfully cherry-picked as a394b2b7fe5062d3b6f6ec6d769bc31e6843a036
53476,0,Change has been successfully cherry-picked as a95569c86441a928330e11b1b28fa59db8e53a0c
53485,0,Change has been successfully cherry-picked as 7fa350ca4a0c0c5d44d2de695f3a17ae76a31126
53487,0,"Patch Set 1: Code-Review-1(10 comments)Moar perf tests!Some comments, also you'll need to add the new traces in ctf.core.tests' pom.xml too to clean them (yeah this part isn't very pretty...)"
53489,0,Change has been successfully cherry-picked as 0b5cfbf4c04cefb52a3e042440752b968bd6df62
53495,0,"Patch Set 1:test.performance and derby don't get included in the linuxtools repo, the lttng repo and the tracing rcp. So it's all good."
53500,0,Change has been successfully cherry-picked as bb3fd559c9d81b929adc4080b3bcab0f7781a77e
53503,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/900/ : UNSTABLE
53507,0,Change has been successfully merged into the git repository.
53510,0,Change has been successfully merged into the git repository.
53513,0,Change has been successfully merged into the git repository.
53516,0,Change has been successfully merged into the git repository.
53520,0,Change has been successfully merged into the git repository.
53523,0,Change has been successfully merged into the git repository.
53526,0,Change has been successfully merged into the git repository.
53529,0,Change has been successfully merged into the git repository.
53532,0,Change has been successfully merged into the git repository.
53544,0,Change has been successfully merged into the git repository.
53546,0,Change has been successfully merged into the git repository.
53556,0,Change has been successfully rebased as 05ae194b038e09a2eaf88800eed7a9b1b65bbb6c
53559,0,Patch Set 1: Verified+1 Code-Review+1Looks good.
53561,0,Change has been successfully merged into the git repository.
53565,0,Change has been successfully merged into the git repository.
53571,1,"Patch Set 1:Yasser, can you open a bug for this one that describes a bit more what this is meant to do; the commit message alone is a bit short. Also, the release notes are based on Bugzilla."
53582,0,Change has been successfully merged into the git repository.
53586,0,Change has been successfully merged into the git repository.
53589,0,Change has been successfully merged into the git repository.
53592,0,Change has been successfully merged into the git repository.
53595,0,Change has been successfully merged into the git repository.
53598,0,Change has been successfully merged into the git repository.
53606,0,Change has been successfully merged into the git repository.
53609,0,Patch Set 1: Verified+1 Code-Review+2Luna is out now!
53610,0,Change has been successfully merged into the git repository.
53614,0,Change has been successfully merged into the git repository.
53617,0,Change has been successfully merged into the git repository.
53631,0,Change has been successfully rebased as 8f0b0cceccc9ed23ac9dc96a963256e13a36ab74
53635,0,Change has been successfully merged into the git repository.
53638,0,Change has been successfully cherry-picked as b0cadad3faff087bf96f24d276931456e1fae88c
53641,0,Change has been successfully merged into the git repository.
53645,0,Change has been successfully merged into the git repository.
53646,1,"Patch Set 3:While the behavior is now better, it is still not sufficient: The CDT project creation wizard now opens, but the toolchain is ""empty toolchain"" instead of ""Linux gcc"". Since no tool-chain is available, an NPE is following.It is probably difficult to trigger the installation of a suitable toolchain via dependencies, since the required toolchain is platform specific"
53647,0,"Patch Set 3:I had hoped that adding the bundle dependency would cause the buckminster build to pick up the platform-specific fragment as well.It there a way to express platform-specific dependencies in the buckminster files?  If so then we could make the various platforms pull in the appropriate fragments.At this point it might not be worth risking further breakage though.  The work-around is fairly easy to understand (install CDT).  Also, people that care about this feature are likely to already have CDT installed; or would be planning to install it, anyhow."
53648,0,Patch Set 3:The feature now contains a dependency to the CDT feature and it seems to work fine.
53650,1,"Patch Set 2:The build failure doesn't seem related to this change.  However, the build from 15 minutes earlier worked.  I'd like to retrigger this to test again, but the button is disabled for me."
53659,0,Change has been successfully rebased as 747fef4ecd401368494b5a51af52247ee31c2c56
53663,0,Change has been successfully rebased as 34384a4157438b32001df4a368bbeb47aabc75e0
53665,0,Change has been successfully merged into the git repository.
53673,0,Change has been successfully merged into the git repository.
53678,0,Change has been successfully merged into the git repository.
53682,0,Change has been successfully merged into the git repository.
53690,0,Change has been successfully rebased as 34ca8c495a994443f742944f78f63efa3d5c9d4c
53692,0,"Patch Set 2:I checked how exactly DLTK call tree works, and I removed most of the code :P"
53695,0,Change has been successfully merged into the git repository.
53697,1,"Patch Set 1:It works well on small test files and class, but it fails on real code. I tried using this on this project: https://github.com/zfcampus/zf-deploy. Open Deploy.php and call Open Call Hierarchy on the getComposerExecutable() method. No callers will be displayed in the result."
53701,1,"Patch Set 1:Using the wiring API would of course be a lot better. If the migration is not hard to do, we should definitely do this. I've opened a new bug report for this: http://bugs.eclip.se/432137AFAIK, the wiring API already exists in Equinox from Kepler, so the wiring API migration could even be done before the Luna migration."
53706,0,Change has been successfully merged into the git repository.
53708,0,Patch Set 4:Build SUCCESSFUL. Now starting integration tests...
53710,0,Patch Set 6:Build SUCCESSFUL. Now starting integration tests...
53715,0,Patch Set 5:Build SUCCESSFUL. Now starting integration tests...
53717,0,Patch Set 7:Build SUCCESSFUL. Now starting integration tests...
53719,0,Patch Set 5:Build SUCCESSFUL. Now starting integration tests...
53723,0,Patch Set 6:Build SUCCESSFUL. Now starting integration tests...
53725,0,Change has been successfully merged into the git repository.
53734,0,Change has been successfully merged into the git repository.
53735,0,Change has been successfully cherry-picked as 8aef2a692fea5cdce505db686fd0ed2d37eb1cee
53738,0,Change has been successfully cherry-picked as c05ef276385e51eec5d49000a45b3f40fb7984e9
53744,0,Change has been successfully cherry-picked as 3b2966b2d3c4ff13a563a8134c6bf654d787ca03
53749,0,Change has been successfully merged into the git repository.
53761,0,Change has been successfully merged into the git repository.
53762,0,Change has been successfully cherry-picked as 753276a27d94ba9a066fa4a92beba199bcf62385
53767,0,Patch Set 4: Verified+1 Code-Review+2Thank you for the review!
53770,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/853/ : UNSTABLE
53776,0,Change has been successfully cherry-picked as 1f29931ff1266efe491032c098741fc08ef7b5f5
53779,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/781/ : UNSTABLE
53784,0,Change has been successfully merged into the git repository.
53788,0,Change has been successfully merged into the git repository.
53791,0,Change has been successfully merged into the git repository.
53792,0,Patch Set 4: Verified+1 Code-Review+2Looks great
53793,0,Change has been successfully merged into the git repository.
53795,0,Patch Set 3: Verified+1 Code-Review+2Looks good
53804,0,Change has been successfully merged into the git repository.
53808,0,"Patch Set 1:What you have is fine, but I always use as specific a URL as possible, so for 4.3 SR2, that would be ...eclipse/updates/4.3/R-4.3.2-201402211700"
53814,0,Change has been successfully merged into the git repository.
53816,0,"Patch Set 1: Verified+1 Code-Review+1Looks good, thanks."
53818,0,Change has been successfully merged into the git repository.
53821,0,Change has been successfully merged into the git repository.
53831,0,Change has been successfully merged into the git repository.
53834,0,Change has been successfully merged into the git repository.
53838,0,Change has been successfully merged into the git repository.
53848,0,Change has been successfully merged into the git repository.
53853,0,Change has been successfully merged into the git repository.
53857,0,Change has been successfully merged into the git repository.
53861,0,Change has been successfully pushed.
53864,1,"Patch Set 3:In fact, the SashWindowContainer already has a centralized mechanism to dispatch events from internal pages.It is the class SashContainerEventsProvider. Corresponding listener is IPageLifeCycleEventsListener.I have extended this mechanism to let it deliver the required event (propertyChanged). As we can't change the API actually, I have provided a new interface IPageLifeCycleEventsListener2extending the previous one and providing the new event.So, their is no modification in existing classes, but new compatible classes where added. The change should not affect existing implementation.Andrew, can you try this patch to check if it fulfill your need ?P.S. : Sorry for the previous wrong commits."
53865,1,Patch Set 3:Right now I have other issues where codegen seems to be broken in my runtime workspace.  I'm not yet sure if this is specific to my environment or a general problem.I'll test this change when my environment is functional.  In the meantime you could try testing as well -- just open the sash-based CDT editor and then see if F3 can be used to navigate to a local variable.
53867,0,"Patch Set 1: Verified+1 Code-Review+1The patch is fine for me. However, since it modifies the core notification mechanisms, I'd like to let Camille have a look."
53868,0,"Patch Set 1: Verified-1 Code-Review-2(3 comments)-1(In reply to comment #0)> > > I've also changed the visibility of a method in> AbstractMultiPageSashEditor to make it accessible from the Sash> container.  You should not les SashWindowsContainer know about AbstractMultiPageSashEditor. This introduce a circular dependency.    AbstractMultiPageSashEditor know SashWindowsContainer, but the opposite is false !      So, you should use an observer/observe pattern:  SashWindowsContainer is the observe. You can listen to the required event.  AbstractMultiPageSashEditor is the observer: it register itself to SashWindowsContainer for the required event.     In the same time, you do not need to change the visibility of the method: it will be called by AbstractMultiPageSashEditor itself."
53869,1,"Patch Set 1:Ok.Where should the register part go?  I.e., against which component should SashWindowsContainer register to receive the notifications?"
53871,1,"Patch Set 1:I think that the model in the Automated test suite should be updated before this change is committed.  However, I would like to get feedback on the change before making those changes (I'll reapply the profile and also add test cases for volatile).Could you provide review comments on this version and then I'll push at least one update with those updates?"
53874,1,"Patch Set 2: Code-Review-1I seems that you defined the profile. Typically, I do not define a static profile, since this is somewhat redundant with the the actions done in the UML to ecore transformation.Thus, I prefer to remove the definition from the UML file and keep the original URI ending with /1 - unless that causes problems with existing model (but I don't think that the volatile stereotype has been used so far)"
53875,0,"Patch Set 2:I think we need to change the /1 because in my testing the Volatile wouldn't show up unless the profile was reapplied.  Changing the value to /2 caused a dialog to open at startup that had an option to reapply the profile.  After that point I could see the Volatile stereotype (and could not longer see StorageClass in invalid locations).If there is another way to make the stereotype changes visible, then I would be in favour of that.  I just wasn't able to figure it out.Also, could you describe your normal workflow a bit more?  I wasn't able to get the generator to work without first defining the profile.  I assumed that was the expected sequence.  Actually -- the editor nagged be about defining the profile on every save, so I eventually gave in.I don't have a preference to any way in particular, this was just the only way I got it to work.  If you can describe your normal workflow then I can try that instead."
53876,1,"Patch Set 2:If the change in the profile is merely an addition, it is not necessary to migrate models that apply a static profile.The procedure after a profile modification is to create an ecore from the UML profile: open the profile with the UML2 editor rather than Papyrus and invoke the convert-to-ecore option. Make sure that Camel-case-names is deactivated. Then, reload the genmodel and generate code from it."
53878,0,Patch Set 3: Verified+1 Code-Review+2The change is fine.
53879,0,Change has been successfully merged into the git repository.
53885,0,Change has been successfully rebased as f7e11c5e8771c86ccb23d5aa798fe9bc2eea731c
53890,0,Change has been successfully merged into the git repository.
53893,0,Change has been successfully merged into the git repository.
53897,0,Change has been successfully merged into the git repository.
53904,0,Change has been successfully merged into the git repository.
53915,0,Change has been successfully merged into the git repository.
53919,0,Patch Set 1: Code-Review+1(3 comments)Looks good to me. I think a test which acutally tests the new VetoException messages would be nice
53921,0,Change has been successfully cherry-picked as 167b03287dadf86875e37b89a81b92939ea64e2d
53923,0,Patch Set 4: Code-Review+2Thank you for adding some tests. Looks good to me.
53933,1,"Patch Set 1: Code-Review-1There should be a test case for the scenario described in Bug 437195 that fails before this change and succeeds thereafter. Please add it.Also, does this change need to depend on the previous one? If not, rebase onto the origin/master."
53940,1,"Patch Set 4: Code-Review-1Testing with a fresh workspace and setting some preferences caused the following contents of .metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.recommenders.privacy.rcp.prefs:org.eclipse.recommenders.privacy.datums.machineId/org.eclipse.recommenders.privacy.example=-org.eclipse.recommenders.privacy.datums.stacktraces/org.eclipse.recommenders.privacy.example=+org.eclipse.recommenders.privacy.example/org.eclipse.recommenders.privacy.datums.machineId=-org.eclipse.recommenders.privacy.example/org.eclipse.recommenders.privacy.datums.stacktraces=+I don't think it's a good idea to save everything twice, in particular as users might edit this file and cause inconsistencies.Please use only one structure (I prefer datumId/principalId over principalId/datumId) and implement any search-like functionality as needed using Preferences.childNames.Also, please store the IDs below a dedicated node (perhaps called ""approval""). That way a maliciously chosen ID cannot overwrite other settings."
53943,0,"Patch Set 8: Code-Review+2Hi Yasser. Looks good to me. Thanks.Testing gets quite cumbersome, though. I hope <https://www.eclipse.org/forums/index.php/m/1387104/> turns up something. If not, it may be worth writing our one mock of IEclipsePreferences (or Preferences, as that's the smaller interface). Let's talk about this tomorrow if the forum query avails to nothing."
53944,0,Change has been successfully merged into the git repository.
53950,0,Change has been successfully merged into the git repository.
53958,0,Change has been successfully merged into the git repository.
53961,0,Change has been successfully merged into the git repository.
53967,0,Change has been successfully merged into the git repository.
53974,0,Change has been successfully merged into the git repository.
53976,0,Change has been successfully merged into the git repository.
53982,0,Change has been successfully merged into the git repository.
53984,0,Change has been successfully merged into the git repository.
53996,1,"Patch Set 2:Jo├úo, you have pushed things that correspond to an other bug I think.Please review your commit and submit a new patch set."
53999,1,"Patch Set 2:Yes, I have pushed items from other bug, I will fix it now"
54007,0,Change has been successfully merged into the git repository.
54009,1,"Patch Set 9:Jo├úo, could you add the following copyright on the file you created ?/******************************************************************************* * Copyright (c) 2014 - Jo├úo Martins and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at * http://www.eclipse.org/legal/epl-v10.html * * Contributors: *   Jo├úo Martins <your mail> - initial API and implementation  *******************************************************************************/or eventually as we made several correction during the review /******************************************************************************* * Copyright (c) 2014 - Jo├úo Martins and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at * http://www.eclipse.org/legal/epl-v10.html * * Contributors: *   Jo├úo Martins <your mail> - initial API and implementation  *   Maxime Porhel <maxime.porhel@obeo.fr> Obeo - Bug 434698, remarks and correction during review. *******************************************************************************/"
54013,0,Patch Set 10:Thanks for your contribution Jo├úo !It seems to be ready to be merged on the GSOC branch. I should do it during the week.
54016,0,"Patch Set 7: Code-Review-1(8 comments)Good work Joao, if possible I'd like you to improve a bit so pieces of javadoc but otherwise looks great."
54017,0,Patch Set 7:(11 comments)Some modification.Thanks Alex Lagarde I had done some modification.All this work can't be done without Maxime Porhel who are helping a lot to make all this possible.
54020,0,Change has been successfully merged into the git repository.
54048,0,Change has been successfully merged into the git repository.
54068,0,Change has been successfully merged into the git repository.
54071,0,Change has been successfully merged into the git repository.
54072,0,"Patch Set 1:With this change, your initial contribution passed the IP check. :-)"
54078,0,Change has been successfully cherry-picked as c2da55547c2cf7e36b2f21022a60a4986e5ca918
54079,0,"Patch Set 2:(12 comments)Hi Doug,this is a much welcome change. I've glanced at it and have a few comments, many of them dealing with extending to more custom product - maybe you could take a look?"
54080,0,"Patch Set 2:(12 comments)Thanks Vladimir, your input is very welcomed. I have responses in line, but we should really move some of this discussion to the bug since I've already submitted this request and wasn't really looking at it any more.I've been pushing directly until I get it to a point where it's ready to be extended. I'll push to gerrit after that. If you guys have anything you'd like to see and work on, I'd be happy to look at requests as well."
54084,0,Change has been successfully merged into the git repository.
54093,0,Change has been successfully merged into the git repository.
54096,0,Change has been successfully merged into the git repository.
54102,0,Change has been successfully merged into the git repository.
54113,0,Change has been successfully merged into the git repository.
54116,0,Change has been successfully merged into the git repository.
54120,0,Change has been successfully merged into the git repository.
54125,0,Change has been successfully merged into the git repository.
54130,0,Change has been successfully merged into the git repository.
54131,0,Patch Set 1:@Andreas: Thank you for this change!
54134,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5934/ : UNSTABLE
54135,0,Change has been successfully merged into the git repository.
54141,0,Change has been successfully merged into the git repository.
54145,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/360/ : UNSTABLE
54146,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/361/ : UNSTABLE
54147,0,Change has been successfully merged into the git repository.
54151,0,Change has been successfully merged into the git repository.
54154,0,Change has been successfully merged into the git repository.
54158,0,Change has been successfully merged into the git repository.
54162,0,Change has been successfully merged into the git repository.
54166,0,Change has been successfully merged into the git repository.
54177,0,Change has been successfully merged into the git repository.
54178,1,"Patch Set 6: Code-Review-1*sigh*Apparently forget a ""git add"". Will reconstruct the missing base class tomorrow. :-("
54186,0,Change has been successfully merged into the git repository.
54192,0,Change has been successfully cherry-picked as a02bedd48e0eb1cf6e9ff81132e97efbbc5fbd5b
54196,0,Change has been successfully rebased as 5702fcb210c0dfe5562f9436c7d7df3dac91cf77
54199,0,Change has been successfully merged into the git repository.
54220,0,Patch Set 4:Anyway: Just played around with the editor. Works fine so far:  ${boolean:var(boolean)}  ${var:var(boolean)}All colored as expected. Cool stuff! :-)
54223,0,"Patch Set 9:(3 comments)This looks quite nice (the editor, not all parts of the code ;-).At least the following legal JFace template is flagged as a parse error, though:  ${var:var(var)}The third ""var"" is apparently not parses as a type."
54225,1,"Patch Set 9: Code-Review-1(2 comments)Did some experimenting. Unfortunately, we cannot do  TemplateIdentifer ':' (=> 'array' TemplateKeyword);with  TemplateKeyword: 'array' | 'field' | ...;with the meaning that, if at the => the next token is ""array"", then parse it (again!) using the TemplateKeyword rule. The underlying Antlr can do this, but Xtext does not (Implementation Detail section in [1]). That is too bad, as I think the above would neatly solve our problem without a large number of rules. Unfortunately, that's exactly what I think we have to do (comment inline). Hence  TemplateIdentifer ':' ArrayTemplateKeyword;  ArrayTemplateKeyword: 'array';[1] <http://zarnekow.blogspot.de/2012/10/xtext-corner-5-backtracking-vs.html>"
54226,1,"Patch Set 9: -Code-Review(1 comment)The idea of splitting the template keywords in separate rules could solve it.As for the other comments, I'll have to read them again tomorrow to get a better understanding. I got a lab exam to prepare for now :-S"
54232,0,Change has been successfully merged into the git repository.
54236,0,Change has been successfully merged into the git repository.
54240,0,Change has been successfully merged into the git repository.
54244,0,Change has been successfully rebased as 4775d6bca911dcee3c9fe3857b89fe02bc73643c
54250,0,Change has been successfully merged into the git repository.
54257,0,"Patch Set 1:Your suggestion has two independent parts, correct? 1) I understand your first part as: Set the authenticator instead of a factory for the authenticator.  I think, this does not work because the authenticator needs to have an instance of the connection. Thus the manager needs to create one per connection. And thus needs to have a autentitcator factory instead of an authenticator.2) Remove the ""default"" in the set method (change setDefaultAuthenticatorFactory to setAuthenticatorFactory if done without suggestion 1) and remove the open method with the extra argument. I'm happy to do this, but I don't think it really simplifies anything."
54260,1,"Patch Set 1:What is the problem of initializing the default in the Activator? Do you have any suggestion as an alternative? From where we should call setDefaultAuthenticatorFactory/setUserAuthenticatorFactory? The idea of having a default, was that the core can rely on there being one as long as a UI plugin has been loaded. It can not be called from getRemoteUIServices/getUIServices/RemoteUIServicesDescriptor.loadServices because those are not guaranteed to be called before the core service is used. It it can not be called from the core loadServices without introducing a core->ui dependency. One option would be to make the user UI service (i.e. sync UI service) initialize it. But that is ugly because it seems like now the user of the service has to initialize an internal detail."
54264,0,Patch Set 3:That's exactly what we do also. :-) I missed committing a couple of files.
54265,0,"Patch Set 3:org.eclipse.remote.core.AbstractRemoteConnectionManageris missing. Otherwise, it looks good."
54272,0,Change has been successfully merged into the git repository.
54275,0,Change has been successfully cherry-picked as a8b6f21def1de388d22e390f3cc3eb92edb0b76b
54277,0,"Patch Set 2: Code-Review-1(1 comment)One comment:Maybe we should decouple the concept of ""common base classes to make views"" from ""views implemented using SWTChart"". Perhaps the section you added could be called ""Base implementation for views"" or similar, and within it mention SWTChart.The timegraph view for instance is not using SWTChart, but it's a core feature that is often used!"
54286,0,Change has been successfully cherry-picked as 674a32252f44fb5ec430d963de98b97ab039a3de
54296,0,Patch Set 7: Code-Review+1Fixed the comments I had. Restored the superior commit message ;)
54298,1,"Patch Set 7:You're right, the title got better, but the message got worse. Oh well..."
54300,1,"Patch Set 2: -Code-ReviewOh I thought this was the final, in-framework implementation, didn't see it was in tracing.examples. My baaaad! >.<If it's just the example, then we can rebase the doc patch on top of this one. That would make sense."
54305,0,Change has been successfully cherry-picked as da99fda8413e38bd051e00e72fe63dcdce3cef33
54307,0,Patch Set 1: Code-Review+1*Another* bug with the target editor? no wai!
54310,0,Change has been successfully cherry-picked as c21bfa59b35c5826a1dbde32a0f10a7ace5df312
54313,0,Change has been successfully merged into the git repository.
54314,0,Change has been successfully cherry-picked as 86a9c08a95a9aa2d0ec2be86a3e4d9455692a3f9
54319,0,Change has been successfully cherry-picked as 4bec4ab8cddd7ca584c9c88a54c60981cf2c2dfe
54322,0,Change has been successfully merged into the git repository.
54325,0,Change has been successfully merged into the git repository.
54329,0,Change has been successfully merged into the git repository.
54334,0,Change has been successfully merged into the git repository.
54336,0,Change has been successfully merged into the git repository.
54343,0,Change has been successfully merged into the git repository.
54346,0,Change has been successfully merged into the git repository.
54347,0,Change has been successfully cherry-picked as 94fe4657256ddaadcf34cf89b4d8ef094df49368
54352,0,Change has been successfully merged into the git repository.
54357,0,Patch Set 4: Verified+1 Code-Review+2I reviewed this and talked to Tom about it. I'm happy.
54358,0,Change has been successfully merged into the git repository.
54361,0,Change has been successfully cherry-picked as c507edbe0cd7f7f73484abc115349b427c111498
54363,0,Change has been successfully merged into the git repository.
54365,0,Patch Set 1: Verified+1 Code-Review+2Sounds good. it would be nice to add junit tests on that part.
54374,0,Change has been successfully cherry-picked as c9137e1c8cfb59bbe57677279b992f5ba0cfa864
54378,0,Change has been successfully merged into the git repository.
54380,1,"Patch Set 2:@Greg: Do you think the bug being fixed by this is important enough, that we should submit this before RC4?"
54384,0,Change has been successfully rebased as 449826967f57e8591851b5e97cd17049cf4839f7
54388,0,"Patch Set 3: Code-Review+2There seems to be some issues under some specific conditions, but I cannot consistently reproduce them.For most users, everything seems to work fine, so let's push this contribution. The Rename participant robustness may need to be improved against runtime/resource loading exceptions, when some specific steps can be identified"
54389,0,Change has been successfully merged into the git repository.
54392,1,Patch Set 2: Code-Review-2I've uploaded a test model in Bug 402042 (Which currently fails)
54393,0,Patch Set 2:This model is working fine for me. It rename the 3 files and keep the others
54397,0,Change has been successfully merged into the git repository.
54399,0,Patch Set 1: Code-Review+2The fix is safe and solves one of the issues described in Bug 436468Ok for me
54404,0,Change has been successfully merged into the git repository.
54409,0,Change has been successfully merged into the git repository.
54412,0,Patch Set 4: Code-Review+2Ship it!
54413,0,Change has been successfully merged into the git repository.
54415,0,"Patch Set 3: Code-Review+1Looks good to meIt should be pushed today, to be included in RC4. I'd like at least two other committer reviews"
54416,0,"Patch Set 3: Code-Review+1(1 comment)Yep, looks good to me.  If I understand the DiModel changes correctly, it was losing track of what its proper resource URI was when it loaded the *.di resource for, say, a referenced controlled-unit *.uml that has been loaded.  So, yes, good to have that fixed."
54421,0,Change has been successfully merged into the git repository.
54424,0,Change has been successfully cherry-picked as a4c5fa74959575b88a228f0cbb221f507f1544d8
54427,0,Change has been successfully merged into the git repository.
54430,0,Change has been successfully merged into the git repository.
54436,0,Change has been successfully merged into the git repository.
54441,0,Change has been successfully rebased as cdbbc2edc6565ae5642804e36aadbb0bd71590b7
54443,0,Change has been successfully cherry-picked as 266a2dda5e14171ef9b58a0359db71f92cb80758
54448,0,Change has been successfully cherry-picked as 2e111d9fcdf559bf9ba0df6f74ac1e782f531097
54453,0,Change has been successfully rebased as cb5dcebed13ecb3a3bbb792cc21c9bf06bfd0d60
54456,0,Change has been successfully merged into the git repository.
54462,0,Change has been successfully merged into the git repository.
54464,0,Patch Set 1: Code-Review+1Awesome find! Thank you for the fix.
54466,0,Change has been successfully merged into the git repository.
54468,0,Change has been successfully merged into the git repository.
54472,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
54474,0,Patch Set 3:Build SUCCESSFUL. Now starting integration tests...
54477,0,Change has been successfully merged into the git repository.
54480,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
54481,0,"Patch Set 1: Code-Review+1This raises the minimum supported Eclipse version to 3.5, right? IMHO this is completely acceptable.The change looks good in principle."
54484,0,Change has been successfully merged into the git repository.
54489,0,Change has been successfully merged into the git repository.
54492,0,Change has been successfully merged into the git repository.
54500,0,Change has been successfully merged into the git repository.
54505,0,Change has been successfully merged into the git repository.
54510,0,Change has been successfully merged into the git repository.
54512,0,"Patch Set 1: Code-Review+1Thanks for these great snippets, Yasser!I've moved them to this branch. Please make sure to update Snipmatch from the head update site to make sure you push to the correct branch.I've adapted your snippets a bit to make use of some useful template variables.""Link"" is especially useful here and lets us combine several of your snippets into one."
54514,0,Change has been successfully merged into the git repository.
54516,0,Change has been successfully merged into the git repository.
54521,0,Change has been successfully merged into the git repository.
54532,0,Change has been successfully merged into the git repository.
54536,0,Change has been successfully merged into the git repository.
54544,0,Change has been successfully merged into the git repository.
54547,0,Change has been successfully merged into the git repository.
54549,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/585/ : UNSTABLE
54550,1,Patch Set 1: Verified+1Test failure is unrelated.
54552,0,Change has been successfully merged into the git repository.
54555,0,Change has been successfully merged into the git repository.
54559,0,Change has been successfully merged into the git repository.
54562,0,Change has been successfully merged into the git repository.
54565,0,Change has been successfully merged into the git repository.
54569,0,Change has been successfully merged into the git repository.
54579,1,Patch Set 6:@PatrickA clone button would be nice but I think exceeds the scope of this bug and patch.
54580,1,"Patch Set 6: Verified+1 Code-Review+2This uncovers another problem when renaming a default (packaged-in) custom parser, but it will be fixed in a separate bug."
54583,0,Change has been successfully cherry-picked as d8757ff23eb659cc981f97ea319a1e1ca0b15960
54587,0,Change has been successfully cherry-picked as ed74d892ad2dfaafd64c43b6a1b619d402780438
54598,0,Change has been successfully merged into the git repository.
54602,0,Change has been successfully merged into the git repository.
54613,0,Change has been successfully merged into the git repository.
54623,0,Change has been successfully merged into the git repository.
54629,0,"Patch Set 2:> The run in background button does not change the busycursor while hovering over it. The cancel button acts ok.Nice catch!  This warrants a bug for ProgressMonitorDialog to encapsulate the protected arrowCursor.  See my latest patch for the workaround. > When pressing ""Clear model cache"" i get an unrelated message in the dialog (The search was cancelled.  Not all results may have been displayed.)The filter can still search while the index job is running.  It starts a search job.  Clearing the cache cancels that job.  The search finds all items by default without typing, so it was most likely running when you cleared the cache.  See the progress view to verify there are 2 jobs running.I like having results in the table immediately, and that is why the search starts before typing anything.  Especially when the default 'Project Only' is selected. > When pressing ""run in background"", the list is not updated upon completion.The results will only update when the filter is changed due to lack of provider feedback.  See final comment on provider status callback. This is a very narrow scoped feature with much overhead.  I can't see initializing on startup, or even when the dialog first opens.  It should only happen on first use.  The provider chooses to to initialize, and the GUI has no idea this is even taking place.  The current filter/provider mechanism has no callbacks regarding initialization (only a clear cache method).   This leaves us with 2 choices:  Go back to the modal dialog with cancel option, or create a provider status callback mechanism.  I am leaning towards the thought that if you can't use the filter while the provider is initializing, there is no harm in the modal dialog.  The callback mechanism would allow the search to refresh and UI state to adjust however."
54632,0,"Patch Set 5:A callback was added to the filter to enable the provider to signal when indexing starts and ends.Searching, clearing the cache, and cancelling indexing all work gracefully while indexing takes place in the background.The filter now refreshes when the provider finishes indexing.The dialog message displays the state of the search / index jobs, and displays a warning if the indexed cache was cancelled and may not be complete.The message hides index details if a scope is selected that does not use an indexing provider."
54634,0,Change has been successfully merged into the git repository.
54639,0,Change has been successfully merged into the git repository.
54642,0,Change has been successfully cherry-picked as 63d0cc710580305df07bc355b8ffdbace1086304
54648,0,Change has been successfully merged into the git repository.
54649,0,Change has been successfully cherry-picked as 87e6bc143b98a67425679afb81fc4b2166df1d06
54656,0,Change has been successfully merged into the git repository.
54663,0,Change has been successfully merged into the git repository.
54666,0,Change has been successfully cherry-picked as 42c6ec903fe6cfeaddd1408d4390c1e6534e4543
54670,1,"Patch Set 2: Verified+1 Code-Review+2I haven't tested this because i don't know how to produce that prompt, but I believe that it solves your problem ;-)"
54671,0,Change has been successfully merged into the git repository.
54675,0,Change has been successfully merged into the git repository.
54678,0,Change has been successfully merged into the git repository.
54683,0,"Patch Set 3: Code-Review+2Very nice feature, thanks!"
54684,0,Change has been successfully merged into the git repository.
54687,0,Change has been successfully merged into the git repository.
54688,0,Change has been successfully cherry-picked as 7f3855be62b389570f6da993768b3aabe149f86b
54695,0,Change has been successfully merged into the git repository.
54699,0,Change has been successfully merged into the git repository.
54703,0,Change has been successfully merged into the git repository.
54706,0,Change has been successfully merged into the git repository.
54710,0,Change has been successfully rebased as 7bf327597e5b434a57652cc854019c0ec8919cc9
54713,0,Change has been successfully merged into the git repository.
54715,0,Change has been successfully cherry-picked as 67dd68b2fc1473c0b0caa6e365ae8fcf32cc3440
54722,0,Change has been successfully merged into the git repository.
54725,0,Change has been successfully merged into the git repository.
54728,0,Change has been successfully merged into the git repository.
54731,0,Change has been successfully merged into the git repository.
54738,0,Change has been successfully merged into the git repository.
54741,0,Change has been successfully cherry-picked as fb11f71f14f30d69c97e9792dae47137f37f8db9
54744,0,Change has been successfully merged into the git repository.
54746,1,"Patch Set 1: Code-Review-1By putting ""No Author"" just prevent a NPE, but does not fix the problem.It shows the new value ""No Author"", but if you close this ""Compare with base"" and re-open it, you see the user will be set. I see it as a patch only, the root cause of the problem is not solved since someone is entering the comment in the code and you display ""No Author"" until you re-open the compare editor. Why the real user entering the comment is not showing right away?. It looks related to the same issue why the ""Person icon"" is not showing the ""isMine()"" value when opening the compare editor from ""Compare with Base"". If you just open the file as a single editor and add a comment, then the user shows right away."
54747,1,"Patch Set 1:> It looks related to the same issue why the ""Person icon"" is> not showing the ""isMine()"" value when opening the compare > editor from ""Compare with Base"".Is there a bug for that?"
54748,1,"Patch Set 1:(1 comment)According to Miles, it's a fundamental limitation of the compare with base implementation, so this may be the best we can do in the short term. I'm not sure that ""(No Author)"" is the right thing to display though. It might be less confusing to display either ""(Current User)"" or just use an empty string."
54749,0,"Patch Set 1:This patch will prevent the NPE, but what should we do to fix the issue? Should we re-open the Bug 391615 or create a new Bug to highlight the root cause: the structure for the comments should be fixed to include the author in the review comment, so wether we open a single compare editor (Which is currently fine with the user) or we open the compare editor using ""Compare with Base"", the author field (AddeyBy()) should be filled. The consequence will fix other issue like the Person icon in the compare editor will be Blue or yellow according to the user , the new functionality for the comment editing feature."
54750,1,Patch Set 1:That should be tracked in a new bug. I think the root of the problem is that the compare with base does not have an IReview object.
54752,1,"Patch Set 1:What Sam said. We need to fix the model for sure. I think it's ok to trap for the NPE for now, so we should probably go ahead and merge this change, but we need to get away from having all of these null checks around and figure out the root causes. Even if it is a null value form the Gerrit API or something, we could be using a temporary Author model object until it's actually set."
54753,1,Patch Set 1: Code-Review+2Thanks for creating the new bug Jacques; I think we should address that. Let's go ahead and merge this one now and push it for RC2.
54758,0,Change has been successfully merged into the git repository.
54763,0,Change has been successfully merged into the git repository.
54770,0,Change has been successfully merged into the git repository.
54776,0,Change has been successfully merged into the git repository.
54779,0,Change has been successfully merged into the git repository.
54782,0,Change has been successfully merged into the git repository.
54783,0,Change has been successfully cherry-picked as 9068ebc240999abd2c1cd544ff11ab5194394c61
54786,0,Change has been successfully cherry-picked as 86eecd2e9b927b2f6d2b3c41be58e5b430993b21
54790,0,Patch Set 1: Verified+1 Code-Review+2looks good
54791,0,Change has been successfully merged into the git repository.
54794,0,Change has been successfully merged into the git repository.
54799,0,Change has been successfully rebased as 3bc3539aa998dcb6c6a92d03cf8c1edd4740a96a
54800,0,Change has been successfully cherry-picked as 9df24f788444b0fdd873483d7227cee0aee9f3cf
54807,0,Change has been successfully merged into the git repository.
54813,0,Change has been successfully merged into the git repository.
54819,0,Change has been successfully rebased as eb00624a7a37d5884693be830d9d50b3961b620e
54822,0,Change has been successfully merged into the git repository.
54825,0,Change has been successfully merged into the git repository.
54828,0,Change has been successfully merged into the git repository.
54831,0,Change has been successfully merged into the git repository.
54834,0,Change has been successfully merged into the git repository.
54838,0,Change has been successfully merged into the git repository.
54840,0,Patch Set 1: Code-Review+1I'm not sure if it is to late for the release or not. It's a hidden/experimental feature. But on the other hand the fix seems very save to me.
54841,1,"Patch Set 1: Code-Review+2The change is clearly limited to DropDown, and since this widget has been introduced in 2.3, there is no risk of introducing a regression."
54842,0,Change has been successfully merged into the git repository.
54844,0,Change has been successfully merged into the git repository.
54851,0,Change has been successfully merged into the git repository.
54855,0,Change has been successfully merged into the git repository.
54858,0,Change has been successfully merged into the git repository.
54862,0,Change has been successfully merged into the git repository.
54868,0,Change has been successfully merged into the git repository.
54871,0,Change has been successfully merged into the git repository.
54876,0,Change has been successfully merged into the git repository.
54879,0,Change has been successfully merged into the git repository.
54883,0,Change has been successfully cherry-picked as 6906466d87b80aa715ac66129806f05f5af84f2f
54890,0,Change has been successfully rebased as cc7fe170a619bbebb7b00d68139e721feadda5c3
54895,0,Change has been successfully merged into the git repository.
54898,0,Patch Set 1: Code-Review+2...and verified that guide/reference/jsdoc/symbols/$.html is really there. :-)
54899,0,Change has been successfully merged into the git repository.
54906,0,Change has been successfully merged into the git repository.
54911,0,"Patch Set 2: -Verified -Code-ReviewBenoit,  can you handle this rebase? thanks"
54914,0,Patch Set 3: Verified+1 Code-Review+2great to add tests on that part. Thanks
54915,0,Change has been successfully merged into the git repository.
54918,0,Change has been successfully merged into the git repository.
54926,0,Change has been successfully merged into the git repository.
54928,0,Patch Set 1: Verified+1 Code-Review+2OK. thanks
54929,0,Change has been successfully merged into the git repository.
54932,0,Patch Set 4: Verified+1 Code-Review+2sounds good. Thanks
54933,0,Change has been successfully merged into the git repository.
54938,0,Patch Set 1: Verified+1 Code-Review+2Good. Thanks
54939,0,Change has been successfully merged into the git repository.
54948,0,Change has been successfully merged into the git repository.
54953,0,Change has been successfully merged into the git repository.
54960,0,Change has been successfully merged into the git repository.
54970,0,Change has been successfully merged into the git repository.
54979,0,Change has been successfully cherry-picked as f619bde9a576825981a0885681e6a2a6d9281cc7
54982,0,Change has been successfully cherry-picked as 6937911643e0be5c559c0774da1a62ec609f90f8
54991,0,Change has been successfully merged into the git repository.
55000,0,Change has been successfully merged into the git repository.
55005,1,Patch Set 3:> we will lose the Inactive color behavior for the editor (minor issue);I believe we will be able to revert this behavior when the Bug 435655 gets fixedDaniel
55006,1,Patch Set 3: Verified+1 Code-Review+2It looks good for me. However we can consider removing the separate background colors for the Active and Inactive MPartStacks outside of the MArea and use only one color in order to be coherent with the current change. We can modify it using the new bug scheduled for 4.5Daniel
55007,0,Patch Set 3: Code-Review+2 Verified+1Looks also good to me
55009,0,Change has been successfully merged into the git repository.
55010,0,Change has been successfully cherry-picked as f3c6458298d31da45e3e64c78f0ebc12af0c13eb
55015,0,Change has been successfully merged into the git repository.
55020,0,Change has been successfully merged into the git repository.
55029,0,Change has been successfully merged into the git repository.
55032,1,"Patch Set 1: Code-Review-1(2 comments)I find the behavior of the later tab to be inconsistent with the default tab.Scenario 1: Intelligent Code Completion is the only active item in the default tab. -> the later tab shows proposals.Scenario 2: Intelligent Code Completion is deactivated in the default tab. -> the later tab shows proposals.Scenario 3: Intelligent Code Completion & Java proposals is active in the default tab. -> the later tab shows no proposals, asks for Intelligent code completion to be activated, but downloads models.Scenario 3 seems weird. If the later tab shows proposals when CR is specifically deactivated, then it should show proposals when the user hasn't decided yet."
55033,0,"Patch Set 1:Johannes, the behavior in scenario 3 is slightly different:Scenario 3: Intelligent Code Completion & Java proposals is active in the default tab. -> the Adaptive Templates Proposals tabs downloads model, the Intelligent Java Proposals tab asks for Intelligent code completion to be activated and does not download models.You can verify that this is what's happening if you deactive the Adaptive Template Proposal computer in the preferences.Insofar I think this change behaves exactly as advertised in the commit message.That being said, I think it would be nice if the latter Intelligent Java Proposals tab would not ask you to activate is but rather just show proposals (as you have explicitly cycled to it). I can't find a way to reliably detect whether we are on a latter tab, though."
55036,0,Change has been successfully merged into the git repository.
55038,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/emfcompare/job/gerrit-allbranches/630/ : UNSTABLE
55040,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/emfcompare/job/gerrit-allbranches/597/ : UNSTABLE
55043,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/emfcompare/job/gerrit-allbranches/600/ : UNSTABLE
55045,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/emfcompare/job/gerrit-allbranches/631/ : UNSTABLE
55050,0,Change has been successfully merged into the git repository.
55051,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/emfcompare/job/gerrit-allbranches/643/ : UNSTABLE
55055,0,Change has been successfully merged into the git repository.
55057,0,"Patch Set 4: Verified+1 Code-Review+2Removed the dependency on org.eclipse.e4.ui.css.swt.theme. This is not necessary, since all Debug functionality works fine without that bundle. Otherwise, the previous patch set looked good."
55062,0,Change has been successfully merged into the git repository.
55067,0,Change has been successfully merged into the git repository.
55075,0,Change has been successfully merged into the git repository.
55081,0,Patch Set 2:I was a bit too excited to get it done and missed all the typos (hopefully I corrected them this time :D ).
55082,0,Change has been successfully cherry-picked as 3d2006b4661a8eb33e1b24ba38f67fd4cc3813e7
55092,0,Change has been successfully cherry-picked as ed6a1eabfebdda62368bc03934ee71c95670d629
55095,0,Change has been successfully merged into the git repository.
55100,0,Change has been successfully merged into the git repository.
55113,1,"<includeBundles> in the target using the PDE UI (want to exclude org.eclipse.jdt.annotation in version 2.0.0.).I saw that we have duplicates for org.eclipse.jdt.annotation and org.eclipse.jdt.annotation.source but did not know that I can have by example 4 times <plugin id=""""com.ibm.icu.source"""" version=""""52.1.0.v201404241930""""/> in the <includeBundles>.This looks like a bug in the PDE part."""
55117,0,Patch Set 1:I would be glad if we do not need this but I did not find an other way how to remove the org.eclipse.jdt.annotation with version 2.0.0
55119,1,"Patch Set 1:(In reply to comment #10)> Patch Set 1:> > It's hard to make sense of this change without understanding what it's trying to> accomplish. Are you trying to disable the jdt.annotation 2.0.0 bundle? Doesn't> putting that in includeBundles explicitly enable it?The jdt.annotation 2.0.0 bundle use java 8 so we need the 1.1.0 version. Add the plugin to the Require-Bundle wotks but that was not the way how Steffen want to fix this.<includeBundles> only include the selected bundles and no other, there is no way to only exclude one specific bundle.> > Maybe a better solution is to check out the 1.1 version of the bundle from> source so that it overrides the 2.0 version in the target?I never tried this! Are you sure that this should work?"
55120,0,"Patch Set 1:(In reply to comment #11)> I never tried this! Are you sure that this should work?Yes, this is how I have my Eclipse 4.3 workspace with Java 8 feature patch working. Any projects you have checked into your workspace will take precedence over bundles in your target when building projects/resolving the workspace."
55123,1,"Patch Set 1:(In reply to comment #14)> Patch Set 1:> > (In reply to comment #8)> > <includeBundles> only include the selected bundles and no other, there is no> way> > to only exclude one specific bundle.> > But you are including the 2.0 version in includeBundles, so it's not excluded.Ups, my fault but I include only the source> > Frank, what errors are you getting when checking out the 1.1 bundle from source?I get the following two errors with project org.eclipse.jdt.annotation_v1* Build path specifies execution environment J2SE-1.5. There are no JREs installed in the workspace that are strictly compatible with this environment. * Execution environment references were not checked for 'org.eclipse.jdt.annotation_v1' because no environment descriptions are installed."
55126,0,Change has been successfully merged into the git repository.
55130,0,Change has been successfully merged into the git repository.
55134,0,Change has been successfully merged into the git repository.
55144,0,Patch Set 1: Verified+1 Code-Review+2Looks good. I'm not sure about making it a level higher though. It's still a view like the other ones under Lttng. But I don't feel strongly about it either way.
55146,0,Change has been successfully cherry-picked as 5f1709da0fb2e567e65fb99d11d87565bde2b79d
55157,0,Change has been successfully merged into the git repository.
55160,1,Patch Set 2: Code-Review-1Can you move the java version check to the livedoc's startup? It's a bit annoying to enter all parameters and only then discover it won't work when the java version restriction is independent of the arguments.
55165,0,Change has been successfully cherry-picked as cbf93e63b930f1b80ca55068943bd9a7d2a59fa8
55173,0,Change has been successfully merged into the git repository.
55181,0,Change has been successfully merged into the git repository.
55188,0,"Patch Set 3:Steffen, could you take a look at this? I'd like to put this on the 3.12 branch and see if it fixes the build."
55200,0,Change has been successfully merged into the git repository.
55203,0,Change has been successfully merged into the git repository.
55217,0,Change has been successfully merged into the git repository.
55228,0,Patch Set 7: Verified+1 Code-Review+2AWESOME patch Ollie!
55229,0,Change has been successfully merged into the git repository.
55232,0,Change has been successfully cherry-picked as 8c2737b4797074bf754095a1ff6f7145b25836a2
55240,0,Change has been successfully merged into the git repository.
55242,1,"Patch Set 2:I used a Job object instead of a thread.  I also did some checking when the dialog is closed while a search is still in progress.I added the IProgressMonitor to the FilterEx object to check for canceling the job downstream and add some status updates.  I would ultimately like to combine the FilterEx with the legacy Filter class, and possibly add IProgressMonitor to the IClassContributionProvider interface.  We'll save that for a refactoring patch."
55243,0,"Patch Set 2: Verified+1 Code-Review+2Ok, works fine. There are a few minor things to consider for later patches:1. ""Find contribution class"" table does not have a border2. Clicking the Target platform radio button freezes the ui for a few seconds before the dialog window with the job kicks in3. The job window should have ""run in background?"" If the user chooses this then the ""Target platform"" radio should be disabled until the job finishedOtherwise a sweat patch. Great work."
55244,0,Change has been successfully merged into the git repository.
55247,0,Change has been successfully cherry-picked as 7758961844109a36c51f71efe805aa41bef808ce
55253,0,Change has been successfully merged into the git repository.
55256,0,Change has been successfully cherry-picked as e8ffd5dadbb2b594e976b94444490d9e0f64f682
55258,0,"Patch Set 2:> stable-3.0 material?Imo it's not really worth it... warnings in tests packages, who cares? :P"
55267,0,Change has been successfully merged into the git repository.
55270,0,Change has been successfully merged into the git repository.
55271,1,Patch Set 2: Verified-1On GTK2 (Ubuntu 14.04) the labels are still the wrong color. I will investigate.
55272,0,Change has been successfully cherry-picked as 1b67eeb2a19369703c2bf794dd31c77045946688
55285,0,Change has been successfully merged into the git repository.
55288,0,Change has been successfully merged into the git repository.
55291,0,Change has been successfully cherry-picked as f4362d3ba69e5125ac5d208c70e1803e3e9b5de8
55292,0,Change has been successfully cherry-picked as 2e08b792975c2441966accd4ea71d01d84834703
55297,1,"Patch Set 2:OK, I'm having problem building our product against this CDT. Hopefully this will help."
55298,1,"Patch Set 2: Code-Review+2OK, I'm having problem building our product against this CDT. Hopefully this will help."
55303,0,Change has been successfully cherry-picked as 2b9bbdec613af66f1d7ab99d0221067438c79bd7
55306,0,Change has been successfully merged into the git repository.
55310,0,Patch Set 3: Verified+1 Code-Review+2Sounds good. Thanks
55311,0,Change has been successfully merged into the git repository.
55314,0,Patch Set 3: Code-Review-1(2 comments)Nice --- thanks for adding API tests.
55326,0,Change has been successfully merged into the git repository.
55333,0,Change has been successfully merged into the git repository.
55337,0,Change has been successfully merged into the git repository.
55341,0,Change has been successfully merged into the git repository.
55345,0,Change has been successfully merged into the git repository.
55348,0,Change has been successfully merged into the git repository.
55354,0,Change has been successfully cherry-picked as 47ad81d8ffdded70856384b179b80a6942589fa2
55365,0,Change has been successfully merged into the git repository.
55367,1,"Patch Set 1:The previous build failure was some instability, but I cannot see how it relates this this series of commits."
55376,0,Change has been successfully merged into the git repository.
55378,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5866/ : UNSTABLE
55382,0,Change has been successfully merged into the git repository.
55383,1,Patch Set 3:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5870/ : UNSTABLE
55386,0,Change has been successfully merged into the git repository.
55400,0,Change has been successfully merged into the git repository.
55403,0,Change has been successfully cherry-picked as 92e5739ba6dabcc491fbc83af956a3d2057dea63
55408,0,"Patch Set 8: (13 inline comments)Very nice.  A couple of minor comments in-line, and one more bug I found.- You know how you move long columns to be the last column?  The sorting does not take that into consideration.  Therefore, for example, if I choose the Processes resource, and I order the 'cores' column, it is actually the 'command' column that gets storted, and vice versa :)Thanks for the work, we should be one very soon!"
55410,1,Patch Set 8: (1 inline comment)Comment in patch 8 which may or may not lead to one more push :)Thanks for fixing the ordering bug.I'll run a couple of more tests and I think that's it.
55412,0,"Patch Set 8:(2 comments)Wow, found these draft comments from a long time ago.  For the sake of history, I'm publishing them."
55414,0,"Patch Set 7: (2 inline comments)I'm very happy with the current behavior of this new view.  We covered everything I can think of.I've seen some NPEs sometimes which we should guard against, but I don't see any major problems.1- Sorting columns seems to have broken.  Clicking on a column gives multiple of the following NPEs:java.lang.IndexOutOfBoundsException: Index: 8, Size: 8    at java.util.ArrayList.RangeCheck(ArrayList.java:547)    at java.util.ArrayList.get(ArrayList.java:322)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSData.getColumnText(OSData.java:123)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.ContentLabelProviderWrapper.getColumnText(ContentLabelProviderWrapper.java:67)    at org.eclipse.jface.viewers.TableColumnViewerLabelProvider.update(TableColumnViewerLabelProvider.java:70)2- Starting a session and choosing a different resource to display from the drop down gave me this NPE:Caused by: java.lang.NullPointerException    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView.populateViewMenu(OSResourcesView.java:536)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView.showTable(OSResourcesView.java:400)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView.update(OSResourcesView.java:365)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView.access$3(OSResourcesView.java:294)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView$6.update(OSResourcesView.java:271)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.SessionOSData$3.run(SessionOSData.java:231)3- I also saw another NPE once in a while:java.lang.NullPointerException    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.ResourceClassContributionItem.updateClasses(ResourceClassContributionItem.java:96)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView.update(OSResourcesView.java:309)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView.setDebugContext(OSResourcesView.java:282)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView.setDebugContext(OSResourcesView.java:245)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView.setupContextListener(OSResourcesView.java:198)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView.createPartControl(OSResourcesView.java:177)    at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:129)    at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:155)    at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:300)    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)    at java.lang.reflect.Method.invoke(Method.java:597)4- The view menu seems broken.  When I remove a column, the column stays, but when I try to add it, it adds a new duplicate one.5- If I scroll down the view and then change the debug context (but stay in the same launch) the view scrolls back to the top.  I think it would be more user-friendly to not change the view at all.  Maybe it is as simple as noticing that the context change can be ignored since the ICommandControlDMContext is the same.6- I got this NPE when switching from one launch to antoher sometimes.  I might have screwed up my launch, but it shows that it could happen:java.lang.NullPointerException    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView.setDebugContext(OSResourcesView.java:256)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView.setDebugContext(OSResourcesView.java:245)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView.access$4(OSResourcesView.java:214)    at org.eclipse.cdt.dsf.gdb.internal.ui.osview.OSResourcesView$4.debugContextChanged(OSResourcesView.java:193)    at org.eclipse.debug.internal.ui.contexts.DebugWindowContextService$1.run(DebugWindowContextService.java:212)    at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)    at org.eclipse.debug.internal.ui.contexts.DebugWindowContextService.notify(DebugWindowContextService.java:210)    at org.eclipse.debug.internal.ui.contexts.DebugWindowContextService.notify(DebugWindowContextService.java:185)    at org.eclipse.debug.internal.ui.contexts.DebugWindowContextService.debugContextChanged(DebugWindowContextService.java:408)    at org.eclipse.debug.ui.contexts.AbstractDebugContextProvider$1.run(AbstractDebugContextProvider.java:79)7- In all-stop mode, I like how the menus become grayed out when the target is not available.  However, the 'fetch' link remains usable, which will trigger a ""Fething data..."" which will only complete once the inferior is interrupted8- If there are multiple debug contexts selected,  the code choosed the first one arbitrarily.  This is not clear to the user. I suggest one of two things:  a) If all selected contexts have the same parent ICommandControlDMContext, then display resources as done now using any one context. If the parents are different, then disable and empty the view or   b) Always disable and empty the view for multi-selection9- The case where -info-os returns an error does not seem to be handled properly.  For example, if I have the OSResources view open when using a post-mortem session (core file), GDB gives:   448,664 [MI]  24-info-os   448,666 [MI]  24^error,msg=""Can not fetch data now.""   or   600,684 [MI]  25-info-os modules   600,686 [MI]  25^error,msg=""Can not fetch data now.""But the view is stuck showing ""Determining available OS resource classes..."" or ""Fetching data..."" depending on the timing.10- One time I got the following reply from GDB (maybe my gdbserver was wrong), but it caused an NPE that I think we should guard against:   915,516 [MI]  42-info-os semaphores   921,522 [MI]  ~""Ignoring packet error, continuing...\n""   921,523 [MI]  42^error,msg=""Can not fetch data now.""Exception in thread ""MI RX Thread"" java.lang.NullPointerException    at org.eclipse.cdt.dsf.mi.service.command.output.MIInfoOsInfo.get(MIInfoOsInfo.java:173)    at org.eclipse.cdt.dsf.mi.service.command.output.MIInfoOsInfo.parseResourcesInformation(MIInfoOsInfo.java:128)    at org.eclipse.cdt.dsf.mi.service.command.output.MIInfoOsInfo.<init>(MIInfoOsInfo.java:75)    at org.eclipse.cdt.dsf.mi.service.command.commands.MIInfoOs.getResult(MIInfoOs.java:47)    at org.eclipse.cdt.dsf.mi.service.command.commands.MIInfoOs.getResult(MIInfoOs.java:1)    at org.eclipse.cdt.dsf.mi.service.command.AbstractMIControl$RxThread.processMIOutput(AbstractMIControl.java:907)    at org.eclipse.cdt.dsf.mi.service.command.AbstractMIControl$RxThread.run(AbstractMIControl.java:754)11- The new osresources.gif icon should go under the view16 folder and should be renamed to osresources_view.gif,    i.e., dsf-gdb/org.eclipse.cdt.dsf.gdb.ui/icons/full/view16/osresources_view.gif    Don't forget to update the plugin.xml file to match12- In MANIFEST.MF, please export the new osview package, as the other packages are exported"
55419,0,"Patch Set 9: Verified; Looks good to me, approved; IP review completed(2 inline comments)Everything looks good!  I found two minor things but they are not essential.If you want to fix them great, but if not, that is ok too.I'll ask Mikhail to commit this patch, unless you push a new version in the mean time."
55420,0,Change has been successfully cherry-picked
55423,0,"Patch Set 3: (50 inline comments)Nice progress!  It is really starting to look right.1- Launching a debug session first, and then opening the OSResources view gives an NPE in the view2- Selecting the launch should allow the OSResources view to display things.  This will also allow to connect to a remote target without choosing a process to debug and still see the OSResources.  You probably need to modify GdbLaunch.getAdapter() to allow this.3- Say the view is displaying a resource type, it has the view menu showing. If I select the 'gdb' node in the debug view (or the launch node, or unselect everything), the view menu disappers. That is ok. However, when I select a valid node in the debug view, the menu does not appear again, until I press refresh."
55424,1,Patch Set 3: (1 inline comment)Forgot to comment on the commit message.Note that putting the bug number in the commit message is useful for Git but also for Gerrit as a link to bugzilla will appear at the top.
55432,1,"Patch Set 1: (16 inline comments)Thanks for the patch.  Below are general comments, and the others are in-line.  I haven't looked in detail at all the files, because there are some relatively major changes that will cause modification to those files.I think we are quite close.  The comments may seem larger than they really are, and I believe it won't take too much effort to get this ready to commit.- I found myself writing comments that I then realized where already part of the patch I had attached to the bugzilla entry.  Can you apply ""Patch to apply after this contribution gets accepted"" to your contribution?  I know that I originally said I'd handle that part, but that was because we were trying to squeeze things into Juno; since we missed Juno, we should do this right, and have the final solution ready before it is committed.- Lets add two new methods to IGDBHardwareAndOS.java (with javadoc):   void getResourceTypes(IDMContext dmc, DataRequestMonitor<String[]> rm);   void getResources(IDMContext dmc, String type, DataRequestMonitor<String[]> rm);- Implement those two methods in GDBHardwareAndOS.java to fetch the list of available resources (-info os), and to get the actual resource information for a specified type (-info-os <type>).  Then you can use that service to fetch the data, instead of sending MI commands directly from the view.- The current implementation is specific to a Linux target with a pre-defined set of resource type.  It would be better to ask GDB what the resources are and base the possible table content on that (using 'info-os' without any parameters).  This would not only allow us to handle any new resources added to GDB, but also different targets (Windows, different Linux, etc)  As the names returned by GDB are not so great ('smh' for example), I think we can keep using the name mapping you define in ResourceClassContributionItem, however, if a resource is not defined in that class we would then use whatever name GDB has sent.  I think this solution will not only be future-proof, but will simplify the implementation.- Please make sure there are no warnings in the new code - Say the view is displaying a resource type, it has the view menu showing.  If I select the 'gdb' node in the debug view (or the launch node, or unselect everything), the view menu disappers.  That is ok.  However, when I select a valid node in the debug view, the menu does not appear again, until I press refresh.- I think having a column waaaaaay on the right hand-side will cause the user to not notice that column.  This happens for Kernel modules.  Can we re-order the colums to have the big column the last one on the right?  Or can we make thatbig column less wide?- Have we already discussed that when selecting a new resource type, the view would not refresh automatically if it is empty?  I don't remember why we would have chosenthat option.  It does not seem user-friendly.- We will need to disable the view when using a session where GDB is too old. By using the IGDBHardwareAndOS service, fixing this will be easy, by simply having the service return an empty list of resources for older GDBs.  This will require a GDBHardwareAndOS_7_5 version of the service to ask GDB for -info-os, while the previous version simply returns an empty list."
55437,0,Change has been successfully merged into the git repository.
55442,1,Patch Set 1:Yes I have create the following reviews for the support f Luna* https://git.eclipse.org/r/#/c/25930/ (434057: Support for Luna M7 (update bootstrap.target)) mylyn/org.eclipse.mylyn.commons* https://git.eclipse.org/r/#/c/26322/ (434057: Support for Luna M7 (removeorg.eclipse.core.runtime.compatibility.auth)) mylyn/org.eclipse.mylyn.tasks* https://git.eclipse.org/r/#/c/26324/ (434057: Support for Luna M7 (add new method IServiceListener.triggerDiscovery)) mylyn/org.eclipse.mylyn.builds* this review. Sorry I did not add the reason for the change
55445,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5868/ : UNSTABLE
55447,0,Change has been successfully merged into the git repository.
55450,0,Change has been successfully cherry-picked as 0b6ed6f904dd99d67eca519d560797eb6b9b7e9e
55453,0,Change has been successfully merged into the git repository.
55456,0,Change has been successfully merged into the git repository.
55459,0,Change has been successfully merged into the git repository.
55468,0,Change has been successfully merged into the git repository.
55471,0,"Patch Set 3: Verified+1 Code-Review+2Thanks, Anamitra!"
55472,0,Change has been successfully merged into the git repository.
55479,0,Change has been successfully merged into the git repository.
55487,0,Change has been successfully merged into the git repository.
55489,1,"Patch Set 1:I have pushed a Gerrit review with further changes:https://git.eclipse.org/r/26695This integrates the SysML tests into the main ""Papyrus ALL Tests"" suite in the place in the sequence where they were formerly, before they were split off into a separate execution.  A system property supports excluding these tests.A new ""Papyrus Core Tests (no SysML)"" launch configuration runs this test suite as it was before, excluding the SysML tests, using that new system property.The ""Papyrus SysML Tests"" launch configuration still launches the SysML tests only.All three of the launch configurations now configure the HotSpot JVM thus:  - max 768 MB of object heap.  This lets the tests run comfortably but    still ensures that if memory leaking regresses dramatically, we may    find out via OutOfMemoryError in test execution  - tune the garbage collector to more aggressively evict soft reference    caches than it would by default.  The Common Navigator Framework    retains everything ever shown in a tree via soft references, which    makes it difficult to see whether memory is leaking when observing    the tests under a profiler.  This also, hopefully, makes the GC    overhead a bit smoother when executing the tests with a constrained    heap limitFinally, the Ant script that runs the tests in the build is updated to remove the separate execution of the SysML tests, because these are now integrated."
55490,1,"Patch Set 1:Nope, no dependencies. Although an OCL build is now available to unblock a test that is currently disabled, which is specifically a memory-leak test (with reference assertions)."
55491,0,Change has been successfully merged into the git repository.
55493,0,Change has been successfully merged into the git repository.
55499,0,Change has been successfully merged into the git repository.
55502,0,Change has been successfully merged into the git repository.
55505,0,Change has been successfully merged into the git repository.
55508,0,Change has been successfully merged into the git repository.
55511,0,Change has been successfully merged into the git repository.
55514,0,Change has been successfully merged into the git repository.
55517,0,Change has been successfully merged into the git repository.
55520,0,Change has been successfully merged into the git repository.
55524,0,Change has been successfully merged into the git repository.
55526,0,Patch Set 1: Verified+1 Code-Review+2Looks good. Approved.
55527,0,Change has been successfully cherry-picked as f3dbabad0ccdbf89fcdbabdb7a5cc4acd8f9cd8b
55528,0,Change has been successfully cherry-picked as 15e1dcf72dd8a8643bfeba8b06a9d4a54face1f0
55533,0,Change has been successfully merged into the git repository.
55534,0,Change has been successfully cherry-picked as db5d20bef05714f3a414a2cac68d700d18e95840
55543,0,Change has been successfully merged into the git repository.
55545,0,Change has been successfully merged into the git repository.
55556,0,Change has been successfully merged into the git repository.
55561,0,Change has been successfully merged into the git repository.
55564,0,Change has been successfully merged into the git repository.
55571,0,Change has been successfully merged into the git repository.
55576,0,Change has been successfully merged into the git repository.
55579,0,Change has been successfully merged into the git repository.
55588,0,Change has been successfully merged into the git repository.
55593,0,Change has been successfully merged into the git repository.
55597,0,Patch Set 1: Code-Review+2Nice solution :)
55599,0,Patch Set 3: Code-Review+2 Verified+1Finally... re-using the approvals from the first patch set... after different tests and a small improvement (create the tmp directory in case it doesn't exist). Verified that the idea works with the Gerrit verification job that has now a similar setting (in the job itself).
55600,0,Change has been successfully merged into the git repository.
55602,0,Change has been successfully merged into the git repository.
55608,0,Change has been successfully merged into the git repository.
55613,0,Change has been successfully rebased as e53ab4ed0c8b696659f084a451a8ab5714c26c7c
55616,0,Change has been successfully merged into the git repository.
55620,0,Patch Set 3: Verified+1 Code-Review+2Perfect!Thanks Benoit
55622,0,Change has been successfully pushed.
55635,0,Change has been successfully merged into the git repository.
55639,0,Change has been successfully cherry-picked as 0bfb818b8df865f7c1107652441ca11734d6fb3b
55644,0,Change has been successfully merged into the git repository.
55646,1,Patch Set 1: Verified+1 Code-Review-1My only concern is the fact that table based strategies are located in {o.e.p}.gmfdiag.common rather than in {o.e.p}.nattable.common. could you move this strategy to the right place?Thanks
55650,0,Change has been successfully merged into the git repository.
55659,0,Change has been successfully merged into the git repository.
55661,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
55663,0,Change has been successfully merged into the git repository.
55665,0,Change has been successfully merged into the git repository.
55672,0,Change has been successfully merged into the git repository.
55676,0,Change has been successfully merged into the git repository.
55679,0,Change has been successfully merged into the git repository.
55680,0,Change has been successfully cherry-picked as a7b73d776c3ed7445b02014556ed4cff16a4e76f
55693,0,Change has been successfully merged into the git repository.
55696,0,Change has been successfully merged into the git repository.
55699,0,Patch Set 1: Code-Review+1NICELY DUNNE SIR!
55704,0,Change has been successfully merged into the git repository.
55710,0,Change has been successfully merged into the git repository.
55716,0,Change has been successfully merged into the git repository.
55722,0,Change has been successfully merged into the git repository.
55731,0,Change has been successfully merged into the git repository.
55735,0,Change has been successfully merged into the git repository.
55740,0,Change has been successfully cherry-picked as d3b4dd6688788feb4dcfaf654a6c0df558b1d295
55741,0,Change has been successfully cherry-picked as e894a305a5ddffcb718dd6f02dd56f4e78d567b7
55746,0,Change has been successfully cherry-picked as 7c2c4625e8a46ca955f7a8a810695c0854b5b0aa
55750,0,Patch Set 1: Verified+1 Code-Review+2Looks good :-) Thanks for the help!
55751,0,Change has been successfully merged into the git repository.
55754,0,Change has been successfully cherry-picked as 839c53965db44d1f21b7c54ac69e2d6725e96b14
55759,0,Change has been successfully merged into the git repository.
55762,0,Change has been successfully merged into the git repository.
55765,0,Change has been successfully merged into the git repository.
55768,0,Change has been successfully merged into the git repository.
55776,0,Change has been successfully merged into the git repository.
55779,0,Change has been successfully merged into the git repository.
55782,0,Change has been successfully merged into the git repository.
55785,0,Change has been successfully merged into the git repository.
55788,0,"Patch Set 2: Verified+1 Code-Review+2Looks good to me, thanks Bartek!"
55792,0,Change has been successfully merged into the git repository.
55793,1,"Patch Set 5:There is a problem with an assertion which determines if a resource is controlled or not, which calls the org.eclipse.papyrus.infra.services.controlmode.util.ControlHelper.isRootControlledObject(EObject) method. It will be changed by a simple eResource() comparison assert."
55800,0,Change has been successfully pushed.
55805,0,Change has been successfully merged into the git repository.
55808,0,Patch Set 1:(4 comments)Thanks for the comments!
55811,0,Change has been successfully cherry-picked as 4e8d219d8a9aba89135bf732cbd5370eea6637c8
55815,0,"Patch Set 2:> A DeferredContentProvider (implements ILazyContentProvider) might be a solution.>> I will give it a try in the next days.That would be great. Thanks, Olav!"
55822,0,Change has been successfully merged into the git repository.
55828,0,Change has been successfully cherry-picked as b641c4cd46b74422ce7c8cec14ee9b5336dbda59
55829,0,Change has been successfully cherry-picked as ebfe04d4b93e7d1a1606982f80952bcb0f955017
55835,0,Change has been successfully merged into the git repository.
55837,0,"Patch Set 1: Verified+1 Code-Review+2Few issues with the wording and formatting, but a good start IMO. Submitting..."
55838,0,Change has been successfully merged into the git repository.
55847,0,Change has been successfully merged into the git repository.
55849,0,"Patch Set 2: Verified+1 Code-Review-1(1 comment)Hi,A generated not has been explicitley added in the generated code in order to detect class or meta classes. it has been removed. Could you  add it.Thanks,"
55853,0,Change has been successfully cherry-picked as a64653e681ca404574bb3109e04bf84dcdd53b44
55866,0,Change has been successfully merged into the git repository.
55871,1,"Patch Set 2:(4 comments)Sorry for nitpicking after such a long wait, but four files are completely different from their previous versions because the line endings are changed.In my workspace, the default line ending is set for this project as always be Unix-style, and as this setting is also shared via Git, please be mindful of that.Thanks."
55874,0,Patch Set 1: Verified+1 Code-Review+2Thanks Denis!
55875,0,Change has been successfully merged into the git repository.
55878,0,Change has been successfully merged into the git repository.
55881,0,Change has been successfully merged into the git repository.
55884,0,Change has been successfully merged into the git repository.
55887,0,Change has been successfully merged into the git repository.
55890,0,Change has been successfully merged into the git repository.
55893,0,Change has been successfully cherry-picked as 5ac7b4a6ac968c5e8c54b5c5bef243a43912f867
55896,0,Change has been successfully merged into the git repository.
55897,0,Change has been successfully cherry-picked as e26b96caadf5548db461ba5292dfb4a40747c060
55908,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/617/ : UNSTABLE
55909,0,"Patch Set 1:Hi Jeff. I'm excited to see this going into master. Is this change targeted for Luna?I was thinking the doc part could come in a separate patch. I'm not sure it's a good idea to duplicate all this stuff, it's really big. Would it not be possible to include the regular CDT doc in addition to only the documentation specific to the RCP in an additional doc plugin?"
55910,0,"Patch Set 1:> Hi Jeff. I'm excited to see this going into master. Is this > change targeted for Luna?Yes, I had permission to get this in for M7 from Doug and M7 is feature freeze.> I was thinking the doc part could come in a separate patch. > I'm not sure it's a good idea to duplicate all this stuff, > it's really big. Would it not be possible to include the> regular CDT doc in addition to only the documentation  > specific to the RCP in an additional doc plugin?Unfortunately, there were quite a number of changes required to the CDT docs as certain items have been removed and I needed to emphasize where things were done automatically on behalf of the end-user.  It's not the most ideal solution ever, but it was the best I could come up with.  The audience doesn't want to learn too much about Eclipse, CDT, etc... I am working on updating this patch as I hit the send to gerrit a bit too quick.  I am adding the script stuff so it can run from the M7 CPP EPP.  I hope to post it tomorrow."
55911,0,Change has been successfully cherry-picked as 6acb6dbc70ea67cbea3467709f41c4ffad9288c0
55912,0,Change has been successfully cherry-picked as 6a2ada1593b0fbaa5dc646fe07ecdc46f8caeb4a
55918,0,Change has been successfully merged into the git repository.
55924,0,Change has been successfully merged into the git repository.
55928,0,Change has been successfully cherry-picked as a64af6d3367f65caa694fb05b4af430536f40b8a
55935,0,Change has been successfully cherry-picked as 811fe0d017e479d2091663b24d7a6d46dcf5d7a9
55939,0,Patch Set 3: Verified+1 Code-Review+2(3 comments)Patch is good if we don't consider trace folders. I'll push another patch to fix the folder issues (see comments).
55940,0,"Patch Set 3: Verified+1 Code-Review+2Thanks, I really wanted this in before API freeze. It doesn't change anything in the API itself, but conceptually, it changes a lot!"
55948,0,Change has been successfully cherry-picked as 1ebf3f6a81c66780db185c1afb10f11b3553537f
55950,0,Change has been successfully merged into the git repository.
55954,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/525/ : UNSTABLE
55955,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/526/ : UNSTABLE
55965,0,Change has been successfully rebased as 54be07c32041fcfc39fb56a90ec9c3bf0e66c142
55968,0,Change has been successfully merged into the git repository.
55971,0,Change has been successfully merged into the git repository.
55974,0,Change has been successfully merged into the git repository.
55979,0,Change has been successfully merged into the git repository.
55985,1,"Patch Set 6: Code-Review+1OK.  So, I determined that the problem with Patch Set #5 was interaction between UML2 and CDO.  The root cause was that computing cross-references ""intrinsically"" using eCrossReferences() triggered the CacheAdapter in a UML Property element, which uses the inverse cross-referencing capability to compute NamedElement::clientDependency (which used to be persistent in UML 2.4 but now isn't in UML 2.5).  This also triggered loading of objects from the CDO repository.The end result was that a Diagram in a *.notation resource, still only partially loaded from the repository (it didn't have its contained objects, yet) had the CacheAdapter attached and the CacheAdapter didn't find any contents or cross-references because the Diagram hadn't finished loading.  Later, when the Diagram's CDOLegacyAdapter got around to finishing loading, the CacheAdapter was unaware of new contained objects (Shapes in the persistedChildren containment reference) being added, because they are added without notifications (the assumption being that nothing needs to be notified because the object doesn't properly exist, yet; a reasonable assumption under normal circumstances).  Therefore, the CacheAdapter is never propagated to the rest of the contents of the diagram, so any code that needs to find diagram views of UML model elements doesn't find them, and Papyrus on CDO is basically broken.Patch Set #6 fixes this problem by reverting to the original design of the ECrossReferenceAdapter's getCrossReferences() method, which computes the cross-references ""extrinsically"".  To fix the memory leak (this bug) I override useIsSet() in the feature-iterator to basically re-implement the special case of eCrossReferences() from ENamedElementImpl.  It's unfortunate that this hard-codes an Ecore special case, but I don't have a better fix that doesn't break some already established clients.  Note that there isn't any feasible change that I could make in CDO to help adapters like the ECrossReferenceAdapter in the object-loading procedure, and UML isn't the only model out there that uses the CacheAdapter (UML2 SDK offers CacheAdapter as a genmodel extension for any model that it generates to use)."
55986,0,"Patch Set 6:The instanceof test is done in each call, but the boolean value can be computed once before creating the feature iterator."
55987,0,"Patch Set 6: -Code-ReviewIndeed, that's a good point Ed.  I'll have a look at your latest proposal from the Bugzilla patch (I'm not exactly thrilled with the special case, here, myself)."
55990,1,"Patch Set 7: Code-Review+1This integrates the new cross-reference iterator filtering mechanism into the ECrossReferenceAdapter.  For models that already have more highly customized cross-reference list iterators that do not extend the EContentsEList::FeatureIteratorImpl (and thus do not implement the new Filterable interface), the cross-referencer provides the same external filtering as in Patch Set 5.  This does result in derived references being computed by the underlying iterator, but it should be an exceedingly rare case.The JUnit tests are significantly overhauled, using now a generated model with some hand-written instrumentation for test assertions:  * added assertions that derived features are not computed    when the cross-referencer uses the intrinsic filtering    capability of the cross-references iterator  * added assertions that derived features *are* calculated    when the model provides a non=Filterable cross-reference    iterator  * the tests still assert proper resolving/non-resolving    behaviour of the cross-referencer, but now also for    both of the Filterable and non-Filterable iterator    casesThis new patch set does not cause any problems for Papyrus's UML modelling with CDO repositories."
55992,0,Patch Set 8: Verified+1 Code-Review+2Looks good. :-)
55993,0,Change has been successfully merged into the git repository.
55995,1,"Patch Set 5: Code-Review-1Ugh.  Patch set #5 still has problems.  It has some kind of bad interaction with one or both of the UML metamodel and the GMF Notation model.  I have another test suite (for CDO integration in Papyrus) that has test failures with this patch, caused by two problems:  * ConcurrentModificationException when iterating the resources of a    resource-set and unloading them (the ECrossReferenceAdapter, as    extended by UML's CacheAdapter, seems to cause proxy resolution    that adds new resources to the resource-set while unloading    resources!)  * cross-references from the GMF notation views in a diagram to the    UML model elements that they visualize are not returned by the    ECrossReferenceAdapter::getNonNavigableInverseReferences()    API"
55998,0,Change has been successfully cherry-picked as 4fe89397754a363efdda8898d0ac3e5610b03d59
56002,0,Change has been successfully merged into the git repository.
56007,0,Change has been successfully cherry-picked as 46dc0a81aef41d0895418ad859bc3c9c3ed2a25c
56011,0,Change has been successfully merged into the git repository.
56016,0,Change has been successfully merged into the git repository.
56019,0,Change has been successfully merged into the git repository.
56024,0,Change has been successfully merged into the git repository.
56025,0,Change has been successfully cherry-picked as 42ac1a87fd52ff68b5b46be4994d81d51d37d4f3
56028,0,Change has been successfully cherry-picked as c1407f8069ced270b96a3b154759e752e25f4db2
56032,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
56034,0,Change has been successfully merged into the git repository.
56036,0,Patch Set 3:Build SUCCESSFUL. Now starting integration tests...
56039,0,Change has been successfully merged into the git repository.
56041,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
56043,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
56049,0,Change has been successfully cherry-picked as 13626ab74c72346f5361e9168f8a9e46dedc2425
56051,0,Patch Set 1: Verified+1 Code-Review+2Looks good to me.Thanks
56056,0,Change has been successfully merged into the git repository.
56061,0,Change has been successfully cherry-picked as 623982979af67709387f831295aa033e6682ebd5
56077,0,Change has been successfully merged into the git repository.
56079,0,Change has been successfully cherry-picked as be66d85cd650283491850db81356bc757a70643f
56084,0,Change has been successfully merged into the git repository.
56086,1,"Patch Set 1: Verified-1 Code-Review-1You forget to update the method org.eclipse.emf.compare.ide.ui.internal.structuremergeviewer.actions.MergeRunnableImpl.mergeAll(Collection<? extends Diff>, boolean, Registry). This make me think that we may extract the computation of requires/unmergeable in an helper object (or static method). Don't you think?"
56091,0,Change has been successfully merged into the git repository.
56099,0,Change has been successfully merged into the git repository.
56102,0,Change has been successfully merged into the git repository.
56106,0,Change has been successfully merged into the git repository.
56115,0,Change has been successfully merged into the git repository.
56122,0,Change has been successfully merged into the git repository.
56137,0,Change has been successfully merged into the git repository.
56141,0,Change has been successfully merged into the git repository.
56144,0,Change has been successfully merged into the git repository.
56147,0,Patch Set 3: Verified+1 Code-Review+2Thank you for your patch!
56148,0,Change has been successfully merged into the git repository.
56155,0,Change has been successfully merged into the git repository.
56157,0,Change has been successfully merged into the git repository.
56165,0,Change has been successfully merged into the git repository.
56169,0,Change has been successfully merged into the git repository.
56174,0,Change has been successfully merged into the git repository.
56180,0,Change has been successfully cherry-picked as b616bcf890e951f6443b4390187a9dcbc40c04f1
56183,0,Change has been successfully merged into the git repository.
56186,0,Change has been successfully merged into the git repository.
56189,0,Change has been successfully merged into the git repository.
56197,0,Change has been successfully merged into the git repository.
56205,0,Change has been successfully merged into the git repository.
56209,0,Change has been successfully cherry-picked as 51741ae9ac93f4407660f31b2b63664d4f5e4380
56212,0,Change has been successfully merged into the git repository.
56218,0,Change has been successfully merged into the git repository.
56224,0,Change has been successfully merged into the git repository.
56235,1,"Patch Set 5:========================================Add events from an analysis to a session========================================From the Control view, once we create a session, with a right click on the session, we would have access to a new option: Enable event (from analyses). At the session level, that would spawn a default channel. Once clicked, we would have a list of the analyses with their needed events dialog. Optional priority events could be selected/unselected opposed to mandatory events that would be selected by default.Finally, the user makes his choice and the session would be updated.* I limited myself to events but it could be anything else since the requirements are quite generic. For instance, we could have the same thing for context.======================================Generate a session configuration file======================================A right click on a session would spawn a new option: Generate session configuration. The user would have to provide a path to where the session file would be saved."
56236,1,Patch Set 5:Sorry for the previous weird formatting. There are two sections. The first: Adding events to a session from analyses. The second: Generate a session configuration file from a session.
56239,0,Change has been successfully cherry-picked as 3030a619839bc55c64f3ad3792de616fce0b6014
56258,0,Patch Set 16: Code-Review+2This makes me realize... could AnalysisModule's be AutoCloseable? Side-quest added to quest log!
56261,0,"Patch Set 15: Code-Review+1Just a note about static initializers (both {} blocks and static declarations). Be careful not to use classes that depend, directly or indirectly, on that class itself. At run-time, the class loader would blow up.In the case here it looks fine, just something to keep in mind."
56273,0,Change has been successfully merged into the git repository.
56279,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/521/ : UNSTABLE
56280,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/522/ : UNSTABLE
56281,1,Patch Set 1: Verified+1When we apply this review we fix the failure of  org.eclipse.mylyn.bugzilla.rest.tests.tck.ValidationTest.testValidateCredentials. The service config say that the Bugzilla REST version is 4.5.4 but http://mylyn.org/bugzilla-rest-trunk/ returns 4.5.4+The other failure is trac related
56283,0,Change has been successfully merged into the git repository.
56286,1,"Patch Set 1: Code-Review+1A bandaid on a gun wound ;) There is no synchronization between the rank and the location in the class. Anyone is free to change one without the other. What can possibly go wrong.Even if setRank/getRank/setLocation/getLocation were all synchronized, if two threads try to call setRank/setLocation at the same time, you can end up in an inconsistent state.This patch is still an improvement, I guess."
56287,0,Patch Set 1: Verified+1 Code-Review+2That's the nicest review I ever got!
56288,0,Change has been successfully cherry-picked as 51faca68142fa09ffb129dcb0571d8044a2fa302
56290,0,Patch Set 1: Code-Review-1(8 comments)First pass... I'm feeling like a street walking cheetah with a heart full of napalm
56292,0,"Patch Set 1:(7 comments)Thanks for the comments. There's indeed a bunch of cleanups that could be done. We'll get to it, one step at a time ;)"
56296,0,Change has been successfully cherry-picked as 0554e044e25b03b3dae663f012bea9db7419084e
56299,1,Patch Set 2:> How do we remember to clean up next time?Open a bug! :)
56309,0,Change has been successfully merged into the git repository.
56315,1,"Patch Set 11: Code-Review-1(13 comments)Sorry, I happened to stumble on this ;)"
56328,0,Change has been successfully cherry-picked as c122e48c48dfa1f66b810e863210f1bc7048dca5
56334,0,"Patch Set 2:(2 comments)Small comments for the next time you have to push this.If an upcoming patch will generate the session configuration file, then it's not necessary to add it here as a unit test, though unit testing this functionnality somehow will be important somewhere ;-)Also, if you could plan some time to add the documentation on your new features (towards the end when the work is close to approval), that would be really appreciated. Documentation for the analysis requirement should go in the developer documentation in org.eclipse.linuxtools.tmf.help/doc/Developer-guide.mediawiki in the ""Analysis framework"" section (end of the file)"
56337,1,"Patch Set 3: Code-Review-1(3 comments)Please rebase this patch to master, the memory analysis has been moved to ust.core plug-in.I generated the XML with the requirements. It works well, though I had some problem loading it in lttng, but I think it's a problem on the lttng side. I could load it once, then it didn't work anymore."
56339,0,Patch Set 14: Code-Review+1Good job!
56344,0,"Patch Set 3: Code-Review+2This looks fine.   All ECF filetransfer tests continue to pass with default max-age=0.  Once deployed, I recommend that use of max-age > 0 be tested...particularly in proxied environments to understand app-level behavior."
56345,0,"Patch Set 3: Verified+1This looks fine.   All ECF filetransfer tests continue to pass with default max-age=0.  Once deployed, I recommend that use of max-age > 0 be tested...particularly in proxied environments to understand app-level behavior."
56346,0,Change has been successfully merged into the git repository.
56347,0,"Patch Set 3:I've tested this with a proxy using both max-age <0 and max-age >0. The former results in the header not being appended, the latter sets it through as expected. If the age is > max-age, then the upstream server is hit; if it is < max-age then the server does not proxy it through. Tests for this may be problematic.I would recommend consideration is given to EPP packages to set this to a small non-zero amount (say, 1h). That way at least some benefit of caching is seen on upstream servers. Intelligent caches (like Varnish) can then refresh the content in the background on access."
56348,1,"Patch Set 3:>I would recommend consideration is given to EPP packages to >set >this to a small non-zero amount (say, 1h). >That way at least some benefit of caching is seen on upstream >servers. >Intelligent caches >(like Varnish) can then refresh the >content in the background on access.You will have to approach the EPP packages...and/or p2 team...directly about this.   I don't feel comfortable changing the default without having some experience and testing in actual deployed usage (e.g. in many proxied, non-proxied network environments, etc)."
56349,0,"Patch Set 3:Oh sure, that's a separate issue that I'll follow up with them :)"
56355,0,Change has been successfully cherry-picked as c3a8495e6d61655d65fe604d09081d7dee9634f9
56356,0,Change has been successfully cherry-picked as ddb8ab8708a57dba8e7e9c365f42c7f5683c203c
56358,0,Patch Set 8: Code-Review+2Looks good!Shall I commit or do you have your account yet?
56364,0,Patch Set 5:(7 comments)Good comments !The updates are now reflected on patchset 8
56369,1,"Patch Set 4:(15 comments)The comments are now addressed in patchset 5, The solution is now simplified as per the good suggestion from Marc to use a Memory Space service method to resolve the memory space from a string expression vs the former solution which needed to expose the IMemoryBlockRetrieval interface."
56372,0,Patch Set 3:Anders Dahlberg added as contributor for this change in each of the affected files Thanks Anders !
56381,0,Patch Set 4:(9 comments)Comments from the awesome J. Desfossez.
56382,1,"Patch Set 7: Code-Review-1(104 comments)The missing @author / add empty line comments apply to many files, just got bored of writing it after a while ;)Manfist in lttng2.core.tests should export all its packages.I feel like many populate() methods could be replaced by constructors instead. It'd be more straightforward, and allow using final fields.See if getBytes() shouldn't be serialize() instead.If you internalize plugins correctly, you won't need any @since annotations."
56404,1,"Patch Set 13: Code-Review-1(1 comment)One more comment, then about the ""size"" discussion:- There are still some size() methods with no comments whatsoever.- I don't like size(), it's easy to confuse with Collections.size(). For public methods in specific objects, you could have getPacketSize(), getResponseSize() etc. IFixedSize is unnecessary.- Having some private methods where size() actually means something different (only first packet) is crazy design. You know today, but 2 months from now nobody will remember, and we'll have lots of fun debugging size problems. Specific methods names, like sizeOfFirstPacket() etc. would be safer.- If there is no interface, then the methods can be static (if the size is constant, of course). If it's static, it should be a public static final int, not a method. Methods should be only where the size can vary from one object to another."
56406,1,"Patch Set 10: Code-Review-1(26 comments)Second pass of comments.In general:- See if we can make IRelaydConnector AutoCloseable- Use final fields, instead of constructor call immediately followed by setters. There's a couple instances of that left.- Perhaps the various size() methods could be public static final values, already calculated so they don't get recalculated at run-time:  /* 2x int + 2x long */  public static final int SIZE = 24;"
56409,0,"Patch Set 9:Ok, I don't like the repetition in every constructor, suggestions are welcome. Happy easter all."
56416,0,Change has been successfully cherry-picked as afe42d45e4465a5afc3e92c97329d71c46443932
56428,0,Change has been successfully merged into the git repository.
56433,0,Change has been successfully merged into the git repository.
56434,0,Change has been successfully cherry-picked as 3eb8b960a89c354c784da0f4e7bb1e76d9f54518
56438,0,Change has been successfully merged into the git repository.
56443,0,Change has been successfully cherry-picked as b6ef18973d38aaf2be02786e30b627c1da07c86b
56445,0,Patch Set 2: Verified+1 Code-Review+1(2 comments)Nice!
56446,0,"Patch Set 2:(2 comments)Thanks for the review, Marc. Will push a slightly updated patch."
56449,0,Change has been successfully merged into the git repository.
56452,0,Change has been successfully merged into the git repository.
56457,1,"Patch Set 1:I thought I had checked for that (duplicates), but apparently I was too quick and looked in the wrong places. I'll propose a new version as soon as I can."
56459,0,Change has been successfully merged into the git repository.
56461,1,"Patch Set 2: Verified+1 Code-Review+2Overall it looks good to me to be integrated though the task is not completely ""done"". Here we only rely on this mechanism to fix some recently introduced regression but are not using it for all of our child extensions needs.I had concerns about the ""ResourceLocator"" extension mechanism which allows an adopter to override labels or images but looking closer, with this change the resource locator returned by the AdapterFactories is now the ChildCreationExtenderManager with SiriusEditPlugin.INSTANCE always being the primary resource locator and this one provides the extension point.To generalize it we will need - to  enable it for all of the Sirius genmodels and not only viewpoint and diagram.- to remove all the collectChildDescriptors API we introduced, at least :DialectUIManager, RepresentationTemplateEditManager and FeatureExtensionsUIManagerShould we track a bugzilla for that ? I'm reluctant to postpone this as that would make us stop across the bridge."
56465,0,Change has been successfully merged into the git repository.
56466,0,Change has been successfully cherry-picked as 2aa81d710029a11d7374a427b102022213375e83
56471,1,"Patch Set 1: Code-Review+2(3 comments)@Patrick: I will submit this now, as we want to have this provider for a quick demo tonight. There is quite a bit to be refactored. Can you please open a bug for this and schedule the refactoring. Thanks."
56472,0,Change has been successfully merged into the git repository.
56475,0,Change has been successfully merged into the git repository.
56478,0,Change has been successfully cherry-picked as 02fd5b69f83bc6fe9aec7991266b836d3cc6d66e
56480,0,Change has been successfully merged into the git repository.
56486,0,Change has been successfully cherry-picked as 72ffcd298345f01fc4714cffc43ba195fee8cb0d
56489,0,Change has been successfully cherry-picked as ababfa2f72fc62f940b7215ba92822704bc8d613
56492,0,Patch Set 5: Verified+1 Code-Review+2Looks good. Approved.
56496,0,Change has been successfully cherry-picked as b49974f099c89f5ddc4c6f5b11c8f4db4c820459
56499,0,Change has been successfully merged into the git repository.
56502,0,Change has been successfully merged into the git repository.
56506,0,Change has been successfully merged into the git repository.
56508,0,Patch Set 1: Verified+1 Code-Review+2Looks good. Approved.
56509,0,Change has been successfully cherry-picked as 8c7ff68fd027ea1dc6983f625c0db4f3ebca04ce
56512,0,Patch Set 4:(7 comments)thanks
56516,0,"Patch Set 1:I did not get to fixing the junits. Florian, I think performance is in your interests, please take a look at this."
56517,1,"Patch Set 1:It's not just the JUnit tests, it doesn't even compile ;)  And there are conflicts with the latest master, so it's a bit hard to pull as is."
56520,0,Change has been successfully cherry-picked as 819af7960dc2ad70bfebbb53e91de5980f857225
56525,1,"Patch Set 17:(9 comments)Thanks for the comments. Get ready for the horror that is structdefinition, as it is the scope of its children, it needs to be declared before its children. To make a struct immutable, we need to declare the children first... ugh"
56526,0,Patch Set 17:(31 comments)Rest of the comments. This is getting good!
56534,0,"Patch Set 22:I am currently working on the test cases, enjoy your poutine"
56543,0,Patch Set 19: Code-Review-1(12 comments)Reviewed up to ArrayDeclaration (again!)
56550,0,"Patch Set 23: Verified+1 Code-Review+2(1 comment)Alright chums, let's do this!"
56559,0,Patch Set 13: Code-Review+2If it builds let's get this in!
56561,0,"Patch Set 4: Code-Review+1The patch introduced a warning: the Javadoc for a deprecated method was referring to a method that was removed. I just removed the method altogether.I'm all for code removal! In my test (loading from scratch a 50 MB trace), it goes from ~18s on average to 19.5s. Not a big change, but it may affect the high-level scaling more."
56563,0,"Patch Set 11: Code-Review-1(2 comments)Looks like a good idea, but some minor details"
56566,0,Patch Set 12: Code-Review+2Method throws a warning? Remove the method! I like that!
56571,0,Change has been successfully cherry-picked as a04ee121e1c9c47da7a9b6c4242fd1edf310b314
56576,0,Change has been successfully merged into the git repository.
56582,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5816/ : UNSTABLE
56584,0,Change has been successfully merged into the git repository.
56596,0,Change has been successfully merged into the git repository.
56599,0,Patch Set 2: Code-Review+2 Verified+1Looks great. Thanks!
56600,0,Change has been successfully merged into the git repository.
56603,0,Change has been successfully merged into the git repository.
56606,0,Change has been successfully merged into the git repository.
56608,0,"Patch Set 1: Verified+1 Code-Review+2Nice, thanks."
56609,0,Change has been successfully merged into the git repository.
56614,0,Change has been successfully merged into the git repository.
56628,0,Change has been successfully merged into the git repository.
56632,0,Change has been successfully merged into the git repository.
56638,0,Change has been successfully pushed.
56645,0,Change has been successfully merged into the git repository.
56651,0,Change has been successfully merged into the git repository.
56656,0,Change has been successfully rebased as 1261ae19efebeaa6cc25f610559a7f5e4bf5e0a6
56661,0,"Patch Set 2:This change is based on patch set 1 and tries to improve handling multiple repositories.When there are multiple repositories that need a clean working copy before a successful pull can be performed, the dialog to stash/reset/etc. for the repositories are now opened one after another, instead of all at the same time.The pull result dialog now waits for all pulls to finish (including those that were retried with a cleaned working copy), to present the results for all repositories in one dialog."
56665,0,"Patch Set 3: Code-Review-1(2 comments)Just two comments left, after that it's good to go IMO."
56670,0,Change has been successfully merged into the git repository.
56671,0,Patch Set 7:Thanks for improving this change!
56672,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5474/ : UNSTABLE
56673,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5478/ : UNSTABLE
56679,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5756/ : UNSTABLE
56686,0,Change has been successfully merged into the git repository.
56689,1,"Patch Set 3:Patchsets 2 and 3 are the same thing, forgot to rebase before pushing, my bad."
56693,1,"Patch Set 4:Good point, we don't have any .api_filters now, but we might add some in the future. New version only copies the files ending in "".prefs""Imo, the feature projects don't matter as much. Those settings don't really change. And it was nice to not have to list all the directories in the script. If we add new code projects, they get handled automatically.I did think about ctf.parser, that one has its own very permissive settings (to cope with the ugly ugly code that Antlr generates), so I think it's better to leave it alone..."
56695,0,Change has been successfully cherry-picked as e3c581edb82faab4faec1f1e5f6c052cc30e3bb9
56698,0,Patch Set 3: Verified+1 Code-Review+2I couldn't test it on Windows but I trust that you did. Works on Mac (although it wouldn't throw an exception).
56700,1,Patch Set 2: Code-Review-1The change makes sense. I'll have to test it on Windows to reproduce the bug. I think SelectTracesWizardPage.performFinish needs the same fix.
56702,0,Change has been successfully cherry-picked as 76b0b680a31de0648ac74b37f5f6c7c7e3a69f46
56705,0,Change has been successfully cherry-picked as 1e4eb44d85745f9d122d491685b9c38f18b4a7c9
56711,1,Patch Set 7:I've changed it so either SC_CREATED and SC_MOVED_TEMPORARILY are accepted in runBuild validation regardless of server version to avoid we don't have to deal with parsing version numbers with letters.
56719,1,"Patch Set 8:Steffen, can you review this please? This will fix some failing tests."
56722,0,Change has been successfully merged into the git repository.
56723,0,Patch Set 8:Thanks!
56725,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-builds/54/ : UNSTABLE
56732,0,Change has been successfully merged into the git repository.
56736,0,Patch Set 3: Verified+1 Code-Review+2The changes look good and everything compiles.
56737,0,Change has been successfully cherry-picked as e3ab383ba5db1a8f0994bf2f3d2ca3a1e235b1e5
56745,0,Change has been successfully merged into the git repository.
56751,0,Change has been successfully pushed.
56753,0,Patch Set 3:I only fixed an unused import (I'm pushing the revised patchset).  I see that tests for this new feature are in a further commit :)
56755,0,Change has been successfully pushed.
56760,0,Change has been successfully pushed.
56765,1,"Patch Set 3:I modified the test a little bit, to make sure that we are testing the right label provider.  I'll push a revised patch set.I think there is some code duplication in the DSL, but that is not strictly related to this change.  I opened a bug for that:  https://bugs.eclipse.org/bugs/show_bug.cgi?id=433257"
56770,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/emf-parsley/job/emf-parsley-gerrit/122/ : UNSTABLE
56771,0,Change has been successfully pushed.
56773,0,Change has been successfully pushed.
56774,1,"Patch Set 3:The new images are really too big (do you have a computer with a crazy resolution? ;)I resized them, and I also modified some parts in the new documentation parts, please check them."
56779,0,Change has been successfully pushed.
56781,1,Patch Set 1:Most files come with the wrong line-endings (see the \r in the diffs in gerrit); please make sure to use the right setting in git :)
56783,1,Patch Set 2:There are many typos and wrong descriptions; I'll push a revised patchset
56789,0,Change has been successfully merged into the git repository.
56791,1,Patch Set 2:the problem is due to the table height returned by GTK3 is 0. The solution implemented here is to calculate height based on the font height and number of items in case the table height is 0
56798,1,Patch Set 6: Verified+1 Code-Review+2It would be nice to see why native size is zero but this is valid work around for the problem so let's get it in ASAP.
56799,0,Change has been successfully merged into the git repository.
56803,0,Change has been successfully cherry-picked as 185074996d9538b91fbf2fb2ff398637fbf4c7b1
56807,0,Change has been successfully merged into the git repository.
56815,0,Change has been successfully merged into the git repository.
56819,0,Change has been successfully merged into the git repository.
56825,0,Change has been successfully merged into the git repository.
56831,0,Change has been successfully merged into the git repository.
56838,0,Change has been successfully pushed.
56846,1,"Patch Set 4:Thanks for giving this a look-over Daniel.  I introduced a new interface for a few reasons.First, I didn't want to filter getChildNodes() directly so as to maintain the original DOM.  The interface instead allows navigators of the DOM, such as the CSSEngine, to decide to use visibility as a shortcut.  This is useful for the CSS Spy.Second, a developer should be able to query the CSSEngine for the computed styles of an invisible widget.  I'm not sure that it's explicitly stated, but it would seem to be a reasonable expectation that if P = parent of C, then C should be a child of P.Third, I thought it might be a better pattern than cause CSSStylableElement to implement a getVisibleChildNodes(), and implement a default in ElementAdapter.  We may well have other document models that don't have a concept of visibility.I initially tried implementing this as providing an isVisible(child) method to act as a filter, but abandoned it as implementing isVisible() is particularly complicated on CTabFolder.  A CTF's children includes internal Composites and ToolBars that we can't reach programmatically, and so we can't determine their purpose.  Some of the composites exist to hold the CTabItem contents, but we can't tell which CTI.  So CTabFolderElement#getVisibleChildNodes() returns the CTabItem's control instead (perhaps it should walk and add the parents until it reaches the CTF too).  You'll also notice that getVisibleChildNodes() also returns all the CTabItem instances as they represent the tab information and they need to be exposed for tab-item properties.  Trying to shoehorn all of this into isVisible() was painful."
56847,0,Patch Set 4:Thanks for explanations. So the patch looks fine for me. Let's wait for the Paul's commentsDaniel
56853,0,Change has been successfully merged into the git repository.
56858,0,Change has been successfully cherry-picked as 1c6b74ae404d237d4652e3f28d04c75de349bc1b
56861,0,"Patch Set 2:Hmmm You know what, this would require removing the dependency of the kernel analysis module and state provider to the LttngKernelTrace, which is a good thing since the appliesToTraceType and the canExecute method should take care of telling whether the analysis can be run on a trace and if a custom XML trace can run the analysis, for instance, why not!But that widens the scope of this patch, so either I push this and do the lttng2.kernel.core.test and all the rest in another patch, or require you or someone else to do a whole new review of this patch for something that may cause some discussions... what do you think?"
56866,0,Change has been successfully cherry-picked as f37a389a5f2a88be2c1db319fb827d0711a2a4c4
56876,1,"Patch Set 2: Code-Review-1 IP-Clean+1It fixes the bug. The problem I have is- When in High Contrast theme, one can no longer set the  tab font and colors (those bugs which got fixed are back).  It might be useful for the user to be able to change those  when using High Contrast mode.- The theme name must be in title style i.e. 'High Contrast'.- For the user it's hard to understand why he can't switch  to another theme (I could live with that restriction)."
56879,0,Change has been successfully merged into the git repository.
56885,0,"Patch Set 1:Initially I was planning to reuse the 'Dark' theme for it, but there are different variations of the high contrast modes (at least on my Windows 7) and the separate style sheet seems to be the best option according to methanks,Daniel"
56887,1,"Patch Set 1:Ups, I skipped the preference page. I will disable the CSS combo in such case. I will update the patch in the momentDaniel"
56889,1,"Patch Set 6: Verified-1 Code-Review-2Oh dear, I copied the wrong change set id.  Sorry."
56891,1,"Patch Set 3:If you agree, I would like to leave the themes combo disabled in the high contrast mode in order to simplify the implementationDaniel"
56892,1,Patch Set 8: Verified+1Brian please remove your -2. This blocks this change.
56894,0,Patch Set 8:(1 comment)Code looks fine to me but I'm wondering why we only allow use of the high contrast theme if the OS is in high-contrast mode...
56895,0,"Patch Set 8:It was implemented in this way in order to simplify the implementation. Since the high contrast mode is the special one, I think we can use the special CSS theme for it (based on the 'classic' theme that works fine with the different variations of the high contrast modes)Daniel"
56899,1,Patch Set 8: Code-Review-1You need to supply a High Contrast theme for GTK.  I'm indifferent to how you do it.
56906,0,Change has been successfully merged into the git repository.
56909,0,Change has been successfully merged into the git repository.
56915,0,Change has been successfully merged into the git repository.
56916,0,Change has been successfully cherry-picked as 9a349fc86097db661bf498e8896eb3a14be1bc4a
56923,0,"Patch Set 2:(1 comment)I'm looking for the best way to do this. Supplementary files path is decided by UI classes and the full path is saved in a persistent property, that's all good if you want to access it, but to get to the resource itself, it's kind of twisted, as you'll see in the patch..."
56931,0,"Patch Set 3: Verified+1 Code-Review+2oh right, I forgot about this patch!"
56936,1,"Patch Set 1:Hi Paul,Initially I tried to fix this bug in MenuManger but I didn't manage to implement reliable fix. In the patch I provide a simple check in ObjectActionContributor.Alternatively this duplication check can be added directly to the PluginActionBuilder, but I am not sure if it can cause some unwanted side effects."
56938,1,Patch Set 1: Code-Review-1Unfortunately this is the wrong place to fix it.  We cannot guarantee that the IDs are unique.
56941,0,Change has been successfully merged into the git repository.
56944,0,Change has been successfully rebased as 99755ac4b70833e1845258f451d00c69bdafafb6
56951,0,Change has been successfully merged into the git repository.
56955,0,Change has been successfully merged into the git repository.
56958,0,Change has been successfully cherry-picked as 3aaff940b63d184248efa2d4af8a4e0313b18845
56963,0,Change has been successfully merged into the git repository.
56968,0,Change has been successfully cherry-picked as 6b9c08235c58e071f72b849a43aab2184fbf13bd
56970,0,Change has been successfully cherry-picked as a87a0c67e034270fc8f0f29cab7a854e81ef23ed
56975,0,Change has been successfully merged into the git repository.
56983,0,Change has been successfully merged into the git repository.
56985,1,"Patch Set 1:While we're at it, the DomEventPatch is pretty useless as a separate file. Could you inline the code into DomEvent.js?"
56988,0,Change has been successfully merged into the git repository.
56993,0,Change has been successfully rebased as 47757adb14beb237498995dbec32bd664406dcf5
57003,0,Change has been successfully rebased as f7d32c1efdaa1bdca9873004537170353904324e
57010,0,Change has been successfully rebased as a7b0195ee4975a4dcfb0ba4ee713c6d1c0f02c66
57014,0,Change has been successfully rebased as b3645ef0f831d90e24785ef5e2d7f37e120e57be
57016,0,Change has been successfully merged into the git repository.
57029,0,Change has been successfully merged into the git repository.
57031,0,"Patch Set 1: Code-Review-1(4 comments)Yes, this looks indeed really nice. (One large comment inside for design discussion.)"
57035,0,"Patch Set 3: Code-Review+2Hi Timur. The change looks pretty neat. Also, good choice of icons."
57039,0,Change has been successfully merged into the git repository.
57041,0,Patch Set 1: Verified+1 Code-Review+2Looks good.
57043,0,Change has been successfully cherry-picked as b985a7fc54910e6567a953f99c6842c1c361b781
57045,0,Change has been successfully merged into the git repository.
57050,0,Change has been successfully merged into the git repository.
57057,0,"Patch Set 7: Code-Review+1Looking good to me. Mark, I hope you did not get disappointed by the many iterations. Please continue contributing such fixes."
57072,0,Change has been successfully merged into the git repository.
57077,0,Change has been successfully merged into the git repository.
57078,0,"Patch Set 4:Thanks for fixing the commit message. Would it be useful to have some validation of such format requirements directly inside EGit maybe, to show a warning icon besides the commit message? I was not aware of that exact requirement, and maybe others also aren't."
57079,1,"Patch Set 4:Not sure, other Eclipse projects do it differently I think. Our preferred format is documented in the contributor guide:https://wiki.eclipse.org/EGit/Contributor_Guide#Commit_message_guidelinesBut the general format of the commit message footer is generally agreed to AFAIK. I think there was a bug report/comment somewhere about commit message validation, but not sure. In any case, this is low prio IMO :)."
57081,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5778/ : UNSTABLE
57087,0,Change has been successfully merged into the git repository.
57091,0,Change has been successfully merged into the git repository.
57094,0,Change has been successfully merged into the git repository.
57097,0,Change has been successfully merged into the git repository.
57101,0,Change has been successfully merged into the git repository.
57110,0,Change has been successfully merged into the git repository.
57112,1,"Patch Set 2:Hi Arun/Sravan,We just cannot make APP_NAME as null in Window's Display.On MAC/Linus Display classes, App_Name's default value is ""SWT"", on both these platform it's being used on similar lines during createDisplay() method passed to the underlying OS's native call for some program initialization purpose.So, making APP_NAME null as default() would have have bigger change then what we discussed."
57119,0,Change has been successfully merged into the git repository.
57128,0,Change has been successfully merged into the git repository.
57132,0,Change has been successfully cherry-picked as 31e5fe747e748a8ce7e4fc860494a2faec3771ba
57134,0,Patch Set 12:(2 comments)Thanks for the test. I ran it and it seems to be doing the right thing.
57136,0,Patch Set 1: Code-Review-1(13 comments)Thanks. Looks like a good start. Some comments inline.
57142,1,Patch Set 8:(1 comment)Modify code to satisfy a JUNIT test case is not a good idea. WE either keep the JUNIT as it is or we just remove the test since a void is used or an exception is thrown when failing the execution of the method
57156,1,"Patch Set 10:In general, the strategy we use in automated connector tests is the following:* create a new task (in this case a Gerrit review) and submit* fetch the task from the server* assert something about it's state (e.g. it is not starred)* apply the functionality to be tested to that task (e.g. set it to starred)* fetch the latest version of the task* assert that the state has changed/not changed as expected (e.g. it is starred)* delete the created task if supported by the connector (I don't think Gerrit supports this)We never do anything with existing tasks, we always create new ones. That way we aren't dependant on the test environment.If we have a test like the above for each action that the connector can take with a review (star, unstar, submit, post a comment, etc.), then we will have good test coverage and will be able to prevent regressions and be confident that each of those actions are working correctly."
57158,1,"Patch Set 10:Guys, have a look at GerritReviewRemoteFactoryTest in o.e.m.gerrit.tests. Its setUp() method and the way ReviewHarness is inited in particular. You'll see that each time a new review is created (a commit pushed to Gerrit). You can also have a peek at GerritHarness.ensureOneReviewExists() which does similar thing. I encourage you to set up a Gerrit server locally (by runnin vagrant script from o.e.m.gerrit.releng) so you can verify if your tests are passing before pushing them to Gerrit @ Eclipse. Let me know if you have any questions."
57162,0,Patch Set 13: Code-Review-1(10 comments)I still the change needs more love.
57163,0,Patch Set 13:I still _think_ the change needs more love.
57173,0,Change has been successfully merged into the git repository.
57177,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/etrice/job/etrice-gerrit/115/ : UNSTABLE
57179,0,Change has been successfully pushed.
57185,0,Change has been successfully merged into the git repository.
57189,0,Change has been successfully merged into the git repository.
57192,0,Change has been successfully cherry-picked as 7b661206be5337f15d04b4fd2a9f113ec8b87190
57198,0,Change has been successfully cherry-picked as 754834630474d17403ee38e1ba6cc71313fd3809
57201,0,Change has been successfully merged into the git repository.
57202,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5777/ : UNSTABLE
57206,0,Change has been successfully merged into the git repository.
57209,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5027/ : UNSTABLE
57214,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5772/ : UNSTABLE
57215,1,Patch Set 4: Verified+1 Code-Review+2rebased and resolved conflicts
57216,0,Change has been successfully merged into the git repository.
57218,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5019/ : UNSTABLE
57222,0,Change has been successfully merged into the git repository.
57223,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5769/ : UNSTABLE
57225,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5762/ : UNSTABLE
57228,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5747/ : UNSTABLE
57230,0,Change has been successfully merged into the git repository.
57233,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5733/ : UNSTABLE
57239,1,Patch Set 3:if the other guy doesn't know you are working on his change this can lead to surprising race conditions and only the last patchset of a change can be submitted. Also I find it irritating if we end up with a change where the original author isn't listed as the author anymore. I sometimes take over a change when only small tweaks are open to finish the change and I can then submit it with some minor improvements or if I know the author is currently swamped and the solution to the remaining issues is pretty clear.
57240,1,"Patch Set 3: Code-Review+1Sorry again, I will avoid such cases in the future."
57246,0,"Patch Set 1: Verified+1(3 comments)Please refactor according to comments, patch is otherwise good and works as expected."
57247,0,Patch Set 4: Verified+1 Code-Review+2Thank you very much Nicolaj!
57248,0,Change has been successfully merged into the git repository.
57255,1,Patch Set 1:this is a copy of change I4489cdd3526a30b1d2d575040792897a92da0c6d with the wrong commit message
57256,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5755/ : UNSTABLE
57259,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5757/ : UNSTABLE
57264,0,Change has been successfully merged into the git repository.
57268,1,"Patch Set 3:Hi Wim,I have created another test with:2 threads create 200 and 100 rows2 threads dispose both 100 rows1 thread wait and refresh indexes.And it's works.If you want, i commit the snippets too.Happy Easter.Mirko"
57270,0,Patch Set 3: Code-Review+2Nice work!
57271,0,Change has been successfully merged into the git repository.
57272,0,"Patch Set 3:if you run the snippet GridVirtualTableViewer.java, you can see the speed up and the improvement of this change.Thanks WimMirko"
57280,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5752/ : UNSTABLE
57281,0,Change has been successfully merged into the git repository.
57287,0,Change has been successfully merged into the git repository.
57290,0,"Patch Set 1:When I type a space after opening the dialog, the first checkbox gets checked, so the functionality is working like you describe it. But there is no indication of the currently focused control before hitting space and I have to guess what it will do.With my change, I see a nice dotted focus indication around the label of the first checkbox directly after opening the dialog.This is Windows 7."
57293,0,Change has been successfully merged into the git repository.
57296,0,Change has been successfully merged into the git repository.
57298,0,Patch Set 4: Code-Review+1The change looks good and fixes the NPE on Luna for me too.
57300,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5735/ : UNSTABLE
57304,1,Patch Set 1: Code-Review+1This fixes the problem for me and the code looks good.
57305,0,"Patch Set 1: Code-Review-1Thanks for testing. Let's not submit this yet, I'd like to clean up the code some more, e.g. we could directly get the selection from the event instead of getting the part first."
57307,1,Patch Set 3: Code-Review+1I tested the patch and it still fixes the problem for me.
57313,0,Change has been successfully merged into the git repository.
57318,1,"Patch Set 2:Sorry, it does work. ""Workspace"" is a little confusing. A better term is ""All workspace bundles""."
57319,0,"Patch Set 2:Wim, I would like to eventually have this also include 'Dependent Plugins' and 'Target Platform'.  Nice, yes?"
57320,0,"Patch Set 2:I think the current state is already very nice. I'm not sure how useful the dependent plugins are as an icon source. They could not be there during run time.Somewhat related to this patch: I also noticed that the ""class"" selection (e.g. handler) is not able to select classes from the target platform."
57321,1,"Patch Set 2:When you are searching for an icon in a workspace with 100 plugins, but your bundle is only dependent on 10 of them, it would be nice to find those icons you are dependent on without both waiting to resolve and then sifting through all 100.I have this problem now when trying to reuse icons for my contributions to e4.tools."
57322,1,"Patch Set 2:-> Somewhat related to this patch: I also noticed that the ""class"" selection (e.g. handler) is not able to select classes from the target platform.That's probably a separate bug that should be filed.  It's related to many items I am working on, so I should be able to address it soon in another patch."
57323,1,"Patch Set 2:Sorry: I mean target platform. Dependent plugins icons search would be nice.> Somewhat related. Yes, I will file a bug and add you."
57325,0,Patch Set 3: Verified+1 Code-Review+2Nice Steven. Great patch.
57326,0,Change has been successfully merged into the git repository.
57333,0,Change has been successfully merged into the git repository.
57337,0,Change has been successfully merged into the git repository.
57343,0,Patch Set 2: Code-Review+2Best of both worlds. Thanks.
57350,0,Change has been successfully merged into the git repository.
57352,1,"Patch Set 1:Thanks for fixing this! I'll let Shawn comment on the code changes, but I can confirm that it fixes the issue listed in this bug:https://code.google.com/p/gitiles/issues/detail?id=5I looked at the difference between C git and JGit blame for all of ReceiveCommits.java after applying this patch. There are still a few places where they differ, but almost all of them are on trivial lines (e.g. only whitespace and a curly brace), so I'm guessing those are instances where there is not just one correct answer.You can examine the output yourself with:$ vimdiff <(git blame 61dcc102242e00d3b0061405d5c909564ebbd819 gerrit-server/src/main/java/com/google/gerrit/server/git/ReceiveCommits.java) <(~/c/jgit/org.eclipse.jgit.pgm/target/jgit blame 61dcc102242e00d3b0061405d5c909564ebbd819 gerrit-server/src/main/java/com/google/gerrit/server/git/ReceiveCommits.java)(While doing this I also noticed some more inconsistencies between C git and JGit blame that are beyond the scope of this change but I though I'd write down:-C git extends the SHA-1 abbreviations to 8 characters in the full-file case, perhaps because there was actually ambiguity among the set of SHA-1s that showed up in the range?-Ranges like -L 25,35 appear to be inclusive of the high endpoint in JGit but exclusive in C git.)"
57353,1,"Patch Set 1: Code-Review-1(15 comments)Its been years since I last read this code, but I agree with the basic concept of this CL. The old code was flat out wrong to skip commits already marked SEEN. They could be reached by more than one path, and in blame model that second path is carrying lines that need to be processed.The approach here is roughly correct. If the candidate is still in the queue, merge in the regions from the 2nd (or nth) path for future processing. If it was already popped, put it back in and reprocess that part of the DAG until you find an ancestor candidate that is still sitting in the queue and can have the region(s) merged into it.I mostly had style nits, and some questions about why the time equality topo sort is necessary."
57354,0,"Patch Set 1:(15 comments)Shawn, thanks for taking the time for this very helpful review!"
57358,0,Change has been successfully merged into the git repository.
57365,0,Change has been successfully cherry-picked as f5ce0f1d862c68d17d199bca447c20e54406f343
57370,0,Change has been successfully merged into the git repository.
57372,1,Patch Set 2: Code-Review+1It now handles sources!
57378,0,Change has been successfully cherry-picked as d2cb5f2924b5612e9e93559d2b2ab894c065ba4d
57383,0,Change has been successfully merged into the git repository.
57386,0,Change has been successfully merged into the git repository.
57389,0,Change has been successfully merged into the git repository.
57391,0,Change has been successfully cherry-picked as e6cc4f591a3325a813ca4fafb2c9fb9c64403906
57399,0,Change has been successfully cherry-picked as 75e9bf413a6e836fa55685f53e97aad9abeb7adc
57404,0,Change has been successfully merged into the git repository.
57407,0,Change has been successfully merged into the git repository.
57411,0,Change has been successfully merged into the git repository.
57412,0,Change has been successfully cherry-picked as 924106b3543e7588baa3bb08e152faa673dccfb5
57416,0,Change has been successfully merged into the git repository.
57428,0,Change has been successfully merged into the git repository.
57430,0,Change has been successfully cherry-picked as 3395468ed5f543714e38cb806dbbd31ddc73f2d9
57434,0,"Patch Set 1: Verified+1 Code-Review+2Look good to me, thanks Bartek!"
57435,0,Change has been successfully merged into the git repository.
57440,0,Change has been successfully rebased as feb283978e5533423f2acfff93c0cf4ce36bde88
57444,1,Patch Set 1:Three comments:- public show/hide methods still exist in DropDown.java- Copyright header of ThemeManager is not updated- is default black border a good match to default box-shadow?
57447,0,Change has been successfully pushed.
57449,0,Change has been successfully merged into the git repository.
57450,0,"Patch Set 6:This causes 11 warnings in our official build:http://download.eclipse.org/eclipse/downloads/drops4/N20140408-0015/compilelogs/plugins/org.eclipse.ui.ide_3.10.0.N20140408-0015/@dot.htmlLars, please fix them ASAP or revert the change. Thanks."
57451,1,"Patch Set 6:Thanks Dani, I have a look. I think DISCOURAGED ACCESS WARNINGS was there before?"
57463,0,Change has been successfully merged into the git repository.
57466,0,Change has been successfully merged into the git repository.
57470,0,Change has been successfully cherry-picked as 836153e14585741a977ac6ec47fdd1a86e309d03
57476,0,Change has been successfully rebased as 137b0257ae834deeb888bdbeb7479a565b8f54d7
57480,0,Change has been successfully cherry-picked as 11c635568c4d12356012e8930166643b73114c8c
57483,0,Change has been successfully merged into the git repository.
57486,0,Change has been successfully merged into the git repository.
57489,0,Change has been successfully merged into the git repository.
57492,0,Change has been successfully cherry-picked as 1f3b0bf31dd4675923ea77fc222a4ddb746132bf
57494,0,"Patch Set 3: Verified+1 Code-Review+2Now it works very nice, thanks!"
57495,0,Change has been successfully merged into the git repository.
57500,0,Change has been successfully merged into the git repository.
57507,0,Change has been successfully merged into the git repository.
57510,0,Change has been successfully merged into the git repository.
57512,0,Change has been successfully merged into the git repository.
57515,0,Change has been successfully cherry-picked as 603044e7b6a967e894ade197768917a367ece48e
57521,0,Change has been successfully merged into the git repository.
57523,0,Change has been successfully merged into the git repository.
57530,0,Change has been successfully merged into the git repository.
57534,0,Change has been successfully merged into the git repository.
57536,0,Change has been successfully merged into the git repository.
57543,0,Change has been successfully merged into the git repository.
57551,0,Change has been successfully merged into the git repository.
57553,0,Change has been successfully merged into the git repository.
57557,0,Change has been successfully merged into the git repository.
57567,0,Change has been successfully merged into the git repository.
57570,0,Change has been successfully merged into the git repository.
57579,0,Change has been successfully cherry-picked as 56c82df830495d022769545b0a611cc96a7d2cb3
57581,0,Change has been successfully merged into the git repository.
57588,0,Change has been successfully merged into the git repository.
57591,0,Change has been successfully merged into the git repository.
57600,0,Change has been successfully merged into the git repository.
57602,0,Change has been successfully merged into the git repository.
57608,1,"Patch Set 4:Nice Steven, I am looking at it now. I see that the XMI-tab is disabled when in tree search mode. This was needed at the time because otherwise I got errors. Any idea if this is still required?"
57611,1,"Patch Set 4:The EMF observer situation in the 2 current tabs is a bit messy.  I was hoping to refactor all of the tabs out of the ModelEditor class and into the new tab package, using the new injection based approach instead of a gazillion factory parameters.  I suggest doing that first, and then dealing with that issue.  I am not aware of why it needed to be disabled, but I assume it was related to why I needed to create a method to 'ensure tree nodes were created'  (private Object getFirstMatchingItem(...).  Also, my other patch (already merged) on not collapsing the tree node may help to remove that requirement.  Honestly, the new method (getFirstMatchingItem) works, but I don't even know why!  I just kept poking into the Provider object until it cooperated."
57620,0,"Patch Set 6: Verified+1 Code-Review+1We can do that later. I am happy with the patch, but it does need some more work to make it a success. I am fine with letting this thing go through. Lars?Steven are you planning to stick around for a while?"
57621,0,"Patch Set 6:Sure, apply it. Looking forward in using it.Wim, as discussed via email we should nominate Steven soon to e4 committer. Maybe 3 more successful patches?"
57622,0,Patch Set 6: Code-Review+2Thanks Steven!
57623,0,Change has been successfully merged into the git repository.
57629,1,"Patch Set 1: Verified+1 Code-Review+2Thanks, Jad! Looks good. (Sorry for the delay merging this.)"
57630,0,Change has been successfully merged into the git repository.
57634,0,Change has been successfully merged into the git repository.
57639,0,"Patch Set 1: Code-Review-1(2 comments)Good idea to redo this API.But I have some questions. Also check with Matthew, he told me he had made some great performance improvement to how experiments deal with many many traces, to make sure this patch is compatible with what he's doing."
57643,0,"Patch Set 1:My experience with holding off cosmetic patches because of ""a big change coming"" is that the big change usually ends up delayed so much (which is normal, it's a big change) or canned altogether, and the small patch rots out when it could have been useful.The priority queue stuff is very promising, but it's still at the prototype level, it's realistically a couple weeks away. If you're absolutely against this change I won't merge it, but it's quite simple ([i] becomes get(i)/set(i,x)) and should be easy to rebase through."
57648,0,Change has been successfully cherry-picked as 661498dd0e9391b05d3249bc18d7e50959244bdd
57650,0,Change has been successfully merged into the git repository.
57661,0,Change has been successfully merged into the git repository.
57664,0,Change has been successfully cherry-picked as ae0a1f18a7afa64d97f717947dc06e4a382d1e41
57672,0,Change has been successfully merged into the git repository.
57674,0,Change has been successfully merged into the git repository.
57681,0,"Patch Set 13: Verified+1 Code-Review+2Looks good. Merging. Thanks, Bartek!"
57682,0,Change has been successfully merged into the git repository.
57697,0,Change has been successfully cherry-picked as 35b43204115126c7dfb3e15d71bb508a650baecc
57699,1,Patch Set 1:It seems like it might be more useful to preserve the source location when making a copy/link of another trace resource.
57707,0,Change has been successfully cherry-picked as ae5b4a4f54d1476429b678c8234cca20e20d6222
57711,0,Change has been successfully cherry-picked as bb2c6151e5ee8150698bbfa96aa5c0f844aaa278
57715,0,Change has been successfully merged into the git repository.
57721,0,Change has been successfully merged into the git repository.
57727,0,Change has been successfully merged into the git repository.
57728,1,"Patch Set 1:I'm not sure why this fails, the gerrit build might not be properly set up?"
57733,0,Change has been successfully merged into the git repository.
57737,0,Change has been successfully merged into the git repository.
57741,0,Change has been successfully merged into the git repository.
57745,0,Change has been successfully merged into the git repository.
57748,0,Change has been successfully merged into the git repository.
57754,0,Change has been successfully merged into the git repository.
57756,0,Change has been successfully pushed.
57758,0,Patch Set 1: Verified+1 Code-Review+1 IP-Clean+1This looks good to me. I didn't see any related issues in a test run with the TAU plugin.
57761,0,Change has been successfully rebased as 13d7fc5cca91060680f3db9c8b6e268a802716a9
57764,0,Change has been successfully merged into the git repository.
57769,0,Change has been successfully merged into the git repository.
57773,0,Patch Set 1: Verified+1 Code-Review+2Tested and good for me.
57774,0,Change has been successfully merged into the git repository.
57777,0,Change has been successfully merged into the git repository.
57782,0,Change has been successfully merged into the git repository.
57786,0,Change has been successfully merged into the git repository.
57789,0,Change has been successfully merged into the git repository.
57792,0,Change has been successfully merged into the git repository.
57795,0,Change has been successfully merged into the git repository.
57797,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5700/ : UNSTABLE
57798,0,Change has been successfully cherry-picked as 066be2ffce4ea824aed639dbe7f3ccae0d17f6d1
57800,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good, thanks Xavier."
57802,0,Change has been successfully cherry-picked as 1793d47a6ba93fd71f96bd4118f8fcfea8550bc9
57811,0,Change has been successfully merged into the git repository.
57814,0,Change has been successfully merged into the git repository.
57819,0,"Patch Set 7: -Code-ReviewPatch looks good to me. I have one more comment before I can push it to master though. Bartek, please attach the EndingAwareBufferedReader into the server test chain, as, e.g. AllGitTests, so your tests are run at build time."
57830,0,"Patch Set 4: Code-Review-2(4 comments)Bartek, your patch seems to be fine, however I'd like you to refactor the code to be more re-usable, i.e. extract the line delimiter buffer reader into a separate class extending the buffered reader. This way you should have two utility methods: hasNext() and getLine(), which may return the lines *with* delimiters. Simple checks should suffice to make the code clear, what do you think?"
57833,0,"Patch Set 11: Verified+1 Code-Review+2 IP-Clean+1Patch looks fine. Thanks, Bartek!"
57834,0,Change has been successfully merged into the git repository.
57837,0,Change has been successfully merged into the git repository.
57839,0,Change has been successfully cherry-picked as a474fd01f0f9450a83e223277085f5c530bb273d
57844,0,Change has been successfully merged into the git repository.
57848,0,Change has been successfully merged into the git repository.
57857,0,Change has been successfully merged into the git repository.
57863,0,Change has been successfully merged into the git repository.
57870,0,Change has been successfully cherry-picked as f9efc19ba33d3aaa6f0cf799c2f22ce4ecff0078
57875,0,Change has been successfully merged into the git repository.
57877,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
57879,0,Change has been successfully merged into the git repository.
57882,0,Change has been successfully cherry-picked as c7037e160daff6cfe7905845ccfeb9f7febe7d8e
57889,0,Change has been successfully merged into the git repository.
57892,0,Change has been successfully merged into the git repository.
57902,0,Change has been successfully merged into the git repository.
57920,0,Change has been successfully merged into the git repository.
57924,0,"Patch Set 8:Spend some further thought on this:The RCP-independent implemenation should have the following properties:- thread-safe- IllegalStateExceptions when core-methods like search are called when the ISnippetRepository is not open. (Opening/closing an already opened/closed repo is fine; I think this mirrors the behaviour of java.util Streams. Also, you never know whether another thread tries to open )- Synchronizes on this when modifying/checking for the open state- close() should block when the IRepository is currently in the process of being opened.Once we have this (and thereby a better understanding of the thread-safety issues) let's come up with requirements for the wrapper."
57925,0,Patch Set 8: -Code-ReviewFor thread-safety please have a look at the following change. https://git.eclipse.org/r/#/c/23916/
57930,0,Change has been successfully merged into the git repository.
57935,0,Change has been successfully merged into the git repository.
57938,0,Change has been successfully cherry-picked as 4c30c92eb783dcd7180e0e7a5d603f7054845752
57943,0,Change has been successfully merged into the git repository.
57947,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/293/ : UNSTABLE
57948,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/294/ : UNSTABLE
57950,0,"Patch Set 3:I don't feel right to push the new code to the master branch. Even if the error reported for the test is not related at all with the change, I'm afraid that it might not run the test properly on the master branch, What should we do in a case like this? I am also positive to push the code"
57952,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/292/ : UNSTABLE
57954,0,Change has been successfully merged into the git repository.
57960,0,Change has been successfully merged into the git repository.
57965,0,Change has been successfully merged into the git repository.
57967,0,Change has been successfully merged into the git repository.
57978,0,Change has been successfully merged into the git repository.
57983,0,Change has been successfully merged into the git repository.
57986,0,Change has been successfully merged into the git repository.
57987,0,Change has been successfully cherry-picked as 94e69d570b5ed183b07b15bd6563af16d3552f85
57992,0,Change has been successfully cherry-picked as 654ab9e0e8ee30f3adb0d249e7e217e66d99e6fb
57998,0,Change has been successfully merged into the git repository.
58000,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5641/ : UNSTABLE
58003,0,Change has been successfully merged into the git repository.
58005,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5646/ : UNSTABLE
58008,0,Change has been successfully merged into the git repository.
58011,0,Patch Set 1: Code-Review+2 IP-Clean+1thanks for the fix :-)
58012,0,Change has been successfully merged into the git repository.
58016,0,Change has been successfully merged into the git repository.
58021,0,Change has been successfully cherry-picked as 971f286649465fef1baff19e3a8ed08abf6ea96a
58024,0,Change has been successfully merged into the git repository.
58028,0,"Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Looking good, thanks again."
58029,0,Change has been successfully merged into the git repository.
58032,0,Change has been successfully merged into the git repository.
58035,0,Change has been successfully merged into the git repository.
58036,0,Change has been successfully cherry-picked as f252ba300e69d38a231eec6e10ba2d9f9d02a819
58042,0,Change has been successfully merged into the git repository.
58046,1,"Patch Set 1:Oh, I didn't notice the build failure. Even though it doesn't make sense to have null values in the map, I'll change it to Collections.synchronizedMap(), because it does what we want to achieve. Thanks for pointing that out."
58048,1,"Patch Set 3:Looking closer at the differences between ConcurrentHashMap() and Collections.synchronizedMap(), I realized that the latter is not working for us because iterations over the map using iterators needs to be synchronized on the map. Otherwise we'll get ConcurrentModificationException. Since in the code we do that at several places, we would have to change these iterations to make it thread-safe. Using ConcurrentHashMap we don't have that constraint. The implementation will not cause ConcurrentModificationExceptions during an iteration. So, I changed the patch back to use ConcurrentHashMap(). I removed the failing test cases for null values since null values should not be used. The handling of null values could be improved in another patch."
58049,1,"Patch Set 3: Code-Review+2 IP-Clean+1Yeah, using synchronizedMap requires to do synchronize(map) when doing iterations. That can get complicated when the map (or Iterable view) is exposed through the API."
58050,0,Change has been successfully cherry-picked as 3c99487aa684de82327ef41546a45aad533dace1
58056,0,Change has been successfully cherry-picked as a0b49d3abac01ca34da20e7c99708d625730d7eb
58074,0,Change has been successfully cherry-picked as 042824c5fda3f79f60199230b409122df05d381c
58077,0,Change has been successfully merged into the git repository.
58084,0,Change has been successfully merged into the git repository.
58096,0,Change has been successfully merged into the git repository.
58107,0,Patch Set 3: Code-Review+2 IP-Clean+1Looks good.
58108,0,Change has been successfully merged into the git repository.
58112,0,Change has been successfully merged into the git repository.
58115,0,Change has been successfully cherry-picked as 5e108435e852f4e054f7f511fe2e45c14b93f52e
58118,0,Change has been successfully merged into the git repository.
58128,0,Change has been successfully merged into the git repository.
58136,0,Change has been successfully merged into the git repository.
58140,0,Change has been successfully merged into the git repository.
58144,0,Change has been successfully merged into the git repository.
58149,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/289/ : UNSTABLE
58151,0,Change has been successfully merged into the git repository.
58156,0,Change has been successfully merged into the git repository.
58162,0,Change has been successfully merged into the git repository.
58165,0,Change has been successfully merged into the git repository.
58175,0,Change has been successfully merged into the git repository.
58179,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/439/ : UNSTABLE
58180,1,Patch Set 4: Verified+1The Trac 500 error is unrelated.
58181,0,Change has been successfully merged into the git repository.
58186,0,Change has been successfully merged into the git repository.
58189,0,Patch Set 3:Build SUCCESSFUL. Now starting integration tests...
58193,0,Patch Set 7:Build SUCCESSFUL. Now starting integration tests...
58195,0,Patch Set 5:Build SUCCESSFUL. Now starting integration tests...
58197,1,Patch Set 2: Verified-1Not complete yet. Integration tests fail.
58199,0,Patch Set 4:Build SUCCESSFUL. Now starting integration tests...
58203,0,Patch Set 6:Build SUCCESSFUL. Now starting integration tests...
58210,0,Change has been successfully merged into the git repository.
58213,0,Change has been successfully merged into the git repository.
58221,0,Change has been successfully merged into the git repository.
58223,0,"Patch Set 4: Code-Review+1 IP-Clean+1Steffen and/or Sam, it would be great if you could take a brief look.  I used the update-versions.sh script to update to 2.1"
58226,0,Change has been successfully merged into the git repository.
58234,0,Change has been successfully merged into the git repository.
58238,0,Change has been successfully merged into the git repository.
58247,0,Change has been successfully merged into the git repository.
58250,0,Change has been successfully merged into the git repository.
58253,0,Change has been successfully merged into the git repository.
58255,0,"Patch Set 1:(25 comments)Looks great, just a few minor adjusted suggested."
58259,1,"Patch Set 1:David, considering the WikiText still works with Guava 12, do you really want to make 15 a pre-req? It's probably the safest thing to do but at the same time I wonder if it's worth it until we consume any of the new APIs (which of course is difficult to know since the build only runs against 15)."
58260,1,"Patch Set 1:I'd like WikiText to remain current and I'd like integrators to be able to use Guava 15 in stead of 12.  In an OSGi environment it's not critical since applications could simply have both dependencies, but for simple non-OSGi Java applications with a single classpath that would be impossible.  See  https://bugs.eclipse.org/bugs/show_bug.cgi?id=430477 for an example of the kind of problems that can come up.I don't think that we have an easy way to support both 15 and 12, so updating this dependency makes sense to me.  What do you think?"
58261,1,"Patch Set 1:I'm not sure I understand. This change forces Guava 15 on integrators rather than giving them more choice. My understanding is that it can be problematic to combine multiple versions of Guava in a product: bug 427862. Generally speaking, version constraints should specify the actual requirements of a bundle and not reflect product packaging concerns so I'd postpone this change until Guava 15 specific APIs are actually used."
58263,1,Patch Set 1:The Guava versioning doesn't follow OSGi semantics AFAIK. While not all APIs are backwards compatible in the latest Guava I thought the ones used by Mylyn were so my assumption is that for now Mylyn is compatible with Guava 12-15. If that's not the case we should certainly up the version constraints to require Guava 15. It's the safest thing for sure since that's what we are testing against now.
58265,1,Patch Set 2: Code-Review+2 IP-Clean+1I don't see any way that we can reliably ensure compatibility with both 12.0 and 15.0 without actually building/testing with both versions.  The effort required to do that is high enough that I think we should up the version constraint to 15.0.
58266,1,Patch Set 2: Code-Review+1It makes sense to me that we keep it simple. Let's require Guava 15 across the board for Mylyn 3.12. We can always go back and consider testing against different versions if needed.
58267,0,Change has been successfully merged into the git repository.
58270,1,Patch Set 1:I'm not sure what this change does? That repository is the default anyways and the build worked for me from master: https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-incubator/38/ .
58272,1,Patch Set 2:Maybe whatever the problem was it has fixed itself? It failed twice from master a couple of weeks ago: https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-incubator/34/console
58274,0,"Patch Set 2: Code-Review+1Ah, that makes sense!"
58276,0,Change has been successfully merged into the git repository.
58278,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/418/ : UNSTABLE
58279,1,Patch Set 1: Verified+1Test failure is unrelated.
58286,0,Change has been successfully merged into the git repository.
58291,0,Change has been successfully merged into the git repository.
58293,1,Patch Set 1:This is a more comprehensive fix of bug 430662 compared to https://git.eclipse.org/r/#/c/23625/.  I preserved https://git.eclipse.org/r/#/c/23625/ for now in case there are objections to the approach taken in this patch.
58300,0,Change has been successfully merged into the git repository.
58303,0,Change has been successfully merged into the git repository.
58304,0,Change has been successfully cherry-picked as 012bbfc97f99f5376596d9422df5f149c777c930
58309,0,Change has been successfully merged into the git repository.
58321,0,Change has been successfully merged into the git repository.
58326,0,Change has been successfully merged into the git repository.
58330,0,"Patch Set 1: Code-Review+1 IP-Clean+1 Verified+1(2 comments)This is just introducing a constant which was used before as String, so I think it is save to do."
58334,0,Patch Set 3: Verified+1 Code-Review+2 IP-Clean+1Nice one ! Thanks for also cleaning up the string use...
58335,0,Change has been successfully merged into the git repository.
58339,0,Change has been successfully merged into the git repository.
58341,0,"Patch Set 1:Comment from Laurent Redor on the previous version of the patch set (https://git.eclipse.org/r/#/c/22940/)> org.eclipse.sirius.diagram.business.api.query.> DiagramDescriptionQuery.isHeaderSectionEnabled() to access  > SiriusDiagramPreferencesKeys.PREF_DISPLAY_HEADER_SECTION> But globally, I'm not sure is a good idea to access > preferences in the diagram UI plugin instead of the> diagram Core plugin (from DiagramPlugin instead > SiriusDiagramEditorPlugin). The keys are always in Core > plugin, there is ambiguity.UI and Non-UI diagram preferences are mixed in both diagram plugins, a proper separation will be done in Bug 430676"
58344,0,Change has been successfully merged into the git repository.
58350,0,"Patch Set 1: Code-Review-1 IP-Clean+1(2 comments)Thanks Dmitry, great patch! Two minor comments about whitespaces. Please resubmit and I will accept.You can add a new patch set by including the same change id in the commit message (just copy the current commit message.)"
58352,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1A near perfect patch Dmitry! Thank you for your work.
58353,0,Change has been successfully merged into the git repository.
58354,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Thanks again !
58355,0,Change has been successfully merged into the git repository.
58357,0,"Patch Set 1:(1 comment)Perfect, thanks. Only the commit message needs update."
58360,0,Change has been successfully cherry-picked as f913ef6db3aca5fd4c1ee2b1eccaee6f256f1679
58365,0,Change has been successfully merged into the git repository.
58367,0,Change has been successfully merged into the git repository.
58371,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/333/ : UNSTABLE
58373,0,Change has been successfully merged into the git repository.
58376,0,Change has been successfully merged into the git repository.
58382,0,Change has been successfully merged into the git repository.
58384,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1(1 comment)Cool! There won't be any bugs left if you keep up this pace ;) I have added one remark in the code but accepted the patch. Thanks Mirko!
58385,0,Change has been successfully merged into the git repository.
58386,0,Patch Set 1:fix bugs is cool. I'm having fun. I'm glad to be helpful in this project.Thanks to you Wim
58389,0,Change has been successfully merged into the git repository.
58393,0,"Patch Set 1:(1 comment)Almost perfect. Thanks. Only ExtensionParameterValues was not depreated, can you revert for this file to the previous version?"
58396,0,Change has been successfully merged into the git repository.
58405,0,Change has been successfully merged into the git repository.
58408,0,Change has been successfully merged into the git repository.
58410,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Thanks Mirko!
58411,0,Change has been successfully merged into the git repository.
58412,0,Patch Set 2:Thanks to you Wim!
58419,0,Change has been successfully rebased as f7c82bc4c4673dedd8f4cf07073aa7c359c42700
58426,1,Patch Set 1:Is this a recent regression? Or just something you noticed?
58427,1,"Patch Set 1:(In reply to comment #5)> Is this a recent regression? Or just something you noticed?This was reproducible with IE before, and now (after the refactorings in change 23715) also in Chrome."
58430,0,Change has been successfully rebased as 13cdefbd7619bf1992cbbbfcff2abd62449099d9
58433,0,Change has been successfully merged into the git repository.
58436,0,Change has been successfully merged into the git repository.
58439,0,Change has been successfully merged into the git repository.
58445,0,Change has been successfully cherry-picked as d3a5482bb9e46c869f333e631a8b1c5d17d4d294
58453,0,Change has been successfully merged into the git repository.
58456,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Thank you Pascal!
58457,0,Change has been successfully merged into the git repository.
58460,0,Change has been successfully merged into the git repository.
58470,0,Change has been successfully merged into the git repository.
58473,0,Change has been successfully merged into the git repository.
58476,0,Change has been successfully merged into the git repository.
58485,0,Change has been successfully merged into the git repository.
58496,0,"Patch Set 1:I did the port from DCS to community with out knowing Code2cloud guys have changed here. Anyway, you changes looks good to me. I'll push it"
58497,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1I did the port from DCS to community with out knowing Code2cloud guys have changed here. Anyway, you changes looks good to me. I'll push it"
58498,0,Change has been successfully merged into the git repository.
58500,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/326/ : UNSTABLE
58501,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/328/ : UNSTABLE
58503,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/329/ : UNSTABLE
58505,0,Change has been successfully merged into the git repository.
58507,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/316/ : UNSTABLE
58508,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/318/ : UNSTABLE
58511,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/324/ : UNSTABLE
58516,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/320/ : UNSTABLE
58519,0,Change has been successfully merged into the git repository.
58521,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1This change looks fine to me.
58522,0,Change has been successfully cherry-picked as 8f897037a92b63ce093c5faf9dabd3813db62e19
58524,0,Change has been successfully merged into the git repository.
58530,0,Change has been successfully merged into the git repository.
58533,0,Change has been successfully merged into the git repository.
58539,0,Change has been successfully merged into the git repository.
58541,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good. BTW it should work behind a proxy if you set the https_proxy env var.
58543,0,Change has been successfully cherry-picked as f0f7216605ed0656317d42570887604c357fbe3c
58545,0,Change has been successfully merged into the git repository.
58555,0,Change has been successfully cherry-picked as 701c19e6f12a10d774440dbbf1032c926951bd67
58556,0,Change has been successfully cherry-picked as 354ac4c65c9b1f6f542b9185220af2f72dee4aaa
58561,0,Change has been successfully merged into the git repository.
58563,0,Change has been successfully cherry-picked as e48ff6a0f4d9c2d167951897033b51aed5485176
58565,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Nice work!
58570,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/389/ : UNSTABLE
58571,0,Change has been successfully cherry-picked as e91e3669b7ff26bb2c75aca34ae82d81f0dfacbd
58584,0,"Patch Set 7: Code-Review+1Looks good. The only thing that we may need to improve in the future is the fact that hasSnippet(UUID) (I like this method in the interface, BTW) becomes extremely slow when the snippets no longer fit into the cache."
58586,0,Change has been successfully merged into the git repository.
58589,0,Change has been successfully merged into the git repository.
58592,0,Change has been successfully cherry-picked as b69ee9f3cf9eabb24bb57ee5ab91f1b9a15a9b4b
58593,0,Change has been successfully cherry-picked as dd7d6b2f9fc2f4cc8fc3b17c508174fc0a32bc6d
58598,0,"Patch Set 1:I'm not able to reproduce the issue in the bug report. However, I loaded a GDB trace in my environment and it worked fine. Is 1 second enough? CDT has a default of 10 seconds (which I would see as too much)."
58603,0,Change has been successfully merged into the git repository.
58608,0,Change has been successfully merged into the git repository.
58614,0,Change has been successfully merged into the git repository.
58616,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Lets finally get it merged!
58617,0,Change has been successfully merged into the git repository.
58619,0,Change has been successfully merged into the git repository.
58626,0,Change has been successfully merged into the git repository.
58630,0,Change has been successfully merged into the git repository.
58633,0,Change has been successfully merged into the git repository.
58635,0,Change has been successfully merged into the git repository.
58642,0,Change has been successfully merged into the git repository.
58645,0,Change has been successfully merged into the git repository.
58651,0,Change has been successfully merged into the git repository.
58654,0,Change has been successfully merged into the git repository.
58662,0,Patch Set 3: Verified+1 Code-Review+2 IP-Clean+1I rebased and added the @since tags.Thanks Xavier.
58665,0,Change has been successfully cherry-picked as 95c8e7ffdd688045c199c0653fa95866e75b03cc
58668,0,Change has been successfully merged into the git repository.
58670,0,Change has been successfully merged into the git repository.
58678,0,Change has been successfully merged into the git repository.
58682,0,Change has been successfully merged into the git repository.
58685,0,Change has been successfully merged into the git repository.
58691,1,"Patch Set 2:Patch Set 2: Tools tests succeeded when executing them from IDE. When running the maven build locally (Windows 7 x64) I got one failing test:Tests in error:  testSwitchTarget(org.eclipse.rap.tools.intro.internal.target.TargetSwitcher_Test)  !ENTRY org.eclipse.e4.ui.workbench.swt 4 2 2014-03-10 19:53:57.898!MESSAGE Problems occurred when invoking code from plug-in: ""org.eclipse.e4.ui.workbench.swt"".!STACK 0org.eclipse.e4.core.di.InjectionException: org.eclipse.swt.SWTException: Widget is disposed        at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:63)        at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:888)        at org.eclipse.e4.core.internal.di.InjectorImpl.disposed(InjectorImpl.java:390)        at org.eclipse.e4.core.internal.di.Requestor.disposed(Requestor.java:132)        at org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.update(ContextObjectSupplier.java:76)        at org.eclipse.e4.core.internal.contexts.TrackableComputationExt.update(TrackableComputationExt.java:107)        at org.eclipse.e4.core.internal.contexts.TrackableComputationExt.handleInvalid(TrackableComputationExt.java:70)        at org.eclipse.e4.core.internal.contexts.EclipseContext.dispose(EclipseContext.java:171)        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.clearContext(PartRenderingEngine.java:949)        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:929)        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$3(PartRenderingEngine.java:837)        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$8.run(PartRenderingEngine.java:832)        at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:817)        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.stop(PartRenderingEngine.java:1190)        at org.eclipse.e4.ui.internal.workbench.E4Workbench.close(E4Workbench.java:187)        at org.eclipse.e4.ui.internal.workbench.swt.E4Testable$2.run(E4Testable.java:125)        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)        at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:136)        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4147)        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3764)        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1122)        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)        at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1006)        at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:147)        at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:630)        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:574)        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)        at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:125)        at org.eclipse.tycho.surefire.osgibooter.UITestApplication.runApplication(UITestApplication.java:31)        at org.eclipse.tycho.surefire.osgibooter.AbstractUITestApplication.run(AbstractUITestApplication.java:114)        at org.eclipse.tycho.surefire.osgibooter.UITestApplication.start(UITestApplication.java:37)        at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:133)        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:103)        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:378)        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:232)        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.lang.reflect.Method.invoke(Method.java:606)        at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)        at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)        at org.eclipse.equinox.launcher.Main.run(Main.java:1462)        at org.eclipse.equinox.launcher.Main.main(Main.java:1438)Caused by: org.eclipse.swt.SWTException: Widget is disposed        at org.eclipse.swt.SWT.error(SWT.java:4441)        at org.eclipse.swt.SWT.error(SWT.java:4356)        at org.eclipse.swt.SWT.error(SWT.java:4327)        at org.eclipse.swt.widgets.Widget.error(Widget.java:476)        at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:348)        at org.eclipse.swt.widgets.Shell.getSize(Shell.java:1092)        at org.eclipse.ui.internal.quickaccess.SearchField.storeDialog(SearchField.java:563)        at org.eclipse.ui.internal.quickaccess.SearchField.dispose(SearchField.java:540)        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.lang.reflect.Method.invoke(Method.java:606)        at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)        ... 45 more"
58695,1,"Patch Set 9: Code-Review+1Let disable the problematic test, which failed on the build server for now."
58699,0,"Patch Set 10: Verified+1 IP-Clean+1 Code-Review+2We agreed to disable the failing test (see comments from Ivan) for now. I've created the following bug as a reminder for the future:Bug 430083: Re-enable RAPLaunchTabGroup_Test.testDefaultVMArgumentJettyLogLevel() testhttps://bugs.eclipse.org/bugs/show_bug.cgi?id=430083The test finishes successfully when it is executed from the IDE, and when it is running as part of a local Tycho/Maven build on my machine (that's why I give a verified +1). It is not running successfully in the Gerrit-verification-job."
58700,0,Change has been successfully merged into the git repository.
58703,0,Change has been successfully cherry-picked as 4fe7ecae33ff3c02db0245fd863f45f83348517d
58709,0,Change has been successfully rebased as a55e957f71f93a06125a8ca3bfcf6c08ddc2bb8b
58720,0,Change has been successfully merged into the git repository.
58723,0,Change has been successfully merged into the git repository.
58724,1,"Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1I apply the change, even if it triggers an exception in the CSS engine. I assume this helps us to stabilize the CSS engine."
58725,0,Change has been successfully merged into the git repository.
58731,0,Change has been successfully cherry-picked as 3a0baabb3fe30fcaeab2092ffb9f69fc4bbe5203
58734,0,Change has been successfully cherry-picked as b0106716e5d438a775dd5f11114c7a293f776b94
58736,0,Change has been successfully merged into the git repository.
58740,0,Change has been successfully cherry-picked as aaff4b4e8c40e7bb7d1888b3b9dcf62e5d5cb14a
58744,0,Change has been successfully cherry-picked as b3ce97d9b47196656ef93f274079cbaf9fc67e3a
58748,0,Change has been successfully merged into the git repository.
58752,0,Change has been successfully cherry-picked as b19dbe1b8e7e3d8347c0d63604452b3af766e083
58756,1,"Patch Set 1:This patch involves changes to what are presently the .ui.graphing and .graphingapi.ui packages. Since I'm merging those packages together (with ""Systemtap: Merge .ui.graphing into .graphingapi.ui""), I made the changes of this patch rely on the merged packages, instead of making them work with the individual packages & rebasing them after the merge.If you would rather have me make this patch work with the present package layout, though, I'll do it. Otherwise, I doubt a rebase will be needed here once the dependent patch gets merged."
58758,0,Change has been successfully cherry-picked as 463780565c2a2039c003c205ca7f02cff6bf10f3
58766,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Looks good. Waiting for build
58770,0,Change has been successfully cherry-picked as 0c8b7cb005665dbb6c63a3788042d0f2a66dce20
58778,0,Change has been successfully merged into the git repository.
58782,0,Change has been successfully merged into the git repository.
58786,0,Change has been successfully merged into the git repository.
58799,0,Change has been successfully merged into the git repository.
58803,0,"Patch Set 2:(16 comments)Thanks for the valuable feedback!Regarding the distinction of C++11 attributes and GCC attributes: I left the GCC attributes as is and added the attribute specifiers for representing C++11 attributes. The distinction can be seen for example in the NodeWriter. If an I(CPP)ASTAttribute is encountered in a IASTAttributeOwner it is expected to be a GCC attribute. If an ICPPASTAttributeSpecifier is encountered there, it is expected to be a C++11 attribute. The previous implementation of attributes is a bit limiting regarding the capabilities required by C++11 attributes (scope and multiple attributes in one specifier).I also thought about a solution which introduces an attribute specifier for GCC attributes, but that would break the current API. It's related to the problem mentioned in my comment (Line 23) in ICPPASTAttributeSpecifier."
58805,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/349/ : UNSTABLE
58807,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/377/ : UNSTABLE
58810,0,Change has been successfully cherry-picked as b5cf6c388c57777492a5162110c320eaaaf445d4
58812,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/378/ : UNSTABLE
58815,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/359/ : UNSTABLE
58819,1,Patch Set 9:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/388/ : UNSTABLE
58821,0,Patch Set 5:- I've added separate getter methods for accessing C++ and GNU attributes.- I've improved cases in which the GNU attributes had not been added to the AST.
58823,0,Patch Set 5:(22 comments)Thanks for the input. Changed most points accordingly. I had to change the InstanceOfPredicate slightly - see Patch Set 6
58829,1,"Patch Set 4:It's ineviatble that the different attributes don't reside at the same location. E.g. attributed using directives:* GNU: using namespace inner __attribute__((__strong__));* C++11: [[attr]] using namespace NS;Either we could separate the C++ and GNU attributes on the node (ASTAttributeOwner), or we introduce a filter to allow only certain attribute specifier types to be visited at the corresponding location.The first option seems not that neat to me, as we would have a dependency on IASTAttributeOwner level to the more concrete concepts of GNU and C++ attributes.I dont' expect there to be a similar problem with other nodes where we already solved this problem, right?"
58831,0,"Patch Set 4:While working on attributes, could you please also take a look at https://bugs.eclipse.org/bugs/show_bug.cgi?id=413615. Thanks."
58832,0,"Patch Set 4:> We can extend IASTAttributeOwner to contain separate methods for accessing C++11 and GCC attributes and a convenience method for getting all attributes at once. Alternatively, the latter method can be external to IASTAttributeOwner.Sure, I'll do that. Leaving the method for accessing all attributes is required anyway, as there are locations where both attribute types are allowed (I have to check the sequence GCC handles them), in which we need to retain the order as well.> While working on attributes, could you please also take a look at https://bugs.eclipse.org/bugs/show_bug.cgi?id=413615. Thanks.Of course, it looks like it will go along with improving the attribues anyway."
58839,0,Change has been successfully merged into the git repository.
58842,0,Change has been successfully merged into the git repository.
58844,0,Change has been successfully merged into the git repository.
58852,0,Change has been successfully merged into the git repository.
58859,0,Change has been successfully merged into the git repository.
58860,0,Change has been successfully cherry-picked as a2a05a515aa3698e3e0ecdeb77a9baf241c93f10
58866,0,Change has been successfully merged into the git repository.
58869,0,Change has been successfully merged into the git repository.
58872,0,Change has been successfully merged into the git repository.
58873,0,Change has been successfully cherry-picked as f663000d9e8f0d7b153d10f1a2cb3c2a5f1807d2
58878,0,Change has been successfully merged into the git repository.
58882,0,Change has been successfully merged into the git repository.
58886,0,Patch Set 1:1st attempt to fix the bug. The patch set #1 seems to fix the problem but I still need to to analyze it carefully. Comments are welcome.
58889,0,"Patch Set 5: Verified+1 Code-Review+2 IP-Clean+1Thanks Wojciech, works like a charm ! This may have other beneficial effects as well."
58890,0,Change has been successfully merged into the git repository.
58894,0,Change has been successfully cherry-picked as 42d3f090d8d83436a605ebd793e64b83c2af38b9
58903,0,Change has been successfully cherry-picked as 96b62649cc32a64b173e25b8d768e1d97e32b2f7
58904,0,Change has been successfully cherry-picked as 0c7867a62f2a75fcbd64b46b1068b1a2710f3485
58909,0,Patch Set 1: Code-Review-1(1 comment)Looks good. I'd just like more documentation in the javadoc to explain what this root entry is and is not.
58913,0,Change has been successfully merged into the git repository.
58917,0,"Patch Set 1:Make sense, thanks I do this the next time."
58922,0,"Patch Set 5:(1 comment)Look great, I suggest to also check the command text, see inline comment."
58924,0,"Patch Set 5: Verified+1 Code-Review+2 IP-Clean+1Thanks for the clarification, if command text cannot be null than the change is ready IMHO. Thanks for this contribution."
58930,0,Change has been successfully merged into the git repository.
58931,0,Change has been successfully cherry-picked as c52eee2c40a40550e93fd222a577a9b6bb3f1ee6
58934,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/387/ : UNSTABLE
58938,0,Change has been successfully merged into the git repository.
58940,0,Change has been successfully merged into the git repository.
58945,0,Change has been successfully merged into the git repository.
58952,0,Change has been successfully merged into the git repository.
58956,0,Patch Set 5: Verified+1Build was successfull before rebase.
58957,0,Change has been successfully merged into the git repository.
58970,0,Change has been successfully merged into the git repository.
58975,0,Change has been successfully merged into the git repository.
58979,1,Patch Set 4: Code-Review-1(1 comment)I just had a quick look through the change and did not do an extensive review. But I have concerns regarding the performance impact of the current implementation. (see the other comments).
58985,0,Change has been successfully merged into the git repository.
59000,0,Patch Set 5: Verified+1Build was successfull before rebase.
59001,0,Change has been successfully merged into the git repository.
59010,0,Change has been successfully merged into the git repository.
59015,0,"Wilbert, I hope to see the next patch from you soon. Maybe this time fixing a warning?"""
59016,0,Change has been successfully merged into the git repository.
59018,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Thanks Patrik!
59019,0,Change has been successfully merged into the git repository.
59028,0,Change has been successfully cherry-picked as f841afbebd9d0ec0f5aaa90a8c8bf154953050d2
59032,0,Change has been successfully merged into the git repository.
59037,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Thanks Patrik!
59038,0,Change has been successfully merged into the git repository.
59043,0,Change has been successfully merged into the git repository.
59046,0,Change has been successfully merged into the git repository.
59049,1,Abandonedtest
59055,0,Change has been successfully pushed.
59058,0,Change has been successfully merged into the git repository.
59061,0,Change has been successfully merged into the git repository.
59065,1,Patch Set 5: Code-Review-1(1 comment)Found a problem with one of the cases.
59072,1,Patch Set 4: Code-Review-1(2 comments)there is nothing obvious wrong with the fix ;-)Please look at the comments for some minor details.
59076,0,Change has been successfully merged into the git repository.
59080,0,Change has been successfully merged into the git repository.
59084,0,Change has been successfully merged into the git repository.
59086,0,Change has been successfully merged into the git repository.
59092,0,Change has been successfully cherry-picked as e79c62ffa7ba335ddeb8ddbf13a5926dfc045ac5
59096,0,Change has been successfully merged into the git repository.
59100,0,Change has been successfully merged into the git repository.
59104,0,Change has been successfully merged into the git repository.
59108,0,Change has been successfully merged into the git repository.
59111,0,Change has been successfully merged into the git repository.
59114,0,Change has been successfully cherry-picked as ec5a81b17451ccda6a311ba2396cbe2c55ea7c4f
59116,0,Change has been successfully merged into the git repository.
59117,0,Change has been successfully cherry-picked as aa8b8b34c1a1dab1fd480626670c4d840baa6363
59120,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
59122,0,Change has been successfully merged into the git repository.
59124,0,Change has been successfully merged into the git repository.
59125,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/230/ : UNSTABLE
59137,0,Change has been successfully merged into the git repository.
59152,0,Change has been successfully merged into the git repository.
59154,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
59156,0,Change has been successfully merged into the git repository.
59157,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
59158,1,"Patch Set 1: Code-Review+1Code looks good, and working for the use-case described in bug 427556."
59160,0,Change has been successfully merged into the git repository.
59170,0,Change has been successfully merged into the git repository.
59174,0,Change has been successfully merged into the git repository.
59179,0,Change has been successfully merged into the git repository.
59184,0,Change has been successfully merged into the git repository.
59188,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/233/ : UNSTABLE
59190,0,Change has been successfully merged into the git repository.
59195,0,Change has been successfully merged into the git repository.
59196,0,Change has been successfully cherry-picked as a89b6646f882368489ae9366c0e71518913d5206
59200,0,Change has been successfully merged into the git repository.
59202,0,Change has been successfully merged into the git repository.
59205,0,Change has been successfully merged into the git repository.
59214,0,"Patch Set 5:Some missunderstandings in my comments, but ok.I thought of having two lines per editor instance test. LikeassertNull(ActiveCellEditorRegistry.getActiveCellEditor());assertNull(natTable.getActiveEditor());because both states need to be the same in usual cases.I also noticed the method name now. Why did you only call it getActiveEditor() and not getActiveCellEditor()? The field is also called activeCellEditor and it would be more consistent regarding the API.Despite these little naming issues, it looks good so far. I will start the CQ process."
59218,1,"Patch Set 1: Code-Review-1Hi,thanks for contributing via Gerrit. I know about the contribution in the ticket itself, but I didn't had time to dig into this in more detail.Some things about your contribution:1. It seems you have the trailing whitespace issue. Looking at the ScrollBarHandlerTemplate there seem to be more changes marked as there are really. Could you please try to solve that so checking the changes is easier?2. This change may break backwards compatibility in case the ActiveCellEditorRegistry was used outside NatTable to perform modifications inside. Like exchanging the data or deleting a current selected value (e.g. https://bugs.eclipse.org/bugs/show_bug.cgi?id=425176)Although the intention about the change is correct, I would like to keep the AbstractCellEditorRegistry for backwards compatibility. But it should be marked as deprecated, pointing to the new instance and telling about the issue when using it further. So users who will update won't get compile errors immediatelly.3. ScrollBarHandlerTemplateAlthough I'm not quite sure how to solve it better, I don't like the solution so far. The first thing is the instanceof check that seems to be not necessary. I thought you wanted to get rid of it?The second thing is that this change might not be compatible with the split viewport feature that was added lately. If you check the _703_HorizontalSplitViewportExample you will see that the sliders will be created by using the parent composite of the NatTable instance and are then added later on. So in case of split viewports, your change will break functionality."
59219,1,Patch Set 1:I pushed it to gerrit for easier communication. Doing stuff through Bugzilla is just too complicated.@1: There went something wrong when merging. I will correct that.@2: AbstractCellEditorRegistry: Will try to keep the instance and update it whenever the editor gets created/disposed.@3: I would need to do an API change in order to pass in the table to the handler. If this is OK i can do it. Otherwise i do not see how this can be solved. Thanks for the review :)
59221,0,"Patch Set 8: Verified+1 Code-Review+2 IP-Clean+1CQ approved, code looks good, thanks for the contribution"
59222,0,Change has been successfully merged into the git repository.
59224,0,"Patch Set 2: Code-Review-1(1 comment)Hi,thanks for the contribution. But it has some things you need to fix/add.1. Trailing white spaces. You need to ensure that there are no trailing whitespaces. You can configure that in git config, so that is handled automatically.2. I think there are some issues in SizeConfig. On getSize() you always calculate percentage sizes. But that call should only be performed if percentage sizing is enabled. Why did you remove that check?Also you forgot to invalidate your aggregate cache when calling setSize(). Currently you are only doing this on setDefaultSize() and setPercentageSize().3. I would also like to see test cases for your changes. With changing the aggregate calculation for caching you are changing quite a basic logic. This needs to be tested well. So there should be test cases for all cases.Greez,Dirk"
59225,0,"Patch Set 2:1. Thanks, I did not know this.2. I removed the check because it was done twice (once outside the method and once inside the method. Also the cache is invalidated on setSize() however the code comparison only shows this below your comment.3. Indeed, I shall try adding some."
59229,0,"Patch Set 3: Code-Review-1Hi,thanks for adding the test cases. But you didn't got rid of the trailing whitespaces. Have a look at the DataLayer and the MultiRowResizeCommandHandler.BTW, it would be great if you could add the same behaviour for column resizing. So we have a consistent handling for rows and columns.Greez,Dirk"
59230,0,"Patch Set 5: Verified+1 Code-Review+2 IP-Clean+1CQ approved, code looks good, thanks for the contribution"
59231,0,Change has been successfully merged into the git repository.
59236,0,Change has been successfully cherry-picked as 707c5157f35c438ba5e499d92a92083f07c77efd
59239,0,Change has been successfully merged into the git repository.
59240,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
59241,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
59242,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
59245,0,Patch Set 5: Verified+1 Code-Review+2 IP-Clean+1Thanks for the patience Alvaro.This is a great fix!
59249,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/346/ : UNSTABLE
59251,0,Patch Set 1: Code-Review-1 IP-Clean-1(14 comments)Nice job!Minor comments in-line.
59254,1,"Patch Set 3:I was jumping back and forth to figure out when 'count' was in octets and when it was in addressable units.  So, I refactored all the names from count to word_count when appropriate as was done for some (but not all methods).  I also cleaned up MIMemory from all the useless comments.I'll continue the review now."
59255,0,Patch Set 3: Verified+1 IP-Clean+1(4 comments)Just two last things to fix and we're good.Thanks!
59256,0,Patch Set 3:(4 comments)Patch set 4 is now available and addresses the comments on patch set 3.   There is one question still open.Thanks a lot for the updates from 'count' to 'word_count' I thought to use 'count' for addressable units but it see it was not valid for all cases.
59258,0,Change has been successfully cherry-picked as e49589af700c255f49e09d13395f53d7ed4e82cd
59259,0,Change has been successfully cherry-picked as d15325f7bd5bed7d231ff77b55f684581be19b73
59260,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Good find!
59262,0,Change has been successfully merged into the git repository.
59267,1,Patch Set 1: Code-Review-1(6 comments)The change from https://git.eclipse.org/r/#/c/22157 should be included with this patch now.I'll include my other observations on the bug.
59270,0,Change has been successfully merged into the git repository.
59276,1,"Patch Set 2:If you don't see any major issues with the current patch or you see sth that can be handled with the separate bug, please commit the change - I'm keeping in mind the incoming API freeze that I believe can block the changethanks in advance for review,Daniel"
59279,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/351/ : UNSTABLE
59283,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/293/ : UNSTABLE
59285,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/294/ : UNSTABLE
59286,0,"Patch Set 3:(9 comments)Looks good so far, please look at the comments for minor adaptions."
59287,0,Change has been successfully cherry-picked as c558463abee55727d9c47c4e776899af89887d95
59288,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/292/ : UNSTABLE
59290,0,Change has been successfully merged into the git repository.
59292,0,Change has been successfully merged into the git repository.
59293,0,Change has been successfully cherry-picked as d6b36055ee5f8d0f816f71580f00af60658a12ff
59304,0,Change has been successfully rebased as 6b62c39ec28374599cb1c6d8b7c2dd7c2d76e5dd
59306,0,Change has been successfully merged into the git repository.
59308,0,Change has been successfully cherry-picked as 6c47002cc9fe1e1ef97b1d7dd49229d4e3e5fd23
59309,0,Patch Set 1:Just a thought - is it better to replace:when( Boolean.valueOf( uiSession.isBound() ) ).thenReturn( Boolean.TRUE );with:doReturn( Boolean.TRUE ).when( uiSession ).isBound();it's shorter. What do you think?
59310,0,"Patch Set 1: IP-Clean+1(In reply to comment #3)> Just a thought - is it better to replace:> when( Boolean.valueOf( uiSession.isBound() ) ).thenReturn( Boolean.TRUE );> with:> doReturn( Boolean.TRUE ).when( uiSession ).isBound();> it's shorter. What do you think?The JavaDoc of doReturn() advises to use this method ""in those rare occasions when you cannot use Mockito.when(Object)"" and recommends to always use Mockito.when(Object) for stubbing ""because it is argument type-safe and more readable (especially when stubbing consecutive calls).""In this case, it's indeed much shorter and actually to read. However, should we start mixing different patterns for the same purpose (stubbing methods)?"
59313,0,Change has been successfully rebased as 6ddfa1f690c321b67e7a1bded19f7a168c32240f
59317,0,Change has been successfully cherry-picked as 79bd031d4a1942251723b8bbfaa91d5878ebf9d3
59325,0,Change has been successfully cherry-picked as f8ef302ce245f3afaaae3c0fc9ad7cb0b4c20dd8
59328,0,Change has been successfully cherry-picked as 9ce41fa500314cd68c40a9a6f7d720a90b523812
59334,0,Change has been successfully cherry-picked as deac75fa3148cdba17d286f67a896494acbe466a
59338,0,Change has been successfully cherry-picked as 09b464d5db356815147fe6900510cba476dcd3aa
59340,0,Change has been successfully merged into the git repository.
59348,0,"Patch Set 7: Code-Review+1 IP-Clean+1(6 comments)Looks good.  I had 2 flavours of comments:1) Opaque items it's always an IContributionItem, so the OpaqueElementUtils get and set methods could be better typed.2) there were 2 or 3 locations where we associated the element with the ICI in the renderer but we don't set the opaque or rendered item.It's up to you if you want to commit this and then fix those in a follow up or fix them and commit.Thanks,Paul"
59350,0,Change has been successfully merged into the git repository.
59351,0,Change has been successfully cherry-picked as 165cd482060ace0d9434a9ea6235ebda57e0a945
59355,0,Change has been successfully merged into the git repository.
59357,0,Change has been successfully merged into the git repository.
59358,1,Patch Set 1:What's the reason for this? Did you have problems without the retry option? Failing tests or something?
59359,1,Patch Set 1:A couple of our Windows users have reported sporadic file system access problems related to this piece of code in combination with antiviral/firewall tools. For one of these users the problem was fairly reproducible and he has confirmed that the patch has fixed the problem.
59360,0,Patch Set 1: Code-Review-1* the patch looks good* I think you should mention the reason for this change in the commit message
59367,0,Change has been successfully merged into the git repository.
59369,0,Change has been successfully merged into the git repository.
59375,0,Change has been successfully rebased as e94716d4cf7de6b3bbbe72a900a941f89f2267f6
59381,1,"Patch Set 2:Just one question: It looks like we are sending setData events when there is a horizontal scroll event in Grid. Anybody know why? If this isn't really needed, perhaps this would be a good opportunity to get rid of that or at least put a comment there why we do it."
59391,0,Change has been successfully merged into the git repository.
59393,0,Change has been successfully merged into the git repository.
59395,0,Change has been successfully merged into the git repository.
59398,0,Change has been successfully merged into the git repository.
59399,0,Change has been successfully cherry-picked as bab0c48bdaef9d46a0076030faeb3a5f36292566
59403,0,Change has been successfully merged into the git repository.
59404,0,"Patch Set 1: Code-Review-1(2 comments)Missing the required ""legal"" stuff, beside that, fine"
59411,0,Change has been successfully merged into the git repository.
59412,0,Change has been successfully cherry-picked as 13df0ad3f5e7fbf61ff37c3d30fa12c2ef4bc39f
59419,0,"Patch Set 1: Code-Review-1(11 comments)Hi GenevieveI like your effort to simplify the creation of tree viewers for displaying trace data that supports the TMF time range and selection synchronization. I created one simple viewer with hardcoded data and it was straight forward.However, I see a lot of overlap of this with the packages  org.eclipse.linuxtools.tmf.ui.viewers.statistics.model, org.eclipse.linuxtools.tmf.ui.viewers.statistics. The classes TmfBaseColumnData, TmfBaseColumnDataProvider and ITmfColumnDataProvider could be re-used here. Would it be possible to extract the common parts from the statistics packages and use it with the abstract tree viewer?"
59420,1,"Patch Set 1:(1 comment)Hi Bernd,Indeed, I took some inspiration from the statistics. And as I was talking with Alex, the statistics is unncessarily complicated, and with the analysis framework, the statistics framework is not as useful as it used to be.So once this is accepted, the statistics will be rewritten to make use of this simpler version and a lot of code will go! So I preferred to start from the minimal requirements, if it means adding new methods eventually, than try to remove from the existing code."
59421,1,"Patch Set 1:Well the statistic framework has some features which are currently not used and that's why it seems complicated for what it is used for. Unfortunately, it's only be used for event counts and it's not possible to see the potential of it. It could have been used for many other statistics. BTW, I didn't write the code but the design was based on my proposal to the student who did it during his internship. Please update the code according to the comments. Also, give credit to the original author of code that was migrated."
59422,0,Change has been successfully cherry-picked as 53d3fb1a59d1e1cae9153f97934ba9bb93d89b58
59424,0,"Patch Set 2:Hi Bernd, I added the column provider, as it may be useful for some cases and it doesn't add any overhead. But except for the interfaces, the classes themselves are too statistics centric to be re-used here. The statistics is a special use case of the tree viewer and it can be made to use these new classes. I'll leave that to someone else though, maybe as an exercice for the new students to start with TMF views?I took the column data and provider from the statistics framework. But for the abstract tree viewer and entries themselves, it is inspired from pretty much all other TMF views (time graph, xy charts, statistics)"
59430,0,Change has been successfully cherry-picked as b6a8bd5d67756a2f91bd95844f0210542455ec6b
59432,0,Change has been successfully cherry-picked as 5bed9977d9a4d19e6569bbe7db656356fe07a098
59434,0,Change has been successfully cherry-picked as 77388754f42f35de81e4d71bd589a2f488139ee3
59435,0,Change has been successfully cherry-picked as 35e86e62a400faad421e990514777146064287f3
59438,0,Change has been successfully cherry-picked as f230075305ddca679b6edf2d6dc7ffc473ffd5ff
59447,0,Change has been successfully merged into the git repository.
59448,0,Change has been successfully cherry-picked as 6afeb2c40976628b8695bc22c80cce412cdb33d2
59452,1,"Patch Set 3:Sorry, I missed the dependencies of certain patches. I'll fix it and upload a new version"
59456,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Verified by deploying the app to a Tomcat on another system. Looks good!
59457,0,Change has been successfully merged into the git repository.
59460,0,Change has been successfully merged into the git repository.
59468,0,Change has been successfully merged into the git repository.
59470,0,Change has been successfully merged into the git repository.
59472,0,Change has been successfully cherry-picked as 49b57d2eac06ee27b1df5170d2644cfecb43f0f4
59473,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good.
59476,0,Change has been successfully merged into the git repository.
59477,1,Patch Set 2:Sorry for the spam. I used the wrong change number in my tests to resolve Bug 427775.
59478,0,Change has been successfully cherry-picked as 68140ce2c79dad4f7752eac199e1256ccd15e1da
59482,0,Change has been successfully cherry-picked as 3f4c1fd75267b43b830a39fc47a170a3fec0f3f6
59483,0,Patch Set 2: Code-Review+2 IP-Clean+1Thanks guys ! Patch works fine...
59484,0,Change has been successfully merged into the git repository.
59487,0,Change has been successfully merged into the git repository.
59489,0,Change has been successfully cherry-picked as 26ea5ea42bf62050117c2e844d42da1fca6f191f
59490,0,Change has been successfully cherry-picked as 9b8c0cde9f94676986dcb9b8f385652121cbd7df
59493,0,Change has been successfully cherry-picked as 2951537fd0030ddc883b22ecf24ccf39b3ea0f04
59494,0,Change has been successfully cherry-picked as 34591234cdf3b4841f804a868a936c66e4b342f4
59497,0,Change has been successfully merged into the git repository.
59499,0,Patch Set 3: Verified+1 Code-Review+2 IP-Clean+1Good catch! I tested and confirmed we are no longer archiving junit tests twice with this patch.
59503,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Good catch! I tested this and confirmed we're no longer building the zip twice.
59507,0,Change has been successfully cherry-picked as f26733089d49d18117c8e6d79a20a67dd530eaee
59508,0,Change has been successfully cherry-picked as ddd6ee077ec1d3cf589b7e6660c86cba36bf6d66
59509,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1This would be great addition to the TmfBarChartViewer too
59513,1,"Patch Set 1:MenuItemSeparator is implemented in completely different class MenuItemSeparator.js, which never sends any notify operations. Events list does not enforce specific method implementation like it was before with ""listeners"". That's why ""rwt_SEPARATOR"" check is not needed. The ""rwt_BAR"" check was simply inlining the current code. But... as MenuBar is also implemented in a different class (MenuBar.js), I think this check is also obsolete."
59518,0,Change has been successfully merged into the git repository.
59520,0,Change has been successfully merged into the git repository.
59521,0,Change has been successfully cherry-picked as a6676b8dddc8e8ed940a907e66063e0366c1ca69
59524,0,Change has been successfully merged into the git repository.
59527,0,Change has been successfully cherry-picked as 0b0c65c28839e6b0ca24b64aae364eac7111ddca
59530,0,Change has been successfully cherry-picked as 220ab761a6dcff3d93ae59d92fb2ed6dcab641cb
59532,0,Change has been successfully cherry-picked as aa332423b8322a5b6d4f889fe657099ff6e79ecd
59535,0,Change has been successfully merged into the git repository.
59537,0,Change has been successfully cherry-picked as 07c134cd5c45ec088218f7571fa2ab0a87cf2e5d
59540,0,Change has been successfully merged into the git repository.
59546,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Thanks Baruch! Welcome to Eclipse. Looking forward to see more quality patches.
59547,0,Change has been successfully merged into the git repository.
59549,0,Change has been successfully cherry-picked as f2979aefdd253257701aacab5457c556894eafab
59551,0,Change has been successfully merged into the git repository.
59556,0,Change has been successfully merged into the git repository.
59559,0,Change has been successfully merged into the git repository.
59562,0,Change has been successfully merged into the git repository.
59566,0,Change has been successfully cherry-picked as e1ec516aee181b682b7f4d9cfe9014cf11442ab7
59573,0,Change has been successfully cherry-picked as b88d2f5a599f4f33f57e53ce41eda0fa799e2da6
59574,0,Change has been successfully cherry-picked as dba80409d929b4480278801a85f176a62cd0408c
59581,0,Change has been successfully merged into the git repository.
59584,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5536/ : UNSTABLE
59587,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5539/ : UNSTABLE
59588,0,Change has been successfully merged into the git repository.
59589,0,Patch Set 1: Code-Review-1(2 comments)Looks great overall.Please have a look at my inline comments.
59590,0,"Patch Set 1:(2 comments)I did the small improvements in order to include the change in the next release, as the IP-log will be prepared soon."
59592,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5535/ : UNSTABLE
59597,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/55/ : UNSTABLE
59604,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/291/ : UNSTABLE
59605,0,"Patch Set 9: Verified+1 Code-Review+2 IP-Clean+1(1 comment)Looks good, just one minor recommendation."
59608,0,Change has been successfully cherry-picked as 2a935a9926ff84f71622e87c4d70bd0e5a2c9bad
59613,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/290/ : UNSTABLE
59619,0,Change has been successfully cherry-picked as 31f3701c4457019c7f0ab358354ae961a7921613
59620,0,Patch Set 3: Verified+1 Code-Review+2 IP-Clean+1Looks good. We might want to add an interface ITraceValidationStatus soon.
59622,0,Change has been successfully merged into the git repository.
59628,0,Change has been successfully merged into the git repository.
59630,0,Patch Set 2: Code-Review-1That pattern looks good.  But it should then replace the current method and consumers of the current method should be updated to use the post the event.PW
59633,0,Patch Set 5: Verified+1 Code-Review+2 IP-Clean+1+1 Thanks Lars !
59634,0,Change has been successfully merged into the git repository.
59638,0,Change has been successfully cherry-picked as ddc2827d7b7686cf359671d9f230568d8c7caa81
59648,0,Change has been successfully merged into the git repository.
59651,0,Patch Set 4: Verified+1 Code-Review+2 IP-Clean+1Looks good. Thanks Ren├®
59652,0,Change has been successfully merged into the git repository.
59660,0,Change has been successfully cherry-picked as 226158ba613d71daff67d6fff292977cd19247d8
59665,0,"Patch Set 5: Verified+1 Code-Review+2 IP-Clean+1Excellent, thanks a lot !!"
59666,0,Change has been successfully merged into the git repository.
59668,0,Change has been successfully cherry-picked as 93476501b46854cef5cf5d682a6ee2c33a0d336e
59675,0,Change has been successfully merged into the git repository.
59679,1,"Patch Set 6:(1 comment)Just a minor remark, you have unnecessary whitespace in your commit. Can you use Eclipse4.4M5 or higher and remove them? Before that JDT added them (based on a bug)."
59682,0,Change has been successfully merged into the git repository.
59685,1,"Patch Set 5:(4 comments)Sorry, they were against patch set 4.  I've moved them to patch set 5."
59693,0,Change has been successfully merged into the git repository.
59694,1,"Patch Set 1: Code-Review+1Since to build recommenders even in eclipse ide where line ending problems are not there, we have to once build it in the command line. This is particularly helpful for people who are using msysgit on windows with autocrlf set to true.As that is the recommended setting for git on windows, but fails the build for recommenders."
59696,0,Change has been successfully merged into the git repository.
59701,0,Change has been successfully merged into the git repository.
59703,0,Change has been successfully cherry-picked as 0cb1a3e05dbb9b3a5ea1aeaa22087d6634db85df
59706,0,Change has been successfully merged into the git repository.
59707,0,Patch Set 3: Verified+1 Code-Review+1 IP-Clean+1The changes look good to me. I'm +1 on moving the Java 6 anyway.
59710,0,"Patch Set 5:what JVM does Maven use by default? Try ""mvn -version"" and check it's using a JVM that supports Java 6."
59714,1,"Patch Set 5:Looks like I've found the cause of my mvn build failure. @Mickael, could you add this to your patch set:diff --git a/development/org.eclipse.wst.jsdt.astview/build.properties b/development/org.eclipse.wst.jsdt.astview/build.propertiesindex 88e69c7..f7eb022 100644--- a/development/org.eclipse.wst.jsdt.astview/build.properties+++ b/development/org.eclipse.wst.jsdt.astview/build.properties@@ -18,4 +18,3 @@ src.includes = buildnotes_astview.html  source.. = src/ output.. = bin/-jre.compilation.profile = J2SE-1.4"
59718,1,"Patch Set 4:Mickael, why didn't you add other plugins here (all the rest of o.e.w.jsdt.* plugins like o.e.w.jsdt.debug.*, o.e.w.jsdt.manipulation.*, o.e.w.jsdt.support.* and the rest of o.e.w.jsdt.tests.*)? IMHO, the same work should be done for all the plugins."
59724,0,Change has been successfully merged into the git repository.
59726,1,"Patch Set 3: Code-Review-1> I think if I use the fields after the for loop I can also kick the tv.refresh(true); statementWhy do you think you need to move #setInput in order to remove the refresh? The table isn't drawn yet, so I'd say the refresh is useless anyway."
59727,1,"Patch Set 3:Moving is not required, but look weird to me to use the fields variable after it is set as input. But if you prefer I move it back."
59728,1,"Patch Set 3: Verified-1 Code-Review-2 IP-Clean+1Sorry for my somewhat rhetorical question, I thought you'd see the problem with your change when looking at it again ;-).With your change, the elements are no longer checked, because the table is empty at that point."
59730,0,"Patch Set 4:<H├╝stel>... Yes, of course. At least we will can kick the refresh on the viewer.Gerrit review updated. Thanks as always for the feedback."
59732,1,"Patch Set 2: Verified+1 Code-Review-1 IP-Clean+1Two issues:- ""wrong"" bug number in copyright notice- should use local variable 'fields' to set input"
59733,1,"Patch Set 2:Thanks for the review, I think if I use the fields after the for loop I can also kick the tv.refresh(true); statement. I update the review accordingly."
59737,0,Change has been successfully merged into the git repository.
59739,0,Change has been successfully merged into the git repository.
59743,0,Change has been successfully cherry-picked as 276856407d8fddb39a904297ff2fda3cb8b2c65c
59746,0,Change has been successfully merged into the git repository.
59753,0,Change has been successfully merged into the git repository.
59754,0,Change has been successfully cherry-picked as d10b49b9a9b1e7edd826545af19a179c3c864f59
59762,0,Change has been successfully cherry-picked as 1b98a506041328cff54388e597a28ceb3cda84c5
59768,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Changed my mind. Merging now..:)
59769,0,Change has been successfully merged into the git repository.
59770,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/186/ : UNSTABLE
59775,0,Change has been successfully merged into the git repository.
59779,0,Change has been successfully merged into the git repository.
59781,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1thanks :-)
59782,0,Change has been successfully merged into the git repository.
59785,0,Change has been successfully merged into the git repository.
59786,0,Patch Set 1: Code-Review-1(1 comment)nice improvement :)I propose to- show relative dates (easier to read and needs less space) or add an option to switch the format like done in the history view- either show both author and committer information or show commit date instead of author date since that gives the time when this commit was last updated which IMO is more interesting than the authoring date
59791,0,Change has been successfully merged into the git repository.
59805,1,Patch Set 15: Code-Review+1A good starting point for symlink tests regarding checkout. +1 from me.An idea for more tests: All the tests here work mainly with two different states. What's in the current commit and what's in the commit I want to checkout. During checkout there are two more states which could differ from these two states. The index and the working tree. So we need (maybe in subsequent changes) tests where the working tree is dirty (differs from index) and where we have staged but uncommitted changes.
59816,0,Change has been successfully merged into the git repository.
59840,0,Change has been successfully merged into the git repository.
59854,0,Change has been successfully cherry-picked as ea504d11d7f820d3b5ce236a201c0e99dd83d520
59856,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/333/ : UNSTABLE
59858,0,Change has been successfully merged into the git repository.
59860,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/235/ : UNSTABLE
59861,0,Patch Set 4:(6 comments)Looks very good! A few comments inline.
59863,0,Patch Set 1: Code-Review-1(6 comments)This looks very good. A few things inline.Do you know why the formatting has changed? I'm wondering if we should reformat all source files now or if we need to update settings.
59872,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/233/ : UNSTABLE
59877,0,Change has been successfully merged into the git repository.
59892,0,Change has been successfully merged into the git repository.
59913,0,Change has been successfully cherry-picked as 519e4fa76b01b69f1b56f2852524cb1d2d42edd1
59922,0,Change has been successfully merged into the git repository.
59924,0,Change has been successfully merged into the git repository.
59932,0,Change has been successfully merged into the git repository.
59938,0,Change has been successfully merged into the git repository.
59941,0,Change has been successfully merged into the git repository.
59944,0,Change has been successfully merged into the git repository.
59946,0,Change has been successfully merged into the git repository.
59954,0,Change has been successfully merged into the git repository.
59963,0,Change has been successfully merged into the git repository.
59966,0,Change has been successfully merged into the git repository.
59975,0,Change has been successfully merged into the git repository.
59977,0,"Patch Set 1: Code-Review-1 IP-Clean+1There's obviously something wrong with the tests, I'll let you take a look at it, but codewise, it looks all right. I'm ready to +1 it as soon as it verifies!"
59982,1,"Patch Set 2:The unit test rework helped debug the hang, but then the patch ended up bigger than first intended. Sowwy! :S"
59983,0,"Patch Set 2: Code-Review-1(1 comment)I tick when reading this comment, but that's it. Otherwise, looks good to me."
59990,0,Change has been successfully cherry-picked as d6a808ad17da4a478e8b075d3f28cd2e061afa07
59992,0,Change has been successfully cherry-picked as 1552e03022aed275d512c0b665f10b355565ba15
59996,1,Patch Set 3:This changes where bindings are coming from (incredibly high risk change).  What is the difference between those 2 locations?  What causes something to be in one and not the other?  Those questions have to be answered before we can move forward.
59997,0,"Patch Set 3:Hi Paul, Thank you for your comment. I have pushed a change set that modifies BindingModel instead of BindingService. This is partial change, because I think other references to BindingManager should be replaced by EBindingService as well. Do you think it's a good direction?"
59998,1,"Patch Set 3:I think that completely changes a source of bindings, and so I'd like to see a description of what the differences are between the 2 sources (and why some bindings aren't being included in the BindingManager analysis)."
59999,1,"Patch Set 3:EBindingService.getActiveBindings() returns bindigs from binding tables, that are earlier populated with bindings from BindingManager and bindings added directly to model. EBindingService.getActiveBindings() returns current state of the model, and state of BindingManager during application initialization. Bindings added to model are not propagated to BindingManager, this is why some bindings are missing in key preferences. By merging keybindings from current states of BindingManager and model we get complete set of key bindings.I attach an alternative change (result is the same as previously). Actually, in the new patch, the new BindingManager instance should be fed with all bindings from model (regardless scheme), but EBindingService does not provide such method."
60001,0,Change has been successfully merged into the git repository.
60010,0,Change has been successfully merged into the git repository.
60012,1,Patch Set 2:Konrad: Can you please file a bug for this? Sounds like a bug in platform (SWT?). Also please describe whether your problem is with the text field as seen when right-clicking a commit and selecting Open in Commit Viewer or with the commit message editor as in the commit dialog/staging view.
60013,1,"Patch Set 2:Hi Robin, I submitted the bug here: https://bugs.eclipse.org/bugs/show_bug.cgi?id=428029.Hopefully the attached screenshot makes it clearer than my previous message which view I'm referring to. The other commit views you mention don't flicker."
60015,0,Change has been successfully cherry-picked as 4db62c2302a02385f543e2154860739fb1598c92
60016,0,Change has been successfully cherry-picked as 28bccd4db781be8ea36a54ae1d18040bedba06f7
60019,0,Change has been successfully cherry-picked as 4d237f568d66804d59e7c70f3ab8b1e65a850806
60021,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Looks good. Let's try to update the copyright years in the upcoming patches.
60027,0,Change has been successfully merged into the git repository.
60029,1,"Patch Set 1: Code-Review+2I think in the long run, we should remove the getInstance methods and replace `foo.Bar.getInstance()` with something like `rwt.context.getBar()`.However, this change allows us to get rid of the ""type"" property in Class.js, so I think we should go for it."
60032,0,Change has been successfully merged into the git repository.
60035,0,Change has been successfully merged into the git repository.
60037,0,Change has been successfully merged into the git repository.
60042,0,Patch Set 2: IP-Clean+1Thanks Steffen!
60048,0,Change has been successfully merged into the git repository.
60049,0,Change has been successfully cherry-picked as 5e0fac8075a71d75bcbf899630ecd3046001d3b5
60053,0,Change has been successfully merged into the git repository.
60054,0,Change has been successfully cherry-picked as fe87979decae2ca05ab1b2d64a84a7d48431607a
60057,0,Change has been successfully merged into the git repository.
60058,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/180/ : UNSTABLE
60063,0,Change has been successfully merged into the git repository.
60068,0,Change has been successfully merged into the git repository.
60071,0,Change has been successfully merged into the git repository.
60073,0,Change has been successfully merged into the git repository.
60077,0,Change has been successfully merged into the git repository.
60081,0,Change has been successfully merged into the git repository.
60083,0,Change has been successfully merged into the git repository.
60087,0,Change has been successfully merged into the git repository.
60089,0,"Patch Set 2: Verified+1 IP-Clean+1Works fine, making verified."
60090,0,Change has been successfully merged into the git repository.
60105,0,Change has been successfully merged into the git repository.
60121,0,Change has been successfully merged into the git repository.
60137,0,Change has been successfully merged into the git repository.
60140,0,"Patch Set 2: Code-Review+2 IP-Clean+1(1 comment)Thank you, Olav."
60145,0,Change has been successfully merged into the git repository.
60148,0,Change has been successfully merged into the git repository.
60155,0,Change has been successfully merged into the git repository.
60156,0,Change has been successfully cherry-picked as 94d21daeae0168ea51cb3da23179d70e039ff524
60158,0,Patch Set 1: Code-Review+1Looks good.  We'll just wait for PMC approval to submit.
60160,0,Change has been successfully merged into the git repository.
60162,0,"Patch Set 7: Verified+1 Code-Review+2 IP-Clean+1Looks good, thanks for the contribution."
60166,0,Patch Set 8: Verified+1 Code-Review+2 IP-Clean+1Looks good thanks for the contribution.
60167,0,Change has been successfully merged into the git repository.
60171,1,Patch Set 2:There is a bug about that https://bugs.eclipse.org/bugs/show_bug.cgi?id=415230 . Using the native GTK API should be bette as it would delegate managing all these.
60172,0,"Patch Set 2:Alexander, I'm not that familiar with GTK to answer if it's possible to create a button without having to create compound container (as it's asked in #415230). But if that issue will be solved, probably bug #314815 will be solved too. My solution is a way simpler that what is proposed in #415230. To fix this buggy effect: https://bugs.eclipse.org/bugs/attachment.cgi?id=187549 it's enough to hide a label if it's empty. That's it.My solution is just hides the label if it's text is not specified, pretty the same way as it's already done with images."
60175,0,Change has been successfully merged into the git repository.
60178,0,Change has been successfully merged into the git repository.
60184,0,Change has been successfully merged into the git repository.
60197,0,Change has been successfully merged into the git repository.
60211,0,Change has been successfully merged into the git repository.
60227,0,"Patch Set 14: Looks good to me, but someone else must approve"
60250,0,Change has been successfully merged into the git repository.
60259,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/264/ : UNSTABLE
60266,0,Change has been successfully merged into the git repository.
60270,0,Change has been successfully merged into the git repository.
60272,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/306/ : UNSTABLE
60280,0,Patch Set 1:Would it make more sense to have BooleanAttributeEditor override needsValue instead of doing the test based on the attribute type? Is the special behaviour associated with the type or with BooleanAttributeEditor?
60281,0,"Patch Set 1:(In reply to comment #5)> Patch Set 1:> > Would it make more sense to have BooleanAttributeEditor override needsValue> instead of doing the test based on the attribute type? Is the special behaviour> associated with the type or with BooleanAttributeEditor?That's probably a better idea. BooleanAttributeEditor will always have a set value because it's getValue() method returns a boolean. Other AttributeEditors might behave in a similar way, but I think they'd have to be done on a case by case basis."
60283,0,Change has been successfully merged into the git repository.
60292,0,Change has been successfully merged into the git repository.
60298,0,Change has been successfully merged into the git repository.
60299,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/97/ : UNSTABLE
60302,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/106/ : UNSTABLE
60303,0,Patch Set 7: Verified+1 Code-Review+2 IP-Clean+1Test failures look unrelated. Great stuff!
60304,0,Change has been successfully merged into the git repository.
60306,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/100/ : UNSTABLE
60313,1,"Patch Set 2:The failure is not in a module that I modified, my stuff actually passed (org.eclipse.mylyn.reviews.ui)[INFO] Reactor Summary:[INFO] [INFO] Mylyn Reviews ..................................... SUCCESS [0.656s][INFO] org.eclipse.mylyn.reviews.core .................... SUCCESS [5.413s][INFO] org.eclipse.mylyn.reviews.edit .................... SUCCESS [0.830s][INFO] org.eclipse.mylyn.gerrit.core ..................... SUCCESS [2.270s][INFO] org.eclipse.mylyn.gerrit.core.tests ............... SUCCESS [19.453s][INFO] org.eclipse.mylyn.reviews.ui ...................... SUCCESS [1.457s][INFO] org.eclipse.mylyn.reviews.feature ................. SUCCESS [0.328s][INFO] org.eclipse.mylyn.gerrit.ui ....................... SUCCESS [1.132s][INFO] org.eclipse.mylyn.gerrit.feature .................. SUCCESS [0.269s][INFO] org.eclipse.mylyn.gerrit.target ................... SUCCESS [0.050s][INFO] org.eclipse.mylyn.gerrit.tests .................... FAILURE [1.266s]"
60316,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/105/ : UNSTABLE
60318,0,Patch Set 5:(9 comments)Overall this works well. I have a few comments inline. One that's missing are unit tests. Particularly for the annotation navigation that would be useful but I have no idea how much work that would be to create.
60321,0,Change has been successfully pushed.
60325,0,Change has been successfully merged into the git repository.
60335,0,Change has been successfully merged into the git repository.
60340,0,Change has been successfully merged into the git repository.
60344,0,Change has been successfully merged into the git repository.
60346,1,"Patch Set 1: Code-Review+2I think the fix is safe, since it only affects the height, not the width. So we won't get into any trouble with line breaks and cut-offs."
60348,0,Change has been successfully merged into the git repository.
60356,0,Change has been successfully merged into the git repository.
60359,0,Change has been successfully merged into the git repository.
60364,0,Change has been successfully merged into the git repository.
60369,0,Change has been successfully merged into the git repository.
60370,0,Patch Set 1:(1 comment)works nicely
60380,0,Change has been successfully merged into the git repository.
60381,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Looks good.
60382,0,Change has been successfully merged into the git repository.
60383,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good.
60386,0,Change has been successfully cherry-picked as d920d8166991cd0fa446f316b247908e98a7315d
60391,0,Change has been successfully merged into the git repository.
60392,1,Patch Set 1:Did this change get sucked in via another commit?  Could it be abandoned?
60393,1,"Patch Set 1:In my local repository I don't see setup() and tearDown() methods. After our discussion on the ticket to solve the test failures, we've found out that the reason for the failure was something else. So you decided to not apply the modified test cases with setup and teardown.On the one hand it is not bad practice to have test cases with setup and teardown and it will make adding test cases easier.On the other hand, the test cases are succeeding the way they are and everything is fine.So it's up to you if you want to add the modifications or abandon them. It should have no impact from the testing perspective. :)"
60397,0,Change has been successfully cherry-picked as ceaa45be9bec946e33b33da512943d08d48f2d89
60399,0,Change has been successfully merged into the git repository.
60401,0,Change has been successfully merged into the git repository.
60405,0,Change has been successfully merged into the git repository.
60407,1,"Patch Set 4:Change is ready to be reviewed. I think it is pretty risk less to apply it. I have included a null check, in case of of the argument is null and return in this case a slightly extended message."
60412,0,Change has been successfully merged into the git repository.
60419,0,Change has been successfully merged into the git repository.
60425,0,Change has been successfully merged into the git repository.
60428,0,Change has been successfully merged into the git repository.
60430,0,Change has been successfully merged into the git repository.
60431,0,Change has been successfully merged into the git repository.
60434,0,Change has been successfully merged into the git repository.
60436,0,Change has been successfully merged into the git repository.
60437,0,Change has been successfully cherry-picked as f227a697cb4bc2f5a4b823976d250498ad5abae2
60440,0,Change has been successfully merged into the git repository.
60444,0,Change has been successfully merged into the git repository.
60448,1,Patch Set 4: Verified+1 Code-Review+2 IP-Clean+1Looks like we have no Gerrit build trigger for eclipse.runtime? In this case I merge directly. I will open a bug for this build trigger.
60453,1,"Patch Set 3: Code-Review-1You need to increment the bundle and pom version to 1.3.100.Also, it would be good to only submit changes with dependencies if there are real dependencies, otherwise a/this Gerrit change is unnecessarily blocked."
60455,1,"Patch Set 6: Verified+1 Code-Review+2 IP-Clean+1After a little fight with Gerrit, this should work now."
60456,0,Change has been successfully merged into the git repository.
60460,0,Change has been successfully merged into the git repository.
60463,0,Change has been successfully merged into the git repository.
60465,0,Change has been successfully merged into the git repository.
60467,0,Change has been successfully merged into the git repository.
60469,0,Change has been successfully merged into the git repository.
60471,0,Change has been successfully merged into the git repository.
60481,0,Change has been successfully merged into the git repository.
60488,0,Change has been successfully merged into the git repository.
60490,0,Change has been successfully merged into the git repository.
60497,1,"Patch Set 2: IP-Clean+1Code is clean and looks good, is there a reason to lazy load it? Performance or other?"
60502,1,"Patch Set 4: Code-Review+1 IP-Clean+1This looks good to me, it fixes Alexandres concerns."
60503,0,Change has been successfully cherry-picked as 889208687fedea9bd99e54e90474371585c45fea
60505,1,"Patch Set 5: Code-Review+1I was concerned about the constructor that was calling init(), so that it could still create a thread at construction time (which is the bad thing FindBugs etc. warns you about).But actually that constructor isn't used in anything except tests! So we could just remove it next."
60512,1,"}I just tried a commit and push to Gerrit again thinking I may not have successfully done it Wednesday. The commit seemed to work (where I clicked the amend previous commit button) but when I try to push to Gerrir I get a popup that it was rejected with a status 'remote rejected' a message in the message details box that says 'no changes made'.Should I just abandon this fix (again) and resubmit from scratch with what I posted in this message as the default filter set?"""
60514,0,"Patch Set 2:RolandIn response to your questions, viewing the history forPreferenceSyncFileFilter.java,1) The commit message looks identical, including change id to what's in thecommit message box at the top of the page athttps://git.eclipse.org/r/#/c/20637/2) The diff in the commit message in history view does not have the code changethat is my workspace. It has the same diff that I get when I clickthe unified diff link for the file on the web page.3) I think you're asking about ID numbers in the id column of the history view.The top id number is 0874496. I do not see the id 20f2e7 anywhere in thelist.4) The second commit from the top has the id 521dad6 which was my first attemptat committing and pushing the change. The third id is 69082ff, for bug410646. I do not see id 4683c3e anywhere in the list in history view.Looking at the history view, there's what looks like a tree view just to theright of the history column. The tree looks like a straight line except that there's a node branched off at id 521dad6 (my first attempt)Thanks for your patience and help in getting this done."
60515,1,Patch Set 2:In the history view right click on 521dad6->Reset->Mixed. Make sure to amend when committing and push.Given that you have a commit newer then 521dad6 it seems you must before have accidentally done a commit without amend. The reset (mixed or soft doesn't matter) discards a commit without discarding the content in the workspace.
60521,0,Change has been successfully rebased as 9fcd88e55bbc8cd7917ad70559d85d8fdccb4a1a
60526,0,Change has been successfully merged into the git repository.
60528,0,Patch Set 1:Please add your credentials to the copyright notice and update the copyright date. Thanks!
60532,0,Change has been successfully merged into the git repository.
60536,0,Change has been successfully merged into the git repository.
60541,0,Change has been successfully merged into the git repository.
60545,0,Change has been successfully merged into the git repository.
60555,0,Change has been successfully merged into the git repository.
60557,0,Change has been successfully cherry-picked as 5eb620020a961dec6f1c40c5c28ed7c248629476
60562,0,Change has been successfully merged into the git repository.
60564,0,Change has been successfully merged into the git repository.
60568,0,Change has been successfully merged into the git repository.
60572,0,Change has been successfully merged into the git repository.
60577,0,Change has been successfully merged into the git repository.
60584,0,Change has been successfully cherry-picked as 0b73631f419237ab9c4c9decc50a79e243844556
60591,0,"Patch Set 1:Thanks Mickael, the changes look good to me. There's one additional thing: for some of the bundles it's the first change after 4.3 and hence we need to increase the bundle version's service segment by 100 for those bunldes. The same change needs to be done in the pom.xml."
60598,0,Change has been successfully merged into the git repository.
60602,0,"Patch Set 3:Thanks Mickael, the changes look good to me. There's one additional thing: for some of the bundles it's the first change after 4.3 and hence we need to increase the bundle version's service segment by 100 for those bundles. The same change needs to be done in the pom.xml."
60604,1,"Patch Set 3: Verified+1 Code-Review+2 IP-Clean+1Usually, not all test/example bundles are touched. Especially examples get touched near the end of the release. I now just realized, that due to Maven we had to update the parent version to 4.4.0 in every pom and hence all bundles actually changed. Sorry for the extra round."
60607,0,Patch Set 1:(1 comment)Thanks for the fix. I'll review right after M5 is promoted.
60608,1,"Patch Set 4: Verified+1 Code-Review+2 IP-Clean+1Usually, not all test/example bundles are touched. Especially examples get touched near the end of the release. I now just realized, that due to Maven we had to update the parent version to 4.4.0 in every pom and hence all bundles actually changed. Sorry for the extra round."
60609,0,Change has been successfully merged into the git repository.
60610,0,Change has been successfully cherry-picked as d613b149a06e728ffd000fc9b5f398a542a4e80f
60612,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/276/ : UNSTABLE
60618,0,Change has been successfully merged into the git repository.
60619,0,"Patch Set 1:Chris, Wyatt, if you could take a look at this on Tue it would be appreciated. I'd like to try to get into M5 if possible."
60621,0,Patch Set 1: Verified+1 Code-Review+1 IP-Clean+1This change looks fine to me.
60623,0,Change has been successfully merged into the git repository.
60625,1,"Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Looks good, since we are now using findNode we can get rid of the call to get the text buffer (save a Promise). I'll make that update separately"
60626,0,Change has been successfully merged into the git repository.
60627,0,Change has been successfully cherry-picked as 5e75ddea0cc7a9467c67ad9df3f348325a578d07
60631,0,Change has been successfully cherry-picked as a86e9f250e2ae0b13f363a7c00de2f0c7e6210cc
60634,0,Change has been successfully cherry-picked as 4ea2e367ca6ca95b1ad8a040f059b296cf0a5f54
60635,0,Change has been successfully cherry-picked as fa34783607c2ad127132af5ca7cd396e60260ed0
60638,0,Change has been successfully cherry-picked as 76b5f13031cab78071c3ef22f6d0fd38a18ca4a5
60640,0,Change has been successfully cherry-picked as 85b01185f64c1ca473157243e9b707ae78f407e5
60643,0,Change has been successfully cherry-picked as 223c838209313bf7b7df4ad6271bad87e002c8ad
60645,0,Change has been successfully merged into the git repository.
60647,0,Change has been successfully merged into the git repository.
60648,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/emf-compare.gerrit/775/ : UNSTABLE
60653,0,Change has been successfully merged into the git repository.
60655,0,Change has been successfully merged into the git repository.
60656,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/emf-compare.gerrit/773/ : UNSTABLE
60660,1,Patch Set 3: Verified+1 Code-Review+2 IP-Clean+1These calls to getContentTypes are extremely costly. Reducing them is always welcome :).
60661,0,Change has been successfully merged into the git repository.
60664,0,Change has been successfully merged into the git repository.
60666,0,Change has been successfully merged into the git repository.
60671,0,Change has been successfully merged into the git repository.
60673,0,Change has been successfully merged into the git repository.
60676,0,Change has been successfully merged into the git repository.
60678,1,"Patch Set 1:Paul, OK to commit. I think this check is really meaningless."
60684,0,Change has been successfully merged into the git repository.
60688,0,Change has been successfully cherry-picked as f9bdf28321e73b23261b956bcffa003af7faf0d4
60689,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/273/ : UNSTABLE
60691,0,Change has been successfully cherry-picked as 8d09935cafd0ff550a72aa525b20eb7a6406bad3
60692,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/272/ : UNSTABLE
60696,0,Change has been successfully cherry-picked as de4ee0753dd431cfe23a1b75786eabadede322d9
60702,0,Change has been successfully merged into the git repository.
60706,0,Change has been successfully cherry-picked as 4ce12a55db57a91866888669c897202e9eccb2cb
60709,0,Change has been successfully cherry-picked as 5bbf91b9bcfb90c7a93e94a453d15acf41f9339a
60713,1,"Patch Set 1:The FullDiskReadWhileWritingTest in https://git.eclipse.org/r/#/c/20526 passed 10 times in 10 attempts for me (both with and without this patch). Was I just very lucky? ;)I did get some concurrency exceptions in the InMemory test, that's due to the total lack of re-entrency in the InMemoryBackend. But it shouldn't be related to this patch."
60718,0,"Patch Set 1:Good points! I forgot about the fireRequest() we wanted to remove, I can add this too."
60721,0,"Patch Set 3: Code-Review+1 IP-Clean+1This looks good to me, this looks like it'll make the code cleaner and memory footprint infinitesimally smaller."
60725,0,Change has been successfully cherry-picked as 4471d03b209090d379d9bcd7902b2b0122f42152
60726,0,Change has been successfully cherry-picked as 9aa895286385638b8d8dde255183b23c3a82d9f8
60727,0,"Patch Set 1: Code-Review+1 IP-Clean+1Looks good to moi, I hope we'll have a test case to prove that this works... I cannot click on verified otherwise."
60733,0,Change has been successfully merged into the git repository.
60742,0,Change has been successfully merged into the git repository.
60745,0,Change has been successfully cherry-picked as 390ed2f776c7d5412486a0d5c9412ed0536ecddd
60746,0,Change has been successfully cherry-picked as ec6feb535590878fc39e2f1569df6657e42521cc
60748,1,"Patch Set 2: Code-Review+1 IP-Clean+1Looks good to me. We have two patches for one bug but I like that, it makes reviews and bisection."
60754,0,Change has been successfully merged into the git repository.
60761,1,Patch Set 3: Code-Review-1 IP-Clean+1This patch doesn't build due to disposition rest test not finding the main test suite - error in pom.xml.
60766,0,Change has been successfully merged into the git repository.
60774,0,Change has been successfully merged into the git repository.
60781,0,Change has been successfully cherry-picked as dc3f6083007e35436d569621f8b52ccbe9fb6374
60784,0,Change has been successfully cherry-picked as c5a17a4a6025ba8c30a96deec1c6c38b1697fa27
60785,0,"Patch Set 1: Code-Review+1 IP-Clean+1This looks good to me, but we need test cases."
60786,0,Patch Set 1: Code-Review+2Test cases are coming!  https://git.eclipse.org/r/#/c/20526/
60789,0,Change has been successfully cherry-picked as 597291cb36f506ed7865c8fdab82dadc947e3834
60792,0,Change has been successfully cherry-picked as 4a01322c4c1cee9b4ebd5ce1b92b40bbd651e96e
60801,0,Change has been successfully merged into the git repository.
60804,0,Change has been successfully cherry-picked as 3c99e03489b12a77267f98b01c3e07943d14a8bc
60807,1,Patch Set 1: Code-Review-1DisplayLCA_Test.testReadCursorLocation is missing the @Test annotation.I've noticed that DisplayLCA.handleOperation is static and identical to the function used in AbstractWidgetLCA. Can we move it to a Util class? How about ProtocolUtil? Better ideas?One minor thing: let's use an enhanced for loop in DisplayLCA.visitWidgets.
60808,0,"Patch Set 1: -IP-CleanI'm using the principle - create once, copy if used again, extract to utility class if used more than 2 times. :-)"
60810,0,"Patch Set 1: -Code-Review(In reply to comment #5)> I'm using the principle - create once, copy if used again, extract to utility> class if used more than 2 times. :-)You're so right! I agree."
60814,0,Change has been successfully merged into the git repository.
60815,0,Change has been successfully cherry-picked as 17f6d7f425554cbf4f2a2e98f47456c6c612f38d
60820,0,Change has been successfully merged into the git repository.
60821,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Sorry, missed to review, obviously good one"
60825,0,Change has been successfully merged into the git repository.
60828,1,"Patch Set 1:I'd suggest the following change to the renderAfterItems method. For me this seems to be easier to understand than the two methods.    private static void renderAfterItems( Table table, IRenderRunnable runnable ) throws IOException {      Item[] items = ItemHolder.<Item>getItemHolder( table ).getItems();      if( items.length > 0 ) {        Item lastItem = items[ items.length - 1 ];        WidgetAdapterImpl adapter = ( WidgetAdapterImpl )getAdapter( lastItem );        adapter.setRenderRunnable( runnable );      } else {        runnable.afterRender();      }    }Apart from this, is it possible to use Table.getItemCount() and Table.getItem( count - 1 ) instead relying on the item holder? Would be good if we could avoid copying the entire items array in ItemHolder.getItems()."
60833,0,Change has been successfully merged into the git repository.
60835,0,Change has been successfully merged into the git repository.
60837,0,Change has been successfully merged into the git repository.
60841,0,Change has been successfully merged into the git repository.
60844,0,Change has been successfully merged into the git repository.
60846,0,Change has been successfully cherry-picked as 9c7e0e22742bdde789aed9d263bf934d8826d85e
60850,0,Change has been successfully merged into the git repository.
60852,0,Change has been successfully merged into the git repository.
60854,0,Change has been successfully merged into the git repository.
60858,0,"Patch Set 4: Verified+1 IP-Clean+1This isn't intended to change the current behavior but only to allow plugins to hook into the default workflow selection in the future, right? It looks good on that level but I haven't tested the hook."
60860,0,Patch Set 4: Verified+1 Code-Review+1 IP-Clean+1This change looks good to me.
60861,0,Patch Set 4: Code-Review+1Looks good. I'll keep an eye on the use of the extension point in the future.
60863,0,Change has been successfully merged into the git repository.
60865,1,"Patch Set 3:I like the idea of this functionality so a workflow gets set automatically, but I'd like to see some way to override it to set the priorities/fixed nature of workflows (perhaps through a preference). If I want a particular workflow always selected (e.g. TAU, but I install another plugin that contributes a higher priority/fixed workflow, then it would always be selected by default."
60870,0,Change has been successfully merged into the git repository.
60875,0,Change has been successfully merged into the git repository.
60876,0,Change has been successfully cherry-picked as 5666ecabf23691c9d04c6d05951e42b938497f2f
60878,1,"Patch Set 1: Code-Review+2 IP-Clean+1Sorry again about the delay, I was confused about if this patch was valid or not.  But then I realized it was."
60879,0,Change has been successfully cherry-picked as 6891ce8e0feaf8393c326643cdcd1d9149940a0a
60881,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/225/ : UNSTABLE
60882,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Thanks Marc!
60886,0,Change has been successfully cherry-picked as 4f8d20f3e993a91c4290e0b55cc2caa9e25d6522
60887,1,Patch Set 1:The tests in https://git.eclipse.org/r/#/c/20447/ still fail with this patch. I assume those two patches are related?
60892,0,Change has been successfully merged into the git repository.
60894,0,Change has been successfully cherry-picked as 02073c978ed9b1956a766717119016b71c3b8acf
60898,0,Change has been successfully merged into the git repository.
60901,0,Change has been successfully merged into the git repository.
60902,0,Change has been successfully cherry-picked as d1c4de9796b75ecf0a51ecf11cc02edbe297ce18
60904,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/219/ : UNSTABLE
60907,0,Change has been successfully cherry-picked as 6873bc90019a3dfbdd0df3e520e38293e3ecf165
60908,0,Change has been successfully cherry-picked as eb6c2344cdc0823eccec226f7067a2debae29e29
60910,0,Patch Set 4: Verified+1 Code-Review+2 IP-Clean+1Looks good (again).
60911,0,Change has been successfully merged into the git repository.
60913,0,"Patch Set 3: Verified+1 Code-Review+2 IP-Clean+1Daniel. Looks good, thanks"
60917,0,"Patch Set 1:Paul E,Could you please review the patch?thanks,Daniel"
60919,0,Change has been successfully cherry-picked as 5927d7ea309ea73c16ab953b298a67e44a50f4d2
60922,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/216/ : UNSTABLE
60927,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/218/ : UNSTABLE
60933,0,Change has been successfully merged into the git repository.
60935,0,Change has been successfully merged into the git repository.
60937,0,Change has been successfully merged into the git repository.
60938,0,Change has been successfully pushed.
60940,0,Change has been successfully merged into the git repository.
60942,0,Change has been successfully merged into the git repository.
60944,0,Change has been successfully merged into the git repository.
60945,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Patch looks good to me. Pushing to master.
60946,0,Change has been successfully merged into the git repository.
60953,0,Change has been successfully cherry-picked as b890cf4705e99b72765be4b7bc4b55988ac80768
60954,0,Change has been successfully cherry-picked as 110f9d937e7c4f88964697fcc2c1148c57e874bd
60956,0,Change has been successfully pushed.
60957,0,Change has been successfully pushed.
60959,0,Change has been successfully cherry-picked as b1ba50f153b39d5cde66ef1cc4a3cc40b65152c4
60960,0,Change has been successfully cherry-picked as 268db8630b9e592f773af349ec47847fb91398e1
60966,0,Change has been successfully merged into the git repository.
60968,0,Change has been successfully merged into the git repository.
60970,0,Change has been successfully merged into the git repository.
60972,0,Change has been successfully merged into the git repository.
60975,0,Change has been successfully merged into the git repository.
60977,0,Change has been successfully merged into the git repository.
60979,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Thanks Kristine!
60982,0,Change has been successfully cherry-picked as 403582f85519772f82c9984ad1c7b5a5e30224b5
60983,0,Change has been successfully pushed.
60985,0,Change has been successfully merged into the git repository.
60988,0,Change has been successfully merged into the git repository.
60990,0,Change has been successfully merged into the git repository.
60992,0,Change has been successfully merged into the git repository.
60994,0,Change has been successfully merged into the git repository.
60998,0,Change has been successfully merged into the git repository.
61007,0,Change has been successfully cherry-picked as d1acf1663171006a31ee8fbb00572f489bd55f14
61009,0,Patch Set 2:Not tested at all!
61010,1,"Patch Set 2: Code-Review-1The date is used because the RCP is build during nightly builds when there are source code changes. Not for every commit we change the version. So, the date is the ways to distinguish builds with the same version.About the root directory, I'm not convinced we gain anything for the same reason than above. Every nightly build between releases will have the same root directory.BTW, the name traceviewer will change once to name soon."
61011,1,"Patch Set 2:My main concern was that the name of the directory is different from the archive, so after you extract it, you are not sure where to look. For other projects, it usually matches (linux-3.12.6.tar.xz extracts to linux-3.12.6). But if it's too complicated to make the tests work with that, it's all right."
61012,1,"Patch Set 2:I see the value in having the extracted folder similar to the archive name.The test failure was due to something else, I don't think it will break anything."
61013,0,"Patch Set 2:Hi Simon, I'm ok to change the rootFolder name as you suggested. However I'd like to keep the build time in the archive name for the nightly builds as I state before."
61015,0,"Patch Set 2: Code-Review+2 IP-Clean+1This looks good to me, I believe it would now require some unit tests."
61016,0,Change has been successfully cherry-picked as 498fde98d72b28962f9c79802ce4b4e2745a980c
61018,0,Change has been successfully merged into the git repository.
61019,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1This looks fine to me.
61020,0,Change has been successfully cherry-picked as c241e7ff58351b4a447a0b94016c99682479ead4
61024,0,Change has been successfully merged into the git repository.
61032,1,"Patch Set 6:Hi Paul,I've found the problem with the double QuickAccess whenever a legacy workbench is opened. The reason for this error are the old QuickAccess entries in the workbench.xmi which I clean now on startup.Additionally I fixed the comments you suggested except one in the PositionInfo. Because removing the Exceptions from the getPositionReferenceAsInteger() would change the previous behavior of the ModelUtils.merge() method."
61035,1,"Patch Set 4:I've fixed my merge error in the CoolBarToTrimManager and moved the positioning inner classes to separates files as you suggested.Again, sorry for the inconvenience."
61037,0,Change has been successfully cherry-picked as dae7999d7ef2e1d9592ab518e52c44bc08be9130
61039,0,"Patch Set 2: Code-Review+1LGTM, let's make sure it's fine with Marc-Andr├® too ;)"
61044,1,"Patch Set 1:""What do I do in the releng-site? Should I add a category for TMF Analysis? It's not LTTng specific""Oh, I was under the impression that all the features under lttng/ where going in there but it looks like I might be wrong. So I guess this would go in Linux tools update site? or both? I added Bernd and Alexandre as reviewers, maybe they can clear that up. Maybe it would make sense to have everything in the lttng update site and rename the category ""Lttng"" to ""Tracing""."
61049,0,Change has been successfully merged into the git repository.
61050,1," gcc -O -Wall  -DSWT_VERSION=4416    -DHPUX -DGTK  -I/opt/java1.5/include  -I/opt/java1.5/include/hp-ux   `pkg-config --cflags gtk+-2.0` -c os.c  [sshexec] os.c: In function 'Java_org_eclipse_swt_internal_gtk_OS__1g_1object_1ref_1sink':  [sshexec] os.c:3504: warning: implicit declaration of function 'g_object_ref_sink'  [sshexec] os.c: In function 'Java_org_eclipse_swt_internal_gtk_OS__1gtk_1scrolled_1window_1get_1hscrollbar':  [sshexec] os.c:14357: warning: implicit declaration of function 'gtk_scrolled_window_get_hscrollbar'  [sshexec] os.c: In function 'Java_org_eclipse_swt_internal_gtk_OS__1gtk_1scrolled_1window_1get_1vscrollbar':  [sshexec] os.c:14410: warning: implicit declaration of function 'gtk_scrolled_window_get_vscrollbar'  [sshexec] os.c: In function 'Java_org_eclipse_swt_internal_gtk_OS__1gtk_1status_1icon_1get_1geometry':  [sshexec] os.c:14812: warning: implicit declaration of function 'gtk_status_icon_get_geometry'  [sshexec] os.c:14812: error: 'GtkStatusIcon' undeclared (first use in this function)  [sshexec] os.c:14812: error: (Each undeclared identifier is reported only once  [sshexec] os.c:14812: error: for each function it appears in.)  [sshexec] os.c:14812: error: expected expression before ')' token  [sshexec] os.c: In function 'Java_org_eclipse_swt_internal_gtk_OS__1gtk_1status_1icon_1get_1visible':  [sshexec] os.c:14826: warning: implicit declaration of function 'gtk_status_icon_get_visible'  [sshexec]   [sshexec] os.c:14826: error: 'GtkStatusIcon' undeclared (first use in this function)  [sshexec] os.c:14826: error: expected expression before ')' token  [sshexec] os.c: In function 'Java_org_eclipse_swt_internal_gtk_OS__1gtk_1status_1icon_1new':  [sshexec] os.c:14838: warning: implicit declaration of function 'gtk_status_icon_new'  [sshexec] os.c: In function 'Java_org_eclipse_swt_internal_gtk_OS__1gtk_1status_1icon_1set_1from_1pixbuf':  [sshexec] os.c:14861: warning: implicit declaration of function 'gtk_status_icon_set_from_pixbuf'  [sshexec] os.c:14861: error: 'GtkStatusIcon' undeclared (first use in this function)  [sshexec] os.c:14861: error: expected expression before ')' token  [sshexec] os.c: In function 'Java_org_eclipse_swt_internal_gtk_OS__1gtk_1status_1icon_1set_1visible':  [sshexec] os.c:14893: warning: implicit declaration of function 'gtk_status_icon_set_visible'  [sshexec] os.c:14893: error: 'GtkStatusIcon' undeclared (first use in this function)  [sshexec] os.c:14893: error: expected expression before ')' token  [sshexec]   [sshexec] *** Error exit code 1  [sshexec]   [sshexec] Stop."""
61055,0,Change has been successfully merged into the git repository.
61057,0,Change has been successfully merged into the git repository.
61062,0,Change has been successfully merged into the git repository.
61065,0,Change has been successfully cherry-picked as dbf65257d2f84f599bc73123695a58d32be4b836
61067,0,Change has been successfully merged into the git repository.
61068,0,Change has been successfully cherry-picked as 653321218598874da84e7af0948962352d8a4e93
61071,0,Change has been successfully merged into the git repository.
61073,0,Change has been successfully merged into the git repository.
61075,0,Change has been successfully merged into the git repository.
61077,0,Patch Set 3: Code-Review+2 IP-Clean+1thanks for the patch!
61078,0,Change has been successfully merged into the git repository.
61087,0,Change has been successfully merged into the git repository.
61095,0,Change has been successfully merged into the git repository.
61096,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/213/ : UNSTABLE
61098,0,Change has been successfully cherry-picked as f531f2f4d80565c9966df42b8e400ca5a970265b
61099,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/211/ : UNSTABLE
61102,0,Change has been successfully cherry-picked as 030bfc50fb028aeba7b329787955b8e17a51d2da
61103,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1cool thanks
61104,0,Change has been successfully merged into the git repository.
61107,0,Change has been successfully merged into the git repository.
61111,0,Change has been successfully merged into the git repository.
61113,0,"Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Thanks, Tori!"
61114,0,Change has been successfully merged into the git repository.
61115,0,"Patch Set 1:(1 comment)Looks good, but we need to update the copyright year. Thanks!"
61116,1,"Patch Set 1:I believe it should be updated now, sorry about that!"
61119,0,"Patch Set 2:(2 comments)I trust Tom's analysis, and the class looks reasonable.  There are 2 minor doc corrections, and then we can put this in."
61122,0,Change has been successfully merged into the git repository.
61123,1,"Patch Set 1:Looks good to me, maybe fix the unnecessary whitespace caused by Bug 49619 and complain in Bug 49619? Platform is currently frozen due to the M4, once M4 is done we can merge again."
61124,1,Patch Set 1: Code-Review+1I'm still feeling a bit uneasy about the changeContextLocale changes - I highly doubt anyone will need this. Our API should be for 95% usecase - if someone wants something as special as a different locale below the application level he has to implement this himself
61128,0,"Patch Set 1:If that is the common concept in e4, than of course I agree.Just one thing to consider: Looking into the implementation, there are three steps that need to be performed for a locale change:1. setting the context value for TranslationService.LOCALE2. notify the application model3. sending the event1. and 3. are easy to achieve as it is one line of code anywhere. 2. is a bit more complicated. But as LocaleChangeServiceImpl.updateLocalization() is protected, people could extend it for their own implementation. We could also think of making this method a static helper method, so people are able to simply use it for their use cases.If people are forced to implement their own stuff in such special cases (which is really fine for me), than we should at least provide as much help as possible and not leave them in copying framework code."
61134,0,Change has been successfully merged into the git repository.
61136,0,Change has been successfully merged into the git repository.
61137,0,"Patch Set 1:Paul E,Could you please review the patch?thanks,Daniel"
61138,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good.
61141,0,"Patch Set 2: Code-Review+2 IP-Clean+1Daniel, looks good!"
61142,0,Change has been successfully merged into the git repository.
61144,0,Change has been successfully merged into the git repository.
61147,0,Change has been successfully merged into the git repository.
61150,0,Change has been successfully cherry-picked as 4614f53ce1923bb9a7a74262b03f25ba49c2326c
61151,0,"Patch Set 2: Code-Review+1If the proposed behaviours make more sense that seems fine. Initially I intended to have delete/save work on sessions the user explicitly specified for saving, and considered the 'current' session as a special one that should be preserved.I haven't had a chance to test, but if it passes, then it seems fine to me. Also please see http://wiki.eclipse.org/Linux_Tools_Project/Git#Commit_messages for maybe a few minor tweaks to the message."
61158,0,Change has been successfully cherry-picked as ce077377fc94aee864c2d2d0b6566b84d0552f9b
61160,0,Change has been successfully merged into the git repository.
61162,0,Change has been successfully merged into the git repository.
61165,0,Change has been successfully merged into the git repository.
61168,0,Change has been successfully merged into the git repository.
61171,0,Change has been successfully cherry-picked as 765beb62bafa59c54fa6b77f6952c598539146bd
61173,0,Change has been successfully merged into the git repository.
61175,0,Change has been successfully merged into the git repository.
61180,1,"Patch Set 1: Code-Review+1To discuss:what aboutInterfaces,Annotation Types,Enums,Errors & Exceptions,for ClassDocsandConstructors,Abstract Methods,Annotation Type Elements,Static Methodsfor MethodDocsregarding all Taglets"
61181,1,Patch Set 1: Code-Review-1(2 comments)Patrick: Can you please add a regression test.Other comments inline?
61182,1,"Patch Set 1: -Code-Reviewcan you please more specific what you expect of a regression test in this case?shall I just unit test the right calls of getTagletOutput to generateXY(...) with Doc holder Mocks?I'm not sure how to test this one, especially keeping an eye on the old implementation."
61183,1,"Patch Set 1:Hi Patrick.I think testing generate* with Holder mocks would be enough. And then simply test that output has been created, not that the output conforms to some specific piece of HTML.I think the biggest challenge here is to mock the model access. Maybe this is a hint that the RecommendersTaglet API is not testable enough yet.Anyways, it would be great to have a regression test in place to make sure that this kind of problem doesn't creep back in."
61188,0,Change has been successfully merged into the git repository.
61191,0,Change has been successfully merged into the git repository.
61196,0,Change has been successfully merged into the git repository.
61198,0,"Patch Set 2:You can change this by clicking the toggle button ""Single Value"", if this is down only the last / most specific value is displayed.I am not sure if git config differentiates between a configuration option which has multiple occurrences in the same config file or in config / base config. From git-core you get the last, most specific value when using ""git config --get <key>"" and all values when using ""git config --get-all <key>"""
61199,0,"Patch Set 2:Ah yes, I was puzzled by a case where I have two entries for remote.origin.fetch in the same config file and with ""single value"" I see only one of them. But you are right, the command line's --get and --get-all behave the same like our ""single value"" button.But on the other hand then we do not have a possibility to show the really ""effective"" config, i.d. the one which is valid. AFAIU there are two types of config parameters: either more than one value is allowed or not. remote.origin.fetch is an example of the first case, rebase.autostash of the latter case. For the latter case, the user cannot tell from the line [false][true] which of the two values is the valid one.But I see that we do not have metadata for each of the config parameters to decide what to display as ""effective"". So I think we should leave it as it is."
61200,0,"Patch Set 2:yes, I think this depends on the specific configuration option, we need to add metadata for all supported configuration options to make this more useful. This should happen in another change."
61203,0,Change has been successfully merged into the git repository.
61206,0,Change has been successfully merged into the git repository.
61209,0,Change has been successfully merged into the git repository.
61210,0,Change has been successfully cherry-picked as 08a145fa67dc2279bd7c6e4a0e7c1fd8814bab5b
61215,0,Change has been successfully merged into the git repository.
61219,0,Change has been successfully merged into the git repository.
61221,0,Change has been successfully merged into the git repository.
61222,0,Change has been successfully cherry-picked as 342cb2fb5f8dfd575925e2c917e5f5e1a50fda31
61232,0,Change has been successfully merged into the git repository.
61235,0,Change has been successfully merged into the git repository.
61236,0,Change has been successfully cherry-picked as 92c2859666526a941b25bc9afe3edf689029c777
61243,0,Patch Set 3: Code-Review-1(4 comments)Nice.. just a few notes.
61246,0,Change has been successfully merged into the git repository.
61251,0,Change has been successfully merged into the git repository.
61252,0,Change has been successfully cherry-picked as d617a8c3ce70ab67c523e3ad3097d27606792ddd
61262,0,Change has been successfully cherry-picked as 018188f9f4f618c262b24fa3a044d1ae725ab31f
61269,0,Change has been successfully merged into the git repository.
61273,0,Change has been successfully merged into the git repository.
61274,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/271/ : UNSTABLE
61279,0,Change has been successfully merged into the git repository.
61283,0,Change has been successfully cherry-picked as e852a19df128448ff002d13c66d2ce5acdfee496
61291,0,Change has been successfully merged into the git repository.
61299,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/249/ : UNSTABLE
61301,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/266/ : UNSTABLE
61303,0,Change has been successfully merged into the git repository.
61310,0,Change has been successfully merged into the git repository.
61314,0,Change has been successfully merged into the git repository.
61317,0,Change has been successfully merged into the git repository.
61320,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/248/ : UNSTABLE
61322,1,"Patch Set 4:looks good, and definitively better than without these patchesBut still I face the problem that the staging view and decorators show the super project always as dirty showing the submodules as modified, trying to commit these changes fails with error ""no changes"". I used the following example to test:using native git (EGit seems not yet to be able to create new style submodules)- create an new repository ""super"" containing a readme file and commit readme in first commit- add jgit and egit as submodules and commit this addition- import super project using egit with this patch seriesresult is that the jgit and egit submodules are always shown as modified"
61325,0,Change has been successfully merged into the git repository.
61328,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/247/ : UNSTABLE
61329,0,Change has been successfully cherry-picked as 1b092c08316679284804716273a9a42b342ef4d8
61332,0,Change has been successfully cherry-picked as 5c0e3a07b8a1eba63a5d90e3ad5a4115f15f981f
61334,0,Change has been successfully cherry-picked as 923605d51b211f56f2b48e919950aaa8a778a36c
61337,0,Change has been successfully cherry-picked as 1b0a6df6374498fa849b1451baf89370d454b0b2
61341,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/267/ : UNSTABLE
61343,0,Change has been successfully merged into the git repository.
61347,0,Change has been successfully cherry-picked as 59977f464b6fed86fa35735811dbb6153bd6d217
61348,1,"This was put in place because of need to run under security manager for CT tests.  I'm not sure whether a doPrivileged block will be needed for IServiceInfoFactory lookup (once it's there)...but it may be...to avoid breaking the CT tests.4) This should be tested against the CT (and other ECF tests) before completing/merging into master...as there may be other regressions that would appear with the current CT tests (i.e. in addition to the possible security issues)5) In AbstractTopologyManager.advertiseEndpointDescription there previously was a trace line...it would probably be useful to add a trace to the new code for these methods.6) In AbstractTopologyManager.advertiseEndpointDescription...if the IServiceInfo is null, is this a warning or error condition?  As it is now, it will silently do nothing."""
61349,1,"This was put in place because of need to run under security manager for CT tests.  I'm not sure whether a doPrivileged block will be needed for IServiceInfoFactory lookup (once it's there)...but it may be...to avoid breaking the CT tests.4) This should be tested against the CT (and other ECF tests) before completing/merging into master...as there may be other regressions that would appear with the current CT tests (i.e. in addition to the possible security issues)5) In AbstractTopologyManager.advertiseEndpointDescription there previously was a trace line...it would probably be useful to add a trace to the new code for these methods.6) In AbstractTopologyManager.advertiseEndpointDescription...if the IServiceInfo is null, is this a warning or error condition?  As it is now, it will silently do nothing."""
61350,0,Change has been successfully merged into the git repository.
61359,0,Change has been successfully cherry-picked as 6904ab702e46173a2f1f15b5393302fcf77bcf25
61360,0,Change has been successfully cherry-picked as 56f7187e1f9656ad2731128ed4648043751c13ee
61369,1,Patch Set 1:That will be tough! But something from org.eclipse.mylyn might do. :)
61377,0,Change has been successfully merged into the git repository.
61378,0,Change has been successfully cherry-picked as 1f9acfbd4cdc6e2ed9684d5449a4e4bf71baf071
61382,0,Change has been successfully cherry-picked as ebc858ec44b4ad8f58c15403a7d098b4b9f4f5d0
61384,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/147/ : UNSTABLE
61387,0,Change has been successfully cherry-picked as dd7dde956f0c260a24b0fc793fb0246b51f24685
61389,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/149/ : UNSTABLE
61390,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/148/ : UNSTABLE
61393,0,Change has been successfully cherry-picked as f727127409190c601d9e0bdf0da57e273ed6d660
61394,0,Change has been successfully cherry-picked as d96ec1dfc888365e61f5b02671d6b0fbb50650b5
61396,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/145/ : UNSTABLE
61398,0,Change has been successfully cherry-picked as 7f3095be514c9055f906b74e045810cca226cc46
61399,0,Change has been successfully cherry-picked as c126fade3dda65e54ec6ca13750218fb023b1410
61401,0,Patch Set 1: Code-Review+1Reads nice. I like it.
61403,0,Change has been successfully merged into the git repository.
61405,1,Patch Set 4:Sorry I revert the rename of getDefault() because it is used in o.e.m.build.git and o.e.m.tasks.git
61407,0,Change has been successfully merged into the git repository.
61414,0,Change has been successfully merged into the git repository.
61421,0,Change has been successfully merged into the git repository.
61423,1,Patch Set 1: Code-Review+2 IP-Clean+1Pushing through this trivial change that updates the Platform p2 repository available since Friday as a preparation for Luna M4.The base platform in rt/rap/base-platforms/2.3/M0 has been updated to the same content.
61424,0,Change has been successfully merged into the git repository.
61425,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/141/ : UNSTABLE
61427,0,Change has been successfully cherry-picked as 48d5341bf7fdfd5b11540e032ed2dc969e8c32d1
61429,0,Change has been successfully merged into the git repository.
61432,0,Change has been successfully merged into the git repository.
61433,0,Change has been successfully merged into the git repository.
61441,0,Change has been successfully merged into the git repository.
61448,0,Change has been successfully merged into the git repository.
61454,0,Change has been successfully merged into the git repository.
61459,0,Change has been successfully cherry-picked as 8d6723f1bfb9f1a2162c817d8022cc8f8a63058b
61460,0,Change has been successfully cherry-picked as fcbd14bd71dc55a8e01dbd9b58587ddb32521702
61464,0,Change has been successfully merged into the git repository.
61465,0,Change has been successfully cherry-picked as de589bdfd6dbcfd4bec04703879097cf1df2d4e5
61469,0,Change has been successfully merged into the git repository.
61472,0,Change has been successfully merged into the git repository.
61474,0,Change has been successfully merged into the git repository.
61476,1,Patch Set 2: Code-Review+1Looks like a bug in SWT on Linux (GTK) then. I changed the comment. Also fix the inefficient use of the content provider (it created the tag nodes twice before).
61477,1,Patch Set 2:did you file a bug for SWT to track this problem ?
61479,0,Change has been successfully merged into the git repository.
61480,1,Patch Set 2:> did you file a bug for SWT to track this problem ?I did now: https://bugs.eclipse.org/bugs/show_bug.cgi?id=424035
61481,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5404/ : UNSTABLE
61483,1,"Patch Set 1:In the repositories view, select the 3.2.xxx tag of the jgit repo, and then do ""Push Tag..."". The tag should be checked and it should also be visible (tree scrolled to the end).With just reveal as before, it doesn't work here on Linux, the tree's scroll position is at the start. With this change, it works.Maybe it's a platform-specific problem?"
61486,0,Change has been successfully merged into the git repository.
61489,0,Change has been successfully merged into the git repository.
61495,0,Change has been successfully merged into the git repository.
61497,0,Patch Set 1: Code-Review+1Looks good to me!
61498,0,Patch Set 1: Verified+1 IP-Clean+1Looks good to me!Build runs locally.
61500,0,Change has been successfully merged into the git repository.
61504,0,Change has been successfully merged into the git repository.
61506,0,Change has been successfully merged into the git repository.
61510,1,Patch Set 1: Verified-1 -Code-ReviewBuild fails with [ERROR] Failed to execute goal org.eclipse.tycho:tycho-packaging-plugin:0.18.1:build-qualifier-aggregator (default-build-qualifier-aggregator) on project org.eclipse.rap.tools.feature: Execution default-build-qualifier-aggregator of goal org.eclipse.tycho:tycho-packaging-plugin:0.18.1:build-qualifier-aggregator failed: Could not resolve plugin org.eclipse.rap.tools.intro_0.0.0; Path to dependency: -> [Help 1]
61512,0,Change has been successfully merged into the git repository.
61521,0,Change has been successfully merged into the git repository.
61529,0,Change has been successfully merged into the git repository.
61531,0,Change has been successfully merged into the git repository.
61536,0,Change has been successfully merged into the git repository.
61538,0,Change has been successfully merged into the git repository.
61540,0,Change has been successfully merged into the git repository.
61542,0,Change has been successfully merged into the git repository.
61544,0,Change has been successfully merged into the git repository.
61551,0,Change has been successfully merged into the git repository.
61554,0,Change has been successfully merged into the git repository.
61555,0,Change has been successfully cherry-picked as 9adc1b072e06560da3c2999377bdc8d0cb14f391
61561,0,Change has been successfully cherry-picked as 0b1a3c2b8e7109705deb5489a3665bab29b2664b
61565,1,"Patch Set 1:The local build still failing on my machine (Windows 7) due to IOException while generating JavaDoc:E:\EclipseSource\Git Repositories\org.eclipse.rap.tools\bundles\org.eclipse.rap.doc\reference-build\build.xml:23: Javadoc failed: java.io.IOException: Cannot run program ""D:\JavaSoft\jdk1.7.0\bin\javadoc.exe"": CreateProcess error=206, The filename or extension is too long"
61569,0,Change has been successfully merged into the git repository.
61571,0,Change has been successfully merged into the git repository.
61572,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/261/ : UNSTABLE
61574,0,"Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1- rebasedgood catch, thanks :-)"
61575,0,Change has been successfully merged into the git repository.
61576,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5436/ : UNSTABLE
61577,0,Change has been successfully cherry-picked as de62d5de57b6c91601e654dc3eb5be01bc4dd4d8
61581,0,Change has been successfully merged into the git repository.
61582,0,Patch Set 1: Code-Review-1(1 comment)looks good except the style nit
61585,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Good call!
61586,0,Change has been successfully cherry-picked as 9975ba870fbfe972a47a9203c3230ef2faf47893
61590,0,Change has been successfully merged into the git repository.
61595,0,Change has been successfully merged into the git repository.
61598,0,Change has been successfully merged into the git repository.
61600,0,Change has been successfully merged into the git repository.
61607,0,Change has been successfully cherry-picked as d933fa15d74223ce5a19f2f05e3d0cf782de5896
61611,0,Change has been successfully cherry-picked as 2c3f23adcb444f436224393320d4217df9030c66
61617,0,"Patch Set 3: Code-Review+1(2 comments)seem good to me, minus one style question."
61619,0,Patch Set 3:(1 comment)thanks for clarification
61623,0,Change has been successfully cherry-picked as 3f0dc0a9245758cb4c6f45d63472d7696cf45cf4
61624,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1This looks fine to me.
61626,0,Change has been successfully cherry-picked as ff690ab9535a09fda2c084eec8e41c484899210a
61628,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/139/ : UNSTABLE
61632,0,Change has been successfully cherry-picked as 726106ba623520859ddd1ab7713c1ef00688b718
61635,1,"Patch Set 6:PTAL.And I'm open to a discussion on why this should be remove.In fact, I believe HistoryTree should _not_ exposed the notion of ""lastBranch"". This is a violation of an abstract data-structure API and complexify the evolution on the HistoryTree.These kind of methods should be exposed only when ""really, but really"" expensive otherwise. It's better to find a solution under the hood than postponed to the data-structure user the tree walking management."
61637,1,"Patch Set 6:> HistoryTree should _not_ exposed the notion of ""lastBranch""I agree it should not be exposed ""upwards"", because that is implementation-specific. However, the HT_IO is also something specific to the HistoryTree. At first this class was introduced solely to reduce the amount of LOCs in HistoryTree. So I don't think it's *that* bad if HT_IO knows how the HistoryTree works a bit.Or we could also scrap it and put all the functionality in HistoryTree, if that makes it cleaner.About the readNodeFromMemory/readNodeFromDisk, the issue is not just the overhead, it's actual functionality that might break if we don't have a ""readNodeFromMemory"": if a history tree is queries while it's being built, the nodes in the latest branch are not written to disk yet. But in the tree they technically exist. So if HT_IO tries to read them like a ""normal"" node, funny things will happen."
61638,1,Patch Set 6:I prefer keeping it isolated.Some idea for node compression etc... could be put in this layer (read/write to disk layer).I need to understand your arguments on the HistoryTree.We should meet in face of a white board.
61640,0,"Patch Set 6: Verified+1 Code-Review+1 IP-Clean+1Ok, indeed after clarification, this should not change the behavior, this is just a refactor, making the HT_IO ""API"" a bit cleaner and better separated.I'd be fine with merging this as-is. If we ever find the ""skip looking in memory"" optimization was really useful, we could always add it back, at the HistoryTree level."
61650,0,"Patch Set 5: Code-Review-1(2 comments)Saving the HTConfig instead of the Tree itself is good. However I'm not 100% sure about the removal of ""readNodeFromMemory"". It might be needed for querying while construction is ongoing.I'll try to see if I can come up with simple tests for this."
61654,0,Change has been successfully merged into the git repository.
61657,0,Change has been successfully merged into the git repository.
61660,0,Change has been successfully merged into the git repository.
61663,0,Change has been successfully merged into the git repository.
61667,0,Change has been successfully merged into the git repository.
61668,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5390/ : UNSTABLE
61672,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5412/ : UNSTABLE
61673,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5413/ : UNSTABLE
61675,0,Change has been successfully merged into the git repository.
61677,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5402/ : UNSTABLE
61680,0,Change has been successfully merged into the git repository.
61681,0,Change has been successfully cherry-picked as 11c7f67f10a3193335e9951963c5031479e6bc4a
61682,1,"Patch Set 1: Code-Review-1I am now making a test case to test this better, but I feel the patch should work and fixed a hidden bug."
61691,1,Patch Set 2:(1 comment)Alex? toughs?
61692,0,"Patch Set 2:I was thinking about the actual test values themselves (it's more useful than the current tests doing put(1), get(1)). Of course the getLong()/getInt() API thing still has to be decided.We were discussing it a bit, and came up with something like:  long getInt()  long getLong()  long get(length, signed)The first two would be helpers that call get(32, true) and get(64, true) respectively. And changing the return values to longs, so that anything 1-64 bits fits, and since the CTF reader puts all CTF int's into Java longs anyway."
61696,1,Patch Set 9: Code-Review+1 IP-Clean+1Looks good here. It's always a nice feeling when you can relegate complicated functionality to a lower-level layer.
61715,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5399/ : UNSTABLE
61719,0,Change has been successfully merged into the git repository.
61721,0,Change has been successfully cherry-picked as 08293b3f584834b4cc7e911e42f9779500fc61b6
61722,0,Change has been successfully cherry-picked as 08c7d10763cae343176d74699cc732da13dfe6bf
61726,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5345/ : UNSTABLE
61728,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5357/ : UNSTABLE
61731,0,Change has been successfully merged into the git repository.
61733,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5348/ : UNSTABLE
61735,0,"Patch Set 4: Code-Review-1(4 comments)nice improvementsome issues I found:- checking ""Show final report dialog only when it differs from this confirmation report"" seems to have no effect, when trying to push the same tag a second time to the same remote I still get the confirmation dialog- I don't understand what's the purpose of the dialog opened by ""Configure..."" on the result page. It allows to configure push for the current branch, why do I need to reach this from the result dialog of ""Push Tags..."" ?- this configure dialog doesn't show all possible known URLs of all remotes I have defined, I tried with a repository having 2 remotes for 2 different remote repositories, one using https and the other one file protocol. But the configure dialog always only shows the file URL."
61736,0,"Patch Set 4:(4 comments)> checking ""Show final report dialog only when it differs from this confirmation report"" seems to have no effect, when trying to push the same tag a second time to the same remote I still get the confirmation dialogFixed, thanks! Turns out this was also broken for the ""Push Branch"" wizard, see change https://git.eclipse.org/r/18779. Also see https://git.eclipse.org/r/18780 for (hopefully) better labels.> I don't understand what's the purpose of the dialog opened by ""Configure..."" on the result page. It allows to configure push for the current branch, why do I need to reach this from the result dialog of ""Push Tags..."" ?> this configure dialog doesn't show all possible known URLs of all remotes I have defined, I tried with a repository having 2 remotes for 2 different remote repositories, one using https and the other one file protocol. But the configure dialog always only shows the file URL.Good catch! I didn't see a ""Configure..."" because with my test repositories were already configured. But ""Configure..."" should not be shown when pushing tags. Fixed with newest patch set, see changes PushOperationUI."
61737,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5344/ : UNSTABLE
61741,0,Change has been successfully merged into the git repository.
61743,0,Change has been successfully merged into the git repository.
61745,0,Change has been successfully merged into the git repository.
61747,0,Change has been successfully merged into the git repository.
61748,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/77/ : UNSTABLE
61750,0,Change has been successfully cherry-picked as c8b535a52c342a65deb2adae88322f153821b859
61751,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5391/ : UNSTABLE
61753,0,Change has been successfully merged into the git repository.
61756,0,Change has been successfully merged into the git repository.
61767,0,Change has been successfully merged into the git repository.
61768,0,Change has been successfully cherry-picked as 5fbc0fc468a717e202c4dcf1fbdaf72d4a92919d
61776,0,Change has been successfully cherry-picked as 21bc1cff1b7b11c1618e42bfb014fc55ec68582f
61778,1,"Patch Set 3:This patch set executes file autosaves in the UI thread, so that out-of-workspace files may be saved before a run regardless of how the run was started."
61782,1,"Patch Set 3: Verified+1 Code-Review+1 IP-Clean+1This change works, but the added feature of asking the user to save a file when the launch configuration is open seems excessive. Especially when references to the editor are already accessible.With that said, this is an improvement, so might as well get this in and improve in the future."
61793,1,Patch Set 15:I applied the corrections to the wrong patch. Alexandre Montplaisir split this patch without me realizing it.
61798,1,"Patch Set 13: Code-Review-1(4 comments)This patch is becoming a pain to review... the formatting fixes + adding CTFReaderException in the API should be in a separate initial patch, so we can then concentrate on the algorithm changes in BitBuffer."
61801,0,"Patch Set 8: Code-Review+1I read the core of the modification, and it's fine for me.For the exceptions, I'll let somebody with more visibility at large than me review the code."
61803,0,"Patch Set 8: Code-Review-1(12 comments)Looks good, some comments. It doesn't apply cleanly on latest lttng-luna too ; you should always rebase to the latest head when pushing a new patchset (especially if one of the previous comments was ""please rebase to the lastest lttng-luna"")."
61811,0,Change has been successfully cherry-picked as 05d5bf173896a3c811b176d2041367ec5b3e7c40
61818,0,Patch Set 14:(4 comments)thanks for the information.
61823,1,Patch Set 1:(2 comments)I missed those one.
61826,1,Patch Set 3:(2 comments)After looking at the next patch-set you want to submit.getLong() is not the right API you need.You need to be able to read from 33 to 64 bits values.+ fix the invalid merge.
61828,1,Patch Set 12: Code-Review-1(1 comment)Bug
61830,1,"Patch Set 10: Code-Review-1(1 comment)sorry, I found an other bug."
61831,0,"Patch Set 10:Etienne, do not apologize for finding bugs, that is the point of code review. The correct solution will get in thanks to your  timely intervention."
61848,0,Change has been successfully merged into the git repository.
61850,0,Change has been successfully merged into the git repository.
61851,1,"Patch Set 1:(1 comment)The ""return null"" part bothers me a bit, but I haven't managed to make it blow up yet."
61853,0,Change has been successfully cherry-picked as e885d4489a7ed7e2cc4166fa8012ae97423abd7e
61856,0,"Patch Set 3: Verified+1 Code-Review+2 IP-Clean+1Beauty, thanks Paul !"
61857,0,Change has been successfully merged into the git repository.
61860,0,Change has been successfully cherry-picked as fccbec7b0d8bf66ec8bb1110a993df29a2045da4
61862,0,Change has been successfully cherry-picked as 0e9f0527bd8b492865040dab68df7d3c3f51449d
61863,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1This change looks fine to me.
61864,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1test data works ok for me.thanks.
61865,0,Change has been successfully merged into the git repository.
61866,0,Change has been successfully cherry-picked as 8610899d03381c68187d18e8c0cc3720e4af4ce4
61867,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/67/ : UNSTABLE
61868,1,Patch Set 6: Verified+1 Code-Review+2 IP-Clean+1Test failures are unrelated and I want to start building Momentics against master.
61887,0,Change has been successfully merged into the git repository.
61889,0,Change has been successfully merged into the git repository.
61891,0,Change has been successfully merged into the git repository.
61893,0,Change has been successfully merged into the git repository.
61896,0,Change has been successfully merged into the git repository.
61898,0,Change has been successfully merged into the git repository.
61900,0,Change has been successfully merged into the git repository.
61902,0,Change has been successfully merged into the git repository.
61904,0,Change has been successfully merged into the git repository.
61907,0,Change has been successfully merged into the git repository.
61909,0,Change has been successfully merged into the git repository.
61919,1,"Patch Set 2:(1 comment)the maven import looks weird. we dont need it, do we?"
61921,0,Change has been successfully merged into the git repository.
61923,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5385/ : UNSTABLE
61926,0,Change has been successfully merged into the git repository.
61929,0,Change has been successfully merged into the git repository.
61933,0,"Patch Set 1: Code-Review-1(2 comments)See inline comments, otherwise looks good."
61938,0,Change has been successfully merged into the git repository.
61939,0,Patch Set 1: Code-Review-1 IP-Clean+1(1 comment)looks good except nit
61943,0,Change has been successfully merged into the git repository.
61946,0,Change has been successfully merged into the git repository.
61948,0,Change has been successfully merged into the git repository.
61950,0,"Patch Set 5: Code-Review+1 IP-Clean+1Patch is 2 months old -> rebases fineIn the meantime, ONE commit gets in. -> doesn't rebase anymoreGah!"
61953,0,"Patch Set 2:> This is by design. Merely changing null.unboxInt() to return 0 instead of -1 will break MANY things only in the state system (like stack attributes, off the top of my head). And that's without talking about views.There's a few things broken as it is now:- You can't get a -1 Int value from the factory method but you can get one using incrementAttribute() on a -2 Int value- Calling incrementAttribute() on this -1 Int value skips 0 and goes to 1.- The State System Explorer view cannot display a factory-made -1 Int value (as it is nullValue), it shows a blank value.If there is any code that is using the unboxed value of nullValue to check for null, that is badly designed code because it cannot differentiate with a real Int of that same value, it should use isNull(). I believe it's better to bite the bullet and correct that code now. Hopefully all of it is fixed by the patch now.Mathematically, I think it makes more sense to use zero as the null value's numerical value.> This is also by design. If we start to allow unboxing from one type to another, people might stop caring about what the actual type is, and always unbox their things into longs for example, doing costly casts over and over.It's a point to consider, but I prefer to give the benefit of the doubt and the flexibility to the designers. In the code I'm doing now, I have to do floating point mathematical operations on a list of state values that can be a mix of Int, Long, Double or nullValue. Using unboxDouble() gives much cleaner code than having a if-else or switch statement on the value Type to figure out the correct unboxing method.The unit tests should be correct now. The LTTng kernel state system creates a Threads/-1 attribute because the first events arrive before the Current_thread attribute has any value set. I considered updating the expected test state system with these events using the Threads/0 attribute (due to the current thread nullValue's int value), but decided against it because it would still be incorrect to consider that these events occurred in the swapper (0) thread. So the nullValue current thread continues uses the -1 attribute for the 'unknown' thread."
61955,0,"Patch Set 2: Code-Review-1We had another quick discussion on this ;)What seems like the less intrusive solution that would bring an improvement would be to keep an int value corresponding to Type.NULL, but instead of -1 we could use Integer.MIN_VALUE, which is used less often in normal use cases."
61956,0,Change has been successfully cherry-picked as b9af86ad56e8874f09bee33b4e4a1390db9049c0
61959,0,Patch Set 3:Leaving the choice of unboxed value of nullValue and unboxing of integer into double for another patch.
61964,0,"Patch Set 4:I agree on the fact that the code should not rely on the returned value of casting a null to a int. In fact, I'm still not sure this is a good idea.""null"" mean what? no value?"
61966,0,"Patch Set 4: Code-Review+1 IP-Clean+1Actually nevermind, it still rebases trivially.I couldn't manage to make it break, so it should be fine. If you guys want to take the dive, let's do it!"
61972,0,Change has been successfully cherry-picked as be2f04f59c6ddbeb7d6fbc5dcd522877d89ead09
61974,0,"Patch Set 4:You are free to do so on any patch you feel needs this, I will, as always, abide by the NAK. I only wish for the best code to enter in the project, but I feel that this patch is unrelated to the CTF regression tests, as http://git.efficios.com/?p=ctf.git;a=blob;f=common-trace-format-specification.txt;h=830699ff130ac4757e003d70b71b312f1f8ca2a0;hb=9f04b9f6281cda27010f25816a66df7700cd0a9a#l165 ""Alignments must be powers of two"" so it does respect the standard."
61976,0,"Patch Set 2: Code-Review-1(1 comment)Code style fixes needed.I'm not a big fan of the pre-computed flippedMask, it makes all the code heavier (and if a caller calls un-matched masks and flippedMasks, we're in for more OutOfMemory errors since we don't do any checks).But the rest of the patch is pretty good, good improvement!"
61980,0,Change has been successfully merged into the git repository.
61982,0,"Patch Set 2: Code-Review+2 IP-Clean+1I put +2 because the only remarks I have are on the commit message itself and are optional improvements. Maxime: you can submit as is or reword the message, as you prefer."
61983,0,Change has been successfully cherry-picked as 10b8251c037e002e01282499041f9ac80f64f001
61985,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1This looks fine to me.
61990,0,Change has been successfully merged into the git repository.
61997,0,Change has been successfully merged into the git repository.
62000,0,Change has been successfully merged into the git repository.
62005,0,Change has been successfully merged into the git repository.
62026,0,Change has been successfully merged into the git repository.
62028,0,Change has been successfully merged into the git repository.
62030,0,Change has been successfully merged into the git repository.
62032,0,Change has been successfully merged into the git repository.
62034,0,Change has been successfully merged into the git repository.
62036,0,Change has been successfully cherry-picked as 4e6e30dec2a847ed15ed5ab5c05f78f9ae2ebd00
62038,0,Change has been successfully cherry-picked as 395cced15c45c049fa115d872c29c7932321a088
62040,0,Change has been successfully merged into the git repository.
62041,0,Change has been successfully cherry-picked as 1d1cd049c30c3177d1b3b4314aec14ac0c94c16f
62044,0,Change has been successfully pushed.
62049,0,Change has been successfully merged into the git repository.
62054,0,Change has been successfully merged into the git repository.
62060,1,Patch Set 1:@Andreas: I thought about and would say: yes and no ;-)The ProjectCoordinateProvider uses the ProjectCordinateAdvisorService and add the cache (DependencyInfo --> Pc) functionality. Until here it sounds like a wrapper. But it also provide the mapping between workspace artifacts and DependencyInfos. The class has two responsibilities of that class and I would say that adding the configuration logic of the ProjectCoordinateAdvisorService would make it worse.Also I would like to mention an other point: At the moment as user of the API you can get injected a ProjectCoordinateAdvisorService or/and a ProjectCoordinateProvider as well. The ProjectCoordinateProvider access the ProjectCoordinateAdvisorService inclusive the cache logic. The ProjectCoordinateAdvisorService access the advisors directly. I think this looks a little bit confusing and inconsistent.I mentioned that because I thought about a solution to fix both:What do you think about create a wrapper for ProjectCoordinateAdvisorService which take care of the configuration AND the cache (DependencyInfo --> Pc) logic?The ProjectCoordinateProvider will still have the other cache and would use the wrapped ProjectCoordinateAdvisorService.I think we would get a better separation and could get rid of the inconsistens by using ProjectCoordinateAdvisorService without cache and ProjectCoordinateProvider with cache both.
62065,0,Change has been successfully merged into the git repository.
62066,0,Change has been successfully cherry-picked as 5e130ab883b6239ce9275b76036a2eea0e98d958
62067,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/48/ : UNSTABLE
62068,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/51/ : UNSTABLE
62069,0,Patch Set 1: Code-Review+2 IP-Clean+1Can't wait to see the Qt extension :)
62070,0,Change has been successfully cherry-picked as 026b9325f08f899d0b770b2e0968446599144c74
62072,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/49/ : UNSTABLE
62073,0,"Patch Set 1: Code-Review+2Thanks, David!"
62074,0,"Patch Set 1: IP-Clean+1Thanks, David!"
62075,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/141/ : UNSTABLE
62079,0,Change has been successfully merged into the git repository.
62087,0,Change has been successfully cherry-picked as e3fdbd6677483114443fa09dd8ac3101ed225259
62092,0,Change has been successfully merged into the git repository.
62095,0,"Patch Set 2: Code-Review-1(4 comments)It's funny, not long ago it was updated to store Integer/Long as the field instead of int/long, to avoid re-boxing it every time getValue() was called.But nice refactoring, by getting rid of getValue() altogether we're not bound to returning an Object anymore. It's always good to have fresh eyes looking at old code!One small comment though, I don't think you meant to keep the new Integer() part."
62104,0,Patch Set 7: Code-Review+1fine for me.I didn't know this coding style.thanks alex.
62106,0,Change has been successfully cherry-picked as 584f23a6868aae533a726052ec71b1377a973370
62110,0,Change has been successfully merged into the git repository.
62112,0,Patch Set 2: Code-Review-1(2 comments)Generally looks good except for the manifest changes. (Change needs to be rebased against the latest master now).
62115,0,Change has been successfully merged into the git repository.
62118,0,Change has been successfully merged into the git repository.
62120,0,Change has been successfully merged into the git repository.
62122,0,Change has been successfully cherry-picked as 8dac44c097d419a6b32c37d2a7599f025ff77f53
62125,0,Change has been successfully merged into the git repository.
62127,1,Patch Set 2:Now here's the full correction of my mistake ;-)
62131,0,"Patch Set 1:thanks, I didn't take time to understand why this happen.If you know, it's fine for me."
62134,0,Change has been successfully cherry-picked as 83ff34deba3f46dd10651fd89ec401e2dade48a9
62136,0,Change has been successfully merged into the git repository.
62138,0,Change has been successfully cherry-picked as 154026ee2a278c8491d6b78a017182426192f15f
62139,0,Change has been successfully cherry-picked as 43e1ab2fac42f029638f935cf9f0399759d2749b
62142,0,Change has been successfully merged into the git repository.
62147,0,Change has been successfully merged into the git repository.
62148,0,"Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1I am not quite sure it is a good idea to review the patches like this in gerrit. Next time I guess it makes sense to split change into 2 commits:- for models, other input artifacts and custom code if any- and separately for generated code. Then only the first one should go to gerrit, and the generated one should wait for review of the first and then should bypass gerrit.Thats exactly why we asked for rights to bypass the gerrit"
62149,0,Change has been successfully merged into the git repository.
62156,0,Change has been successfully merged into the git repository.
62158,0,"Patch Set 3: Verified+1 Code-Review+1 IP-Clean+1Stephan, I have found the patch to be alright. Can you just check if the default values being used for the null analysis related preferences are good? Thanks!"
62165,0,Change has been successfully pushed.
62166,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/etrice/job/etrice-gerrit/70/ : UNSTABLE
62168,0,Change has been successfully merged into the git repository.
62171,0,Change has been successfully merged into the git repository.
62177,0,Change has been successfully merged into the git repository.
62179,0,Change has been successfully merged into the git repository.
62181,0,Change has been successfully merged into the git repository.
62183,0,Change has been successfully merged into the git repository.
62185,0,Change has been successfully merged into the git repository.
62187,0,Change has been successfully merged into the git repository.
62190,0,"Patch Set 3:Thanks Mickael, the changes look good and your findings regarding ECLIPSE_HOME are correct. The tests use that variable which is contributed by the PDE Core plug-in. Therefore the correct fix is to add PDE Core to the list of required plug-ins in the manifest.To be perfect, we should avoid the duplication of the ""/bin-annotations"" and ""/bin-ext"" strings and also rename getPluginClassesDir(), which now returns the annotation classes directory.Please also update the commit message as indicated in the previous review.Thanks!"
62193,1,"Patch Set 1: Code-Review-1You already tried to move that class once and it failed, see bug 420446. Not sure why you propose it again."
62195,1,"Patch Set 1: -Code-ReviewSorry Mickael, I overlooked the change in the build.properties. I'll take a closer look. Busy days :-("
62196,1,Patch Set 1:No problem ;)
62197,0,"Patch Set 1: Code-Review-1(1 comment)This change does not work: TestAll is no longer on the Java build path and hence can't be launched out of the workspace to run all tests.We should not ""fix"" this by simply adjusting the Java build path. No ""normal"" committer would understand that setup which is already overly complicated now (as we learned ;-).The plug-in has/needs 3 things1) tests: should be in 'src' -> . i.e. not JARed2) test annotations and factories that are expected to be in apt.jar3) test (re-)sources that are expected to be in aptext.jar3 is fine. 1 and 2 are currently in the same source (and bin) folder and should be separated. So, let's simply move all org.eclipse.jdt.apt.tests.annotations.* into its own source folder called 'src-annotations'. This will make up the apt.jar.At that point I would also rename 'srcext' to 'src-ext' and binext to src-ext.Hints:- you also need to set/change the output folders.- /bin must be changed in createAndAddAnnotationJar- getPluginClassesDir must return bin-annotations==> ideally, there should be a constant for bin-int, so that one has not to change it in two places in the future- adjust build.properties and manifest.mf- run TestsAll to verify that it works in the workspaceI know this is a bigger change, but it will make it easier for future contributors to understand this setup.The addition of '.gitignore' is unrelated and should be in a separate file (if really needed)."
62198,0,"Patch Set 1:> This change does not work: TestAll is no longer on the Java build path and hence can't be launched out of the workspace to run all tests.It's working with ""mvn clean verify"" as TestAll is in build.properties. I guess your note here means that it should also be changed in .classpath.>  I know this is a bigger change, but it will make it easier for future contributors to understand this setup.I'll make the suggested change. Thanks for giving me hints of what should go where. That's what I didn't have the courage to figure out, so I only moved TestAll.> The addition of '.gitignore' is unrelated and should be in a separate file (if really needed).I've added to be able to run builds twice without having to delete the files (because of dirty working tree). But I can make it part of another commit later."
62201,1,"Patch Set 2:This new patch applies the changes you suggested.It makes the TestAll suite working perfectly (113 green tests) from workspace with JDT launcher.However, I still get a single test failing with surefire:Failed tests:   testMirrorUtils(org.eclipse.jdt.apt.tests.MirrorUtilTests): Tests run: 113, Failures: 1, Errors: 0, Skipped: 0log saysjunit.framework.ComparisonFailure:----------- Expected ------------NO ERRORS------------ but was ------------apt.tests.annotations.mirrortest.cpvar--------- Difference is ---------- expected:<[NO ERRORS]> but was:<[apt.tests.annotations.mirrortest.cpvar]>Do you have any hint that could explain this different behaviour?"
62202,1,"Patch Set 2:the issue with testMirrorUtils with tycho-surefire-plugin seems to be that %ECLIPSE_HOME% is not set in the platform, and then not replaced by a legal value, causing the APT Processor to fail.I'd need to investigate how ECLIPSE_HOME is pre-set, maybe it's requiring another bundle to be present in platform.Any hint is welcome."
62203,1,"Patch Set 2:Mickael, I suggest to ask this in the bug and cc David Williams. Or ask him in an e-mail. He's the guy who knows most of these things."
62205,0,Change has been successfully merged into the git repository.
62210,0,"Patch Set 4: Code-Review+1>  I'd rather have it look for %ECLIPSE_HOME%/configuration/config.ini, Sounds good to me!"
62212,0,Change has been successfully merged into the git repository.
62214,0,Change has been successfully merged into the git repository.
62222,0,"Patch Set 8: Code-Review+1(2 comments)Thanks for the tip Andreas :)I used the doAnswer(..).when(..) structure to create the new file, and argument matchers for the arguments of the create() method. I had to create custom matchers.Some more comments are on the code."
62227,0,Change has been successfully merged into the git repository.
62232,0,Patch Set 3: Code-Review-1Of course. :)
62233,0,"Patch Set 3:Great :-) So there is a convention:If you give a change a +1 some other committer will review it.  If you don't get any feedback in 2 working days, feel free to commit it w/o having someone else looking at this before.+1 assumes that there are test cases available that cover a bug fix or some new functionality. Sometimes it will be hard to test things but it's a great exercise to learn (see my change on shared images 17543 and ""learning"" in the change set history ;-)In the case you want a review, add johannes or me on the Review list explicitly. It may help if you put  comments on those parts of the code you'd like to get comments on.HTH,Marcel"
62240,0,Patch Set 5: Code-Review-1(13 comments)Good start! Don't be alarmed by my many comments. It takes some practice to get into a testing mindset.
62247,1,"Patch Set 6: Code-Review-2(3 comments)Hi.I am still having some difficulties setting up the test case. I cannot find a way to pass a mocked IWorkspaceRoot that will return the necessary IFile to the doCreateNewFile() method of the editor.This method needs to create the new file as an IFile in the WSRoot, otherwise the newly created file will not count as a workspace resource (or at least I could not find a way to make it a resource). Any help with this is highly appreciated!Thanks"
62255,0,Change has been successfully merged into the git repository.
62267,0,Change has been successfully merged into the git repository.
62269,0,"Patch Set 1: Code-Review+1It is good idea and changes look fine for me,Daniel"
62272,0,Change has been successfully merged into the git repository.
62275,0,Change has been successfully merged into the git repository.
62277,0,Change has been successfully cherry-picked as d2973ee6552477424a4cd58d3e452541db3dd44c
62281,0,Change has been successfully merged into the git repository.
62284,0,Change has been successfully cherry-picked as f242847003597dd4ab7f09fdb91604cfdb41fa5a
62286,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1This should be useful!
62287,0,Patch Set 2:I still haven't managed to make a suite/runner that can add a custom @Rule (like a timeout) to all the tests it runs... but this should be a start!
62288,0,"Patch Set 1:(1 comment)Just a minor suggestion, otherwise looks good."
62294,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5300/ : UNSTABLE
62295,0,Change has been successfully merged into the git repository.
62297,1,"Patch Set 2: Verified+1 Code-Review+1The new patch set only adds a trailing LF to the commit message if there is not already one (native Git also behaves this way), solving the 2 LF problem.I think we should submit this and create a bug for further bigger improvements (reusing the commit editor, etc)."
62299,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5298/ : UNSTABLE
62301,0,Change has been successfully merged into the git repository.
62304,0,Change has been successfully merged into the git repository.
62310,0,Change has been successfully merged into the git repository.
62311,0,Change has been successfully cherry-picked as c7bdaea6bde593b23c80c453b1a197f2c3b852a9
62314,0,"Patch Set 5:Woo, thanks for the review!"
62320,1,"Patch Set 3: Code-Review-1(5 comments)Some inline comments. Also, I still think that toolbar button using text is weird but I have nothing better to suggest at this point."
62325,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Thanks, nicely! Other subclasses also override doCreateRefreshJob, so this seems to be the way to go."
62326,0,Change has been successfully merged into the git repository.
62328,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/118/ : UNSTABLE
62332,0,Change has been successfully merged into the git repository.
62334,0,Change has been successfully merged into the git repository.
62335,0,Change has been successfully cherry-picked as 2eec15fa8df4ba05728158097274ccbff7d731fd
62337,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Good catch, thanks. getFullAttribute() is not performance critical (it's only used for debugging, like in the State System Explorer), but if LinkedList has a addFirst() method might as well use it."
62340,0,"Patch Set 2: Code-Review-1Centralizing the common code in Definition.alignRead is good (that needs an @since 2.2 however), but I'm not sure about the ""speed up integer reads"" part. It seems to have slowed down slightly.Running ReadTrace.java with 10 loops averaged, with 'kernel' and 'kernel_vm' give me this:on master:kernel: 983 ns/eventkernel_vm: 2009 ns/event (those have contexts, so slower to read as expected)with this patch:kernel: 1007 ns/eventkernel_vm: 2123 ns/eventIn any case those two changes should be split in separate patches."
62344,1,"Patch Set 4: Code-Review+1(1 comment)I added explanation, and fixed my erroneous example."
62348,0,Change has been successfully cherry-picked as 2c789b58062b5bf3bb16ca1654ccf9cf87f3c444
62357,0,Change has been successfully merged into the git repository.
62359,0,Change has been successfully merged into the git repository.
62365,0,"Patch Set 1: Code-Review-1(5 comments)It looks like the core bundle is missing settings files. Looks great otherwise though, see comments for a few nits."
62366,0,"Will create a new patch set!"""
62367,0,"Patch Set 1:(In reply to comment #3)> Patch Set 1: Code-Review-1> > (5 comments)> > It looks like the core bundle is missing settings files. Looks great otherwise> though, see comments for a few nits.What setting files do you miss?Java Code Style Formatter and Code Template are done per workspace.Java Style Code Template per workspace is used to not need to change the header of every new created class file."
62370,1,Patch Set 6:(In reply to comment #17)> Patch Set 4:> > (4 comments)> > Looking good. A few more things:> > * All bundles should have an about.html that is added to the build.properties.> * connector-bugzilla-rest directory should be added as a module in the parent> pom.Sorry did not know where I should add the module in the parent pom. Can you tell me where it is?
62373,0,Change has been successfully merged into the git repository.
62376,0,Patch Set 4:(4 comments)Looking good. A few more things:* All bundles should have an about.html that is added to the build.properties.* connector-bugzilla-rest directory should be added as a module in the parent pom.
62377,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/109/ : UNSTABLE
62379,0,Patch Set 4:(In reply to comment #18)> Patch Set 4: Code-Review-1> > Build Unstable> > https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/109/ : UNSTABLEThis are all trac tests!
62385,0,Change has been successfully merged into the git repository.
62387,0,Change has been successfully merged into the git repository.
62395,0,Change has been successfully cherry-picked as e1de8d2d152352eded708615a967021db7800709
62398,0,Change has been successfully merged into the git repository.
62403,0,Change has been successfully merged into the git repository.
62405,0,Change has been successfully merged into the git repository.
62407,0,Change has been successfully merged into the git repository.
62409,1,AbandonedTypo.
62412,0,Change has been successfully merged into the git repository.
62417,0,Change has been successfully merged into the git repository.
62422,0,Patch Set 2: Verified+1 Code-Review+1 IP-Clean+1The changes are fine. My only concern is that we are wrapping this model API in editor but not in text view. We should probably put one in text view as well. Do you want to open a separate bug for that or update this on?
62430,1,Patch Set 5: Verified+1 Code-Review+2 IP-Clean+1OMG gerrit is annoying
62431,0,Change has been successfully merged into the git repository.
62435,0,Change has been successfully merged into the git repository.
62442,0,Patch Set 5:I acted on the good faith that cleanUp does at least what the ex-method 'unlink' did. It looked like it did. Does it break something for you?I moved away and can't test it right now.
62445,0,Change has been successfully merged into the git repository.
62455,1,"Patch Set 3:The problem was calling ResourcesPlugin.getWorkspace().run with 2 arguments, which uses the workspace root as scheduling rule. I changed it to the version with 4 arguments to explicitly pass the scheduling rule of the operation."
62456,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5280/ : UNSTABLE
62457,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5281/ : UNSTABLE
62459,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5259/ : UNSTABLE
62460,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5260/ : UNSTABLE
62461,1,"Patch Set 2: Code-Review-1this isn't correct yet, e.g. when trying interactive rebase or reset (and maybe some more operations) I hit errors likeAttempted to beginRule: R/, does not match outer scope rule: MultiRule[P/org.eclipse.example.calc,P/org.eclipse.example.calc.test]"
62462,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5256/ : UNSTABLE
62463,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5257/ : UNSTABLE
62464,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5258/ : UNSTABLE
62467,0,Change has been successfully merged into the git repository.
62468,0,Patch Set 1: Verified+1 Code-Review+1 IP-Clean+1Ok for me.Thanks.
62470,0,Change has been successfully cherry-picked as db28c6dd9cf5adb4f4fd0fdec174102ef36bdc04
62475,0,Change has been successfully merged into the git repository.
62478,0,Change has been successfully merged into the git repository.
62481,0,Patch Set 3: Verified+1 Code-Review+2 IP-Clean+1Looks good!
62482,0,Change has been successfully merged into the git repository.
62484,0,Change has been successfully cherry-picked as 2de89aa775f976c1d4f385076dfe686eb23e8c3c
62486,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Looks good
62490,0,Change has been successfully merged into the git repository.
62492,0,Change has been successfully merged into the git repository.
62494,0,Change has been successfully cherry-picked as e4c212a67a615c0b8ac2b9a4322b816641d1812b
62496,0,Change has been successfully cherry-picked as b6f6addfbd3ceb06cd069d46119ec01f2e08795b
62501,0,Patch Set 6: Code-Review+2 IP-Clean+1Looks good
62502,0,Change has been successfully merged into the git repository.
62505,0,Change has been successfully merged into the git repository.
62506,0,Change has been successfully cherry-picked as 94be803ec6813aa0214163ee4c17d3f35a27034b
62508,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1~60 warnings down, thanks!"
62509,0,Change has been successfully merged into the git repository.
62515,1,"Patch Set 3:By default the NestedJarProjectCoordinateAdvisor is disabled. If you want to activate it, you have to manipulate the preference file manually.To activate the advisor you have to add in .metadata\.plugins\org.eclipse.core.runtime\.settings\org.eclipse.recommenders.models.rcp.prefs the following line:advisor.list.sorted=org.eclipse.recommenders.internal.models.rcp.ManualProjectCoordinateAdvisor;org.eclipse.recommenders.models.advisors.MavenPomPropertiesAdvisor;org.eclipse.recommenders.models.advisors.JREExecutionEnvironmentAdvisor;org.eclipse.recommenders.models.advisors.JREReleaseFileAdvisor;org.eclipse.recommenders.models.advisors.JREDirectoryNameAdvisor;org.eclipse.recommenders.models.advisors.MavenPomXmlAdvisor;org.eclipse.recommenders.models.advisors.ModelIndexBundleSymbolicNameAdvisor;org.eclipse.recommenders.models.advisors.ModelIndexFingerprintAdvisor;org.eclipse.recommenders.models.advisors.OsgiManifestAdvisor;org.eclipse.recommenders.models.advisors.MavenCentralFingerprintSearchAdvisor;org.eclipse.recommenders.internal.models.rcp.NestedJarProjectCoordinateAdvisor;"
62517,0,Change has been successfully merged into the git repository.
62520,0,Change has been successfully merged into the git repository.
62524,0,Change has been successfully merged into the git repository.
62535,0,Change has been successfully merged into the git repository.
62543,0,Change has been successfully merged into the git repository.
62546,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5278/ : UNSTABLE
62551,0,Change has been successfully merged into the git repository.
62556,0,Change has been successfully merged into the git repository.
62558,0,Change has been successfully merged into the git repository.
62560,0,Change has been successfully merged into the git repository.
62566,0,Change has been successfully merged into the git repository.
62567,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5283/ : UNSTABLE
62569,0,Change has been successfully merged into the git repository.
62570,1,Patch Set 1: Code-Review-1(1 comment)Need to change the .ecore model to add the @noimplement tags to all model elements (ugh). I'll do that and amend this commit.
62572,0,Change has been successfully merged into the git repository.
62578,1,"Patch Set 2:I see an issue with the new 'yield' keyword. If I try to execute the code from testYieldStatement.pdtt in a PHP 5.5 interpreter then I get the following error:PHP Fatal error:  The ""yield"" expression can only be used inside a function in /home/raev/Work/runtime-PHP5.5/php55/index.php on line 1So, the yield keyword is not valid outside of a function. Shouldn't we have a parser error in such cases?"
62580,1,Patch Set 2:I see the same error.
62582,1,"Patch Set 4:Kaloyan Raev, Thanks for your attention. I was wrong, I think that yield it's just another return statement. I fixed my mistake. Please check again."
62583,0,"Patch Set 4: Verified+1 Code-Review+2 IP-Clean+1ok it looks good to me overall. if there are any other issues, let's take them down separately."
62584,0,Change has been successfully merged into the git repository.
62586,0,Change has been successfully merged into the git repository.
62588,0,Change has been successfully merged into the git repository.
62590,0,Change has been successfully merged into the git repository.
62592,0,Change has been successfully merged into the git repository.
62594,0,Change has been successfully merged into the git repository.
62598,0,Change has been successfully merged into the git repository.
62599,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1As I said in the bug, I was not able to load the code on my local environment but from what I can see this looks good!+1"
62601,0,Change has been successfully merged into the git repository.
62605,1,"Patch Set 1: Verified+1More information on the bug: if I delete the trace that was copied just copied, it works ok.  It's one of the other traces.but go ahead and commit this. The bug is actually in the sync because when it does not delete the supplementary files, the element does not appear to be an experiment element (right-clicking does not show the full context menu of experiments). I need to open it for it to become an experiment again."
62607,0,Change has been successfully cherry-picked as 935fd10732bbbff18a86ccd7ea43d85ccc02b9da
62610,0,Change has been successfully merged into the git repository.
62612,0,Change has been successfully merged into the git repository.
62618,0,Change has been successfully merged into the git repository.
62620,0,Change has been successfully merged into the git repository.
62623,0,Change has been successfully merged into the git repository.
62626,0,Change has been successfully merged into the git repository.
62634,0,Change has been successfully merged into the git repository.
62636,0,Change has been successfully merged into the git repository.
62637,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Good job, Jelena!"
62638,0,Change has been successfully merged into the git repository.
62639,0,"Patch Set 1: Code-Review-1(15 comments)Hi XavierVery nice addition! Our user will want that.Beside the inline commends I have two requests below. Please let me know what you think about it.Currently, there is no means to trigger the export command handler. I would suggest to add this to the TmfEventsTable Pop-up menu.Here how you could call the command handler in the method createPopupMenu() of the TmfEventsTable programmatically:final IAction exportToTextAction = new Action(""ExportToText"") {            @Override            public void run() {                IWorkbenchPage activePage = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();                IHandlerService handlerService = (IHandlerService) activePage.getActiveEditor().getSite().getService(IHandlerService.class);handlerService.executeCommand(""org.eclipse.linuxtools.tmf.ui.exportToText"", null);            }        };tablePopupMenu.add(exportToTextAction);-------I also would like to ask you to change the format of the text file to match the columns in the table and instead of a hard-coded order of columns (which are actually the default TMF table columns). This you can achieve using methods extractFieldItems() of TmfEventsTable and getColumns() of the TmfVirtualTable instance which is a member of TmfEventsTable. You will need some public methods to access these information and pass a reference to the TmfEventsTable instance as command parameter."
62644,0,"Patch Set 4: Verified+1 Code-Review+2 IP-Clean+1Ok, thanks"
62645,0,Change has been successfully cherry-picked as b29ea2393d66bd9e92666fda954b4588f0604e0e
62647,0,"Patch Set 3: Code-Review-1(12 comments)Thanks for implementing my change request for considering the table header. Your changes are working in principle. I tried it with several different trace types. However, a few things need to be fixed."
62650,0,Change has been successfully merged into the git repository.
62652,0,Change has been successfully cherry-picked as 88ef14efe76c44b7d145e918036e255046329d05
62653,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/225/ : UNSTABLE
62655,0,Change has been successfully merged into the git repository.
62657,0,Change has been successfully cherry-picked as 4afede97c4a2b2868e55e4b52f313fae3c0fea3a
62658,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Rebase looks good. Please provide comments on renderer implementations on bug 421462
62659,0,Change has been successfully merged into the git repository.
62661,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good. Please use bug 421462 to report on progress/problems with implementing appropriate renderers.
62665,0,Change has been successfully merged into the git repository.
62669,0,Change has been successfully merged into the git repository.
62672,0,Change has been successfully merged into the git repository.
62680,0,Change has been successfully merged into the git repository.
62681,0,"Patch Set 1: Code-Review-1(1 comment)Looks good expect for the Windows newlines. Would want to merge it only after the 2.0.2-SNAPSHOT, though, as the new project introduces yet another place where the version would need to be changed."
62682,0,Change has been successfully cherry-picked as 65148bbef2c16804e6adf1e63a6ef3c5b723c925
62694,0,Change has been successfully merged into the git repository.
62701,0,Change has been successfully merged into the git repository.
62705,0,Change has been successfully merged into the git repository.
62707,0,Change has been successfully merged into the git repository.
62709,0,Change has been successfully merged into the git repository.
62710,0,Change has been successfully cherry-picked as d2c6f0c379b3a7b6fbdf863adcaf6bbc476e4334
62711,1,"Patch Set 1:I tried to build it with Maven locally, but I'm getting a crash in libwebkitgtk during the tmf.ui unit tests. This might be due to my weird setup though (Eclipse 4.4 + webkit 2.2 from Debian unstable), I'm trying to see if it also happens with master."
62713,0,Patch Set 1: Code-Review+2 IP-Clean+1I didn't run it due to the long download time. But I trust you that you tried it.
62714,0,Change has been successfully cherry-picked as 1e530c81d4711654bc600daf45aea678fb057e9f
62716,0,Change has been successfully cherry-picked as 464d3f389d97d5062aa63332bfd418888a0f52f3
62719,0,Change has been successfully merged into the git repository.
62724,0,Change has been successfully merged into the git repository.
62728,0,Change has been successfully merged into the git repository.
62730,0,Change has been successfully cherry-picked as 3ef2b4c148162f2f78eef4b50991b8188deadc6f
62739,0,Change has been successfully merged into the git repository.
62742,0,Change has been successfully merged into the git repository.
62746,0,"Patch Set 2:patrick, if you approve it, you should also submit the change :)"
62747,1,"Patch Set 2:fair enough! ;)thanks for fixing this broken dependency, andreas!"
62753,0,Change has been successfully merged into the git repository.
62755,0,"Patch Set 2: Code-Review+1 IP-Clean+1Patrick, would be great if you can have a look so that we can rebase the snippets draft change onto this one after it is merged into master."
62756,0,Change has been successfully merged into the git repository.
62760,0,Change has been successfully merged into the git repository.
62761,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/p2/job/p2-gerrit/33/ : UNSTABLE
62763,0,Patch Set 1: Code-Review+2Good catch.  Looks good to me.
62764,0,Patch Set 1: IP-Clean+1Good catch.  Looks good to me.
62765,0,Patch Set 1: Verified+1Good catch.  Looks good to me.
62766,0,Change has been successfully merged into the git repository.
62770,0,Patch Set 2:(1 comment)Thanks for comments. I will follow ones and prepare the altered version of patchDaniel
62774,0,Change has been successfully merged into the git repository.
62776,0,Change has been successfully merged into the git repository.
62778,0,Change has been successfully merged into the git repository.
62781,0,Change has been successfully pushed.
62785,0,Change has been successfully cherry-picked as bdd2d3a5841fb75c6a4ec84ba91fbc72f52bbbcf
62789,0,Change has been successfully pushed.
62792,0,Change has been successfully pushed.
62794,0,Change has been successfully pushed.
62797,0,Change has been successfully pushed.
62801,0,Change has been successfully merged into the git repository.
62802,0,Change has been successfully cherry-picked as 7dc3d15de53de6add10746a0f10bd15b2b1753a8
62806,0,Change has been successfully merged into the git repository.
62808,0,Change has been successfully merged into the git repository.
62810,0,Change has been successfully merged into the git repository.
62812,0,Change has been successfully merged into the git repository.
62814,0,Change has been successfully merged into the git repository.
62816,0,Change has been successfully merged into the git repository.
62819,0,Change has been successfully merged into the git repository.
62821,0,Patch Set 2: Code-Review+2 IP-Clean+1Nice Job on the JUnit test!
62823,0,Change has been successfully cherry-picked as 8a7e4c3ad934b552dd28ad5e000ef196b01bb588
62825,0,Change has been successfully pushed.
62827,0,Change has been successfully merged into the git repository.
62829,0,Change has been successfully merged into the git repository.
62831,0,Change has been successfully merged into the git repository.
62832,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good, thanks Dawid!"
62833,0,Change has been successfully merged into the git repository.
62836,0,Change has been successfully merged into the git repository.
62840,0,Change has been successfully merged into the git repository.
62844,0,Change has been successfully merged into the git repository.
62850,0,Change has been successfully merged into the git repository.
62856,0,Change has been successfully merged into the git repository.
62860,0,Change has been successfully merged into the git repository.
62865,0,Change has been successfully merged into the git repository.
62868,0,Change has been successfully merged into the git repository.
62870,0,Change has been successfully pushed.
62872,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/emf-parsley/job/emf-parsley-gerrit/3/ : UNSTABLE
62874,0,Change has been successfully merged into the git repository.
62877,0,Change has been successfully merged into the git repository.
62886,0,"Patch Set 1:Q1: by default, surefire selects all test case based on a regexp. This regexp seems fine for most bundles, bot for some other, it runs more test than expected. That's why I configured testClass to use the default Test Suite (same as text.xml)Q2: yes, it could run multiple test suites. It can be configured in pom.xml (via a profile or a propery), or via command-line arguement -DtestClass=class.to.test"
62887,0,Patch Set 1: Code-Review+1(1 comment)Looks good except for the copyright notice.
62890,0,Change has been successfully merged into the git repository.
62894,0,Change has been successfully merged into the git repository.
62896,0,Change has been successfully merged into the git repository.
62898,0,Change has been successfully merged into the git repository.
62903,0,Change has been successfully merged into the git repository.
62908,0,"Patch Set 2: Looks good to me, but someone else must approveplease merge into head"
62911,0,Change has been successfully merged into the git repository.
62912,0,Patch Set 1: I would prefer that you didn't submit thisThe changes look good but there is no way to verify that they actually work.  Could you provide a unit test?  Moving the URL handling into a method would make it easier to create a test without needing a server.
62917,0,Change has been successfully merged into the git repository.
62922,0,"Patch Set 2:One down, one to go!"
62923,0,Change has been successfully cherry-picked as 4e78a8fe2ac70cb1ab43a9ba05472c4199272e3c
62927,0,Patch Set 4: Verified+1 Code-Review+2 IP-Clean+1This change looks fine to me.
62929,0,Change has been successfully cherry-picked as adc28b7b6fac17300fc124f19b459d444a7e78b8
62933,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/45/ : UNSTABLE
62937,0,Patch Set 1: IP-Clean-1The change looks good. Please add your name and affiliation to the copyright header of all changed files.
62939,1,Patch Set 4: Code-Review+1(1 comment)I rebased against the latest origin/master. Please see the inline comment.
62942,0,Patch Set 6:Thanks. All is good from my side.
62943,0,Change has been successfully merged into the git repository.
62947,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/47/ : UNSTABLE
62950,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/59/ : UNSTABLE
62954,0,Change has been successfully merged into the git repository.
62956,0,Change has been successfully merged into the git repository.
62957,0,Change has been successfully cherry-picked as 583c0a603989be6546ff50b0a5fb09402a45df9e
62958,0,"Patch Set 1: Code-Review+2 IP-Clean+1I don't have older LTTng versions around to test, but it looks fine and the tests pass, good enough for me ;)"
62962,0,Change has been successfully merged into the git repository.
62964,0,Change has been successfully merged into the git repository.
62968,0,Change has been successfully merged into the git repository.
62972,0,Change has been successfully cherry-picked as af1d6a742e90698724ea9d0088f5ff31ec1ce985
62974,0,Patch Set 2: Code-Review+1Future<String> works fine here in the ChatApp. +1 for inclusion in 3.7.1.
62977,0,Change has been successfully pushed.
62981,0,Change has been successfully merged into the git repository.
62983,0,Change has been successfully merged into the git repository.
62988,0,Change has been successfully merged into the git repository.
62992,0,Change has been successfully merged into the git repository.
62994,0,Change has been successfully cherry-picked as 397777c9f105b6019369394438626bd8a96639b5
62995,0,Change has been successfully cherry-picked as e4bcdf89ec62b9bd1dcd28b5ffe9e0d0c53bf34a
62999,0,Change has been successfully merged into the git repository.
63000,0,Patch Set 1: Code-Review+1This seems to solve the issue I had!
63003,0,Change has been successfully merged into the git repository.
63005,0,Change has been successfully merged into the git repository.
63008,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1This looks perfect. Thanks.
63009,0,Change has been successfully merged into the git repository.
63013,0,Patch Set 1: Code-Review-1(6 comments)Mostly good. Minor comments inside.
63021,0,Change has been successfully merged into the git repository.
63024,0,Patch Set 7: Code-Review+1 IP-Clean+1Looks good. waiting for vaadin release to happen before publishing this.
63027,0,Change has been successfully merged into the git repository.
63032,0,Change has been successfully merged into the git repository.
63035,0,Change has been successfully merged into the git repository.
63039,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5101/ : UNSTABLE
63040,1,Patch Set 2:please rebase and resolve conflicts
63042,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5102/ : UNSTABLE
63045,0,Change has been successfully merged into the git repository.
63046,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/egit.gerrit/4769/ : UNSTABLE
63048,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5109/ : UNSTABLE
63050,0,Change has been successfully merged into the git repository.
63051,1,"Patch Set 1:I'm unsure about the change in URIHelper. As this check is only used by ModelAssembler I would include it into this class. I add Paul as reviewer to get his opinion.Also I suggest to add your name to the ModelAssembler class, if you like. We use * Contributor <email> - Bug XXXXXX"
63054,0,Change has been successfully merged into the git repository.
63056,0,Change has been successfully merged into the git repository.
63058,0,Change has been successfully merged into the git repository.
63059,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/54/ : UNSTABLE
63061,0,Change has been successfully merged into the git repository.
63062,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/44/ : UNSTABLE
63064,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/47/ : UNSTABLE
63069,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/49/ : UNSTABLE
63072,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/48/ : UNSTABLE
63075,0,Change has been successfully merged into the git repository.
63079,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/46/ : UNSTABLE
63081,0,"Patch Set 2: Verified+1 Code-Review+2Looks good, thanks Mike"
63082,0,"Patch Set 2: IP-Clean+1Looks good, thanks Mike"
63085,0,"Patch Set 3: Verified+1 Code-Review+2 IP-Clean+1Look good, thanks Mike"
63086,0,Change has been successfully merged into the git repository.
63090,0,Change has been successfully cherry-picked as 4de198e1dadbd9fefd11fe7a7181db0252a6d892
63092,0,Patch Set 1: Code-Review+2All aboard the +2 express CHOO CHOO!
63094,0,Change has been successfully cherry-picked as e6c4093ca182cd8fa7bfb66f57f1972c9c57d1f7
63095,1,"Patch Set 1: Code-Review+1I like this change. Best to avoid ""feature requires"" unless there is a substantial reason for it. For one reference that talks about this, see http://wiki.eclipse.org/Version_Numbering#To_require_features_or_to_require_bundles"
63101,0,Change has been successfully merged into the git repository.
63103,0,Change has been successfully merged into the git repository.
63108,0,Change has been successfully merged into the git repository.
63112,0,Change has been successfully merged into the git repository.
63115,0,Change has been successfully merged into the git repository.
63122,0,Change has been successfully merged into the git repository.
63126,0,Change has been successfully merged into the git repository.
63131,0,Change has been successfully merged into the git repository.
63137,0,Change has been successfully merged into the git repository.
63140,0,Change has been successfully pushed.
63141,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1looks simple!
63142,0,Change has been successfully merged into the git repository.
63146,0,Change has been successfully merged into the git repository.
63148,0,Change has been successfully merged into the git repository.
63149,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5107/ : UNSTABLE
63151,0,Change has been successfully merged into the git repository.
63154,0,Change has been successfully merged into the git repository.
63155,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5104/ : UNSTABLE
63159,1,Patch Set 1: Code-Review-1Agreed that we should make the method for removing the time zone more robust. This should be handled in a separate (static) method that is unit tested.
63162,0,Change has been successfully merged into the git repository.
63163,1,Patch Set 5:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/85/ : UNSTABLE
63166,0,"Patch Set 2: Code-Review+1 IP-Clean+1Much better! I'm not +2'ing the change as I haven't verified it, I will try to do this later today."
63167,0,Patch Set 2: Code-Review-1(3 comments)Just a few minor nits but looks good otherwise!
63174,1,Patch Set 4:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/84/ : UNSTABLE
63176,0,Change has been successfully merged into the git repository.
63179,0,Change has been successfully cherry-picked as 2233f2394be116095a9e5152715f445b7d498e58
63185,1,"Patch Set 1: Verified-1(3 comments)That's quite nice.I've noticed several small bugs that currently make it difficult to use the dialog:* I created a method, then clicked on the File > New menu. I got bot.menu(""File"").menu(""New;  which is missing closing double-quote and a bracket.* I tried to have fun with the ""add annotation"" and found a case (which I can't reproduce) where the annotation removes the method signature.On possible improvements (that can wait for later):* Addition of a tool to ease definition of assertions."
63188,0,"Patch Set 2: Code-Review+1 IP-Clean+1This looks good to me.I'll give it a try and I'm waiting for build feedback.For future developmnet, I think we'll need to start using NLS for UI messages."
63192,0,Patch Set 4: Verified+1 Code-Review+2 IP-Clean+1Thanks for this nice contribution!
63193,0,Change has been successfully merged into the git repository.
63195,0,Change has been successfully merged into the git repository.
63199,0,Change has been successfully merged into the git repository.
63205,0,Change has been successfully merged into the git repository.
63206,1,"Patch Set 1: Code-Review-1(2 comments)I only saw one problem - some of the comments didn't get fixed correctly. Still, it should be fixed.Not sure about what export artifacts means - is there are corresponding import artifacts that is now broken?"
63209,0,Change has been successfully merged into the git repository.
63216,0,Change has been successfully merged into the git repository.
63224,0,"Patch Set 5: Code-Review+1Looks fine, thanks."
63225,0,Patch Set 5: Verified+1Thanks a lot for this contribution!
63226,0,Patch Set 5: Code-Review+2Thanks a lot for this contribution!
63227,0,Change has been successfully merged into the git repository.
63238,0,Change has been successfully merged into the git repository.
63242,0,Change has been successfully merged into the git repository.
63245,1,Patch Set 3: Code-Review-2while I agree with removing of the wizard I don't agree with the removing of RPMExportOperation. It should be used as a base (or some other class extending Job) and provide a standalone export operation that would even be exposed as API for possible usage in other tools like fedorapackager. This patch would be changed a lot together with the it's parent.
63251,0,Change has been successfully cherry-picked as a8a65c79bbb74c250b7d4932eed53e456783b6a9
63258,0,Change has been successfully cherry-picked as 64a9f971f2988df5bcdb27367fab8283e00857d1
63259,0,Change has been successfully cherry-picked as f62ed3b8b3f91c1e9e11e8120f15ec2e739ca788
63265,1,Patch Set 3: Code-Review-1(6 comments)The code does not belong to rpm.ui.editor but to rpm.ui or even rpm.core if it doesn't have UI dependency. I understand that you tried to follow the way things were done but these are legacy errors because in the past everything was in rpm.ui.editor and code is still not refactored to have proper logical structure. We should not make it harder to fix in the future.
63272,0,Change has been successfully cherry-picked as 1cfb57451f64d197cc97233bd3f8494b8e078eb6
63274,0,Patch Set 10: Verified+1 Code-Review+2 IP-Clean+1Looks good now.
63275,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/emf.gerrit/71/ : UNSTABLE
63276,1,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1The build failure is unrelated to the change and appears to be a build configuration problem, i.e., Xcore tests running against Xtext 2.5  when it should run against Xtext 2.4.3."
63277,0,Change has been successfully merged into the git repository.
63280,0,Change has been successfully merged into the git repository.
63281,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/emf.gerrit/70/ : UNSTABLE
63286,0,Patch Set 2:(3 comments)thanks for the test case. Looks good but needs some polishing (see comments) which is probably best if I do it myself. I hope to do this on Friday.
63288,0,"Patch Set 2:(3 comments)Thanks for the review.If you have time to give answers about the suggestions and questions I put in my comments, I'll work on a new version of this patch with those small improvements, so it will be less work for you on Friday."
63290,1,Patch Set 5: Code-Review-1IT ExtraCompilerRequirementsTest fails
63294,1,Patch Set 1:This change is for master and all existing unit and integration tests currently pass https://hudson.eclipse.org/tycho/. This means the scenario this change is meant to fix/improved is not covered by any of existing tests and new regression test or tests are required.
63296,0,"Patch Set 7: Code-Review+1Wow! That's a way more elegant solution than the one I suggested!I tried it using a module built against a Luna M2 and tested against JBDS 6 (which is based on Juno), and it worked like a charm.+1 for merging this in its current state."
63298,0,Change has been successfully merged into the git repository.
63300,0,Patch Set 3:(4 comments)I made a few changes which I hope should be improvements. Could you take a look?
63304,0,Change has been successfully cherry-picked as e72330fe5a3109b3076232c99cca6d2bb92c8768
63308,0,Change has been successfully merged into the git repository.
63310,0,Change has been successfully merged into the git repository.
63323,0,Change has been successfully merged into the git repository.
63325,0,Change has been successfully merged into the git repository.
63327,0,Change has been successfully merged into the git repository.
63329,0,Change has been successfully merged into the git repository.
63330,0,Change has been successfully cherry-picked as b10789fa892f0882521a9f267f244f1ca128b82f
63333,0,Change has been successfully cherry-picked as 50f6f6763d1f895ee40562f054ffdb4f1c64ce4d
63343,0,Change has been successfully merged into the git repository.
63346,0,Change has been successfully merged into the git repository.
63347,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/32/ : UNSTABLE
63350,0,Change has been successfully merged into the git repository.
63353,0,Change has been successfully merged into the git repository.
63359,0,Change has been successfully merged into the git repository.
63361,0,Patch Set 1: Code-Review+1 IP-Clean+1Tested with com.vaadin:vaadin-server (whose BundleS-SymbolicName) is com.vaadin.server. Works just fine.
63366,0,Change has been successfully merged into the git repository.
63369,0,Change has been successfully merged into the git repository.
63373,0,Change has been successfully merged into the git repository.
63374,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Tested locally and looks good
63378,0,Change has been successfully merged into the git repository.
63383,0,Change has been successfully cherry-picked as 18b33ddb72e5127221ef4c22ec8c4dd18b307956
63385,0,Change has been successfully merged into the git repository.
63387,0,Change has been successfully merged into the git repository.
63389,0,Change has been successfully merged into the git repository.
63395,0,Change has been successfully merged into the git repository.
63406,0,"Patch Set 6: Verified+1 Code-Review-1 IP-Clean+1The fix is good, but you should align ""} finally"" with ""try""."
63410,1,"Patch Set 4:Any time I make a change on a file, I get some whitespaces removed, independently of what I set for ""Remove trailing whitespaces"" preference.I'm sorry but I can't spend time removing those 50 whitespaces manually everytime I have a change, that's a pure waste of my time.If you can guide me on how to keep those whitespace, I'll be able to propose another version for this patch."
63413,1,"Patch Set 4:Thanks Mickael for this clean-up work. The existing whitespace can be annoying, especially as the platform discourage the usage of trailing whitespace. http://wiki.eclipse.org/Platform_UI/How_to_ContributeI open https://bugs.eclipse.org/bugs/show_bug.cgi?id=418910  to run the clean-up action on org.eclipse.e4.ui.css.core to get ride of them."
63419,0,Change has been successfully merged into the git repository.
63421,0,"Patch Set 1:(4 comments)Steve, looks good, but I had a few comments. Can you take a look?Thanks!"
63424,0,Change has been successfully merged into the git repository.
63427,0,Change has been successfully merged into the git repository.
63432,0,Change has been successfully merged into the git repository.
63436,0,Change has been successfully merged into the git repository.
63437,1,"Patch Set 4:This change causes compile errors since it uses java.io.IOException.IOException(String, Throwable) which is not available in J2SE-1.5 (the BREE of org.eclipse.jgit).Filed bug 418889."
63443,0,Change has been successfully merged into the git repository.
63444,1,"Patch Set 1: Verified+1 Code-Review-1The fix is at the correct location and works. However, I would also remove the shell's null check which isn't needed and wasn't there before Markus's change.==> revert #getSourcePart() to what it was before."
63448,0,Change has been successfully merged into the git repository.
63451,0,Change has been successfully merged into the git repository.
63453,0,Change has been successfully merged into the git repository.
63456,0,"Patch Set 2: Looks good to me, but someone else must approveI verified this with review https://git.eclipse.org/r/#/c/12584/, see comment#4."
63460,1,Patch Set 3:(3 comments)It seems weird to have setShouldPersistCredentials as a public method but I don't see a good way around it.
63461,0,Patch Set 3:(1 comment)I'm happy with this once the @since tags are fixed.
63465,0,Change has been successfully merged into the git repository.
63467,0,Change has been successfully merged into the git repository.
63472,0,Change has been successfully merged into the git repository.
63478,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/21/ : UNSTABLE
63482,0,Change has been successfully merged into the git repository.
63484,0,Change has been successfully merged into the git repository.
63489,0,Change has been successfully merged into the git repository.
63494,1,Patch Set 3: IP-Clean+1 Code-Review+2I can't verify this do to a problem in my workspace but if you say that it fixes it I'll believe you.
63496,1,"Patch Set 3:> Is it a go then, or should I wait til 3.11 to merge it?Sorry, wrong bug, please ignore that comment."
63503,0,Change has been successfully merged into the git repository.
63505,0,Change has been successfully merged into the git repository.
63514,0,Change has been successfully merged into the git repository.
63515,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-tasks-gerrit/771/ : UNSTABLE
63517,0,Change has been successfully merged into the git repository.
63519,1,"Patch Set 2: Code-Review-1I think the tab order should match the order in which the controls are layed out, so anonymous should be after the username, even though this means you need to shift+tab from anonymous back to the username after unchecking the box. It's slightly anoying but I think it would be confusing the reverse the order."
63520,1,"Patch Set 2:Well, this is what the bug is about, to remove the annoyance. I didn't get it at first, but with the patch applied I must say the UX of the wizard is better."
63522,0,"Patch Set 2:Fine with me, I already have 30+ changes open in Gerrit, one more won't make a difference :)"
63528,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/16/ : UNSTABLE
63532,0,Change has been successfully merged into the git repository.
63540,0,"Patch Set 2:(In reply to comment #8)> Patch Set 2:> > Frank, can you rebase on the latest master in case this is still needed?org.eclipse.osgi.framework.adaptor.BundleClassLoader is no longer in osig 3.10 so we need this review!Maybe we can replace org.eclipse.osgi.internal.baseadaptor.DefaultClassLoaderwith org.eclipse.osgi.framework.adaptor.BundleClassLoader.thoughts?"
63550,0,Change has been successfully merged into the git repository.
63551,1,"Patch Set 1: Code-Review-1(2 comments)I think this is a good change. Just a couple of nits.(not about this change) Until it can throw IOException, I wonder if it would make sense to make getAllRefs() throw a RuntimeException --- I'd think usually it is better to abort a program than to let it run with a wrong assumption about the content of the ref database."
63557,0,Change has been successfully merged into the git repository.
63559,0,Change has been successfully merged into the git repository.
63562,0,Change has been successfully merged into the git repository.
63563,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/14/ : UNSTABLE
63564,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/13/ : UNSTABLE
63569,0,Change has been successfully merged into the git repository.
63572,0,Change has been successfully merged into the git repository.
63574,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/12/ : UNSTABLE
63576,0,Change has been successfully merged into the git repository.
63577,1,"Patch Set 1:Uups, didn't mean to merge this. Should we revert?"
63578,1,"Patch Set 1:No worries, this change should be harmless. I was trying to extract the magic from Frank's https://git.eclipse.org/r/#/c/16779/. This part is going to be overwritten by that change soon anyway."
63583,0,Change has been successfully merged into the git repository.
63585,0,Change has been successfully merged into the git repository.
63586,0,Change has been successfully cherry-picked as e2661d99930f9dbbfde5c8b5a096176c720d0044
63593,0,Change has been successfully merged into the git repository.
63595,0,Change has been successfully merged into the git repository.
63599,0,Patch Set 2:That's a good question. It seems reasonable but I don't know. I wonder why it was done this way here and not in other places. For now I would just suggest that we not change the behaviour as part of a refactoring.
63607,0,Change has been successfully merged into the git repository.
63624,0,Change has been successfully merged into the git repository.
63628,0,Change has been successfully merged into the git repository.
63632,0,Change has been successfully cherry-picked as 4d16e2a9041dade8c5d69872e74dbca344accef1
63635,0,Change has been successfully cherry-picked as fc576c8011e3a74356c7971e602f12817e630880
63636,0,Change has been successfully cherry-picked as 6ab0b1c3c33ade135d867b8c66f51d1e6cab00f4
63639,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/20/ : UNSTABLE
63642,0,Change has been successfully merged into the git repository.
63645,0,Change has been successfully merged into the git repository.
63647,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/10/ : UNSTABLE
63650,0,Change has been successfully merged into the git repository.
63651,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/9/ : UNSTABLE
63654,0,Change has been successfully merged into the git repository.
63659,0,Change has been successfully merged into the git repository.
63661,0,Change has been successfully merged into the git repository.
63663,1,Patch Set 2:(2 comments)Patch Set 1 shows the simple apprach which tries to minimize the number of cache entries which has to be invalidate after manual mappings changes. Bases on the old value of the ProjectCoordinate a lookup in the cache is made. All entries which are equal to the old value are refreshed. If the old value is absent() (worst case) this means that all absent() entries will be refreshed.Patch Set 2 (As discussed with Andreas) shows the approach using two caches (IPackageFragementRoot --> DependencyInfo and DependencyInfo --> ProjectCoordinate). With this approach we can directly invalidate the affected mapping.What do you think?
63664,0,"Patch Set 2:(6 comments)I like patch 2 better. Assuming the persistence logic is not really longer than in patch 1, the change is even slightly shorter.Speaking of persistence: I think only the mapping DependencyInfo -> ProjectCoordinate should be persisted. The IPFR -> DependencyInfo can IMHO be build anew after each restart of the IDE."
63665,0,"Patch Set 2:@Olav: If you could address my comments to patch set 2, I think we can merge that approach.@Marcel: Would be great if you could also compare the approaches of patch set 1 and 2."
63672,0,"Patch Set 1: IP-Clean+1I'm not 100% sure what happens here, but the change should be on the safe side."
63674,0,Change has been successfully merged into the git repository.
63676,0,Change has been successfully merged into the git repository.
63678,1,"Patch Set 5:(1 comment)One comment on the test, which is a but ugly but probably can't be improved. In that case, go ahead and submit the change."
63684,0,Change has been successfully merged into the git repository.
63687,1,"Patch Set 2:(2 comments)I like this quite a bit already.The big issue is just the copy & pasting and how to avoid its nasty side-effects (i.e., by testing)."
63692,0,Change has been successfully merged into the git repository.
63695,0,Change has been successfully merged into the git repository.
63697,0,Change has been successfully merged into the git repository.
63705,0,Change has been successfully merged into the git repository.
63706,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/7/ : UNSTABLE
63707,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-tasks-gerrit/790/ : UNSTABLE
63710,0,Change has been successfully merged into the git repository.
63711,1,Patch Set 7:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/6/ : UNSTABLE
63716,0,Patch Set 6: IP-Clean+1 Code-Review+2(1 comment)I'm happy with this but I want to wait until after the 3.10 release to submit since it's quite late in the release cycle now.
63723,1,"Patch Set 2:You're right, in the upcoming patch set I'm reverting the collected extensions list before adding them all to the final 'monitors' collections."
63728,0,Change has been successfully merged into the git repository.
63732,0,Change has been successfully merged into the git repository.
63734,0,Change has been successfully merged into the git repository.
63735,1,Patch Set 1:This a trivial fix to trigger a job on the HIPP instance for Incubator.
63741,0,Change has been successfully merged into the git repository.
63743,0,Change has been successfully merged into the git repository.
63745,0,Change has been successfully merged into the git repository.
63747,0,Change has been successfully merged into the git repository.
63749,0,Change has been successfully merged into the git repository.
63750,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/4/ : UNSTABLE
63752,0,Change has been successfully merged into the git repository.
63753,0,Change has been successfully cherry-picked as 29482189d29fbb5725524cf0f14d9e7987aa4ed0
63756,0,Change has been successfully cherry-picked as 6446468b4bab4df957bbba4c7ddcb252f1262c6e
63758,0,Change has been successfully cherry-picked as c7b051917b46db3ec317ed1f97ca1d7a85479850
63761,0,Change has been successfully merged into the git repository.
63763,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4894/ : UNSTABLE
63765,0,Change has been successfully merged into the git repository.
63768,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4888/ : UNSTABLE
63769,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4855/ : UNSTABLE
63770,0,Change has been successfully cherry-picked as 08b9ae2d32daa09cfa11379165d3196bf893d89f
63776,0,Change has been successfully cherry-picked as 3f1e0c5639ff52ec046d646b398e8967163758d5
63779,0,"Patch Set 3: Code-Review+2Thanks for testing it!I couldn't test the .sh script from here, since we're proxied out of the wazoo."
63783,0,"Patch Set 1: Code-Review-1I will add support for the cyg-profile-fast probes, which mean you don't have the function names in the func_exit events. In this case we should skip checking completely. Thanks Matthew for pointing this out!"
63784,0,Change has been successfully cherry-picked as 88acebd74b6b2b018e95caa788264d7ed72ae3e8
63786,0,"Patch Set 3: Code-Review+1 IP-Clean+1No changes, still looks good, though I don't have a good eye for the picky details ;-)"
63788,0,Change has been successfully cherry-picked as f4c92c484a194a68397cc85a00c74cfdb4f76c89
63795,0,"Patch Set 3: Code-Review+2Thanks for ze reviews!> If the tracing starts too late at a moment when the stack is not empty,> there can be warnings if those stack levels are popped during the trace.> Do we consider this 'lost events' at the beginning of the trace?No, we have no way of knowing. We will get some errors for the ""missing pushes"", but after that it should be fine for the rest of the trace.But with UST traces, typically, one controls when they start the application and the tracer, unlike with kernel traces where the kernel is always ""running"". So this case is a tiny bit less common.> If the 'lost events' are because the trace ends too soon and there are> still remaining stack levels at the end time, there is no warning however.The state system will end with some attributes in the stack, but that shouldn't be a problem.> If we pop too far (let's say because of real lost events this time) but the> trace does not support function exit names, there will be no warning logged.I thought I handled this, since ""UNDEFINED"" wont equals() ""no function""?"
63796,0,Patch Set 3: Verified+1 Code-Review-1(1 comment)This change works fine for me and is an improvement over functionality. Just a few issues to address.
63797,0,Change has been successfully cherry-picked as 406129b693787e3feb796c8e0533ad01afdf3498
63799,0,Patch Set 5: Verified+1 Code-Review+2 IP-Clean+1This looks fine to me.
63804,0,Change has been successfully cherry-picked as 573aae0513d70d693e9b38df07f3212754acc233
63807,0,Change has been successfully merged into the git repository.
63820,0,Change has been successfully merged into the git repository.
63824,0,Change has been successfully merged into the git repository.
63836,0,Change has been successfully merged into the git repository.
63846,0,Change has been successfully merged into the git repository.
63859,0,Change has been successfully merged into the git repository.
63863,0,Change has been successfully merged into the git repository.
63865,0,Change has been successfully cherry-picked as 84253a658c8297a5de85b1f8d4f0adda33b6b075
63866,0,Change has been successfully cherry-picked as 59a12860e91b76e674ecce087d92c701dfdeaa94
63870,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4868/ : UNSTABLE
63871,0,"Patch Set 2: Code-Review-2(2 comments)Nice idea! Works good, but see inline comment about dispose."
63873,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4865/ : UNSTABLE
63875,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4892/ : UNSTABLE
63877,0,Change has been successfully merged into the git repository.
63881,0,Patch Set 2:Minor spelling error in commit comment - otherwise fine.
63889,0,Change has been successfully merged into the git repository.
63891,0,Change has been successfully cherry-picked as b50f517908406924aadad8c5c5233056c57bdc77
63892,0,Change has been successfully cherry-picked as 5446114e0337d09c2ac156a688da23b96ffaa251
63894,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4891/ : UNSTABLE
63896,0,Change has been successfully merged into the git repository.
63898,0,Change has been successfully merged into the git repository.
63906,0,Change has been successfully merged into the git repository.
63908,0,Change has been successfully merged into the git repository.
63909,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4864/ : UNSTABLE
63913,0,Change has been successfully merged into the git repository.
63915,0,Change has been successfully merged into the git repository.
63917,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/etrice/job/etrice-gerrit/7/ : UNSTABLE
63921,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1(1 comment)Thanks for this long awaited fix!I will merge the patch locally, fix the below mentioned problem and push all together."
63922,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/etrice/job/etrice-gerrit/8/ : UNSTABLE
63926,0,Change has been successfully merged into the git repository.
63931,0,Change has been successfully merged into the git repository.
63935,0,Change has been successfully merged into the git repository.
63936,0,Change has been successfully cherry-picked as 56180bdd406fe600c1fce3de8209c7d4bfd037f5
63959,0,Change has been successfully merged into the git repository.
63961,0,Change has been successfully merged into the git repository.
63985,0,Change has been successfully merged into the git repository.
63994,0,Change has been successfully cherry-picked as 02b3585d8a081fb4a132e6695c98bbaeb7a78ecb
63997,0,Change has been successfully cherry-picked as d0d9e18a4fc573b956ff7f6e700a08aa81e9a645
64001,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/188/ : UNSTABLE
64003,0,Change has been successfully merged into the git repository.
64005,0,Change has been successfully merged into the git repository.
64008,0,Change has been successfully merged into the git repository.
64018,0,Change has been successfully cherry-picked as dd2c131dd78fcfd632316c8f4845137200624864
64022,0,Change has been successfully merged into the git repository.
64025,0,Change has been successfully merged into the git repository.
64026,0,Change has been successfully cherry-picked as 811b0653174da8a992ab52c2323ba2efffec8115
64033,0,Change has been successfully merged into the git repository.
64038,0,Change has been successfully cherry-picked as 7d6b9146d7bf91ecf0511b05392f17b8cb7744d9
64042,0,Change has been successfully cherry-picked as 5606d82ee39a4157874100e24eb56edb05b6e72e
64046,0,Change has been successfully cherry-picked as 16e5b6c6ae2bff162a032a44590a40a88ad8ed2b
64047,0,Change has been successfully cherry-picked as f7d191bfbb1446f06be69a3fed3d5e7a3343f6b4
64050,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/186/ : UNSTABLE
64051,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/187/ : UNSTABLE
64053,0,Change has been successfully merged into the git repository.
64055,0,Change has been successfully merged into the git repository.
64059,0,Change has been successfully merged into the git repository.
64062,0,"Patch Set 2:(1 comment)Looks good, one minor comment. Once you have migrated the JUnit tests, I think we get also the bigger picture."
64065,0,Change has been successfully merged into the git repository.
64068,0,Change has been successfully merged into the git repository.
64070,0,Change has been successfully merged into the git repository.
64072,0,Change has been successfully merged into the git repository.
64075,0,Change has been successfully merged into the git repository.
64078,0,Change has been successfully merged into the git repository.
64081,0,Change has been successfully cherry-picked as 0e3c70a776958456859b860ea74389a3a415aa96
64089,0,Change has been successfully merged into the git repository.
64091,0,Change has been successfully merged into the git repository.
64094,1,"Patch Set 3: Verified-1This new patch set fixes the compilation issue by adding a missing package to the requirements.However, the DND Unit Test is still failing"
64096,1,"Patch Set 7:I GOT IT !!!It seems like java.awt.Robot does not work well with Xvnc (probably confused about the mutliple input sources, Robot vs VNC)Running in build.eclipse.org with Xvfb works!Now let's see if there is a way to get java.awt.Robot working with Xvnc (because Xvnc generally has better support for X/GTK, and Xvnc allow remote connection which can be quite useful)."
64099,1,Patch Set 5:Will this work if I run DnDTreeTest as a JUnit Plugin Test though ? Or do I strictly have to follow the steps you mentioned above ?
64101,0,Patch Set 1:It would be cool to have the DND tests in a dedicated package.
64109,1,"Patch Set 9: Verified+1 Code-Review+2 IP-Clean+1This works fine, so let's merge it.However, we must be aware that there is an incompatibility with some VNC servers/clients that will make those tests fail in some continuous integration deployements."
64110,0,Change has been successfully merged into the git repository.
64113,0,Change has been successfully merged into the git repository.
64115,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4860/ : UNSTABLE
64117,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4862/ : UNSTABLE
64128,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4884/ : UNSTABLE
64130,0,Change has been successfully merged into the git repository.
64132,0,Change has been successfully cherry-picked as b33cd281ac4af709dfb117db6ac837607722395e
64135,0,Patch Set 6: Code-Review+2 IP-Clean+1Ip check passed. build passed. all good for the initial import.
64136,0,Change has been successfully merged into the git repository.
64139,1,Patch Set 2: Code-Review-1@Patrick: Please test whether this works for you using a clean .m2/repository. I have some weird dependency resolution problems surrounding com.google.commons.base.Optional in the taglet project (but no other). Not sure what is causing this at the moment.
64146,1,"Patch Set 1:I don't think that joining PI's is a good idea.Imagine a default docbook PI:<?dbfo bgcolor=""color""?>Joining would result in:<?dbfo bgcolor=""color""bgcolor=""color""?>which will most probably not be accepted by the XSLT processor."
64147,1,"Patch Set 1:But this is a semantic problem that is specific to the kind of processing instruction in use. The user has to take care of that. The question is: are there processing instruction where a join might be useful? Since the content is not restricted further by the XML recommendation, there might be cases."
64152,0,Change has been successfully merged into the git repository.
64158,0,Patch Set 3: Verified+1 Code-Review+2Very good!
64159,0,Change has been successfully merged into the git repository.
64161,1,"Patch Set 2:I'm really unhappy with the moveTo..moveTo selection scheme. Every moveTo fires a SelectionChange and causes a repaint, what makes this method really inefficient (you can see the OutlineView flicker when selection happens).I really like this convenience method, but think we should find a way to do it without the moveTo's."
64164,0,Change has been successfully merged into the git repository.
64166,0,Change has been successfully merged into the git repository.
64169,0,Change has been successfully merged into the git repository.
64174,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4870/ : UNSTABLE
64176,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4844/ : UNSTABLE
64181,0,Change has been successfully merged into the git repository.
64182,1,Patch Set 10:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4883/ : UNSTABLE
64188,1,Patch Set 5:Rebased and resolved conflicts
64189,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/egit.gerrit/4738/ : UNSTABLE
64195,0,Change has been successfully merged into the git repository.
64216,0,Change has been successfully merged into the git repository.
64249,0,Change has been successfully merged into the git repository.
64251,0,Change has been successfully merged into the git repository.
64284,0,Change has been successfully merged into the git repository.
64286,1,"Patch Set 3: Code-Review+1(24 comments)Not worth a -1, but all you copyright dates a wrong.  Probably not a big deal."
64294,0,Change has been successfully merged into the git repository.
64298,0,Change has been successfully merged into the git repository.
64301,0,Change has been successfully merged into the git repository.
64306,0,"Patch Set 4: Verified+1 Code-Review+2 IP-Clean+1Nice simple test case, thanks! Looks good."
64307,1,"Patch Set 1:Unfortunately the hudson build will likely fail due to 34a1847956b7f6ef8400ef69ea760e3719920700 on master. Basically, if any commit that introduces a test failure makes it into master, all other gerrit builds will fail (on master, and kepler we allow the build to still pass on test failures).If you don't see this commit introducing a test failure and don't want to wait you can always push before hudson finishes rebuilding it."
64310,0,Change has been successfully cherry-picked as c81826411043e43a0c7a4c74466d10d89879b167
64312,0,Change has been successfully merged into the git repository.
64317,0,"Patch Set 2: Code-Review-1(1 comment)I think this looks good, except for the one if statement mentioned inline."
64320,0,Change has been successfully cherry-picked as f22100e80ba59084c5bd97c09abbb8e227cb518d
64326,0,"Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1I can confirm that current luna branch fails to build the RCP, but this patch fixes it. Good catch!"
64328,0,Change has been successfully cherry-picked as fc608770eefdef32fd1f6081c1e3c514e810ab31
64331,0,Change has been successfully cherry-picked as 7c84714c97937cb45ba3b9843de7ba93ff30f725
64333,0,Change has been successfully cherry-picked as 7e0a453cacad29a169fed5ecb4965281684a0fdf
64334,0,Change has been successfully cherry-picked as d2a823027d97f274ef1118dbc5f89c13b53e9fca
64336,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/egit.gerrit/4781/ : UNSTABLE
64338,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4882/ : UNSTABLE
64340,0,Change has been successfully merged into the git repository.
64343,0,Change has been successfully merged into the git repository.
64345,0,Change has been successfully cherry-picked as 84a6115edcc5bd11f57bdf05fd3ee3a2c58031da
64349,0,Change has been successfully merged into the git repository.
64351,0,Change has been successfully merged into the git repository.
64353,0,Change has been successfully merged into the git repository.
64355,0,Change has been successfully merged into the git repository.
64357,1,Patch Set 5: Verified-1The patch does not seem to work. I installed the example plug-in and the patch and tried File > New > Other...  and got an empty General and an empty General > Folder category being shown.Comments on the change:- I would not add WizardCollectionElementFilter but simply  add the static helper method to WizardCollectionElement- new Javadoc is not complete- @since tag is wrong- make sure to keep #select and #filter in sync (didn't  verify that)
64358,1,Patch Set 5: -Verified> The patch does not seem to workI'm probably using wrong steps again. Please post the exact steps into the bug report that show the wrong and the correct (after applying the patch) behavior.
64360,0,"Patch Set 5:I thought that it has been already adjusted to the comments above (filters are order independent, api is not changed). Could you please provide more details about what has to be changed in the current version of the patch to make it valid?thanks,Daniel"
64366,0,"Patch Set 6: Verified+1Looking at it again in more detail, I don't like to add a clone() method and #filter can be made much simpler/readable by:- create an empty adaptable list (modifiedList)- add the matching elements to modifiedList (in the loop)- when the modifiedList is empty return 'null'- when it has the same size as the input return the input- otherwise return: new Wizard(input, modifiedList);- add the new private constructorWith these changes we should be good to go."
64372,1,Patch Set 8:Hi Daniel. Sorry it took me so long - very busy days! The fix looks good. I have two minor changes which I will apply once the fix is submitted:- the static helper does not need to be public- I'll remove the @suppressWarnings on the constructor as we've not added it on other warnings in the same file so far.
64373,0,Change has been successfully merged into the git repository.
64377,1,"Patch Set 4:Fix in the last change set works regardless the filtering orderthanks in advance for review,Daniel"
64382,0,Patch Set 4:The additional empty category filter also relies on filtering older. First the pattern filter as well as the activity one have to be completed to filter out the empty categories.I will try to improve the original patch since in my opinion it is the right direction for this fix.Daniel
64384,0,"Patch Set 3: Verified+1 Code-Review+2 IP-Clean+1Great, thanks!"
64385,0,Change has been successfully merged into the git repository.
64388,0,Change has been successfully merged into the git repository.
64389,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Thanks, looks good."
64390,0,Change has been successfully cherry-picked as 28224bbc4a1b3d32a0eb73c7d2bd0a28da2cfcf5
64392,0,Change has been successfully merged into the git repository.
64394,0,Change has been successfully cherry-picked as 4e84f481aa38f9f9725ac86aa7d829143ea4b01c
64395,0,Patch Set 1: Code-Review+1Looks fine for commit.
64398,0,Change has been successfully merged into the git repository.
64399,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/70/ : UNSTABLE
64401,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/115/ : UNSTABLE
64403,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/130/ : UNSTABLE
64405,0,Change has been successfully merged into the git repository.
64407,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/133/ : UNSTABLE
64409,0,Change has been successfully merged into the git repository.
64410,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/69/ : UNSTABLE
64412,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/114/ : UNSTABLE
64414,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/113/ : UNSTABLE
64415,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/68/ : UNSTABLE
64417,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/128/ : UNSTABLE
64419,0,Change has been successfully merged into the git repository.
64421,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/67/ : UNSTABLE
64423,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/126/ : UNSTABLE
64425,0,Change has been successfully merged into the git repository.
64428,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/125/ : UNSTABLE
64430,0,Change has been successfully merged into the git repository.
64432,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/110/ : UNSTABLE
64433,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/65/ : UNSTABLE
64435,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/124/ : UNSTABLE
64437,0,Change has been successfully merged into the git repository.
64439,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/123/ : UNSTABLE
64441,0,Change has been successfully merged into the git repository.
64442,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/64/ : UNSTABLE
64444,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/109/ : UNSTABLE
64445,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/63/ : UNSTABLE
64447,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/122/ : UNSTABLE
64449,0,Change has been successfully merged into the git repository.
64451,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/108/ : UNSTABLE
64453,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/132/ : UNSTABLE
64455,0,Change has been successfully merged into the git repository.
64458,1,"Patch Set 1:So maybe it's a problem with the test, which can be fixed now."
64462,0,"Patch Set 2: Code-Review+1Steffen, I'd actually like to see this in for 2.0.1. What do you think?"
64468,0,Change has been successfully merged into the git repository.
64470,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/121/ : UNSTABLE
64472,0,Change has been successfully merged into the git repository.
64473,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/61/ : UNSTABLE
64475,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/60/ : UNSTABLE
64477,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/105/ : UNSTABLE
64479,0,Change has been successfully merged into the git repository.
64480,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/59/ : UNSTABLE
64482,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/104/ : UNSTABLE
64484,0,Change has been successfully merged into the git repository.
64485,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/58/ : UNSTABLE
64487,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/118/ : UNSTABLE
64489,0,Change has been successfully merged into the git repository.
64490,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/57/ : UNSTABLE
64492,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/102/ : UNSTABLE
64494,0,Change has been successfully merged into the git repository.
64495,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/56/ : UNSTABLE
64497,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/101/ : UNSTABLE
64499,0,Change has been successfully merged into the git repository.
64501,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/119/ : UNSTABLE
64503,0,Change has been successfully merged into the git repository.
64504,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/55/ : UNSTABLE
64506,1,Patch Set 2: IP-Clean+1I had to replace '-vex-outline-content' with '_vex...' because of a bug in the batik css parser.https://issues.apache.org/bugzilla/show_bug.cgi?id=47800
64507,1,"Patch Set 2: Verified+1 Code-Review+2That's ugly! I'll accept this as a provisional solution for now, since there is no real solution possible in reasonable time. There are other problems with Batik (e.g. missing namespace support). In my opinion it is an option for the future to think about an alternative to Batik."
64508,0,Change has been successfully merged into the git repository.
64514,0,Change has been successfully merged into the git repository.
64517,0,Change has been successfully merged into the git repository.
64518,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/120/ : UNSTABLE
64524,0,Change has been successfully merged into the git repository.
64530,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4826/ : UNSTABLE
64532,0,Change has been successfully merged into the git repository.
64534,0,Change has been successfully merged into the git repository.
64541,0,Change has been successfully merged into the git repository.
64543,0,Change has been successfully merged into the git repository.
64545,0,Change has been successfully merged into the git repository.
64546,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/76/ : UNSTABLE
64548,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/85/ : UNSTABLE
64550,0,Change has been successfully merged into the git repository.
64551,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/77/ : UNSTABLE
64553,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/84/ : UNSTABLE
64554,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/96/ : UNSTABLE
64555,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/98/ : UNSTABLE
64557,0,Change has been successfully merged into the git repository.
64559,0,Change has been successfully cherry-picked as 200a9927d59733e626bf3a5b257b926c3f0e8354
64561,1,Patch Set 8:I believe that the build failure is spurious. Tests pass on my local machine (though I'm not targetting all configurations).
64562,1,Patch Set 8: Code-Review-1(4 comments)My main concern is that even notification still happens on the UI thread. It's not clear to me why this is still required.
64563,1,"Patch Set 8:fwiw, with patch set 7 I'm still seeing bug 410580 and bug 413561"
64566,1,"Patch Set 8:(9 comments)Sorry, forgot to publish the drafts!"
64574,0,"Patch Set 3:(In reply to comment #10)> Patch Set 3:> > Miles, what would left in this change if you didn't refactor the> RemoteEmfObserver.updated(EParentObjectType, EObjectType, boolean). The removed> arguments, don't seem to be used anyway.Actually, there is a major reason for this. It has to do with generics. I can't rememeber the exact issue, but because of simplifications in the API, we can no longer infer the generics in the same way we used to. So rather than reengineer that for no gain, the simplest thing to do is just do waay with the generics since they aren't used anywhere. > Also, some changes in RemoteEmfConsumer, like the new notifyObservers method,> look like refactoring to me. Could you create a separate change for all the> refactorings, and then apply the proposed fix on top of them? That would make> the fix much smaller and easier to review.The refactorings are realy part and parcel of the change, and believe it or not, they're pretty minimalized. I'll see if I can stage any of if, but I don't want that review to be rejected because ""it's just refactorings"". ;)"
64575,1,"Patch Set 3:(In reply to comment #11)> I don't want that review to be rejected because ""it's just refactorings"".I'm not voting against it, all I'm saying is that without the refactorings it's going to be easier for me (and I guess for other reviewers too) to get my head around the fix."
64576,0,Patch Set 3:(3 comments)I forgot to submit these comments yesterday! Hopefully this clarifies why these are not simple refactorings.
64580,0,Change has been successfully merged into the git repository.
64584,0,"Patch Set 9:I did a bit of testing and this is looking better overall. There are still outstanding issues but we should have them tracked on separate bugs that are scheduled for 2.0.2. Miles, can you address Tomek's comments and merge? We should get more mileage on this and follow up with additional fixes as needed."
64589,0,Patch Set 7: -Code-ReviewThis is now ready for review. :)
64591,0,"Patch Set 7:Playing with the latest patch set I noticed two issues so far:* Opening a review and closing it immediately leaves a warning in Task List: ""Couldn't retrieve remote object for... Check remote connection"". My connection is fine.* Now I can reproduce https://bugs.eclipse.org/bugs/show_bug.cgi?id=414461 quite reliably, got 5 warnings in a row"
64593,0,"Patch Set 7:(In reply to comment #21)> Patch Set 7:> > Playing with the latest patch set I noticed two issues so far:> * Opening a review and closing it immediately leaves a warning in Task List:> ""Couldn't retrieve remote object for... Check remote connection"". My connection> is fine.> * Now I can reproduce https://bugs.eclipse.org/bugs/show_bug.cgi?id=414461 quite> reliably, got 5 warnings in a rowHeh. Progress -- Now our bugs are much more reproducible!"
64596,0,"Patch Set 2:This doesn't actually work well, yet! But comments on overall approach are appreciated."
64603,1,"Patch Set 4:Tomek, please see explanation in line. Most importantly, these changes are only meant to cover something we need to ensure that our new changes for 2.0.1 do no introduce a breaking change. If you have idea to improve clarity of these complex tests in general, please offer them in a seperate review, but I think it's important not to block this one unless as Steffen suggests we are actually introducing a new risk somehow."
64605,0,Patch Set 3:No idea what this tests exactly but seems fine with me to merge considering that tests pass.
64606,0,"Patch Set 3: Code-Review-1(5 comments)> No idea what this tests exactly Same thing here. The change contains a lot of noise related to the fact that a new class was added. I wonder if this can be improved by reusing existing classes and reducing the changes to minimum.> but seems fine with me to merge considering that tests pass.I disagree, obscure tests are hard to maintain. And I'm already seeing symptoms of that."
64607,0,Patch Set 3:(4 comments)Whoops!
64618,0,Change has been successfully merged into the git repository.
64619,0,Change has been successfully cherry-picked as c3dc08b971c593df2203ea637f648b527df2b92f
64622,1,"Patch Set 1:(4 comments)A lot of those synchronized were meant to prevent race behavior in the unit tests, especially since some threads which act on the project actually run only after the test cleanup.  I'll try your delay function and see if simply adding this removes the need to synchronize stuff."
64632,0,"Patch Set 1:I'll also take advantage of this rework to preemptively correct some things I know alex will comment on ;-)  Finals, privates, etc :p"
64633,0,"Patch Set 1:Good! Now I don't even have to go out and do it, the reviews happen by themselves! :D"
64637,0,Patch Set 2:It is full featured!Reviews can officially start now ;-)
64638,0,"Patch Set 2: Code-Review-1 IP-Clean-1(9 comments)very good, careful with the link to gpled code, it's ok, I'm just saying we need to say it's not used while linking to it."
64640,1,"Patch Set 2:Yes, I want to make sure it's clear. It's not against the contract, but I want to avoid ambiguity."
64642,0,Change has been successfully cherry-picked as 2dd07f769a5ab03b63a407cdf77e0cb1bb07fbf5
64648,0,"Patch Set 5:(5 comments)Thanks for your comments alex, new patchset will follow.As for what is in event.matching.  Who knows what people will want to match?  I prefer to be prepared for other types of matching, it's not expensive (one abstract, one interface).  ""Network"" match actually means one event from one trace can be matched with one event from another trace.  But one may want to match a sequence of events (a -> b -> c) to another sequence of events (d -> e -> f) whether to be used for time sync or not.  I wouldn't want to limit them."
64650,1,"Patch Set 8: Code-Review-1(1 comment)Basically, the test files should be integrated with CtfTestTraces.java. Maybe it's getting confusing with just an incrementing number, maybe we should have a map where you pass the name of the test trace or something..."
64651,1,"Patch Set 8: Verified-1New test case org.eclipse.linuxtools.lttng2.kernel.core.tests.event.matchandsync.ExperimentSyncTest fails when running it with maven.Running org.eclipse.linuxtools.lttng2.kernel.core.tests.event.matchandsync.AllTestsTests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 4.247 sec <<< FAILURE!Results :Failed tests: testExperimentSync(org.eclipse.linuxtools.lttng2.kernel.core.tests.event.matchandsync.ExperimentSyncTest): expected:<...ampLinear [ alpha = [0.9999413783703139011056845831168394, beta = 79796507913179.3334766012468829817]1 ]> but was:<...ampLinear [ alpha = [1.000000001637620270360329778822053, beta = -2229151790.20679983311606207474401]1 ]>"
64655,0,Change has been successfully cherry-picked as d8869d71c91c9524d47dd589f7bed8dd1eebccd2
64656,0,Change has been successfully cherry-picked as 24671c05d2f008691be4c5dce9507159cfef2456
64657,0,Patch Set 1: Code-Review+1This change looks fine to me and mirrors what is done in the regular launch delegate. If it fixes the issue please feel free to push.
64659,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/81/ : UNSTABLE
64661,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/95/ : UNSTABLE
64663,0,Change has been successfully merged into the git repository.
64665,0,Change has been successfully merged into the git repository.
64669,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/80/ : UNSTABLE
64670,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/93/ : UNSTABLE
64672,0,Change has been successfully merged into the git repository.
64673,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/53/ : UNSTABLE
64674,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/79/ : UNSTABLE
64675,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/86/ : UNSTABLE
64676,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/89/ : UNSTABLE
64677,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/90/ : UNSTABLE
64678,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/92/ : UNSTABLE
64680,0,Change has been successfully merged into the git repository.
64683,0,Change has been successfully merged into the git repository.
64689,0,Patch Set 7:Why didn't you tell me eclipse!
64691,1,"Patch Set 6:I'll put the unit tests in a separate patch (it's more complicated than just unit testing this new method, besides, it does not even test it fully).  This one is required for the analysis framework and it will get in more easily like this I think"
64693,1,"Patch Set 6:If I added a boolean parameter to getTrace() openIfNecessary that would be false by default, would that be all right?This way a caller can still use the getTrace but would need to explicitly say he wants the callee to open the trace and block until available.Otherwise I'll need to see in the analysis framework if I can ""schedule"" an analysis using either the already available trace or a signal to wait for opening."
64695,1,"Patch Set 6:Just to add to the mix, I'm considering working on an approach where state systems are built in-band with the trace (trace calls buildStateSystem(), construction starts. trace calls dispose(), construction stops if applicable, files and closed and cleaned up if needed). a.k.a do away with the HistoryBuilder abomination entirely.We're having a bug right now with traces with 0 events: one part of the system is still waiting for the signal to start, and another part is trying to close it. Pain and tears ensue. Moving to the in-band approach would undoubtedly be the correct way to fix this.(those is-the-statesystem-started-yet? latches make me cringe ;) )However, this is a very big undertaking. It might be worth focusing on the future instead, where the ""analysis"" is the owner of the state system. Where it would control and know when construction is started and when it's done. We could learn from history, and do it right this time."
64697,0,"at org.eclipse.equinox.launcher.Main.main(Main.java:1426)!SUBENTRY 1 org.eclipse.core.resources 4 368 2013-08-15 15:53:31.096!MESSAGE Resource '/Test_Project/Traces/kernel' does not exist."""
64699,0,Change has been successfully cherry-picked as 3889fa618f7eb1033868fb4bdede6348951994be
64709,0,Change has been successfully merged into the git repository.
64711,0,Patch Set 2: Verified+1 Code-Review+1 IP-Clean+1Looks great
64713,0,Change has been successfully cherry-picked as b6354f97f49663adbe6c277459992827b9a6b184
64714,0,Change has been successfully cherry-picked as 908714889a15c87c9503d57d7cea69cb5bb32e75
64716,0,Change has been successfully cherry-picked as fb738e62dceff34d6afd00bfaed1771c793a7dce
64719,0,Change has been successfully cherry-picked as 8a04006e1ec751a93c11d9da22a0bb1bb0a19ece
64721,0,Change has been successfully merged into the git repository.
64723,0,Change has been successfully merged into the git repository.
64728,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/52/ : UNSTABLE
64729,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/78/ : UNSTABLE
64731,0,Change has been successfully merged into the git repository.
64733,0,Change has been successfully cherry-picked as f47638c28fe7c64172a90ca9fdd4ecaad4bee4a0
64736,0,Change has been successfully merged into the git repository.
64742,0,Change has been successfully merged into the git repository.
64744,0,Change has been successfully merged into the git repository.
64746,0,Change has been successfully merged into the git repository.
64748,0,Change has been successfully merged into the git repository.
64750,0,Change has been successfully merged into the git repository.
64754,0,Change has been successfully merged into the git repository.
64757,0,Change has been successfully merged into the git repository.
64761,0,Change has been successfully merged into the git repository.
64764,0,Change has been successfully merged into the git repository.
64769,0,Change has been successfully merged into the git repository.
64773,0,Change has been successfully merged into the git repository.
64775,0,Change has been successfully merged into the git repository.
64777,0,Change has been successfully merged into the git repository.
64779,0,Change has been successfully merged into the git repository.
64800,0,Change has been successfully merged into the git repository.
64812,1,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1The code changes look reasonable, Paul already approved this fix in 4.4 and I was able to reproduce this problem (and fix it with this patch) using Paul's example.  +2 for 4.3.1"
64813,0,Change has been successfully merged into the git repository.
64814,0,Change has been successfully cherry-picked as f9c4109b136539c3b922862e7eef81e0c646a00d
64817,0,Change has been successfully merged into the git repository.
64818,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good, thanks for the contribution"
64823,0,Change has been successfully cherry-picked as e22e45435c1696d23f94e3502401c0776d9126f8
64827,0,Change has been successfully cherry-picked as 05b90bb78c1425bddbfdeffba54b9b9c3d602455
64830,0,Change has been successfully cherry-picked as 41db326e1ff11ae11d44e66ed662678f4cfa9472
64835,0,Change has been successfully merged into the git repository.
64837,0,Change has been successfully merged into the git repository.
64842,0,Change has been successfully merged into the git repository.
64847,0,Change has been successfully merged into the git repository.
64852,0,Change has been successfully merged into the git repository.
64859,1,Patch Set 1:I like the red cross but it looks too pixilated on Mac. do you have one with sharper  edges. Same for the tick.
64860,1,"Patch Set 1:the tick looks a bit oversized compared to the cross and bullet. Can you make it a bit smaller? Sorry, I can't do it myself today."
64862,0,"Patch Set 2: Code-Review+1I modified the icons, hope it looks better on Mac now ;-).If not I have to search other icons, but i did not found some yet."
64863,0,Patch Set 2: Code-Review+2 IP-Clean+1Very nice!
64864,0,Change has been successfully merged into the git repository.
64865,0,Change has been successfully cherry-picked as 093bec1fb752c9cf7c84120d699dadcb87fd333a
64866,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1This looks fine to me.
64871,0,Change has been successfully merged into the git repository.
64873,0,Change has been successfully cherry-picked as 5d55687a00ead6f7a1e53718656d6632196aac14
64874,0,Change has been successfully cherry-picked as ff2c92ad6bc822f7008a4e3fb9fb77b47b4effd4
64877,0,Change has been successfully merged into the git repository.
64878,1,"Patch Set 1:Changes look good, but can you please open a bug and modify this commit message to contain the bug number.Bug xxxxxxx - Fix deprecation warnings"
64880,0,"Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Thanks for the patch, looks good."
64885,0,Change has been successfully merged into the git repository.
64886,0,Patch Set 1: Code-Review+2 IP-Clean+1IP-Clean: CLA on fileGreat contribution Jeremie!
64892,0,Change has been successfully merged into the git repository.
64898,0,Patch Set 2: Code-Review-1(1 comment)Thanks for the review Torkild.  I'm happy to +2 once the method visibility is addressed.
64899,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good to me!
64900,0,Change has been successfully merged into the git repository.
64901,1,"Patch Set 1:Paul,The patch seems to fix the issue. However if you have better idea how to fix it just let me know and I will modify it.I was not able to find any document regarding the resolving key binding conflicts so I don't know if it breaks sth or not.thanks in advance for review,Daniel"
64902,0,"Patch Set 1: Code-Review-1The change would allow the best context to be switched to a parent context, but the parent context is more general and the children contexts are more specific ... and we always want more specific context to win."
64905,0,Change has been successfully merged into the git repository.
64911,0,"Patch Set 3:OK, so let me remove this part of patch. I was considering some little performance improvement by it is not related to this bug,Daniel"
64913,0,Change has been successfully cherry-picked as d0f83440d2ea8382cf2977d37659eda9aa2aa7d1
64921,0,Change has been successfully merged into the git repository.
64929,0,Change has been successfully merged into the git repository.
64931,0,Change has been successfully merged into the git repository.
64938,0,Change has been successfully merged into the git repository.
64940,0,Change has been successfully cherry-picked as 75e5fa5dfb126ce4b683b78fb881c9cf8095a2f7
64945,0,Change has been successfully merged into the git repository.
64947,0,Change has been successfully merged into the git repository.
64955,0,Change has been successfully merged into the git repository.
64959,0,Change has been successfully merged into the git repository.
64965,0,Change has been successfully cherry-picked as 58076fc211c0bc5830ecbc22e51c01904491eb5a
64968,0,"Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Dave, not directly related to your change, but I think the RIO test suite should probably reuse the classes from the standard TRS testsuite to avoid duplicate code.The OAuth changes look good and are a welcome addition!"
64969,0,Change has been successfully merged into the git repository.
64973,0,Change has been successfully merged into the git repository.
64978,0,Patch Set 1:I think it is a good idea.  I will pursue and re-post the patch.
64980,0,Change has been successfully cherry-picked as 08c26dbba947ff7be06f430d844087ddca039a31
64987,0,Change has been successfully cherry-picked as dd1a8914261e00a15ed1ec4c9a8d2ca688e4fb43
64990,0,Change has been successfully merged into the git repository.
64994,0,Change has been successfully cherry-picked as dc7c6fb9cdfd629467b1fe38e387668fff697cd7
64995,0,"Patch Set 2: Code-Review-1(5 comments)Looks good overall, just few small fixes and it's ready."
64999,0,"Patch Set 6: Code-Review-1(5 comments)Looks good overall, just a few small bits and it's ready to enter."
65006,0,Change has been successfully cherry-picked as 73e5e28fc1f81ee33925f096d512a9da6058c7ab
65008,0,Change has been successfully merged into the git repository.
65018,0,Change has been successfully cherry-picked as 1f3d1aefa5c3d54f490799a1874f1d7990986aa8
65022,1,Patch Set 4: Code-Review-1(2 comments)Small changes ... I feel bad for -1 for that ... I'll upload the fix for you
65024,0,Change has been successfully merged into the git repository.
65025,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good to me!
65030,0,Change has been successfully merged into the git repository.
65035,0,Change has been successfully merged into the git repository.
65041,0,Change has been successfully merged into the git repository.
65043,0,Change has been successfully merged into the git repository.
65046,0,Change has been successfully merged into the git repository.
65050,0,Change has been successfully merged into the git repository.
65052,0,Change has been successfully merged into the git repository.
65060,0,Change has been successfully merged into the git repository.
65065,0,Change has been successfully merged into the git repository.
65078,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/emf-compare.gerrit/318/ : UNSTABLE
65082,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/emf-compare.gerrit/320/ : UNSTABLE
65084,0,Change has been successfully merged into the git repository.
65088,0,Change has been successfully merged into the git repository.
65090,0,Change has been successfully merged into the git repository.
65094,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good, and works! Thanks Tomek!"
65095,0,Change has been successfully merged into the git repository.
65097,0,Patch Set 1:Thanks for the reviews!
65098,0,Change has been successfully cherry-picked as 12aa1bcc0f93742b549445f5731369d0fdbd84d8
65099,0,Change has been successfully cherry-picked as b7713070c512844ce26eccf8192899b84e25ac83
65108,0,Change has been successfully cherry-picked as ff830df617ee665590e19e59ba2c19d081059d51
65110,0,Change has been successfully cherry-picked as 53a60e03b69255d2fbbe6db9aac834e7cfa4f1a9
65112,0,Change has been successfully cherry-picked as 10a18dc04042ce335615e4d83924a5d350527045
65114,0,Change has been successfully merged into the git repository.
65116,0,Change has been successfully merged into the git repository.
65119,0,Change has been successfully cherry-picked as 1201422a29a54825a02d9953959d84453ed1ff2a
65123,1,Patch Set 3:Good call about the now-useless blockSize parameter. Do you mind if I put that in a separate patch? It affects a lot of things too...
65126,0,Change has been successfully cherry-picked as 7402a30a9c1960e1c588defafc763f7332c7b339
65131,0,"Patch Set 3: Verified-1(1 comment)All changes are fine, but it still needs to update all references of OS.pixbuf."
65133,0,Change has been successfully merged into the git repository.
65141,0,Change has been successfully merged into the git repository.
65145,0,Change has been successfully merged into the git repository.
65147,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-reviews-gerrit/862/ : UNSTABLE
65149,0,Change has been successfully merged into the git repository.
65151,0,Change has been successfully merged into the git repository.
65154,0,Change has been successfully merged into the git repository.
65157,0,Change has been successfully cherry-picked as e27acc176f3d0f6002da08ea664a6ae258d3feb9
65163,0,Change has been successfully cherry-picked as 9de5a9a041af549e840bcea91d292e707d38d258
65166,0,Change has been successfully merged into the git repository.
65169,0,Change has been successfully merged into the git repository.
65172,0,Change has been successfully merged into the git repository.
65176,0,Change has been successfully merged into the git repository.
65178,1,Patch Set 2:Tested in a fresh Eclipse for DSL Developers. Here's what you have to do:- Clone the Git repo- Import Existing Maven projects- Install the autodiscovered connectors- Resolve and set the kepler.target- *Manually* add the Xtend nature to 4 plugins. :-(
65181,0,"Patch Set 4: Code-Review+1Unless the Xtend m2e connector gets smarter, we have to forcibly check in the .project file for every Xtend project.But then ""Import/Existing Maven project"" + setting kepler.target results in a usable workspace. :-)"
65183,0,Change has been successfully merged into the git repository.
65184,0,Change has been successfully cherry-picked as 21dee3a16d574b343002df8702b72f19102555b7
65187,0,Patch Set 1: Code-Review-1(7 comments)Good work. I tried it with LTTng Tools 2.2 and seems to be ok.Some other comments:- Please also add test cases in org.eclipse.linuxtools.lttng2.core.tests and org.eclipse.linuxtools.lttng2.ui.tests- Please also update the LTTng User Guide (update file org.eclipse.linuxtools.lttng.help/doc/User-Guide.mediawiki)
65197,0,Change has been successfully merged into the git repository.
65202,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-reviews-gerrit/858/ : UNSTABLE
65204,0,Change has been successfully merged into the git repository.
65206,0,Change has been successfully merged into the git repository.
65211,0,Change has been successfully merged into the git repository.
65216,0,Change has been successfully merged into the git repository.
65221,0,Change has been successfully merged into the git repository.
65227,0,Change has been successfully cherry-picked as 5b764a7ac7d944eb92d7d94d549c63489165b835
65230,0,Change has been successfully merged into the git repository.
65232,0,Change has been successfully merged into the git repository.
65235,0,Change has been successfully merged into the git repository.
65237,0,Change has been successfully merged into the git repository.
65239,0,Change has been successfully cherry-picked as 28a08969e77fb1a1752c8e966c71618795e8f1cd
65263,0,Change has been successfully merged into the git repository.
65276,0,Change has been successfully merged into the git repository.
65277,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/egit.gerrit/4728/ : UNSTABLE
65279,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good, thanks!"
65280,0,Change has been successfully merged into the git repository.
65287,0,Change has been successfully merged into the git repository.
65290,0,"Patch Set 2: Code-Review+1Looks good. Tomek, please rebase if you want me to merge."
65293,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-reviews-gerrit/789/ : UNSTABLE
65295,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-reviews-gerrit/753/ : UNSTABLE
65298,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-reviews-gerrit/788/ : UNSTABLE
65304,0,Change has been successfully merged into the git repository.
65308,0,"Patch Set 7:(5 comments)> I know this is WIP, but gone ahead and made comments since I'll be out for a week.Awesome, thx!"
65313,0,"Patch Set 12: Code-Review-1(2 comments)Looks great, only suggestion to improve the abstraction."
65319,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-reviews-gerrit/781/ : UNSTABLE
65323,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-reviews-gerrit/817/ : UNSTABLE
65327,0,Change has been successfully merged into the git repository.
65332,0,Change has been successfully merged into the git repository.
65337,0,Change has been successfully merged into the git repository.
65339,0,Change has been successfully merged into the git repository.
65340,0,"Patch Set 1:(3 comments)Looks pretty good as is, but see suggestions inline."
65349,1,Patch Set 5: Code-Review+1(1 comment)This looks good but I'm confused about ApprovalUtil.
65352,1,Patch Set 1:(1 comment)MIssed this one.
65356,0,Change has been successfully merged into the git repository.
65368,0,Change has been successfully cherry-picked as 5701f0c3baf9ffacafa241698f025b111f6460a0
65373,1,Patch Set 2: Verified-1click's broken yo!
65378,0,Change has been successfully cherry-picked as aad84d28a149fae62a87462a3fc40b5cf21854bb
65385,0,Change has been successfully merged into the git repository.
65387,0,Change has been successfully merged into the git repository.
65390,0,"Patch Set 1:(1 comment)It works as announced, excellent work!But could it support both the selection range and a current timestamp?  The selection will be really useful for trace analysis, to mark the beginning and end time of the range to analyze.  But now, the moment we click anywhere else, the selection is gone."
65402,0,Change has been successfully cherry-picked as 77b04b9c2a3f5b60b49085084cc501b0f31d4e43
65404,0,Patch Set 4:(1 comment)It works as advertised and it's a great addition.
65409,0,Change has been successfully merged into the git repository.
65412,0,Change has been successfully merged into the git repository.
65414,0,Change has been successfully merged into the git repository.
65415,0,"Patch Set 1:Since this affects all Linux Tools project, I want to be sure this is fine with everyone before pushing it."
65416,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good.
65417,0,Change has been successfully cherry-picked as 30d4ef3ae8f3672f196fb10c45bd0dd3b8d87163
65420,0,Change has been successfully merged into the git repository.
65421,0,"Patch Set 1: Code-Review+1 IP-Clean+1(1 comment)Dave, the change looks good to me, but I'll wait for Joe to review as well. I did have one small comment."
65425,0,Change has been successfully merged into the git repository.
65427,0,Change has been successfully merged into the git repository.
65429,0,Change has been successfully merged into the git repository.
65431,0,Change has been successfully merged into the git repository.
65439,0,Change has been successfully merged into the git repository.
65443,0,Change has been successfully merged into the git repository.
65445,0,Change has been successfully merged into the git repository.
65451,0,Change has been successfully merged into the git repository.
65456,0,Change has been successfully merged into the git repository.
65458,0,"Patch Set 1: Looks good to me, but someone else must approve(1 inline comment)Frank, this looks like a good change, but note that I'm not familiar with this code at all. Can you rebase or something to trigger another build?"
65467,0,Change has been successfully cherry-picked as 5fb92e3cf8cff344cd447234f6c2d6dc5239a642
65468,1,"Patch Set 1:The change looks good. Unfortunately, due to code moved from ClassTypeHelper to SemanticQueries it exceeds the 250-line threshold that triggers the IP review requirement. Do you mind excluding the code move from this change. I'll do it myself after this change is submitted."
65469,1,"Patch Set 1:I thought the introduction of CLAs eliminated the need for IP review over 250 lines?I doubt that not moving the code from ClassTypeHelper to SemanticQueries will bring the contribution under 250 lines, because the functionality that was moved was also completely rewritten."
65478,0,"Patch Set 5: Verified+1 Code-Review+2 IP-Clean+1Thanks for the contribution, Christian!"
65479,0,Change has been successfully merged into the git repository.
65482,0,Patch Set 1: Code-Review-1(2 comments)besides three extra newlines this looks good to me.
65483,0,"Patch Set 1:(1 comment)Please fix the issues in inline comments, then amend the commit and push again. Looks good otherwise."
65487,0,Change has been successfully merged into the git repository.
65494,0,Change has been successfully merged into the git repository.
65502,0,Change has been successfully merged into the git repository.
65506,0,Change has been successfully merged into the git repository.
65510,0,Change has been successfully merged into the git repository.
65517,0,Change has been successfully merged into the git repository.
65521,0,Patch Set 2: Code-Review-1(6 comments)Looks great! A few comments inline.
65537,0,Change has been successfully merged into the git repository.
65544,0,Patch Set 2: Code-Review-1(2 comments)Looks great. Some comments inline.
65546,0,Change has been successfully merged into the git repository.
65547,0,Patch Set 4: Code-Review-1(3 comments)This looks good. I'd just suggest to separate serialization.
65552,0,Change has been successfully merged into the git repository.
65558,1,"Patch Set 2:(3 comments)I'm afraid I only had time for a very quick look, and I haven't really looked at any of the other changes to support 2.6, so take my comments with an appropriate dosage of salt."
65559,0,"Patch Set 2:(2 comments)> take my comments with an appropriate dosage of saltSure, thanks for looking at this and sharing your thoughts."
65560,0,Patch Set 2:(2 comments)I just noticed that adding drafts works in the connector. I just had to go to the web ui to publish them. :)
65565,0,Change has been successfully merged into the git repository.
65569,0,Change has been successfully merged into the git repository.
65571,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1All good :) From tycho wiki site:Feature version qualifiersFor feature projects, version qualifiers are generated from the last of the timestamp of the most recent common that touches any file under feature project basedir and timestamps of directly included bundles and features. Timestamps of included bundles and features and derived from their version qualifiers and any qualifier that cannot be interpreted as timestamp is ignored.For the majority of feature projects that generates stable version qualifier that changes when feature contents changes, however manual ""bump-version"" commit in feature project will be necessary if included bundle/feature changes but its version qualifier cannot be interpreted and therefor ignored."
65572,0,Change has been successfully merged into the git repository.
65574,1,"Patch Set 1:Sorry, but I could not come up with how to test this problem.To reproduce the problem, `repo.getWorkTree().getParentFile()` must be `null`.`repo.getWorkTree()` should be ""."" or "".."", etc., but the test repository is in ""/tmp/..."" (in my environment) which is not an ancestor of the current directory.I tried to set the test repository to ""user.dir"" property, in vain.Let me know if there is a good method to do such a test."
65575,1,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1You're right, seems complicated to set this up. And it's a pretty straightforward fix, so let's merge it."
65576,0,Change has been successfully merged into the git repository.
65578,0,"Patch Set 3: Code-Review+2 IP-Clean+1Approving. Andreas, you may add the utility method you mentioned yourself. You know better than I do what to take care of than I do."
65579,0,Change has been successfully merged into the git repository.
65583,0,Change has been successfully merged into the git repository.
65585,0,Change has been successfully pushed.
65599,0,Change has been successfully cherry-picked as 610953c44dad8eab4eca716e682ca3d437a9acd0
65604,0,Change has been successfully cherry-picked as ff466aa6b87a71f2914c39047485badcdae926cd
65609,0,Change has been successfully merged into the git repository.
65619,0,Change has been successfully merged into the git repository.
65623,0,Change has been successfully cherry-picked as 41125382489fd3ec8c2ecd3ac193999d36973e60
65624,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1This looks fine to me.
65625,0,Change has been successfully cherry-picked as a159ba0b91cc6a6e6ba25be89981761d72324b2c
65628,0,Change has been successfully cherry-picked as 3fa5bcf007fdeea45da5fc137418fd7eadf94a49
65631,0,Change has been successfully merged into the git repository.
65641,0,Change has been successfully cherry-picked as 150969eb1f0c3abf41fbe3f711d2da0a169d30d7
65643,0,Change has been successfully cherry-picked as b0e18d6db58de6536f2ee761b60d00be30fe9892
65645,0,Change has been successfully merged into the git repository.
65647,0,Change has been successfully merged into the git repository.
65653,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1You're cool
65654,0,Change has been successfully merged into the git repository.
65656,0,Change has been successfully merged into the git repository.
65659,0,Change has been successfully merged into the git repository.
65661,0,Patch Set 2: Verified+1 Code-Review+2 IP-Clean+1Finally :P
65662,0,Change has been successfully merged into the git repository.
65664,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-commons-gerrit/160/ : UNSTABLE
65666,0,Change has been successfully merged into the git repository.
65668,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-reviews-gerrit/687/ : UNSTABLE
65670,0,Change has been successfully merged into the git repository.
65672,0,Change has been successfully merged into the git repository.
65674,0,Change has been successfully merged into the git repository.
65676,0,Change has been successfully merged into the git repository.
65678,0,Change has been successfully merged into the git repository.
65680,0,Change has been successfully merged into the git repository.
65683,0,Change has been successfully merged into the git repository.
65685,0,Change has been successfully merged into the git repository.
65687,0,"Patch Set 3: Code-Review-1Pushed a new version with small formatting fixes.This is a very good test! It actually finds that the bug existed not only for the in-memory backend, but in the partial history backend too!https://git.eclipse.org/r/#/c/14117/ takes care of the first part, but we'll need to get a new fix ready for the partial backend before we can push this one."
65692,0,"Patch Set 4: Code-Review+1 IP-Clean+1The partial history backend didn't have the bug after all. It is a known limitation that they cannot provide the end time of intervals. This new test was checking for both the returned interval's start and end times.Instead of overriding this test in the partial history test class, just don't bother with the end time. Value is what is important here."
65694,0,Change has been successfully cherry-picked as 2cfac4f836369b160d5bc6f570c2fc356d0217dc
65700,0,Change has been successfully cherry-picked as 3ee7910ce0a701fac4a98e486eedf2528f80c1ee
65704,0,"Patch Set 2: Fails; I would prefer that you didn't submit thisThe trace attached to the bug now opens fine (and other ""normal"" traces seem to behave well too).However, if I scroll the events view to the bottom, it enters an infinite loop somewhere. Could be wrong assumptions being made in the TmfEventsEditor, we'd have to fix it before merging it."
65705,0,Change has been successfully cherry-picked as 972869380c66a93ecb448be8b56afde4c9964ab5
65709,0,"Patch Set 1: Code-Review-1(7 comments)We'll also probably get Sonar warnings for using TreeSet instead of Set. But I would leave it like that anyway, TreeSet is so much more useful, with its .floor(), ceiling() etc. methods."
65710,0,Change has been successfully cherry-picked as 46201da19d01a67e96e2f235816bf02aa9d381bb
65716,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-tasks-gerrit/675/ : UNSTABLE
65717,0,Patch Set 1:Overall looks good. See inline comments.
65729,0,Change has been successfully merged into the git repository.
65731,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-tasks-gerrit/670/ : UNSTABLE
65733,0,Change has been successfully merged into the git repository.
65736,0,Change has been successfully cherry-picked as 956cf7ff451239d9818aa290c95730f95e8df731
65737,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1This looks fine to me.
65738,0,Change has been successfully cherry-picked as d4ddc8225334a2d1183f33d61405b1860c34b59f
65741,0,Change has been successfully merged into the git repository.
65745,0,Change has been successfully cherry-picked as b5651032b3ce3752bcc1f60c6daf8ffe5370c73b
65746,0,Change has been successfully cherry-picked as 53e714c802deff7a6061b8acad483d0638192663
65751,0,Change has been successfully cherry-picked as c88dc524642921846abbe2cc463bd4a9a1305af8
65755,0,Change has been successfully cherry-picked as 380102bed3a90ae1deff88e1635740e8e0a18cb9
65769,0,"Patch Set 6: Verified+1 Code-Review-1This change looks fine to me, and all tests are passing. Can you shorten the length of the first line in the commit message (It's currently at 77 chars) ?"
65778,0,Change has been successfully cherry-picked as 7a6f715f4a2730a82c6eb404788721525a1a1b64
65779,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Well done, Ed!"
65780,0,Change has been successfully merged into the git repository.
65783,0,"Patch Set 1: Code-Review+2Well done, Ed!"
65784,0,"Patch Set 1: Verified+1 IP-Clean+1Well done, Ed!"
65785,0,Change has been successfully merged into the git repository.
65787,0,Change has been successfully cherry-picked as a118bd63e7950d911c53ab08f22b433ebaa54028
65789,0,Change has been successfully cherry-picked as 7bb58bd820fe2dec2111de7758ed0c7c2e1e7dc4
65790,0,Change has been successfully cherry-picked as fdd577cc346a8ff08ab3cd1aebcbc778920c14df
65797,0,Change has been successfully merged into the git repository.
65802,0,Change has been successfully merged into the git repository.
65804,0,Change has been successfully merged into the git repository.
65806,0,Change has been successfully merged into the git repository.
65808,0,Change has been successfully merged into the git repository.
65810,0,Change has been successfully cherry-picked as cbd5d9bb0f96d0deb94ec862873ad8c91fd98e30
65812,0,Change has been successfully merged into the git repository.
65813,0,Change has been successfully cherry-picked as 1bb9eb4ff011859b2891406714e7156bd1504735
65816,0,Change has been successfully merged into the git repository.
65818,0,Change has been successfully merged into the git repository.
65819,0,Change has been successfully cherry-picked as 9381e19145dc8b02e574769b7a5e4d8615ecd826
65823,0,"Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good to me, latest hudson build finished successfully."
65824,0,Change has been successfully cherry-picked as 9885a77c775e59e8ad72d5cc4495f4d1fea1c964
65827,0,Change has been successfully cherry-picked as 030d28fae3db498ed642a97abeee111cd4b654e2
65829,0,Change has been successfully cherry-picked as 5ec8cc3ef5a6e1f5c91dd4b8b5cfb281f5e52633
65832,0,Change has been successfully merged into the git repository.
65833,0,Change has been successfully cherry-picked as 774ef973d47b8fe1adfdc4ea0e31cdecb805f596
65836,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-reviews-gerrit/680/ : UNSTABLE
65838,0,Change has been successfully merged into the git repository.
65843,0,Change has been successfully merged into the git repository.
65846,0,Change has been successfully merged into the git repository.
65848,0,Change has been successfully merged into the git repository.
65852,0,Patch Set 2:As much as I wish we could annotate all monitors with @NonNull it's not consistently the case so we should mark them all as @Nullable to be safe and ensure that implementations of abstract classes handle that case appropriately.
65858,0,Change has been successfully merged into the git repository.
65859,0,Change has been successfully cherry-picked as 4cd4105d7a350b02aa4648faa3d60d8a761b3b6f
65863,0,Change has been successfully merged into the git repository.
65864,0,Change has been successfully cherry-picked as cfae5903a2aad997b80c4fd943dbb0d7b8dfbf46
65867,0,Change has been successfully merged into the git repository.
65874,0,Change has been successfully merged into the git repository.
65880,0,Change has been successfully merged into the git repository.
65890,0,"Patch Set 1: Looks good to me, but someone else must approve(2 inline comments)please check the leftover ""/"",'/' if they're appropriate or File.separator should be rather used instead."
65891,0,"Patch Set 1:Need an answer to the three questions - OR (and this is preferred) - please sign the CLA as described in this blog post: http://mmilinkov.wordpress.com/2013/06/17/eclipse-clas-are-live/Please report back, when done. Thanks, Marcel"
65894,0,Change has been successfully merged into the git repository.
65895,0,"Patch Set 5: Looks good to me, but someone else must approve"
65897,1,"Patch Set 4: Looks good to me, but someone else must approvedon't know how to retrigger the build, but hudson's failure seems to be some issue of not being able to fetch this change, not a problem with this change."
65900,1,"Patch Set 6: I would prefer that you didn't submit this(3 inline comments)This patch set brings the code in-line with our formatting requirement. Also, many fields have become final.Some inline comment describe more severe problems."
65902,0,"Patch Set 1: Looks good to me, but someone else must approveopen issues you should look at:- i did not include eclipse specific project files- pom.xml's, things like groupId"
65904,0,"Patch Set 8: Looks good to me, but someone else must approve; IP review completedIP review finished. :-)All that needs to be done now is find an appropriate branch for this commit (hence no +2 yet)."
65905,0,"Patch Set 8: Looks good to me, but someone else must approvenice, that was way quicker than i expected. We haven't really decided on a branching strategy yet, have we?"
65906,0,Patch Set 8:well done! That was very fast by the IP team.we decided on a branching strategy some days ago. to me it sounds like we should start applying it soon? :)
65909,0,"Patch Set 3: Looks good to me, but someone else must approveI assert that I- have authored 100% of the content I am contributing,- have the rights to donate the content to Eclipse,- and contribute the content under the EPL."
65915,0,Change has been successfully merged into the git repository.
65922,0,"Patch Set 7: Looks good to me, but someone else must approve"
65923,0,"Patch Set 7: Looks good to me, but someone else must approve"
65925,0,Change has been successfully merged into the git repository.
65926,0,Change has been successfully cherry-picked as 2e21d2516d9a3798c5a17d547501da38e4a29b20
65927,1,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Looks good. Sorry for delay.
65928,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Thanks Mikhail!
65932,0,Change has been successfully merged into the git repository.
65934,0,Change has been successfully cherry-picked as 9cc8a4b3f5cc6565a5800470bbfa8dac27d4b9e0
65940,1,"Patch Set 2: Verified+1 Code-Review-1(1 comment)Can you add the bug number to the commit message title? Like: Bug 411911 - Fix some GNU formatter defaultsOtherwise, looks good."
65942,1,"Patch Set 3:Sorry Simon, I wasn't very clear. We usually put the bug number in the very first line of the commit message. So the entire commit message would be:Bug 411911 - Fix some GNU formatter defaultsSigned-off-by: Simon Marchi <simon.marchi@polymtl.ca>Change-Id: Idf974c14be894dffecb3e48938732fbd9f227ceaAlso, there was an inline comment that I think you didn't see (Copyright year needs to be updated)."
65943,1,"Patch Set 3:Oops, sorry, I'm not totally used to your workflow yet!"
65947,0,Change has been successfully cherry-picked as 5aed22487a205ccdce25ff75a5830fafee56a3bb
65950,1,"Patch Set 7: Verified-1Sorry, I see some failures inorg.eclipse.cdt.ui.tests.text.CodeFormatterTestThey are actually GNU conformance tests."
65956,0,Change has been successfully merged into the git repository.
65959,0,Change has been successfully merged into the git repository.
65966,0,Change has been successfully merged into the git repository.
65968,0,Change has been successfully merged into the git repository.
65976,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-reviews-gerrit/674/ : UNSTABLE
65978,1,Patch Set 1:It's not -- you can safely ignore and we should perhaps consider modifying it (I tired increasing the time out but that didn't seem to help). See bug 411052. My guess is that it goes away if you delete all current reviews.
65980,1,"Patch Set 1: Code-Review+1> Tomek, have you tested locally against 2.4?Yes, tested against http://mylyn.org/gerrit-2.4.2 and https://review.tasktop.com (2.4.1). The change shouldn't impact 2.4 and older versions as it modifies GerritClient.executeQueryRest(IProgressMonitor, String), which is not called in those cases (restQueryAPIEnabled is always false)."
65981,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1Thanks Tomek!
65982,0,Change has been successfully merged into the git repository.
65984,0,Change has been successfully cherry-picked as ba0b892f5a0ec84996f4ef3ed9faa09a034c542d
65988,0,Patch Set 1: Verified+1 Code-Review+1 IP-Clean+1It always obvious :-) but nice addition
65993,0,Change has been successfully merged into the git repository.
66002,0,Change has been successfully merged into the git repository.
66011,0,Change has been successfully merged into the git repository.
66013,0,Change has been successfully cherry-picked as 7d5d9f1cb6a2f4db466cde696624d1b9ac1251e6
66016,0,Change has been successfully merged into the git repository.
66021,0,Change has been successfully merged into the git repository.
66024,0,Change has been successfully merged into the git repository.
66032,0,Patch Set 5: Code-Review-1Not quite perfect. Am working on an amend right now that lets the Xtend Builder and the xtend-maven-plugin share their target/generated-sources/xtend folder. Give me half an hour.
66033,0,Change has been successfully cherry-picked as f3ea51c046a33bc553156b1931cefd20a273cda1
66036,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completed"
66043,1,"Patch Set 2: Fails; I would prefer that you didn't submit this(3 inline comments)You also need to consider the experiment case where we have a collection of traces. The Environment Variables view prints all env. variables for each trace in the experiment.Also, I would prefer that ""Info"" is on top. By default the properties view uses alphabetical order. There is small trick to change the order. Patrick can help with that."
66045,0,Change has been successfully cherry-picked as eb1d705816de4ac3111789cac05189b8b81311ca
66051,0,"Patch Set 7: Looks good to me, approved; IP review completed"
66060,0,"Patch Set 5: (1 inline comment)Patrick,Thanks for your comments.  I created all those new classes to avoid having to touch the tmf timegraph widgets and classes that may have been meant to have a more generic functionnality.  But if you give me to OK to merge BarChart* to Timegraph*, I'll be glad to!"
66061,0,Patch Set 5: (1 inline comment)OK!
66063,0,"Patch Set 11: Code-Review-1(3 comments)It wrote some of the comments under patch set 10, come on Gerrit, you can do better than that!"
66064,0,"Patch Set 1: I would prefer that you didn't submit thisSo far, it is mostly copy/pasting from the original view, separating the specific from the common and patching the holes.I'm not entirely satisfied yet, but I'd like some feedback on what has been done.  How about making the abstract class a generic to avoid always having to typecast the entry type?"
66066,0,Change has been successfully cherry-picked as ff8ef26eafd43296fc268693c3c187c1306571f3
66071,0,"Patch Set 8: Looks good to me, approved; IP review completedI still have some issues with how the event list is created for the ResourcesView but this is unrelated to the abstraction of the view so it can be fixed later after the patch is merged."
66072,0,Patch Set 8: I would prefer that you didn't submit this(1 inline comment)One small comment.Props on doing this without breaking the API!
66080,0,"Patch Set 3: (2 inline comments)Hey, I left a couple of comments! Check them out :)"
66082,0,Patch Set 13: Code-Review-1(3 comments)Just small complaints about some copyright headers. After that it's good for me!
66083,0,"Patch Set 13:(1 comment)Alex, you should be a detective, nothing escapes your eye ;-)That's good for code quality!"
66087,0,"Patch Set 16: Code-Review+1 IP-Clean+1If it's good for Patrick, it's good for me!Just pointing out again that this patch seems big, but it's mostly refactoring, so the amount of actual new lines of code is around 100."
66089,0,"Patch Set 15: Code-Review+1 IP-Clean+1Woot, LGTM, thanks for the nice work!About the IP review: this patch seems big, but it's mostly refactoring, there is probably around 100 added lines of code."
66090,1,Patch Set 15: Code-Review-1(2 comments)I'm really starting to dislike some of the overzealous Sonar warnings :(
66095,0,"Patch Set 10: Code-Review-1(30 comments)some comments, looking good!"
66096,0,Patch Set 10: -Code-Review(1 comment)New patch coming up!
66099,1,"Patch Set 14: Code-Review-1CallstackView.getValue() is now missing an @Override annotation, sorry for not catching it earlier.I would have fixed it myself, but I was wondering, is it normal ControlFlowView.java changed between patches 13 and 14?"
66100,1,Patch Set 14:Ho! where does patch 14 come from?  It's like I erased patch 13 :p
66106,0,"Patch Set 9: Looks good to me, but someone else must approve"
66107,0,"Patch Set 9: No scoreI guess I was just being lazy.  I can rework a whole patch for fun, but to add a simple @Override annotation, bah! :p"
66108,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
66109,0,"Patch Set 1: Looks good to me, but someone else must approve"
66111,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66112,0,Change has been successfully merged into the git repository.
66113,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66114,0,Change has been successfully merged into the git repository.
66117,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
66121,0,"Patch Set 4: Verified; Looks good to me, but someone else must approve; IP review completed"
66122,0,"Patch Set 4: Looks good to me, approved"
66125,0,"Patch Set 6: Looks good to me, but someone else must approve"
66126,0,"Patch Set 6: Verified; Looks good to me, but someone else must approve; IP review completed"
66127,0,"Patch Set 6: Looks good to me, approved"
66133,0,"Patch Set 5: Looks good to me, but someone else must approve; IP review completed"
66136,0,Change has been successfully cherry-picked as 626845d6774f300f0b351cc7e6092653fa0a3d09
66138,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
66139,0,"Patch Set 2: Verified; Looks good to me, approved"
66140,0,Change has been successfully merged into the git repository.
66141,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
66142,0,"Patch Set 1: Looks good to me, but someone else must approve"
66143,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66144,0,Change has been successfully merged into the git repository.
66145,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis looks fine to me."
66146,0,Change has been successfully cherry-picked as 65265f5cc6efdb99304698f11690eb387b9bffec
66147,1,Patch Set 2:Please push this patch to master. Patches should be merged in master then cherry picked to a stable branch when required.
66149,0,Patch Set 2:nm I see that the change is already in master :)
66151,1,"Patch Set 2:@Roland: Yep, my bad, I'll keep them from now on."
66153,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66154,0,Change has been successfully merged into the git repository.
66162,0,Patch Set 2: Verified; I would prefer that you didn't submit this; IP review completed(1 inline comment)Looks good. Small changed. See the comment inline
66163,0,Change has been successfully cherry-picked as b7aabb7513857114d529b1a8bfdc6ed786709fa7
66165,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed"
66166,0,Change has been successfully cherry-picked as 8cff659fdf97b212e768f0140587990a5d61d530
66167,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis looks fine to me, although I think the Change-Ids should have remained the same since Gerrit can keep track of both."
66170,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThanks! I have left the trailing whitespace, I wasn't sure if it was intentional."
66171,0,Change has been successfully merged into the git repository.
66172,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66173,0,Change has been successfully merged into the git repository.
66175,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66176,0,Change has been successfully merged into the git repository.
66178,0,"Patch Set 2:Fixed (thanks Tomasz):* Slide 17 says that Java6 is now the minimum req., but slide 22 mentions Mylyn requiring Java5.* Footer has ""(c) 2012"" when it should be ""2013"" :)"
66179,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66180,0,Change has been successfully merged into the git repository.
66181,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66182,0,Change has been successfully merged into the git repository.
66183,0,"Patch Set 1: Looks good to me, approved"
66185,0,Change has been successfully merged into the git repository.
66186,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66187,0,Change has been successfully merged into the git repository.
66188,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66189,0,Change has been successfully merged into the git repository.
66191,0,"Patch Set 2: Looks good to me, approved; IP review completed"
66192,0,Change has been successfully cherry-picked as 7e6bde75f5cb6c0a8a766e8464184678316e80c8
66194,0,"Patch Set 1: Looks good to me, but someone else must approve"
66195,0,"Patch Set 1: Looks good to me, approved"
66197,0,Change has been successfully merged into the git repository.
66198,0,Change has been successfully cherry-picked as a70f03b2497b4eb71f899ac7b259c1c46c2f7a22
66201,0,"Patch Set 3: Looks good to me, approved; IP review completed"
66202,0,Change has been successfully cherry-picked as 774be75145dacb6de2744b1a6563f142fdcc8efc
66203,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
66210,0,"Patch Set 4: Looks good to me, approved"
66211,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completed"
66213,0,"Patch Set 2: Looks good to me, approved; IP review completed"
66214,0,Change has been successfully merged into the git repository.
66216,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66217,0,Change has been successfully cherry-picked as c0bebedcba5e77d82dad0fe93e2b0c2ea27854ff
66218,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedCommit merged from master for RC3."
66220,0,Change has been successfully cherry-picked as bbc44749038c54855ded76edb489054dda678d87
66223,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedAlready reviewed for master and this branch.  Comment in commit message handled."
66224,0,Change has been successfully cherry-picked as 861bbf9582b1c8f8636bde926b37427e4b4d4c30
66225,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66226,0,Change has been successfully merged into the git repository.
66227,0,Change has been successfully cherry-picked as 73902cfd92a0c51cb7971297492e8cd962dc1bb9
66228,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66229,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66232,0,Change has been successfully merged into the git repository.
66233,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66234,0,Change has been successfully merged into the git repository.
66236,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66237,0,Change has been successfully merged into the git repository.
66238,0,Change has been successfully cherry-picked as ff3497766e64bef0fbfc0e2ddd1f97de14bb3db0
66240,1,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThis resolves all API problems in GProf."
66241,0,Change has been successfully cherry-picked as e5688b503e9cbd1b98257ac2ccf043ada2cefcc2
66242,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66243,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66244,0,Change has been successfully merged into the git repository.
66245,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
66246,0,"Patch Set 1: Looks good to me, approved"
66247,0,Change has been successfully merged into the git repository.
66248,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66249,0,Change has been successfully merged into the git repository.
66250,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66251,0,Change has been successfully merged into the git repository.
66253,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66254,0,Change has been successfully merged into the git repository.
66255,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66256,0,Change has been successfully merged into the git repository.
66258,0,Change has been successfully cherry-picked as c8514e3ea44d147d3450de19bb642f33b0ca24f0
66260,0,"Patch Set 2: Looks good to me, approved; IP review completed"
66264,0,"Patch Set 2: Looks good to me, but someone else must approve"
66265,0,"Patch Set 2: Looks good to me, but someone else must approve"
66269,0,"Patch Set 5: Looks good to me, but someone else must approve"
66270,0,"Patch Set 5: Looks good to me, but someone else must approve"
66273,0,"Patch Set 5: Looks good to me, approved"
66274,0,Change has been successfully merged into the git repository.
66275,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedIt works fine. Just a side note: After the Kepler release we need to streamline this class TmfTraceType. E.g.There are duplications of code."
66278,0,Change has been successfully cherry-picked as af73a98bb3779c72b71d39ecf0ad4640df4284bf
66279,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66280,0,Change has been successfully cherry-picked as 2c65fb2c7ab7564db96db97e0c006070cd06f534
66281,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis change fixes the errors shown by the PDE."
66283,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66284,0,Change has been successfully cherry-picked as 8099a9305d9c0b06e1da0df2bf2c25ccf54f4e93
66286,0,Change has been successfully cherry-picked as 686cde04b87f647a69d60a806600cdba6d9b45b2
66287,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66288,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66289,0,Change has been successfully cherry-picked as 0ed7879deb4a66b4641b204f74ecdd9ebde045c0
66290,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66291,0,Change has been successfully merged into the git repository.
66292,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66293,0,Change has been successfully cherry-picked as 3f7c3cb0089913bcf6a92139606f0212e3e3745f
66299,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completedThis looks fine to me."
66303,0,Change has been successfully cherry-picked as cdb18425ed27d47484727ea4d27a9853806a5d46
66304,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66305,0,Change has been successfully cherry-picked as 0b6453a45651b1f4e4b27128e627f3c9938fa8da
66306,0,Change has been successfully cherry-picked as 8c2a267461dd5b87ae253e59563ef57016b98c4b
66308,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedDocumentation is up to date with current changes."
66309,0,Patch Set 1: I would prefer that you didn't submit this(2 inline comments)Looks fine in the help contents. Just some minor changes.
66311,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedBig oops on my behalf. +2"
66312,0,Change has been successfully cherry-picked as 2598c1fcc4f73511f92b0d0403488c3f6568e2c0
66313,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good to me."
66314,0,Change has been successfully cherry-picked as 9ad4e416ebe9a1de6412f6307ff82c7914152bd5
66316,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
66318,0,Change has been successfully cherry-picked as b062e63d77718b54e6ec960ad99ee3fa7c666abd
66322,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66323,0,Change has been successfully merged into the git repository.
66326,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66327,0,Change has been successfully merged into the git repository.
66331,1,Patch Set 2: I would prefer that you didn't submit thisThe General page needs the description for the new Workbench Save field.  I'll update the bug with some thoughts.
66336,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completed"
66337,0,Change has been successfully merged into the git repository.
66348,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66349,0,Change has been successfully merged into the git repository.
66350,0,Change has been successfully cherry-picked as 0b83a5c7aaf9a54dcc24339d6a9c53666edd4d90
66351,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66352,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66353,0,Change has been successfully cherry-picked as cdb678249bdd5c4d59f3b562fdbb8424f49ce199
66354,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66355,0,Change has been successfully merged into the git repository.
66357,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66358,0,Change has been successfully merged into the git repository.
66359,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66360,0,Change has been successfully merged into the git repository.
66361,0,Change has been successfully cherry-picked as 5f4d0a13d9cb57751ac12d8147c38d4db6857bd4
66362,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed(1 inline comment)Doug, thanks for fixing this. I only have a tiny comment but not enough to hold this back so I put +1. I put 0 for verified because executables work (mac, linux) but if I try to create a shared library, I get/usr/bin/ld: cannot find -link-as-librarybut as you said, it's a stop gap. So I'll leave it up to you to either try to fix it part of this change or as a separate one."
66363,0,"Patch Set 1: Looks good to me, approved; IP review completedYeah, at least Makefile and Executable projects are working. Enough to get started. We'll fix this all up for SR-1."
66365,0,Change has been successfully cherry-picked as 1ae2226284afcc1b1e56daefb8aeb82124980d82
66367,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66369,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
66370,0,Change has been successfully merged into the git repository.
66371,0,"Patch Set 1: Looks good to me, but someone else must approve"
66376,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
66377,0,"Patch Set 1: Looks good to me, but someone else must approve"
66379,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66380,0,Change has been successfully merged into the git repository.
66381,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66382,0,Change has been successfully merged into the git repository.
66383,0,"Patch Set 1: Looks good to me, but someone else must approve"
66385,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66386,0,Change has been successfully merged into the git repository.
66387,0,"Patch Set 1: Looks good to me, but someone else must approve"
66388,0,"Patch Set 1: Looks good to me, but someone else must approve"
66390,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66391,0,Change has been successfully merged into the git repository.
66392,0,"Patch Set 1: Looks good to me, but someone else must approve"
66396,1,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased, ui test testRebaseIsAlreadyUptodate is failing due to https://bugs.eclipse.org/bugs/show_bug.cgi?id=409737"
66397,0,Change has been successfully merged into the git repository.
66398,0,Change has been successfully cherry-picked as b1052736a1d87807dcfdc189755fd643d91d14c5
66399,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66401,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66402,0,Change has been successfully cherry-picked as dbaf2af3f0fbcdd29f8a5e884b01636d89a1454c
66404,0,"Patch Set 3: Looks good to me, approved; IP review completed"
66405,0,Change has been successfully cherry-picked as dc907163c9bd4fb9f1c7834d2dbb2f7399275f67
66409,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66410,0,Change has been successfully merged into the git repository.
66412,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66417,0,"Patch Set 3: Looks good to me, but someone else must approve(4 inline comments)"
66419,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed(1 inline comment)Looks good, Dave. I validated your changes in my environment. I did have one small comment, but I don't want to hold up this change set just for that."
66420,0,Change has been successfully merged into the git repository.
66422,0,"Patch Set 5: Verified; Looks good to me, but someone else must approve; IP review completed"
66423,0,"Patch Set 5: Looks good to me, approved"
66424,0,Change has been successfully cherry-picked as a4edf47058611ffceaa0d54e8023133db6316fa7
66430,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66431,0,Change has been successfully merged into the git repository.
66432,0,"Patch Set 1: Looks good to me, but someone else must approve"
66433,0,"Patch Set 1: Looks good to me, but someone else must approve"
66435,0,Change has been successfully cherry-picked as 87e97c54dda8a4c5212179a9eba480a7a37eaa29
66436,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66437,0,Change has been successfully cherry-picked as c8bf9924074271db7bafeecff2f072c958b1b3a0
66438,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good to me."
66439,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66440,0,Change has been successfully merged into the git repository.
66442,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completed"
66448,0,"Patch Set 1: Verified; I would prefer that you didn't submit this; IP review completed(4 inline comments)Awesome start. Some additional requests: describe what is SWTChart, why use a tmfview instead of a view part. maybe just give an intro saying what we are going to doin the end, a small recap of the key points could be good."
66451,0,"Patch Set 6: Verified; Looks good to me, but someone else must approve; IP review completed"
66452,0,"Patch Set 6: Looks good to me, but someone else must approve; IP review completed"
66453,0,"Patch Set 6: Looks good to me, approved"
66458,0,Change has been successfully cherry-picked as 1b3bb112d28d65289cc7ae527a4774e5c328bb37
66459,0,Change has been successfully cherry-picked as f4f19e90c0ffc756c22fe6220ae8813f5bb92b60
66460,0,"Patch Set 1: Looks good to me, approved; IP review completedReview with JGU"
66461,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66462,0,Change has been successfully merged into the git repository.
66463,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
66464,0,"Patch Set 1: Looks good to me, but someone else must approve"
66465,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66473,0,Change has been successfully merged into the git repository.
66474,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66475,0,Change has been successfully merged into the git repository.
66476,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66477,0,Change has been successfully merged into the git repository.
66478,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedLooks good, had a few crashes so I get the review done in a few min."
66479,0,"Patch Set 1: Verified; Looks good to me, approvedChecked"
66480,0,Change has been successfully cherry-picked as ac757ff5c408631906f5d0cdbeedcb86a9596818
66482,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedCurtis' review is on the bugzilla"
66483,0,Change has been successfully merged into the git repository.
66486,0,Change has been successfully cherry-picked as 898e6a676a7ce99a4c5f75e0963c0cee1fb81621
66488,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66489,0,Change has been successfully cherry-picked as 17f3627c49b1c8f5a2fdacfdc044fd6e8320399d
66490,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedReally unused code."
66492,0,Change has been successfully merged into the git repository.
66493,0,Change has been successfully cherry-picked as 9a641b15cca885c415449c69ce392d20fd954435
66494,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66495,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66496,0,Change has been successfully merged into the git repository.
66497,0,Change has been successfully cherry-picked as d1fc28e259e0f720eb997e93a16415d0e59cc944
66498,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66499,0,Change has been successfully cherry-picked as 62d10ad6f611f97e577bbd6374eef4ee3360cc95
66500,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66501,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66502,0,Change has been successfully cherry-picked as 1d311b4dcab2f26d158a1b35f9cdda46e8e7db2c
66503,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66504,0,Change has been successfully merged into the git repository.
66505,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66506,0,Change has been successfully merged into the git repository.
66507,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66508,0,Change has been successfully merged into the git repository.
66509,0,Change has been successfully cherry-picked as 4a99cb029c5136b37aa2c3bdb7b1f03fc00f0b8c
66510,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66511,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66512,0,Change has been successfully cherry-picked as 15fbd5cb7cc171dd1a26dbe54fec8431a2aaee22
66513,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis is fine."
66514,0,Change has been successfully merged into the git repository.
66517,0,"Patch Set 2: Looks good to me, but someone else must approveLooks good. But you should remove the [RFC] tag before pushing it."
66519,0,"Patch Set 3: Looks good to me, approved; IP review completed"
66521,0,Change has been successfully cherry-picked as 8ec8a2c3883733ae8d83f59b5f627f89142acdba
66522,0,Patch Set 1: I would prefer that you didn't submit this(1 inline comment)One minor comment.This looks relatively harmless. I assume it is to make it so other classes can call createProject too?
66523,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66524,0,Change has been successfully merged into the git repository.
66526,1,"Patch Set 1: Verified; Looks good to me, approvedLooks good, fixes the problem. Please answer the 3 legal questions here so we can submit this change."
66529,0,Change has been successfully merged into the git repository.
66530,0,Change has been successfully cherry-picked as 7d596aa92fdef913ab76ba3226dec767226d8e1a
66531,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66533,0,"Patch Set 2: Looks good to me, but someone else must approve"
66536,0,"Patch Set 3: Looks good to me, but someone else must approve"
66537,0,"Patch Set 3: Looks good to me, but someone else must approve"
66538,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66539,0,Change has been successfully merged into the git repository.
66540,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66541,0,Change has been successfully cherry-picked as 00056413abb10f675d468dea52bf3fbeb28ee2e8
66543,0,"Patch Set 2: Looks good to me, but someone else must approve"
66545,0,"Patch Set 1: Looks good to me, but someone else must approve"
66546,0,"Patch Set 1: Looks good to me, but someone else must approve"
66547,0,"Patch Set 3: Looks good to me, but someone else must approve"
66548,0,"Patch Set 3: Looks good to me, but someone else must approve"
66549,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66550,0,Change has been successfully merged into the git repository.
66551,0,"Patch Set 3: Looks good to me, but someone else must approve"
66552,0,"Patch Set 3: Looks good to me, but someone else must approve"
66553,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66554,0,Change has been successfully merged into the git repository.
66555,0,"Patch Set 1: Looks good to me, but someone else must approve"
66556,0,"Patch Set 1: Looks good to me, but someone else must approve"
66558,0,"Patch Set 2: Looks good to me, but someone else must approve"
66560,0,"Patch Set 1: Looks good to me, but someone else must approve"
66561,0,"Patch Set 1: Looks good to me, but someone else must approve"
66562,0,"Patch Set 3: Looks good to me, but someone else must approve"
66563,0,"Patch Set 3: Looks good to me, but someone else must approve"
66564,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66565,0,Change has been successfully merged into the git repository.
66567,0,"Patch Set 2: Looks good to me, but someone else must approve"
66570,0,"Patch Set 2: Looks good to me, but someone else must approve"
66572,0,"Patch Set 1: Looks good to me, but someone else must approve"
66573,0,"Patch Set 1: Looks good to me, but someone else must approve"
66574,0,"Patch Set 3: Looks good to me, but someone else must approve"
66575,0,"Patch Set 3: Looks good to me, but someone else must approve"
66576,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66578,0,Change has been successfully merged into the git repository.
66580,0,"Patch Set 2: Looks good to me, but someone else must approve"
66582,0,"Patch Set 1: Looks good to me, but someone else must approve"
66583,0,"Patch Set 1: Looks good to me, but someone else must approve"
66584,0,"Patch Set 3: Looks good to me, but someone else must approve"
66585,0,"Patch Set 3: Looks good to me, but someone else must approve"
66586,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66587,0,Change has been successfully merged into the git repository.
66588,0,"Patch Set 3: Looks good to me, but someone else must approve"
66589,0,"Patch Set 3: Looks good to me, but someone else must approve"
66590,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66591,0,Change has been successfully merged into the git repository.
66592,0,"Patch Set 1: Looks good to me, but someone else must approve"
66593,0,"Patch Set 1: Looks good to me, but someone else must approve"
66596,0,Change has been successfully cherry-picked as 2b184dc63ac414c69959fecbe2485bcfb8ff2dc3
66598,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedDid not see exception appear again and code looks good."
66599,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
66601,0,Change has been successfully cherry-picked as b71e5bc6cfdd0b9402dd5b7e781c88963161f3e5
66602,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66603,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66604,0,Change has been successfully merged into the git repository.
66605,0,"Patch Set 1: Looks good to me, but someone else must approve"
66606,0,"Patch Set 1: Looks good to me, but someone else must approve"
66609,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66610,0,Change has been successfully merged into the git repository.
66612,0,"Patch Set 2: Looks good to me, but someone else must approve"
66613,0,"Patch Set 2: Looks good to me, but someone else must approve"
66615,0,"Patch Set 1: Looks good to me, but someone else must approve"
66616,0,"Patch Set 1: Looks good to me, but someone else must approve"
66618,1,"Patch Set 1: I would prefer that you didn't submit this(1 inline comment)There is a change of behavior with this solution. When a part is activated that is not a trace editor (for example a Java editor), it did not previously mark the trace as unselected. With this path it does, so an unnecessary TmfTraceSelected signal could be broadcast. Receivers can however ignore it if the signal's trace is the same that they are currently handling."
66619,0,Change has been successfully cherry-picked as bfe021b226b3caa93ab836b793a9347641d39448
66622,0,"Patch Set 4: Looks good to me, but someone else must approve"
66623,0,"Patch Set 4: Looks good to me, approved; IP review completed"
66626,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66627,0,Change has been successfully merged into the git repository.
66629,0,"Patch Set 2: Looks good to me, but someone else must approve"
66630,0,"Patch Set 2: Looks good to me, approved; IP review completed"
66634,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66635,0,Change has been successfully merged into the git repository.
66639,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedThanks Curtis, looks great."
66644,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedThanks Curtis, looks great !"
66645,0,Change has been successfully merged into the git repository.
66646,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66647,0,Change has been successfully merged into the git repository.
66648,0,Patch Set 1: (9 inline comments)Great to see some javadoc!  I've added a few suggestions inline.
66653,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66654,0,Change has been successfully merged into the git repository.
66655,0,Change has been successfully cherry-picked as 21da633a5a2c11fca48c740d49abe13e82a88d27
66656,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedpush as it's just moreunit plugin configs."
66659,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
66661,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completed"
66662,0,Change has been successfully merged into the git repository.
66664,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed"
66667,0,"Patch Set 1: Looks good to me, but someone else must approve"
66669,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66670,0,Change has been successfully merged into the git repository.
66675,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66676,0,Change has been successfully merged into the git repository.
66678,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed"
66679,0,Change has been successfully merged into the git repository.
66684,0,"Patch Set 4: Looks good to me, but someone else must approve"
66686,0,"Patch Set 3: Looks good to me, but someone else must approveThanks for responding to all the comments.  That makes the subsequent review easier."
66687,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66688,0,Change has been successfully merged into the git repository.
66690,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
66696,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66697,0,Change has been successfully cherry-picked as 2325a5eccbd4c46bd019b91fa2cd89807560b665
66698,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
66699,0,Change has been successfully merged into the git repository.
66700,0,"Patch Set 1: Looks good to me, but someone else must approve"
66702,0,"Patch Set 2: Looks good to me, but someone else must approve"
66703,0,"Patch Set 2: Looks good to me, but someone else must approve"
66707,0,"Patch Set 3: Looks good to me, but someone else must approve"
66708,0,"Patch Set 3: Looks good to me, but someone else must approve"
66713,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66714,0,Change has been successfully cherry-picked as 1492e28f8959469b672c3da5439bb238adfb29a5
66715,0,Change has been successfully cherry-picked as f86873e3e0d57d051978e01c2901bfa334058a91
66718,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedGood that you added utility methods to close the editors. Less duplicate code."
66719,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66720,0,Change has been successfully cherry-picked as 48bb8bd9dd39058869a4c7f975d0f4dffc8cc4b5
66721,0,Change has been successfully cherry-picked as 220459d6d061a502f2bb4a56afcd3dd8e9412a43
66723,0,"Patch Set 3: Looks good to me, approved; IP review completed"
66735,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completed"
66736,0,Change has been successfully merged into the git repository.
66739,1,Patch Set 5: I would prefer that you didn't submit thisThere are 8 @since errors.  See the bug for details
66741,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed(8 inline comments)Thanks. I had a few comments, but nothing major. I definitely think it's a good change to move this code into the OAuth provider."
66742,0,"Patch Set 1: Verified; Looks good to me, approvedPlease follow up on Sam's comments as a separate change."
66743,0,Change has been successfully merged into the git repository.
66744,0,Change has been successfully cherry-picked as a1f59f37087383e69d0f3c60435f758bc5a30c56
66745,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66747,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedNice. These are the steps needed to define an API - documented, decoupled, etc."
66748,0,Change has been successfully cherry-picked as a94daf69e56141a74aa9e1a5ff391aaa812111e3
66750,0,"Patch Set 2: Looks good to me, approved; IP review completed"
66751,0,Change has been successfully cherry-picked as 1a52ea47b30f1c497554be736b30a86198804514
66753,0,"Patch Set 2: Looks good to me, approved; IP review completed"
66755,0,Change has been successfully cherry-picked as b5ee78818367235985d58382627d627ed5f26527
66756,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed- moved to stable-3.0- shortened commit message header"
66757,0,Change has been successfully merged into the git repository.
66759,0,"Patch Set 2: Looks good to me, approved; IP review completed"
66760,0,Change has been successfully merged into the git repository.
66761,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66762,0,Change has been successfully merged into the git repository.
66763,0,Change has been successfully cherry-picked as 5189876f064d3c53ef6e7bbca80b7a0fd23a46da
66764,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66765,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66766,0,Change has been successfully merged into the git repository.
66767,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66768,0,Change has been successfully merged into the git repository.
66772,0,Change has been successfully pushed.
66775,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66776,0,Change has been successfully merged into the git repository.
66777,0,"Patch Set 2:(In reply to comment #9)> Change has been successfully merged into the git repository.Hi Steffen,I think we do also need the following other reviews, because for patch set 1 I get them when I do a checkout:* https://git.eclipse.org/r/#/c/9715/ 326119: Task Repository does not remember password* https://git.eclipse.org/r/#/c/9685/ potential deadlock when TaskRepository accesses secure storage* https://git.eclipse.org/r/#/c/9668/ 278474: store TaskRepository credentials in SecureCredentialsStore"
66778,1,"Patch Set 2:(In reply to comment #10)> Patch Set 2:> I think we do also need the following other reviews, because for patch set 1 I> get them when I do a checkout:> * https://git.eclipse.org/r/#/c/9715/ 326119: Task Repository does not remember> password> * https://git.eclipse.org/r/#/c/9685/ potential deadlock when TaskRepository> accesses secure storage> * https://git.eclipse.org/r/#/c/9668/ 278474: store TaskRepository credentials> in SecureCredentialsStoreI rebased this review against master since it's indendent of the reviews (even though that was the driver for making the change)."
66780,0,"Patch Set 1: Looks good to me, but someone else must approve"
66783,0,"Patch Set 5: Looks good to me, approved; IP review completed"
66784,0,Change has been successfully merged into the git repository.
66793,1,"Patch Set 1:I certify that:I have authored 100% of the content.I have the necessary rights to submit this content, including any necessary permissions from my employer.I am providing this content on the license(s) associated with the Eclipse Foundation project I am contributing to. I understand and agree that Eclipse projects and my contributions are public, and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistent with this project or the open source license(s) involved."
66795,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedthe failed UI test is uncorrelated"
66796,0,Change has been successfully merged into the git repository.
66797,0,Change has been successfully cherry-picked as bb769a304285786deed24564fc0d09e64657374e
66798,1,"Patch Set 1: Looks good to me, but someone else must approveI've tested the patch and it solve the problem."
66799,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedException thrown from ""Run With Char"" command is now gone. Approved."
66800,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66801,0,Change has been successfully cherry-picked as a30eb27d7053eaf9896cb0d21431c26c8201d3b9
66805,1,"Patch Set 3: Verified; Looks good to me, approved; IP review completedSeems to fix the test case illustrated in the bug."
66806,0,Change has been successfully cherry-picked as 78789c96d2c5a246073a487363413afa6bdbf08b
66807,0,"Patch Set 2: I would prefer that you didn't submit this(7 inline comments)Small comments.Make sure you introduce no new warnings before pushing a patch.Very good practice to add unit tests for new functionality, thanks!"
66811,0,Change has been successfully cherry-picked as 7fe20864630cb3058a62a4f18574dd361ae82ef7
66813,0,"Patch Set 4: Looks good to me, approved; IP review completedWe should implement a real check at some point ;) but it's still an improvement."
66814,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66817,0,"Patch Set 2: Looks good to me, approved; IP review completed"
66818,0,Change has been successfully merged into the git repository.
66819,0,Change has been successfully cherry-picked as 124f73a79321d989dea4a7fe36be8fcad1508be8
66820,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThis looks fine to me."
66824,1,"Patch Set 5: (1 inline comment)One last remaining comment, sorry for not picking it up the first time."
66829,0,"Patch Set 8: Verified; Looks good to me, but someone else must approve; IP review completed"
66830,0,"Patch Set 8: Looks good to me, approved"
66831,0,Change has been successfully cherry-picked as bd379f15ca418310bd9df91d75ff34c02e1bb3a6
66837,0,"Patch Set 7: Looks good to me, but someone else must approve"
66840,1,"Patch Set 2: Verified; Looks good to me, approved; IP review completedTests pass locally with this change. Makes sense to improve error logging of failing tests, approved."
66841,0,Change has been successfully cherry-picked as bc07d87b5637f8f130734842bec1441cc9b45a0d
66843,0,Change has been successfully cherry-picked as e12eec03cb2da3c83fe5c90ae9a31b979c7ada84
66848,0,"Patch Set 3: Verified; Looks good to me, but someone else must approve; IP review completed"
66849,0,"Patch Set 3: Looks good to me, approved"
66855,0,"Patch Set 3: Looks good to me, but someone else must approveThe changes look fine to me."
66857,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completedApproving this patch, now that the kepler release repo has the latest PTP."
66859,0,Change has been successfully cherry-picked as 294c1bfbec6d7b40679a10bbab20511c75029200
66860,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66861,0,Change has been successfully cherry-picked as d2979122acadc3a69bdcd57bd7016e0fc8f5d1b4
66864,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
66865,0,Change has been successfully merged into the git repository.
66867,1,Patch Set 2: I would prefer that you didn't submit thisI get 5 failures in UIAllTests with this patch.  I've updated the bug with the failures.
66868,0,Change has been successfully cherry-picked as 9fe2d23842e4375f09378e037c2350660d2ed366
66869,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66870,0,Change has been successfully cherry-picked as 1386bf81e12a7d84a311a2758fd1538fa66957de
66871,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66872,0,Change has been successfully cherry-picked as 04bb3eb2b973deb0afe2bd25fc87cef398663f0f
66873,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66875,0,"Patch Set 2: Looks good to me, approved; IP review completednice change, thanks- moved to stable-3.0- rebased- fixed copyright header"
66876,0,Change has been successfully merged into the git repository.
66879,0,"Patch Set 3: Looks good to me, approved(1 inline comment)"
66881,0,Change has been successfully merged into the git repository.
66886,0,Change has been successfully cherry-picked as 290a3654f139a1e4ea41fd353cb1015c2160862e
66887,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66889,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66890,0,Change has been successfully merged into the git repository.
66891,0,"Patch Set 1: Looks good to me, but someone else must approve"
66892,0,"Patch Set 1: Looks good to me, but someone else must approve"
66893,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66894,0,Change has been successfully cherry-picked as fbb63ee730a7153514372088ee4056947e1a38fa
66896,0,"Patch Set 2: Verified; Looks good to me, but someone else must approve; IP review completedAll tests pass locally for me, but would like someone else to run them for good measure."
66897,0,"Patch Set 2: Looks good to me, approvedRan the tests on a different machine, all tests passed, approved."
66898,0,Change has been successfully cherry-picked as 5d203f0e6ea29509f71088757c1aba43ddddc0fd
66899,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedI'm reverting the change because the signing occurs as part of the first build (mvn clean install), and so the javadoc:aggrgate goal has not cleared the contents yet. Therefore the zipped repo will be in the correct folder."
66900,0,Change has been successfully cherry-picked as 8a25838ef224634dea386c5b9afb60404144f768
66901,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66902,0,Change has been successfully cherry-picked as 23468031d4e05a8d211cc7e38d33c0a0adc85700
66903,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completedLooks good."
66905,0,Change has been successfully cherry-picked as b5664697b061e740e894de908a8cdedf7e247b03
66907,1,"Patch Set 2: I would prefer that you didn't submit thisOh noes, the end lines were changed in the mediawiki to Windows end lines...Well it's kind of our fault, we didn't set the encoding and end-line project settings for lttng.help and tmf.help (and quite honestly it's one of the places where it's the most important...)We'll fix that, afterwards you should be able to just rebase this patch, and modify+save the mediawiki file, and the end lines should be fixed."
66909,0,"Patch Set 3: Looks good to me, but someone else must approve"
66910,0,"Patch Set 3: Looks good to me, but someone else must approve"
66911,0,"Patch Set 3: Looks good to me, approved; IP review completed(1 inline comment)Just a minor comment, you may choose not to fix it."
66912,0,Change has been successfully cherry-picked as 7648994de2bfc68231d5283d6bbf41a0bddf351b
66913,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66914,0,Change has been successfully cherry-picked as be3885da2136c4865e74bd78a0ad9b347b1915ef
66916,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66917,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedI like the reduction in the complex checks to make sure the original conditions were still valid."
66918,0,Change has been successfully merged into the git repository.
66921,0,"Patch Set 4: Verified; Looks good to me, but someone else must approve; IP review completed"
66922,0,"Patch Set 4: Looks good to me, approved; IP review completedLooks as peachy as Georgia, the state, not the country."
66930,0,Change has been successfully cherry-picked as 92b86f37d6917a776a833ccdceef219bfaa1653f
66931,0,Change has been successfully cherry-picked as 6d414bb198a93805e3d5e6b8aa16b55eb8636118
66932,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThanks for doing this change. I've never been gutsy enough to change this from the original designer to not screw something up. Probably the refactoring of Eclipse has been improved so it was easier for you."
66934,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
66936,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
66937,0,Change has been successfully merged into the git repository.
66941,0,"Patch Set 1: Looks good to me, approved; IP review completed"
66942,0,Change has been successfully merged into the git repository.
66943,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedJust waiting for a successful build on hudson to push."
66944,0,Change has been successfully cherry-picked as 6a97e10f7b85e7b6e8b6057a6e86f3b9643c3723
66946,0,"Patch Set 2: Looks good to me, but someone else must approveLooks OK for me"
66947,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedkk, good to go..."
66950,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedLooks good to me..."
66951,0,Change has been successfully merged into the git repository.
66952,0,Change has been successfully cherry-picked as 171f64700b00e4a20e0a9914ad137a86f467b53e
66953,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis looks fine to me. The eclipse-site/platform-version-name defined at the top can be left as they are since they get redefined by either profile."
66954,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
66955,0,Change has been successfully merged into the git repository.
66957,0,"Patch Set 3: Looks good to me, approved"
66959,0,Change has been successfully merged into the git repository.
66965,0,"Patch Set 3: Looks good to me, but someone else must approve"
66966,0,"Patch Set 3: Looks good to me, approved; IP review completed"
66967,0,Change has been successfully merged into the git repository.
66968,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66969,0,Change has been successfully merged into the git repository.
66970,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66973,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedI just merged the previous patch set and removed extra white space."
66974,0,Change has been successfully cherry-picked as 2dd6c882a4d467cbb991177079a704d1c9f14cb8
66975,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
66976,0,Change has been successfully merged into the git repository.
66978,0,"Patch Set 1: (1 inline comment)This looks good, I just don't understand the editor change. We should also add a test case that verifies that ""---"" was selected."
66979,0,Patch Set 1: (1 inline comment)The Editor Change is to make shure that we ha an deleted milstone. (see my comment)
66980,0,"Patch Set 3: Looks good to me, approved; IP review completed"
66981,0,Change has been successfully merged into the git repository.
66983,1,Patch Set 2: (1 inline comment)Thanks for the response. That makes sense. I still get a product selected by default when I create new bugs though. I'm wondering if we should set that to the empty value as well?
66986,0,"Patch Set 2: Looks good to me, but someone else must approveOk, thanks for clarifying. Then let's go with this."
66990,0,"Patch Set 3: Looks good to me, but someone else must approve"
66991,0,"Patch Set 3: Looks good to me, approved"
66992,0,Change has been successfully merged into the git repository.
66995,0,"Patch Set 2: Looks good to me, but someone else must approve"
66996,0,"Patch Set 2: Looks good to me, approved; IP review completed"
66998,0,Change has been successfully cherry-picked as 8ec77ca6aad6ebfcaedc8e292631cbd48b4c7df6
66999,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedSubmit myself it's just useless code removal."
67000,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThe commit seems to be causing STPCompletionProcessorTest to hang."
67001,0,Change has been successfully cherry-picked as 3dc9e0b5176b43cc0605c0703d13220f9b9cb9a6
67003,0,"Patch Set 1: Looks good to me, but someone else must approve"
67006,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67007,0,Change has been successfully merged into the git repository.
67010,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completed"
67011,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
67012,0,Change has been successfully merged into the git repository.
67017,0,Change has been successfully cherry-picked as a79e066ce401329c72077c03e05ee56a6dc187a7
67018,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67019,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67020,0,Change has been successfully merged into the git repository.
67022,1,Patch Set 1:During testing the fix for the considered issue I've noticed some additional refreshing problem of the tab after closing/opening its part. It fixes the change you were asking me. Generally the part of checking that I've removed was not necessary since the tags are kept in the unique list and there is no way to generate duplicates.Daniel
67023,1,Patch Set 1:> During testing the fix for the considered issue I've> noticed some additional refreshing problem of the tab after > closing/opening its partCan you post those steps to the bug report?
67025,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67028,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67029,0,Change has been successfully merged into the git repository.
67031,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67032,0,Change has been successfully merged into the git repository.
67033,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedAfter some of our design discussions and looking at some of the situations where ExpressionContexts can be instantiated we should go for the simple implementation here and re-examine the optimization in Luna."
67034,0,Change has been successfully merged into the git repository.
67044,0,"Patch Set 2: Looks good to me, approved; IP review completed"
67045,0,Change has been successfully merged into the git repository.
67046,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67047,0,Change has been successfully merged into the git repository.
67048,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67049,0,Change has been successfully merged into the git repository.
67050,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedFrank, I'll merge this for now to fix test failures. Feel free to post a follow up change if you have concerns with the change."
67051,0,Change has been successfully merged into the git repository.
67054,0,"Patch Set 3: Looks good to me, approved"
67059,1,"Patch Set 2:Frank, can you take a look at the remaining failure? It's difficult for me to understand the different client and connector instances in BugzillaFixture."
67060,1,"Patch Set 2:(In reply to comment #7)> Patch Set 2:> > Frank, can you take a look at the remaining failure? It's difficult for me to> understand the different client and connector instances in BugzillaFixture.OK maybe we should clean up BugzillaFixture and BugzillaHarness"
67061,0,"Patch Set 4: Looks good to me, approved; IP review completed"
67062,0,Change has been successfully merged into the git repository.
67065,0,"Patch Set 1: Looks good to me, but someone else must approveThe user config is in a file called $HOME/.gitconfig, not in $HOME/.git/config, see http://git-scm.com/docs/git-config#_filesApart from that, more checking doesn't hurt IMO."
67068,1,Patch Set 2:You're right about .gitconfig -- I completely overlooked that. For some reason I had parts of my .gitconfig as $HOME.git/config.
67076,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedLooks good. Thanks for the change, Carsten!"
67077,0,Change has been successfully merged into the git repository.
67078,0,"Patch Set 6: Looks good to me, but someone else must approve"
67081,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed(1 inline comment)Looks good overall."
67082,0,"Patch Set 7: Looks good to me, approved; IP review completedIt's fine. Coming from 3.8 branch."
67083,0,Change has been successfully merged into the git repository.
67093,0,"Patch Set 3: Looks good to me, approved; IP review completed"
67094,0,Change has been successfully merged into the git repository.
67097,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedSmall change, goahead."
67098,0,Change has been successfully merged into the git repository.
67099,0,"Patch Set 1: Looks good to me, approved; IP review completed'just' adds missing dependencies to target files"
67100,0,Change has been successfully merged into the git repository.
67101,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67102,0,Change has been successfully merged into the git repository.
67103,0,"Patch Set 1: Looks good to me, but someone else must approve"
67104,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67107,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67108,0,Change has been successfully merged into the git repository.
67109,1,"Patch Set 1:Looks like a reasonable thing to do to get tests passing again.Thanks for writing tests, though.  It's nice when tests work well enough to be a reliable early warning about regressions."
67111,1,"Patch Set 1:I'm not sure how to write the test to make sure the code works regardless of order. Robin S's fix is, I think the better way to go, rather than silencing the bug indicator."
67113,0,"Patch Set 5: Looks good to me, but someone else must approveI'm surprised the artifact explorer has to be closed and reopened in so many cases.  I would expect an event to tell it to refresh in some of those cases.  Maybe an action for later?"
67119,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
67120,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
67124,0,"Patch Set 6: Looks good to me, but someone else must approve"
67125,0,"Patch Set 6: Looks good to me, but someone else must approveBased on Angel's replies to the comments."
67126,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completed"
67127,0,Change has been successfully merged into the git repository.
67133,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks fine to me"
67134,0,Change has been successfully merged into the git repository.
67137,0,"Patch Set 1: Looks good to me, but someone else must approveOK we can go with this!"
67139,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThanks! We can always improve this further to list old repositories but for now the most important thing is that we can re-provision repositories easily by running the puppet builds."
67140,0,Change has been successfully merged into the git repository.
67141,0,"Patch Set 1: Looks good to me, but someone else must approve"
67142,0,"Patch Set 1: Looks good to me, approved"
67144,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67145,0,Change has been successfully merged into the git repository.
67147,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedLooks good."
67148,0,Change has been successfully merged into the git repository.
67150,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedSimple, looks good"
67151,0,Change has been successfully merged into the git repository.
67154,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedLooks good"
67155,0,Change has been successfully merged into the git repository.
67159,1,"Patch Set 1: (1 inline comment)Sorry Robin, I commented some time ago but now found out my comment was still in draft state.Long story short: I like your proposal to call it getConflictingStageStates()"
67160,0,"Patch Set 1: (1 inline comment)Thanks, see new patch set."
67161,0,"Patch Set 1: Looks good to me, but someone else must approve"
67162,0,"Patch Set 1: Looks good to me, but someone else must approve"
67163,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67164,0,Change has been successfully merged into the git repository.
67165,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67167,0,Change has been successfully merged into the git repository.
67168,0,"Patch Set 1:Dani,Could you please review another fix that works fine with compare editor and solves the considered issue?thanks,Daniel"
67171,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
67172,0,Change has been successfully merged into the git repository.
67174,1,"Patch Set 3:Almost there. ViewReference.getSite() is still broken.Please also remove the ""Next version of..."" sentence from the commit message."
67178,0,"Patch Set 2: Looks good to me, approved; IP review completed"
67179,0,Change has been successfully merged into the git repository.
67181,0,"Patch Set 2: Looks good to me, approved; IP review completed"
67182,0,Change has been successfully merged into the git repository.
67185,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67186,0,Change has been successfully merged into the git repository.
67188,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67189,0,Change has been successfully merged into the git repository.
67190,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67191,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThe change fixes the issue and hence submitting this change. Laurent, please add the usual legal blurbs here.For a clean and final solution, ResourceDiffCompareInput should not be referenced."
67192,0,Change has been successfully merged into the git repository.
67197,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67198,0,Change has been successfully merged into the git repository.
67203,0,"Patch Set 2: Looks good to me, approved; IP review completed"
67204,0,Change has been successfully merged into the git repository.
67205,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67207,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67208,0,Change has been successfully merged into the git repository.
67212,0,"Patch Set 2: Looks good to me, approved"
67214,0,Change has been successfully merged into the git repository.
67215,0,"Patch Set 1: Looks good to me, but someone else must approveThanks!"
67216,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67217,0,Change has been successfully merged into the git repository.
67219,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedMerging based on +1s for prior patch set."
67220,0,Change has been successfully merged into the git repository.
67223,0,"Patch Set 2: I would prefer that you didn't submit thisYeah, I don't think this is ready to go either. See bug discussion about some options to improve the looks. Ideas welcome!"
67228,0,"Patch Set 3:Not sure either, better ask Steffen for this one.  Otherwise it's good to go IMO"
67229,0,"Patch Set 3: IP review completedSorry, what I meant was ""*I know* that we don't need a CQ for this"". :D See http://eclipse.org/legal/EclipseLegalProcessPoster.pdf Figure 4. I've also made a note here: https://bugs.eclipse.org/bugs/show_bug.cgi?id=404933#c26"
67230,0,"Patch Set 3: Looks good to me, approved; IP review completed"
67233,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedLooks good"
67234,0,Change has been successfully merged into the git repository.
67254,1,"Patch Set 2:As I mentioned on bugs, this one is a monster, and there are functional issues as well, but you might want to run it at this point and see what you think."
67259,0,Patch Set 18: I would prefer that you didn't submit this(23 inline comments)I have some comments inlined.  I also tested the TaskEditor (it works fine). but not the Review Navigator yet.
67260,0,"Patch Set 18: (22 inline comments)thaks for all the great comments, Sebastien! I'll wait on your repsonses to my replies before pushing any more changes."
67268,0,"Patch Set 19: Verified; Looks good to me, but someone else must approve; IP review completedI'm OK with this version (Patch set 19)"
67269,0,"Patch Set 19: Looks good to me, approvedThanks everyone! This one probably isn't perfect yet functionally, but it's a lot better than what we had before so I think it's good to get it in now."
67270,0,Change has been successfully merged into the git repository.
67276,0,"Patch Set 4: Looks good to me, but someone else must approveJust rebased my latest changes off this and it works fine. Thanks Steffen."
67277,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedI'm going to go ahead and merge this, as it looks good and we want to merge downstream. Hope that's ok, Steffen.The GerritProject stuff is a great start for what I'll need to do, so thanks!"
67278,0,Change has been successfully merged into the git repository.
67281,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
67285,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed(1 inline comment)"
67286,0,Change has been successfully merged into the git repository.
67291,0,"Patch Set 3: Looks good to me, approved"
67292,0,Change has been successfully merged into the git repository.
67294,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedLooks good."
67295,0,Change has been successfully merged into the git repository.
67297,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
67298,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedLooks good, it may need to be improved later when more exotic traces arrive but for now, I say gogogo!"
67303,0,Change has been successfully cherry-picked as ae07876ea98922d0b04ecaf480aae1cd9f58ad8e
67304,0,Change has been successfully cherry-picked as 15edf0d41e8fd713633bc3c347be3d6b3f35e6d8
67306,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
67307,0,"Patch Set 1: Looks good to me, approved"
67308,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed(5 inline comments)Please look for the in-line comments.Please remove the sonar-settings (files in settings and setting in .project-file). We will add them as soon as sonar ran once."
67310,0,"Patch Set 2: Looks good to me, approved; IP review completedChange looks good, thanks."
67311,0,Change has been successfully merged into the git repository.
67316,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67317,0,Change has been successfully merged into the git repository.
67318,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67319,0,Change has been successfully merged into the git repository.
67320,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67321,0,Change has been successfully merged into the git repository.
67331,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed"
67332,0,Change has been successfully merged into the git repository.
67333,0,Change has been successfully cherry-picked as fe3cc4a170ce702116b43a6f01a9ba6ff456879a
67335,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThanks for the patch Camilo!Just curious what kind of whitespace character was getting ignored exactly ?"
67336,0,"Patch Set 1: Looks good to me, but someone else must approve"
67339,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67340,0,Change has been successfully merged into the git repository.
67341,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67342,0,Change has been successfully merged into the git repository.
67343,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67344,0,Change has been successfully merged into the git repository.
67345,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67346,0,Change has been successfully merged into the git repository.
67348,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67351,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67352,0,Change has been successfully merged into the git repository.
67354,0,"Patch Set 1: Looks good to me, but someone else must approveThe app works and the diff from the OSLC4JBugzilla also looks no good to me."
67355,0,"Patch Set 1: Verified; Looks good to me, approvedVerified license files, copyrights, project structure and dependencies.   Publishing."
67356,0,Change has been successfully merged into the git repository.
67357,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67358,0,Change has been successfully merged into the git repository.
67359,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67360,0,Change has been successfully merged into the git repository.
67361,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67362,0,Change has been successfully merged into the git repository.
67363,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67364,0,Change has been successfully merged into the git repository.
67365,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67366,0,Change has been successfully merged into the git repository.
67367,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67368,0,Change has been successfully merged into the git repository.
67369,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67370,0,Change has been successfully merged into the git repository.
67372,0,"Patch Set 3: Looks good to me, approved; IP review completed"
67373,0,Change has been successfully merged into the git repository.
67378,1,"Patch Set 2:Steffen, it's not clear to me from this -- are we still testing against 2.4 and 2.5?"
67379,1,"Patch Set 2:(In reply to comment #8)> Patch Set 2:> > Steffen, it's not clear to me from this -- are we still testing against 2.4 and> 2.5?Yes, we will be testing against all repositories listed in defaultsites.pp. We may end up excluding 2.6-rc0 but I would like to get a sense how well the current test suite works with the new version."
67380,0,"Patch Set 2: Looks good to me, but someone else must approveLooks good to me -- doesn't break anything on my end.  On 2.6, that's got to break right? I mean given their changes to REST, etc..Steffen, thanks for making these changes, it's going to be a major maintenance and testing improvement!"
67384,0,"Patch Set 4: Looks good to me, approved; IP review completed"
67385,0,Change has been successfully merged into the git repository.
67386,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedSubmitting trivial change."
67387,0,Change has been successfully merged into the git repository.
67392,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67393,0,Change has been successfully cherry-picked as 5c98f20665e7cf55fddae679d664dafe88e2ff5b
67394,1,Patch Set 1:My patch removed the unnecessary @since tags from CoreTest
67396,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67399,0,"Patch Set 2: Looks good to me, approved; IP review completed"
67400,0,Change has been successfully merged into the git repository.
67401,1,"Patch Set 2:> My patch removed the unnecessary @since tags from CoreTestAh yes, missed that. I see that the follow-up change did this, thanks."
67403,0,"Patch Set 5:Thanks for catching that I forgot those name changes! BTW, I'm wondering if it's worth it to capture all of those repetitive patterns in a case like this? I'm thinking it might be sufficient to just call out one and then double-check the next commit. Just an idea."
67410,0,"Patch Set 6: Looks good to me, but someone else must approve; IP review completed(1 inline comment)Almost okay.  One last change and I'm done with the review"
67413,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completedCommitting as per Sebastien's earlier approval. (Fixes his issue+rebase.)"
67414,0,Change has been successfully merged into the git repository.
67416,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
67417,0,Change has been successfully merged into the git repository.
67420,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67421,0,Change has been successfully merged into the git repository.
67423,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67424,0,Change has been successfully merged into the git repository.
67425,0,"Patch Set 2: Looks good to me, approved; IP review completed"
67429,1,Patch Set 1:Looks reasonable (except for the 60 test failures :P)
67431,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67432,0,Change has been successfully merged into the git repository.
67434,0,"Patch Set 4: Verified; Looks good to me, but someone else must approve; IP review completedWith the latest changes I'm okay with this.  Review done for me."
67437,0,"Patch Set 4: Looks good to me, approved; IP review completed"
67438,0,Change has been successfully merged into the git repository.
67440,1,"Patch Set 3: I would prefer that you didn't submit this; IP review completed(3 inline comments)See inlined comments.  Also, the editor icons are the ones generated by EMF.  Nothing wrong with that, but we will have to update them when we do the EMF edit part.  Finally I'm having a few observations/questions on the model:    For the Approval and Requirements, I think the model is generic enough, although I never worked with requirements in Gerrit and I'm not sure how they work really.    I think the model is overly complex now with ReviewItemSets, ReviewItems and File items.  Do we really need the ReviewItem element anymore?  To me the information it holds pretty much relates to the ReviewItemSet (i.e. Gerrit PatchSet) anyways, so why keep it?    I saw that you introduced a Change element as a Review superclass.  What is the rationale behind this?  Can't all the info be in a single Review EClass?  Insn't Change a little bit too Gerrit-specific?  Also, I noticed that review now has Change parents and childrens elements.  I suppose this is to take care of the Depends and Needs Changes in Gerrit to see dependencies accross reviews.  Am I right in this?    The TaskReference is gone from the Review, but is still in the ReviewGroup.  I am a little confused by this.  I thought that the REview itself was a Mylyn task, so now where is the link?  Also, why do we still have a taskReference at the Review Group level?  I don't think we need it.    The location right now is restricted to line ranges i.e. textual input.  This will eventually have to change if we want to support Model Reviews, where the ""location"" is not a line range.  This is okay for now but to keep in mind longer term.    "
67441,1,"Patch Set 3: (3 inline comments)See rep;y to inline comments. Sebastien, would you mind copying these broader (e.g. non-code specific) concerns to the bug itself? I think they're all good high-level concerns but I'm finding these hard to keep track of w/in the code reivew."
67442,1,"set (only for FileItems (that is, whatever the real base review item is)So we could move set to FileItem but otherwise I think the abstraction is useful.> I saw that you introduced a Change element as a Review superclass.  What is> the rationale behind this?  Can't all the info be in a single Review EClass?I isolated Change because it supports those changes that don't have an associated review. And it's also a practical thing because we want to be able to create one-off parent and children changes attached to reviews. These aren't actually changes per se, they're (in Gerrit) simply git references. I think this distinction is useful beyond Gerrit as you're likely to want to have change references that allow you to see the dependency tree..?> Also, I noticed that review now> has Change parents and childrens elements.  I suppose this is to take care of> the Depends and Needs Changes in Gerrit to see dependencies accross reviews.  Am> I right in this?Yes, but more properly any dependencies between changes and reviews proper.> > The TaskReference is gone from the Review, but is still in the ReviewGroup.  I> am a little confused by this.  I thought that the REview itself was a Mylyn> task, so now where is the link?  Also, why do we still have a taskReference at> the Review Group level?  I don't think we need it.Well, you guys use it. ;D But yes, good catch. I don't htink it needs to be there either.> The location right now is restricted to line ranges i.e. textual input.  This> will eventually have to change if we want to support Model Reviews, where the> """"location"""" is not a line range.  This is okay for now but to keep in mind longer> term.Makes sense. I thought we had an abstraciton for this at some point..or at least discussed it."""
67443,1,"Patch Set 3:>>> So we could move set to FileItem but otherwise I think the abstraction is useful.OK let's do this and keep the ReviewItem abstraction> > The TaskReference is gone from the Review, but is still in the ReviewGroup. I > am a little confused by this. I thought that the REview itself was a Mylyn > task, so now where is the link? Also, why do we still have a taskReference at > the Review Group level? I don't think we need it.>Well, you guys use it. ;D But yes, good catch. I don't htink it needs to be there either.I don't think we do actually.  However my other question is still valid:  How do you correlate a given Review with it's ITask now? What is the link between the review task in mylyn task repo and a given review?I'm okay with you other comments."
67444,0,Patch Set 3:(In reply to comment #10)> I don't think we do actually.  However my other question is still valid:  How doYou're assign it a value but I odn't think you're using it anywhere. But the same went for the other reference.> you correlate a given Review with it's ITask now? What is the link between the> review task in mylyn task repo and a given review?That's something that I'm building in next for the persistence layer. We'll have a reference to the task and task repository. But not in this review. :)
67445,0,"Patch Set 3:I think I'd also like to change the name of ReviewItemSet#items to ReviewItemSet#files or perhaps ReviewItemSet#artifacts. I've found in using the API that getItems feels too generic. What do you think, Sebastien?"
67449,0,Change has been successfully cherry-picked as 90b38099d4a58b9dc97d8151451336f49a65f329
67450,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67451,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67452,0,Change has been successfully merged into the git repository.
67453,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
67454,0,"Patch Set 1: Looks good to me, approved"
67455,0,Change has been successfully cherry-picked as 4c2c534b2585bb19ec7f1648a96d843c29339b82
67456,0,"Patch Set 2: Looks good to me, approved"
67458,0,Change has been successfully merged into the git repository.
67461,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completed"
67462,0,Change has been successfully merged into the git repository.
67468,0,"Patch Set 1: Looks good to me, approved(2 inline comments)"
67471,0,Change has been successfully merged into the git repository.
67472,0,"Patch Set 1: Looks good to me, approved"
67473,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThanks Marc"
67474,0,Change has been successfully cherry-picked as 6e5f32684a9a1d614cc5f5ebae52def1a55f5626
67475,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedBuilds a credible org.eclipse.license p2 repo"
67476,0,Change has been successfully merged into the git repository.
67478,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67479,0,Change has been successfully merged into the git repository.
67481,0,"Patch Set 1: Looks good to me, approved"
67482,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67485,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67486,0,Change has been successfully merged into the git repository.
67487,1,"Patch Set 1: Looks good to me, but someone else must approveThe setup looks fairly complicated but the test executed much faster!"
67488,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67491,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67492,0,Change has been successfully merged into the git repository.
67494,0,"Patch Set 2: Looks good to me, but someone else must approve"
67495,0,"Patch Set 2: Looks good to me, approved; IP review completed"
67496,0,Change has been successfully merged into the git repository.
67499,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67500,0,Change has been successfully merged into the git repository.
67501,0,"Patch Set 1: Looks good to me, but someone else must approveCrazy that it doesn't say what the state is, but the ball color!"
67502,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67503,0,Change has been successfully merged into the git repository.
67505,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedMerged to master branch"
67506,0,Change has been successfully merged into the git repository.
67507,0,"Patch Set 1: Verified; Looks good to me, approved"
67509,0,Change has been successfully merged into the git repository.
67511,0,"Patch Set 3:Now correctly handling the case where you have an experiment whose traces don't have the exact same time ranges (ie, most of the time).If we query a timestamp that is invalid for one of the traces/state systems, the view will display ""Out of range"" for all its values. Thanks Matthew for this awesome idea!"
67514,0,"Patch Set 6: Verified; Looks good to me, but someone else must approve; IP review completed"
67515,0,"Patch Set 6: Looks good to me, approvedThanks for the review!"
67516,0,Change has been successfully cherry-picked as 5b27f3e648c3334d28275dbc035ebcf2e67188a3
67519,0,Patch Set 2:Now with 100% more support for experiments!
67524,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67525,0,Change has been successfully merged into the git repository.
67526,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67529,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedTested."
67530,0,Change has been successfully merged into the git repository.
67531,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good, thanks!"
67532,0,Change has been successfully merged into the git repository.
67533,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedCode ready to be merged in the master branch"
67534,0,Change has been successfully merged into the git repository.
67536,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67537,0,Change has been successfully merged into the git repository.
67541,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67542,0,Change has been successfully merged into the git repository.
67544,0,Change has been successfully pushed.
67554,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedThis has been pushed to master as 4eb481a6c69d7bd45d43615de5934faa66d98245"
67560,0,"Patch Set 17: Looks good to me, but someone else must approveLooks good to me."
67561,0,"Patch Set 17: Looks good to me, but someone else must approve"
67562,0,"Patch Set 17: Verified; Looks good to me, approved; IP review completed"
67563,0,Change has been successfully merged into the git repository.
67565,0,"Patch Set 15: Looks good to me, but someone else must approveI think now it's ok."
67578,0,"Patch Set 8: I would prefer that you didn't submit this(12 inline comments)I think we are getting close with this fix, I found a couple of things:* There is a bad behavior when there is a new line added at the end of the file. I don't know why, the compare shows that the difference is with the second last line in the other file. When you switch all the compare filters off the compare shows the difference between the added line+last line vs last line in the other file. I'll send you screenshots* I really like that you added tests for DocLineComparator. I would like you also to create some tests where there is a compare editor created with some compare filters added. This would test everything: adding filters, actions, comparing.* Also please see inline comments."
67586,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completedok for me. One more day for people to veto - then I'll submit it."
67587,0,"Patch Set 2: Looks good to me, approved"
67588,0,Change has been successfully merged into the git repository.
67590,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedPush myself to find possible breakages earlier."
67591,0,Change has been successfully cherry-picked as 02865730d69bf062e0c0009bd7dd9adf9ac7eaa4
67593,1,"Patch Set 2:Patch set 2 removes the line that was adding an url to the ""push"" remote configuration: this was useless in getting rid of the particular random error I was facing."
67596,0,"Patch Set 3: Looks good to me, approved; IP review completed"
67597,1,Patch Set 3:- rebased- improved commit message and removed unnecessary comments
67598,0,Change has been successfully merged into the git repository.
67604,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67607,0,Change has been successfully merged into the git repository.
67608,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67609,0,Change has been successfully merged into the git repository.
67610,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67611,0,Change has been successfully merged into the git repository.
67617,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedrebased"
67618,0,Change has been successfully merged into the git repository.
67620,0,"Patch Set 3: Looks good to me, approved; IP review completed"
67621,0,Change has been successfully merged into the git repository.
67624,0,"Patch Set 2: Looks good to me, approved; IP review completed"
67625,0,Change has been successfully merged into the git repository.
67626,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67627,0,Change has been successfully merged into the git repository.
67628,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67629,0,Change has been successfully merged into the git repository.
67633,0,"Patch Set 4: Looks good to me, approved; IP review completed"
67635,0,Change has been successfully merged into the git repository.
67638,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67639,0,Change has been successfully merged into the git repository.
67640,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67642,0,Change has been successfully merged into the git repository.
67644,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67645,0,Change has been successfully merged into the git repository.
67646,0,Change has been successfully cherry-picked as 566b5d8af862cfb013fe3247f657bb311157e307
67647,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedI've tested this out and it works as expected."
67649,1,"Patch Set 2: Verified; Looks good to me, approvedThanks Marco. Consider moving the initialization of STRUCT into a method. The setInput is getting a little complicated."
67650,1,Patch Set 2: IP review completedThanks Marco. Consider moving the initialization of STRUCT into a method. The setInput is getting a little complicated.
67651,0,Change has been successfully merged into the git repository.
67652,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThanks Marco."
67655,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67656,0,Change has been successfully merged into the git repository.
67658,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedChange has been tested. Works as expected."
67660,0,Change has been successfully cherry-picked as f1e869b02c60f916abdce571dd77fafd51b98978
67662,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedLooks good to me. This fixes the issues with overflowing buffers."
67663,0,Change has been successfully cherry-picked as 9cb774fc259ca5b6301555827b9c7647f50415cd
67664,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67665,0,Change has been successfully merged into the git repository.
67666,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67667,0,Change has been successfully merged into the git repository.
67668,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67669,0,Change has been successfully merged into the git repository.
67670,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67671,0,Change has been successfully merged into the git repository.
67672,0,Change has been successfully cherry-picked as 57234f790162004a09f5744b4f0bc6651027ebd2
67675,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67677,0,"Patch Set 2: I would prefer that you didn't submit this(2 inline comments)Looks good to me, just some minor comments."
67679,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67680,0,Change has been successfully cherry-picked as 74a570aa3b50bcb148413bd5d964e693fbef7ae4
67685,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67686,0,Change has been successfully merged into the git repository.
67690,0,"Patch Set 3:I apologize if this is a breach of protocol, but I just pushed a cleaned-up version of this, here:  https://git.eclipse.org/r/11369If this isn't how things are supposed to be done, I'm happy to Abandon it."
67692,1,Patch Set 2:There are still whitespace errors.
67695,0,Change has been successfully cherry-picked as 440e2e87bf830f594e20e54f690d00f4cc1287c8
67696,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completed"
67700,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completed"
67703,1,"Patch Set 1: (11 inline comments)Various code style/refactoring suggestions.A general request -- please avoid whitespace errors (i.e. inconsistent use of tabs/spaces, whitespace on the ends of lines, etc.) because git (and gerrit) scream about this by default."
67704,1,"Patch Set 1: Do not submitWhitespace/formatting errors ought to be fixed.  It's easy enough, just run it through the formatter.The duplicate if/else clauses should be fixed (although this was a problem with the original code).I would like one of the debug committers to please have a look."
67706,1,Patch Set 2: (5 inline comments)Still some of the aforementioned problems.
67708,0,Change has been successfully cherry-picked as d11a8c4902eaafe7a6c65784ba65e1856bb42591
67710,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
67714,0,"Patch Set 3: Looks good to me, but someone else must approveGreat, that makes sense to me now. I wasn't sure about the braces issue, but I thought it worth mentioning. Thanks for taking the time to explain about my other suggestions; I do appreciate it. Sometimes I go overboard with possible refactorings."
67715,0,"Patch Set 3: Verified; Looks good to me, approved"
67716,0,Change has been successfully cherry-picked as 6502b9146405800c93d010f8a5bbcd63e8e6bdd0
67717,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67718,0,Change has been successfully cherry-picked as 0cb532f5dc5c7353cbe84ba8eba0aaf37f831d2c
67719,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedI've confirmed this change fixes a bug in the perf stat view."
67720,0,"Patch Set 9: Verified; Looks good to me, approved; IP review completedThanks for the contribution, Lei! This is an excellent addition. Unfortunately, we didn't make M6, but we will be able to demo at EclipseCon."
67721,0,Change has been successfully merged into the git repository.
67726,0,"Patch Set 4:Lei, if you have a chance, it would be great to get this in in time for EclipseCon demo!"
67732,0,"Patch Set 1: I would prefer that you didn't submit this(4 inline comments)This looks like a good start! I added a few comments inline. Did you consider using a GradientToolTip instead of the listener in PatchSetSection? I would prefer to reuse the logic that's already in the tooltip class and potentially provide a hover with additional information. For the decorations it could be better to use a decorator similar to how R4E implements these: http://git.eclipse.org/c/r4e/org.eclipse.mylyn.reviews.r4e.git/tree/org.eclipse.mylyn.reviews.r4e.ui/src/org/eclipse/mylyn/reviews/r4e/ui/internal/navigator/ReviewNavigatorDecorator.java?id=90a91c4524a85a9ee8dbbf965b1e8f667b9ebbf2In terms of the icons, it would be nice to use the same icons that EGit or R4E uses for consistency. They also have more contrast to make them more visible. You can see them in the EGit commit viewer.Please note that Miles is currently working on a larger refactoring which will affects the same area of code and moves the label provider into the framework: https://git.eclipse.org/r/#/c/8732/. Feel free to continue to work on this but it's likely that you will need to merge against Miles' changes at some point."
67733,0,Patch Set 1:Thank you for the help Steffen (: I will go over them.
67734,1,"Patch Set 1: (10 inline comments)Thanks for the work Lei. A bit unfortunate that we both happen to be in the same code! On the assumption that Navigator code gets in you might take a risk and base your changes on that now, or otherwise you'd probably save some pain by holding on the final changes until that gets merged. The code is substantially changed, and it would be really nice to have your changes in navigator.Most of my comments apply regardless."
67735,0,"Patch Set 1:Hey Miles, thanks for the heads up. I'll probably wait for the changes to get merged first (as I just got back to class and am getting used to time management again). But in the meantime I'm going to look at your changes too, thanks again (: ."
67737,0,"Patch Set 1:Hi Lei, the common navigator changes are in now, so if you're still interested in persuing this, let me know. And let me know if you want any guidance on where the right place to put this stuff might be. The new label provider stufff is quite a bit more complex. :)"
67738,0,Patch Set 1: (3 inline comments)Thank you Miles! School has been kind of busy lately but I think I should have some time at least during spring break.
67740,0,"Patch Set 3:The indicator icons are on the bottom right even though the code says top left, there are just a lot of transparent spaces due to me shrinking them or they'd be as big as the file icons.Not sure how to implement the tooltip so any helpful input is welcomed.Not sure how the last patch happened, please ignore that."
67741,0,Patch Set 3:Cool. I'll take a look tmrw. Thanks!(In reply to comment #16)> Not sure how to implement the tooltip so any helpful input is welcomed.I'd say don't worry about the tooltip for this review.
67742,1,"Patch Set 3: (5 inline comments)Lei, sorry for delay. Seems to work perfectly. See comments for suggested appearance changes."
67745,0,Patch Set 5:Will try!What class should I look at for the Review Navigator?
67747,0,"Patch Set 5:After rebasing I do see the same overlays added to icons in the ""Review"" window under Mylyn, I hope that is the one you mean."
67748,0,"Patch Set 5: Looks good to me, but someone else must approveExactly. :) Please reply w/ the standard IP assertion and we'll get this in! See http://wiki.eclipse.org/Development_Resources/Handling_Git_Contributions#Gerrit number 4."
67752,0,"Patch Set 5: (1 inline comment)Thank you Sebastien, looking over those things right now."
67755,1,"Patch Set 2:Ok, I think rebasing went wrong somewhere."
67757,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67758,0,Change has been successfully merged into the git repository.
67763,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67764,0,Change has been successfully merged into the git repository.
67766,0,"Patch Set 3: Looks good to me, but someone else must approveTomasz please assert the contributor questions ;-)"
67767,0,"Patch Set 3: Looks good to me, approved; IP review completed"
67771,0,"Patch Set 4: Looks good to me, approved; IP review completed"
67772,0,Change has been successfully merged into the git repository.
67774,0,Change has been successfully cherry-picked as 90701978b3c52d7aa24b37b73980508ac4d7ecf9
67775,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedI've tested this in a local build and can confirm it packages the icons as expected."
67776,0,"Patch Set 1: Looks good to me, but someone else must approve"
67777,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
67779,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67780,0,Change has been successfully merged into the git repository.
67781,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67782,0,Change has been successfully merged into the git repository.
67790,0,"Patch Set 10: Verified; Looks good to me, approved; IP review completedReviewed with R4E.   Automated tests run on target"
67791,0,Change has been successfully merged into the git repository.
67801,0,Change has been successfully cherry-picked as 07fcd9213c2a3208ac8c26ae4261b697493b1c9b
67805,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
67808,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good."
67809,0,Change has been successfully cherry-picked as 178b505535690042301a73187c97523e55c2053d
67811,0,"Patch Set 7: Looks good to me, approved; IP review completed"
67813,0,"Patch Set 6: Verified; Looks good to me, but someone else must approve; IP review completed... aaaand removing a comma I inadvertently added."
67817,0,"Patch Set 2:This seems like a good approach. My only concerns at this point:* Why does ITmfSourceLookup have both the notions of callsite and model URI? An event cannot supply one without supplying the other? Would it be better to have those in two separate interfaces?Next you're gonna say: ""That event can just return null then."" To which I'd ask, why don't we just cram those methods in ITmfEvent then?* Related to the previous point, the tmf.core.event package is starting to bloat again... Maybe it'd be worth moving all lookup-related interfaces and methods to a core.event.lookup package or similar?"
67818,0,"Patch Set 2:Hi Alex, it's funny initially I had 2 interfaces. But I didn't want that we have Interfaces for each special attributes. Technically, both are a similar concepts. Based on your comment in the meeting to avoid too many interfaces for special attributes I went with the one interface approach. So, I should have went with my initial thought. Anyways, I'm going to change it to 2 interfaces because events will only implement what they need. I hope this is ok.Having a own package makes sense."
67820,0,"Patch Set 5: Verified; Looks good to me, but someone else must approve; IP review completedQuick suggestion, I just moved the call to tmf.core.tests.event.lookup.AllTests to the top-level AllTmfCoreTests (which calls every package). This mimics how it's done in tmf.ui.tests."
67821,0,"Patch Set 1: (9 inline comments)Very good initiative! Some minor comments, but what I think we should discuss is if the callsite should reuse/replace the concept of ""reference"" in ITmfTrace."
67824,0,Patch Set 1: (9 inline comments)I'm going to look into the suggestion Patrick gave. It looks like a good suggestion to consider.Thanks for all the comments.
67826,0,"Patch Set 3: Verified(3 inline comments)Looks good, seems to work fine. I just have some minor comments left."
67828,0,Change has been successfully cherry-picked as 298e322ead45337650dd775363d2288a1a13816b
67829,0,"Patch Set 1: Looks good to me, approved; IP review completed"
67830,0,Change has been successfully cherry-picked as 62ae8c2f1a6b8dd2de6a857de8efde3b397c4f2f
67831,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThanks"
67832,0,Change has been successfully merged into the git repository.
67835,0,"Patch Set 3: Looks good to me, approved; IP review completed"
67836,0,Change has been successfully merged into the git repository.
67838,0,"Patch Set 3: Looks good to me, approved; IP review completed"
67839,0,Change has been successfully merged into the git repository.
67842,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67843,0,Change has been successfully merged into the git repository.
67845,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed"
67846,0,Change has been successfully merged into the git repository.
67847,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
67852,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
67856,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67857,0,Change has been successfully merged into the git repository.
67865,1,"Patch Set 2:I know that you have a lot of reviews pending ... but this one seemed quite trivial? If there's anything I can do to ease the review process, do not hesitate to ask."
67867,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedLegal assertions already made in bug report. Looks good, thanks Laurent!"
67868,0,Change has been successfully merged into the git repository.
67870,0,"Patch Set 10: Looks good to me, approved; IP review completed"
67871,0,Change has been successfully merged into the git repository.
67875,1,Patch Set 4:With an exception of failing DirCacheCheckoutMaliciousPathTest.testMaliciousPath (see bug 396662) all tests passed when run locally.
67878,1,"Patch Set 8: Looks good to me, but someone else must approvethanks for pointing me to the failing tests again. I finally found the problem and fixed it. The only failing case is now SmartClientSmartServerTest#testListRemote_BadName which also fails in master without my patch."
67888,0,"Patch Set 1:Copyright needs update, otherwise looks good."
67892,0,Change has been successfully merged into the git repository.
67893,0,Change has been successfully cherry-picked as 6ca693128a159f516a8e3676e20c4df4cc0c6e6c
67895,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedLooks good. Thanks for the patch Camilo!"
67896,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good to me. Printing from an end probe now appears in the console log view."
67897,0,Change has been successfully cherry-picked as 9f6d72ae4055ae91fe6f396a39b57e675ea025ec
67898,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedLooks good!"
67899,0,"Patch Set 1: Looks good to me, approved"
67901,0,Change has been successfully merged into the git repository.
67902,0,Patch Set 1:Thanks Chris!
67905,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedApproved."
67908,0,Change has been successfully cherry-picked as dcbcc26a09a5f40ca41e60663f78567ed85f1e81
67909,0,Change has been successfully cherry-picked as fc06947aff77d5890d58146c826e7cea3534bd05
67911,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good to me. Correct man pages for tapsets and functions appear if available during content assistance. If there is no man page available a proper message appears."
67913,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67914,0,Change has been successfully merged into the git repository.
67917,0,"Patch Set 2: Looks good to me, approved(1 inline comment)"
67923,0,"Patch Set 3: Looks good to me, approved; IP review completed"
67924,0,Change has been successfully merged into the git repository.
67926,0,"Patch Set 1: Looks good to me, but someone else must approveFixes the issue for me."
67928,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis looks fine to me."
67929,0,Change has been successfully cherry-picked as 16d11c577f6d0cb82109b4068cf07aacf52fc2d8
67930,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67931,0,Change has been successfully merged into the git repository.
67932,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67933,0,Change has been successfully merged into the git repository.
67934,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67935,0,Change has been successfully merged into the git repository.
67936,0,Change has been successfully cherry-picked as 402c2f9a249d27285c099f5fe31236c48bf60628
67937,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67942,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedApproved."
67943,0,Change has been successfully cherry-picked as b76bcd4348173406abf3df4943f9a3613814d908
67944,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67945,0,Change has been successfully merged into the git repository.
67946,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67947,0,Change has been successfully merged into the git repository.
67948,0,"Patch Set 2: Looks good to me, approved; IP review completed"
67949,0,Change has been successfully merged into the git repository.
67950,0,"Patch Set 1: Looks good to me, but someone else must approvePerfect!  That will be a great improvement for anyone working with Gitblit or Gerrit with self-signed certs.  I can't wait till it lands in the next EGit/JGit service release.  And I will be able to update my documentation to say JGit <= 2.3.1 has this problem but all newer versions work properly."
67951,0,"Patch Set 1: Looks good to me, but someone else must approve"
67952,0,"Patch Set 1: Looks good to me, but someone else must approveJames: Did you test this?"
67953,0,Patch Set 1:I did not build & test.  It is exactly the same as I use in Gitblit.https://demo-gitblit.rhcloud.com/blob/gitblit.git/f5e60ba88a28c2df0c9263dd6f999f675fefe4e9/src!com!gitblit!utils!ConnectionUtils.java#L82https://demo-gitblit.rhcloud.com/blob/gitblit.git/f5e60ba88a28c2df0c9263dd6f999f675fefe4e9/src!com!gitblit!utils!ConnectionUtils.java#L203
67956,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
67957,0,Change has been successfully merged into the git repository.
67960,0,"Patch Set 3: Looks good to me, approved; IP review completed"
67972,0,"Patch Set 4: Looks good to me, but someone else must approve"
67979,0,"Patch Set 6: Looks good to me, approved; IP review completedrebased"
67980,0,Change has been successfully merged into the git repository.
67981,0,"Patch Set 3: Looks good to me, approved; IP review completed"
67984,0,"Patch Set 2: Looks good to me, but someone else must approve"
67986,0,"Patch Set 2: Looks good to me, approved; IP review completed"
67990,0,"Patch Set 4: Looks good to me, approved; IP review completedrebased"
67991,0,Change has been successfully merged into the git repository.
67992,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
67993,0,Change has been successfully merged into the git repository.
67994,0,Change has been successfully cherry-picked as ee416bc8be34afdcf3294f9c6f902f68f22e1d57
67996,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
67997,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis a very very trivial change, in a headless test program that is only run manually. If this ever breaks anything, point and laugh at me."
68001,0,"Patch Set 1: Looks good to me, approvedOops, good point.  It seems surprising that there isn't a nicer way."
68003,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68004,0,Change has been successfully merged into the git repository.
68005,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68006,0,Change has been successfully merged into the git repository.
68007,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
68008,0,Change has been successfully merged into the git repository.
68009,0,"Patch Set 1: Looks good to me, but someone else must approve"
68012,0,"Patch Set 1:Normally, equals method should not be overridden without implementing hashcode.  Overriding the hashcode and including the comment notates that it was done on purpose and explains the reason.  It also explains that the hashcode in DefaultBasicGuidArtifact needs to match.  I think this is a good reason to leave it in."
68014,0,"Patch Set 2: Looks good to me, but someone else must approve"
68017,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68018,0,Change has been successfully merged into the git repository.
68020,0,"Patch Set 4: I would prefer that you didn't submit this(8 inline comments)Good approach to move the integer-formatting in the super class. It could be marked as ""protected final"" to make sure sub-classes don't mess with it, but just use it.Bunch of nitpicks, but the NON-NLS one is the most important."
68022,1,"Patch Set 7: Verified; Looks good to me, approved; IP review completedThanks for rebasing it ;)  I was too tired to do it last night, but then of course I forgot about it..."
68023,0,Change has been successfully cherry-picked as 2c5f9387eaed40f7a1989045ff58043c2a1eea19
68025,0,"Patch Set 6: Verified; Looks good to me, but someone else must approve; IP review completedLooks good and works with my tests. +1 I'll poke other reviewers to get your code in."
68026,1,"Patch Set 6: Verified; Looks good to me, but someone else must approve; Unclean IP, do not check in"
68028,0,"Patch Set 6: Looks good to me, approved; IP review completed"
68040,0,Change has been successfully cherry-picked as 4d70fc3fd4c20efd657602e8ce65d51d0ffce2a6
68042,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68043,0,Change has been successfully cherry-picked as a84c6eace8fc13891a283e3e4167ea1023a6220e
68044,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68045,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68046,0,Change has been successfully merged into the git repository.
68049,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68050,0,Change has been successfully merged into the git repository.
68052,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
68053,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68055,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
68056,0,Change has been successfully merged into the git repository.
68058,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68059,0,Change has been successfully merged into the git repository.
68062,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68063,0,Change has been successfully merged into the git repository.
68066,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68067,0,Change has been successfully merged into the git repository.
68069,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68070,0,Change has been successfully merged into the git repository.
68073,0,"Patch Set 3: Looks good to me, approved"
68075,0,Change has been successfully merged into the git repository.
68076,0,"Patch Set 1: Looks good to me, but someone else must approve(1 inline comment)Fixes the issue with running GC on Gerrit's 'All-Projects' project."
68077,0,"Patch Set 1: Looks good to me, but someone else must approve(1 inline comment)"
68080,0,"Patch Set 2: Looks good to me, approved"
68082,0,Change has been successfully merged into the git repository.
68083,1,"Patch Set 2:When did we decide to bump the major version number?Not that it's a bad idea, but EGit must be updated too."
68084,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
68085,0,Change has been successfully merged into the git repository.
68091,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68094,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
68100,0,"Patch Set 1: Looks good to me, but someone else must approve(16 inline comments)Please find comments in-line"
68101,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed"
68102,0,Change has been successfully merged into the git repository.
68109,0,"Patch Set 10: Verified; Looks good to me, approved; IP review completedLooks great! Will be nice to have this in for M6. :D"
68113,1,Patch Set 5: (8 inline comments)On a high level this looks like a good change. I have voted -2 though since we must not add a dependency on a specific team provider (jgit in this case) to the review framework. I also agree with Miles that passing the repository along through the call chain isn't optimal. I would suggest that we discuss on the bug how to resolve the design issues.A few other things:* @version should be removed. We don't use them in Mylyn since it's easy enough to obtain that from the SCM and they tend to cause weird merge conflicts.* All changed files should have a corresponding copyright note under Contributors in the copyright header section. Files with substantial changes should also have an @author tags.
68117,0,"Patch Set 11: Verified; Looks good to me, approved; IP review completed"
68118,0,Change has been successfully merged into the git repository.
68121,1,Patch Set 2:(Note that the test failure isn't an issue from this review. I've fixed it seperatly and will try to put up a review for that asap.)
68122,1,"Patch Set 2:Okay, a few comments. :) The major suggestion is to take a look at getting rid of the repos method pass-through.I'm also discovering that the add comments in the review editor is not working very well :(, so some of the line numbers are off."
68123,0,"Patch Set 2:""I'm also discovering that the add comments in the review editor is not working very well :(, so some of the line numbers are off."" <-- comment about the current implementation, not this review's changes!"
68124,1,Patch Set 2:(See 401370: [compare] Comments are not always shown and end up on wrong linehttps://bugs.eclipse.org/bugs/show_bug.cgi?id=401370)
68129,1,"Patch Set 8:The code was adapted to work with the new Remotes API that was just merged in.  Basically the functionality is as before and is tested (except for comparing review items which I could not test due to new bug 403389).There is one part missing to resolve the File Revisions when opening a file from the Review Navigator.  Miles I will need your help for this one, see the TODO comments in OpenCompareEditorProvider#init.Right now I use the ReviewBehavior object to pass in the parent repository needed to resolve the file revision from the team repository and the resolution is done when the file is opened in the compare editor.  Ideally, we should add a reference to the repository in the ReviewItemSet model element and a team IFileRevision reference in the Mylyn Review IFileRevision.  This would enable use to decorate the IFileItem icon in the GErrit Task editor and Review Navigator at all times.  However, to make that work, we need a way to detect that the workspace file has changed to redo the resolution when the user changes his workspace (e.g. when checking out another git branch).  This should be investigated and done as part of the effort for bug 371428, which is the evolution of the solution provided here).We should also change the Mylyn Review IFileRevision element name to IFileVersion to avoid confusion with the team API element (see bug 403393)In any case, except for the OpenCompareEditorProvider problem, this is ready for the final review"
68130,1,"Patch Set 8:Awsome, Sebastien. I'm out sick today so won't look at it until tmrw, sorry."
68131,0,Patch Set 8: (5 inline comments)Getting pretty close I think. :) But I don't see any icons.. See other comments.
68135,0,Change has been successfully cherry-picked as 72b5d3f4b9aae550cf75e0343a45dd8353fb4da8
68136,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68138,1,"Patch Set 1: Looks good to me, but someone else must approveThis isn't great in terms of presenting the error in the UI or error log but it's a reasonable stop gap solution."
68139,0,"Patch Set 1: Looks good to me, approved; IP review completedAgreed. Note that the issue is logged by the error ui using notification call back from remote API."
68141,0,"Patch Set 2: Looks good to me, but someone else must approve"
68142,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68143,0,Change has been successfully merged into the git repository.
68144,0,"Patch Set 1: Looks good to me, but someone else must approveI couldn't reproduce the error any longer."
68146,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68147,0,Change has been successfully merged into the git repository.
68148,0,Change has been successfully cherry-picked as 2596db696f0a62a8a2dcbb81918521090de949cb
68149,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68150,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68151,0,Change has been successfully cherry-picked as 5f20538e4c9bce7906be7b9a975e9d03f7cb2d23
68152,1,"Patch Set 2: Looks good to me, approved; IP review completedI'm going to go ahead and merge as we know it fixes immediate issue and it's a one-liner. That doesn't mean the bug is closed -- I'm not comfortable w/ having the tests miss this. Steffen, if you feel strongly that we should do the UI tests now as well, please note that on bug."
68153,0,Change has been successfully merged into the git repository.
68154,0,Patch Set 1:Looks good! I would suggest to also make the UI code more robust to handle null authors and add a test for that.
68155,1,"Patch Set 1:I'm sort of inclined to enforce it at the model level. It's a 1..1 relationship, this should ""never"" actually be a null value, but in worse case a stand-in unknown user value. Once we have proper model validation, we should be able to trap these issues w/o polluting the UI code w/ a ton of null checks. OTOH, a null check never hurt anyone.."
68157,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68158,0,Change has been successfully cherry-picked as 493a888e690360080bb3950de4d4d0cc613805f6
68159,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68160,0,Change has been successfully cherry-picked as 09f5600ec9dd8e759084917132b7b7a7109b6971
68161,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68162,0,Change has been successfully cherry-picked as b003e8f236caf2913cc700ac903b4104af9944b9
68163,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68164,0,Change has been successfully merged into the git repository.
68166,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68167,0,Change has been successfully merged into the git repository.
68169,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68170,0,Change has been successfully merged into the git repository.
68171,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68172,0,Change has been successfully merged into the git repository.
68173,0,"Patch Set 1: Looks good to me, approved"
68174,0,"Patch Set 1: Looks good to me, but someone else must approve"
68176,0,Change has been successfully merged into the git repository.
68178,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68180,0,Change has been successfully merged into the git repository.
68181,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68182,0,Change has been successfully merged into the git repository.
68183,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68184,0,Change has been successfully merged into the git repository.
68185,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68186,0,Change has been successfully merged into the git repository.
68188,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68189,0,Change has been successfully merged into the git repository.
68190,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68191,0,Change has been successfully merged into the git repository.
68195,0,"Patch Set 6: Looks good to me, approved; IP review completed"
68196,0,Change has been successfully merged into the git repository.
68206,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good"
68207,0,Change has been successfully merged into the git repository.
68208,0,"Patch Set 1:This patch is fine, but the Gerrit sandbox seems to be broken.1. I authored 100% of this contribution 2. I have the rights to donate the content to Eclipse 3. I contribute the content under the EPL 4. Bad processes make me mad, see https://bugs.eclipse.org/381105"
68209,1,"Patch Set 1: IP review completed(1 inline comment)- the hudson job builds against jgit's master version which is already on 2.4-SNAPSHOT hence the verification fails, I deleted the wrong vote- someone on Windows should verify this works"
68210,1,"Patch Set 1: Looks good to me, but someone else must approveI tried this on Windows, but the problem didn't occur there.So I simulated the problem by changing the code, and the workaround works well. Looks good to me.Matthias: Time is running out for 2.3.1, should we submit this anyway?"
68213,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68214,0,Change has been successfully merged into the git repository.
68216,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68217,0,Change has been successfully merged into the git repository.
68218,0,Patch Set 1:Thanks Steffen. :)
68219,0,Patch Set 1:My pleasure :).
68220,0,Change has been successfully cherry-picked as 1159fd6ffc3ffbca4f4457623113027a164e2c39
68221,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedAgreed, our tests should really only concern plug-in functionality."
68222,0,Change has been successfully cherry-picked as fda959dbd0cd8ff945b23f776a6e46ef63c02ec2
68223,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68225,0,"Patch Set 3: Looks good to me, but someone else must approve"
68226,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
68228,0,Patch Set 2: (4 inline comments)Thanks for making the changes. I hope I'm not being too persnickety.
68230,0,Change has been successfully cherry-picked as 18ff30de24e745ca9f221c49ff8bd219837022c7
68234,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedLooks good."
68235,0,Change has been successfully cherry-picked as 1908efec3811e8c24030a5b38140b00fbb66ca61
68237,0,Change has been successfully cherry-picked as 38cda7b0edca05287ec618505b7cd45cf37300de
68238,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedLooks good to me, build and tests pass locally."
68240,0,Change has been successfully cherry-picked as 24ba7ff6880c98cab8a77144dc1c8f08c8d8db9c
68242,1,"Patch Set 3: Verified; Looks good to me, approved; IP review completedThe patches collide because the new tests are added to the end of the file. I'd recommend adding new tests next to other similar tests."
68243,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68246,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68249,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68252,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68253,0,Change has been successfully cherry-picked as ee08bee24b2ac0013f876fcb64ef6cebd8e35f4d
68255,0,"Patch Set 3: Verified; Looks good to me, approved"
68260,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
68263,1,"Patch Set 1:The infinite recursion in both IndexCPPTemplateResolutionTest.testConstantPropagationFromHeader and my test project can be avoided by not marshalling the template definition when serializing EvalFixed. In fact EvalFixed doesn't need to know the template definition since it doesn't do any lookups dependent on it. It probably makes sense to split CPPEvaluation into two classes, one derived from another, with fTemplateDefinition in the derived class. EvalFixed would then be able to derive from a more light-weight superclass.Another change I would suggest is adding a constructor to all evaluations except EvalFixed that takes IASTNode pointOfDefinition parameter. This would allow for making DeferredResolutionBinding a nested class of CPPEvaluation and replacing SemanticUtil.findEnclosingTemplate(IASTNode) by a private method in CPPEvaluation."
68265,0,Change has been successfully cherry-picked as f1542b27c6218771330775dd0820e737fcd0514e
68267,1,"Patch Set 2:Here is an updated patch that fixes the infinite recursion in the way you suggested, and also fixes a regression I saw in my codebase (I added a new test for it). Please let me know if you see any other regressions in yours.Regarding the addition of constructors taking an ""IASTNode pointOfDefinition"" parameter to evaluations other than EvalFixed: is there a way to do this without duplicating the constructor body of every evaluation?Also, how did you tell that the infinite recursion happened in IndexCPPTemplateResolutionTest.testConstantPropagationFromHeader? When I ran that test, I saw an AssertionError because a name could not be found, but no StackOverflowError."
68271,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis simplification makes sense to me, thanks."
68272,0,Change has been successfully cherry-picked as 59ef96b665f65ec379c238a2199935a1e08a0df1
68275,0,Change has been successfully cherry-picked as 2279927623d6d393db81fba7ceca12f047935bf8
68277,0,"Patch Set 4: Looks good to me, approvedLooks good to me."
68282,0,"Patch Set 2: I would prefer that you didn't submit this(4 inline comments)Reviewed, will test it next.Seems like a very welcome change!"
68285,0,Change has been successfully cherry-picked as 5bcd243f2460d0cebe1876b79084c41a4d6733f1
68286,0,"Patch Set 4: Verified; Looks good to me, but someone else must approve; IP review completed"
68287,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completed"
68288,0,"Patch Set 4: Looks good to me, approved"
68291,0,Change has been successfully cherry-picked as b308b56f33ea956324b580edea6d2fde9af2b0f9
68293,0,"Patch Set 2: Verified; Looks good to me, but someone else must approve; IP review completed"
68294,0,"Patch Set 2: Looks good to me, approved"
68295,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68296,0,Change has been successfully merged into the git repository.
68298,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68299,0,Change has been successfully merged into the git repository.
68300,0,"Patch Set 1: Looks good to me, but someone else must approve"
68301,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68302,0,Change has been successfully merged into the git repository.
68303,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68304,0,Change has been successfully cherry-picked as 81885d232fec146ec4c1d6c1fbac552daff416ea
68305,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good"
68306,0,Change has been successfully merged into the git repository.
68307,0,Patch Set 1:Looks good
68308,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good"
68309,0,Change has been successfully merged into the git repository.
68310,0,"Patch Set 2: Looks good to me, approved"
68312,0,Change has been successfully merged into the git repository.
68313,1,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedthis fixes the problems, maybe it would be more user friendly to show a list of repositories to select one instead of showing an error dialog"
68316,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
68317,0,"Patch Set 3: Looks good to me, but someone else must approve"
68318,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
68319,0,Change has been successfully merged into the git repository.
68321,0,"Patch Set 1: Looks good to me, but someone else must approve"
68324,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
68325,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68327,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
68328,0,Change has been successfully merged into the git repository.
68330,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
68331,0,Change has been successfully cherry-picked as 4956ba9b6fa25b6c6dae35490302fe9fce306afb
68333,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68334,0,Change has been successfully cherry-picked as 2ce00ff04f4bfefb8d85a0e9f735e2e568f760d5
68336,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68338,0,Change has been successfully cherry-picked as fd4982ed260b64563f5b5cd07fa7f780c2de98b8
68339,0,Change has been successfully cherry-picked as c536fd78223b42f9b515f4f218023fe63e108789
68340,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68341,0,Change has been successfully cherry-picked as 6ca70f120b9556af2c9eb6a666ac20582d161e78
68342,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68343,0,Change has been successfully cherry-picked as eb9647b9debe8aecfea16aefe0087cdca17aec6f
68348,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedLooks good"
68349,0,"Patch Set 1: I would prefer that you didn't submit this(4 inline comments)Looks good, now that we have a use case for sub-fields!Some minor comments. Could you also please add a Signed-off-by line (git commit --amend -s)"
68355,0,"Patch Set 4: Verified; Looks good to me, but someone else must approve; IP review completed"
68358,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedLooks good. I like the output in the events view."
68359,0,Change has been successfully cherry-picked as ca5d1f526e5ead481e88d3e1ac76c4bf433daacc
68366,0,"Patch Set 5: Looks good to me, approved; IP review completed"
68367,0,Change has been successfully merged into the git repository.
68371,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68372,0,Change has been successfully merged into the git repository.
68374,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedIP review completed: Only contains my minor changes to the originally contributed and reviewed patch set 1."
68375,0,Change has been successfully merged into the git repository.
68379,0,Change has been successfully cherry-picked as db9e82b99f46a252b364fb4df52e2d0c41ecd83e
68380,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68381,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68382,0,Change has been successfully merged into the git repository.
68384,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68385,0,Change has been successfully merged into the git repository.
68386,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68387,0,Change has been successfully merged into the git repository.
68388,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68389,0,Change has been successfully merged into the git repository.
68391,0,"Patch Set 4: Verified; Looks good to me, approved"
68396,0,Change has been successfully cherry-picked as 70391c2a091d5860c14cc2719ddc24e3907b7497
68397,0,"Patch Set 1: Looks good to me, but someone else must approve(1 inline comment)Ok for me, but I've a question (see comment on AbstractSTTableViewer.java)."
68398,1,"Patch Set 1:It's an empty method in abstract class which looks really weird. From an API POV it should be marked as abstract so implementers be aware that they really need to implement it in order to get full functionality, if they don't care they can put empty implementation themselves. I for one would easily miss it the way and wonder why the hyperlinks are not working."
68399,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedOk, thanks"
68400,0,Change has been successfully cherry-picked as 4b146a2122302960be3521d352fdbb239dd9f6dd
68401,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68402,0,Change has been successfully merged into the git repository.
68403,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68404,0,Change has been successfully merged into the git repository.
68405,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68406,0,Change has been successfully merged into the git repository.
68407,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68408,0,Change has been successfully merged into the git repository.
68409,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68410,0,Change has been successfully merged into the git repository.
68411,1,Patch Set 1: Failsbuild fails for me. Problem with the installed JRE. The build should not require any specific JRE installed.
68414,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
68418,0,Change has been successfully cherry-picked as 94de74e59e29748d078eedd248de4a2ab63c5917
68420,1,"Patch Set 2: I would prefer that you didn't submit this(2 inline comments)The generated HTML files need to be under source control because the maven build won't build them. Also the generated HTML files have incorrect reference to home.gif, next.gif and prev.gif becasue they need to be in doc/images."
68422,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68423,0,Change has been successfully merged into the git repository.
68424,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedApproved along with additional updates in https://git.eclipse.org/r/10436.   We will document a restriction that relative URIs can only be used with Turtle and JSON serializations."
68425,0,Change has been successfully merged into the git repository.
68426,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
68427,0,Change has been successfully merged into the git repository.
68429,0,"Patch Set 2: Verified; Looks good to me, but someone else must approve; IP review completed"
68430,0,"Patch Set 2: Looks good to me, approved"
68434,0,"Patch Set 1: Looks good to me, but someone else must approveAgree with John's comment, then all ok."
68435,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68436,0,Change has been successfully merged into the git repository.
68437,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
68438,0,"Patch Set 1: Looks good to me, but someone else must approve"
68439,0,"Patch Set 1: Looks good to me, approved"
68441,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68442,0,Change has been successfully merged into the git repository.
68443,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68444,0,Change has been successfully merged into the git repository.
68445,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68446,0,Change has been successfully merged into the git repository.
68447,0,"Patch Set 1: Looks good to me, but someone else must approve"
68448,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68451,0,Change has been successfully cherry-picked as 9b764dddbd35df9f828a073e61bbb566c86b54e2
68452,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68455,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
68463,0,Change has been successfully cherry-picked as c5f65f37220a8cbd993a5fd270f1ab966a9cc19d
68466,0,"Patch Set 3: Looks good to me, approved; IP review completed"
68467,0,Change has been successfully merged into the git repository.
68468,0,"Patch Set 1: (1 inline comment)One nit. Aside from that, looks good to me."
68470,0,"Patch Set 2: Looks good to me, but someone else must approve"
68471,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68474,0,Change has been successfully cherry-picked as ee70160c98e98591e789175ab95cd3e884a00517
68475,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThanks for the contribution. Looking forward to more."
68476,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedThis is only changes to comment blocks - does this need review by two?"
68477,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68478,0,Change has been successfully merged into the git repository.
68479,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68480,0,Change has been successfully merged into the git repository.
68481,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68482,0,Change has been successfully merged into the git repository.
68483,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68484,0,Change has been successfully merged into the git repository.
68485,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68486,0,Change has been successfully merged into the git repository.
68487,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
68488,0,Change has been successfully merged into the git repository.
68489,0,"Patch Set 1: Looks good to me, but someone else must approve"
68490,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed(2 inline comments)It is good enough to release, but you might review my comments and determine if they need to be addressed."
68493,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68496,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68497,0,Change has been successfully merged into the git repository.
68498,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68499,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68500,0,Change has been successfully cherry-picked as 4af3066d40cc0babae56064304fc6392ecbe0ceb
68501,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good to me."
68502,0,Change has been successfully cherry-picked as 9ab8b61d7a18d868004b56e347ae3362eed0bb02
68503,0,Change has been successfully cherry-picked as ae0743b7162d337564bedc8444603c047e2e4c67
68507,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedLooks good to me. New tests pass locally, probes and function parsing are correctly scheduled on plug-in start up under separate jobs."
68508,0,"Patch Set 1: Looks good to me, but someone else must approve"
68509,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68510,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68513,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68514,0,Change has been successfully merged into the git repository.
68515,0,Change has been successfully cherry-picked as f9920d0dc07969605bd7f53927da53922bdaf973
68516,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
68517,0,"Patch Set 1: Looks good to me, approved"
68518,0,Change has been successfully cherry-picked as 8fdb5873b3dc98646d70cf21b40d9daaf031b460
68520,0,"Patch Set 2: Verified; Looks good to me, but someone else must approve; IP review completed"
68521,0,"Patch Set 2: Looks good to me, approved"
68522,1,Patch Set 1:Why is static class CtfTmfTestTraces needed? Couldn't we just use class CtfTestTraces directly as it is done in test class CtfTmfTraceTest?
68526,0,Change has been successfully cherry-picked as fc0e97db552bad33d502043962cea805675cf317
68527,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68528,0,Change has been successfully cherry-picked as ee94ba6c05c614a088dbe1715713f103c3630073
68529,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
68530,0,"Patch Set 1: Looks good to me, approved"
68531,0,Change has been successfully cherry-picked as 87935065452c2b470b87c01d53cc1b971787bbad
68533,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completedLooks good, didn't explode. Needs another +1 I think"
68539,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68540,0,Change has been successfully merged into the git repository.
68541,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68542,0,Change has been successfully merged into the git repository.
68544,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68545,0,Change has been successfully merged into the git repository.
68546,0,"Patch Set 1: Looks good to me, but someone else must approve"
68547,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68548,0,Change has been successfully merged into the git repository.
68549,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68550,0,Change has been successfully merged into the git repository.
68552,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68553,0,Change has been successfully merged into the git repository.
68554,0,"Patch Set 1: Looks good to me, but someone else must approve"
68557,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68558,0,Change has been successfully merged into the git repository.
68559,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68560,0,Change has been successfully merged into the git repository.
68561,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68562,0,Change has been successfully merged into the git repository.
68563,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68564,0,Change has been successfully merged into the git repository.
68566,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68567,0,Change has been successfully merged into the git repository.
68568,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68569,0,Change has been successfully merged into the git repository.
68571,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68572,0,Change has been successfully merged into the git repository.
68574,1,"Patch Set 1: Looks good to me, but someone else must approve; Unclean IP, do not check inplease assert the contributor questions [1] as a comment on this review, this is required by the Eclipse IP processhttp://wiki.eclipse.org/EGit/Contributor_Guide#Legal_Paperwork"
68577,0,"Patch Set 1: Looks good to me, approved"
68578,0,Change has been successfully merged into the git repository.
68579,1,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedIt's always risky to use Locks or synchronized with event requests, because it's a different thread that runs the handle*() methods. Been there done that ;)"
68580,0,"Patch Set 1: Verified; Looks good to me, approved"
68581,0,Change has been successfully cherry-picked as 1433bda1531a485ecafc4de8caa7c1a333c9864a
68582,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68584,0,Change has been successfully cherry-picked as 80150e3c8a4114a4cdbb2bf5da799f25f58d23d5
68585,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68586,0,Change has been successfully cherry-picked as fecfee0958ee105935aa1c368d813097c7a75b77
68590,0,"Patch Set 4: Looks good to me, but someone else must approve"
68593,1,"Patch Set 4: Looks good to me, but someone else must approveGuys are you ok with this change? If I don't hear otherwise,  having +1 from Robin I would be happy to submit the latest patch set and continue with bug 336933."
68594,0,"Patch Set 4: Looks good to me, approved; IP review completed"
68600,0,"Patch Set 2: (1 inline comment)Not the prettiest patch ever, but at least it makes the bar green (locally). Any comments are welcome."
68603,1,"Patch Set 5: Looks good to me, approved; Unclean IP, do not check inCan you the IP assertion?"
68604,0,"Patch Set 5: Looks good to me, but someone else must approve* I authored 100% of the content.* I have the rights to donate the content to Eclipse JGit.* I contribute the content under the project license (EDL)."
68606,0,Change has been successfully merged into the git repository.
68612,1,"Patch Set 5:You know what, this is just broken. I am going to revert. If you really want configuration options stored as --ff-only in a configuration file you need to use a different API method and not break existing users, and existing files."
68621,0,Change has been successfully cherry-picked as 24c23e078ff53f6aeb86eaa61ee2d215998605dd
68622,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68623,0,Change has been successfully cherry-picked as 05cfb020bbb85609780a3810cb716d14f189031f
68624,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good. I'm going to make a slight change to use optimal in the UI and set it to num processors - 1 on Mac."
68626,0,"Patch Set 1: Looks good to me, but someone else must approveLooks good, I like the separate file for constants."
68628,0,"Patch Set 1: No score(5 inline comments)More reviews. Some MINOR adjustments need to be made, the idea is great."
68630,0,"Patch Set 2: I would prefer that you didn't submit thisThis is coming along nicely!Some small inline comments (they are on Patch Set 1).I think we're fine with adding a dependency to EMF, but the o.e.l.tmf/feature.xml should be updated also to let Maven know of this new dependency. You can check how it's done in o.e.l.lttng2 for the RSE dependency (or we can push an update to the patch before merging it)."
68635,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completedLooks good to me."
68636,0,"Patch Set 4: Looks good to me, but someone else must approveThe patch is fine for me."
68637,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
68638,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completed"
68639,0,Change has been successfully cherry-picked as 426d6e3be569b9e9604f81b13741155622504a0f
68640,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68641,0,Change has been successfully merged into the git repository.
68644,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68645,0,Change has been successfully merged into the git repository.
68647,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis is a temporary measure to test out the reasons for our hudson build blocking on the changelog.core.tests. Locally I see this is happening in this test class."
68648,0,Change has been successfully cherry-picked as 9aa720e5d4384393e1f3e1cbe9d315a7a7942c60
68649,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68650,0,Change has been successfully merged into the git repository.
68651,0,"Patch Set 1: Looks good to me, approved; IP review completed"
68652,0,Change has been successfully merged into the git repository.
68657,0,"Patch Set 2: Verified; Looks good to me, approved"
68661,0,"Patch Set 1: Verified; Looks good to me, approved"
68665,0,Change has been successfully pushed.
68667,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
68668,0,Change has been successfully merged into the git repository.
68670,1,"Patch Set 4: Verified; Looks good to me, but someone else must approve; IP review completedI would like for someone else to also give feedback (maybe it was only me who this mistake happened to)."
68674,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completedrebased"
68675,0,Change has been successfully merged into the git repository.
68677,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
68678,0,"Patch Set 1: Looks good to me, approved"
68679,0,Change has been successfully merged into the git repository.
68686,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed"
68687,0,Change has been successfully merged into the git repository.
68689,1,"Patch Set 4:sorry, I didn't intend to rebase this change, I had based a new change on this one by mistake"
68692,1,"Patch Set 1:I don't think anything can be done about this. From what I can see, this is exactly the data that the perf tool displays. Perhaps it's a bug that may need to be filed upstream."
68694,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThanks for adding this."
68695,0,Change has been successfully cherry-picked as 6e3deb9e1873fa98986bf1567a07eea3125fff9e
68696,0,Change has been successfully cherry-picked as e9e724bf4fbe9bed16055c810eb1ad9df98fd240
68697,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68698,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68699,0,Change has been successfully merged into the git repository.
68700,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedcherry-pick from master"
68701,0,Change has been successfully merged into the git repository.
68702,0,"Patch Set 1: Looks good to me, but someone else must approve"
68703,0,"Patch Set 1: Looks good to me, approvedGood to go."
68705,0,Change has been successfully merged into the git repository.
68706,0,Change has been successfully cherry-picked as e4066ac82c2634f4bb027ea51e45e68d38292e0b
68707,0,Patch Set 1:This is a very interesting change. My only concern is the color that is chosen for the WAIT_FOR_CPU state. I will play with it a bit to try to find a suitable one. Any suggestion?
68709,1,Patch Set 2:New version:* Use the same numeral for WAIT_BLOCKED and the old WAIT state. That means anybody not rebuilding an existing state system will at least get the same colors most of the time.* Use a paler orange-ish color for the WAIT_FOR_CPU state. Suggestions still welcome.* Tweak the color of the INTERRUPTED state a bit to differentiate it better.Also reworked ControlFlowPresentationProvider so that we only need to define new states in one place.
68710,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completedLooks good, will test"
68711,0,"Patch Set 2: Verified; Looks good to me, approvedI approve this patch, works with my testing. Needs to update the documentation though."
68712,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68713,0,"Patch Set 1: Looks good to me, but someone else must approve"
68714,0,"Patch Set 1: Looks good to me, but someone else must approve"
68715,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68716,0,Change has been successfully merged into the git repository.
68718,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68720,0,Change has been successfully merged into the git repository.
68722,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedThe code is OK.  However, Reviews 8732 and 9175 will need to be merged in first before this goes in.  Also, the automated tests should pass before this is completed."
68724,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThis is now good to go"
68725,0,Change has been successfully merged into the git repository.
68726,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedApproved."
68727,0,Change has been successfully cherry-picked as da8cfaca0f55420bfdabac0c94d4295bb32abc2c
68728,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68729,0,Change has been successfully merged into the git repository.
68730,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68731,0,Change has been successfully merged into the git repository.
68735,0,Change has been successfully cherry-picked as f136ec3fba96f0bc8b3bc25a29de11a636925c42
68739,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completedGood to go now. Approved."
68742,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68743,0,Change has been successfully merged into the git repository.
68744,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68745,0,Change has been successfully merged into the git repository.
68746,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
68747,0,"Patch Set 1: Looks good to me, approved"
68752,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedrebased"
68753,0,Change has been successfully merged into the git repository.
68754,0,"Patch Set 1: Looks good to me, but someone else must approve"
68756,0,"Patch Set 2: Looks good to me, approved"
68757,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68758,0,Change has been successfully merged into the git repository.
68762,0,"Patch Set 2: Looks good to me, approved"
68763,0,"Patch Set 2: Looks good to me, approved; IP review completed"
68764,0,Change has been successfully merged into the git repository.
68765,0,Change has been successfully cherry-picked as acee0bcb320422de2c3affd2332b51e0a2e611e9
68766,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68767,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68768,0,Change has been successfully cherry-picked as dd2eac332d12648a34cd5065e661f5cf55c7a0c2
68770,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
68771,0,Change has been successfully merged into the git repository.
68772,0,"Patch Set 1: Looks good to me, but someone else must approve"
68773,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68777,0,Change has been successfully cherry-picked as 02d50db3a846d04398997195d1ecbf4abb9da900
68778,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedClearance is always good."
68783,0,"Patch Set 4: Looks good to me, but someone else must approve"
68784,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
68787,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completed"
68788,0,Change has been successfully merged into the git repository.
68791,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
68792,0,Change has been successfully merged into the git repository.
68795,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
68796,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68806,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed(7 inline comments)"
68810,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completed"
68814,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completed"
68815,0,Change has been successfully merged into the git repository.
68816,0,"Patch Set 1: Looks good to me, but someone else must approve"
68817,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68819,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68820,0,Change has been successfully merged into the git repository.
68821,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68822,0,Change has been successfully cherry-picked as 4811216ec478de5971f300483c2c2778279a0d1c
68823,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLess than 250 lines."
68824,0,Change has been successfully cherry-picked as 62fa04403152027d2bf9b88c931afcdca81a946c
68828,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completedThis change fixes running with chart locally."
68831,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completed"
68837,0,Change has been successfully cherry-picked as b0fbcace10a267333d9cfa462502a6cfe5f0a711
68844,0,"Patch Set 2: Looks good to me, approvedThanks Olav. Works perfectly."
68846,0,Change has been successfully merged into the git repository.
68847,0,Change has been successfully cherry-picked as deafbd3a0bb5125ee7cb83c25ba3be2aee202084
68848,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68850,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68851,0,Change has been successfully cherry-picked as ad4d2a269de03013ca156f19f5ad162e48625e3d
68853,0,Change has been successfully cherry-picked as 894d21f6bf7020d7e071a038fa196e0da6c74293
68856,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68857,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLicense clearings. Need to go in ASAP."
68858,0,Change has been successfully cherry-picked as 6fb6b2d7a3f116648290d9ee7e277e718ed977cd
68859,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good to me. It is a speed/space trade-off but I believe they are generally not long-lived objects."
68861,0,Change has been successfully merged into the git repository.
68862,0,Change has been successfully cherry-picked as 1b8367cafb661e0167b48299acfcd88070dce780
68863,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedNice to see things cleared up."
68864,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68865,0,Change has been successfully cherry-picked as 95f3c7e54796b1c383471f19e39060b27aa9c124
68867,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
68868,0,Change has been successfully cherry-picked as 1a17afe261fc64820c116ed4cb5e2fbba08c3207
68870,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedApproved. Comments when we ignore exceptions are always welcome though in this case it's obvious."
68873,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedApproved"
68876,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedApproved."
68877,0,Change has been successfully cherry-picked as a8033f6263727b8f9f517bc452d00364b10ce7c1
68879,0,Change has been successfully cherry-picked as 56a28106a048f119bb9e6a53289c55bd88d869ff
68881,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedApproved."
68882,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68883,0,Change has been successfully merged into the git repository.
68885,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedApproved despite the dangling whitespaces. Will block on that on smaller commits."
68886,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedTrailing whitespaces still here but not blocking this huge unification :)."
68888,0,Change has been successfully cherry-picked as 484b1fdacd1ac4f79438a7b60ba3434e803787d8
68897,0,"Patch Set 9: Verified; Looks good to me, approved; IP review completedrebased"
68898,0,Change has been successfully merged into the git repository.
68901,1,"Patch Set 1: Looks good to me, but someone else must approve; Unclean IP, do not check inPlease assert the contribution questions required for every contribution by Eclipse IP policy as a comment on this review, see http://wiki.eclipse.org/EGit/Contributor_Guide#Legal_Paperwork"
68902,0,"Patch Set 1: I would prefer that you didn't submit this(1 inline comment)- found a style nit- thanks for the hint regarding project deletion in tests, will try your solution soon"
68906,1,"Patch Set 6:Couldn't we skip reconfiguration of the window cache if the repository's .git directory isn't on the same level or underneath the project's directory ?e.g. my repository ""foo"" may contain many projects located below a common root directory: - foo     |_ .git     |_ projectA     |    |_ .project     |    |_ src     |    ...     |_ projectB          |_ .project          ...Does this case really hit your problem ? Pack files are below .git directory so they shouldn't block deletion of any of the projects.Usually my workspace contains projects from many git repositories and (if I would work on Windows) I would like to avoid that whenever any project is deleted all these repositories do reconfigureCache unnecessarily.I can't try here since I am using a Mac."
68920,1,"Patch Set 2: Looks good to me, but someone else must approve; Unclean IP, do not check inas I already mentioned in an earlier comment:we need you to assert the contribution questions required for every contribution by Eclipse IP policy as a comment on this review, see http://wiki.eclipse.org/EGit/Contributor_Guide#Legal_PaperworkFailing UI tests also fail without this change"
68922,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedApproved."
68923,0,Change has been successfully cherry-picked as c3eedaa61dc43319fe364645ccb5123b0bf18ecc
68924,0,Change has been successfully cherry-picked as ca9dc7ff23256b0e850718fe17f45e4d2dc64574
68925,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68926,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis looks fine to me."
68927,0,Change has been successfully cherry-picked as b7d155e46fbf768162222a6ec1016875cab74ead
68928,0,Change has been successfully cherry-picked as 9e6ee807a9eb89a255ac60ecfd513b5bba84fdfa
68929,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68930,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68931,0,Change has been successfully merged into the git repository.
68932,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68933,0,Change has been successfully cherry-picked as 651335cf28a5dfc2d376cee3567472e26d863e62
68934,0,Change has been successfully cherry-picked as d510bf107f406fba154f885b2841708a4b64b133
68935,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68936,0,Change has been successfully cherry-picked as ef90f4cb19a810cb6017cf00864c1f4838b415e5
68937,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
68938,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedApproved. There are some trailing whitespaces but considering the amount of the patch I would not block on that."
68939,0,Change has been successfully cherry-picked as 4b394f3866becbefb70d51ba12b56df147b40d5c
68941,0,"Patch Set 10: Verified; Looks good to me, approved; IP review completedPrevious patch set was good. Just remove the commit comment regarding 'Show In' being at the top."
68942,0,Change has been successfully merged into the git repository.
68946,1,Patch Set 5: I would prefer that you didn't submit thisIt looks like the failure in GitRepositoriesViewTest/testShowProperties is caused by the changes.For the context menu on the repository node it looks a bit ugly when 'Show In' is at the top. I think we should try to put it at the same location as it is now. I guess this can be done the way you mentioned. See also bug 388208.Otherwise the changes look OK to me.
68954,1,"Patch Set 2: Do not submitThe correct approach is to get rid of the custom 'Show In' menu at all and use the built-in support, so that we do not get different menus when using the context menu and Navigate > Show In (Alt+Shift+W).If this can't be fixed via 'plugin.xml' contribution, then we should simply contribute the menu like we do it for all the other views, i.e. in the code."
68961,1,Patch Set 4:Properties [Alt+Enter] must not be removed. This should be in all context menus as last item (currently not the case in the Repo view ==> a bug).The next patch set should also use the new helper that creates the 'Show In' menu with the key binding in the label.
68962,1,"Patch Set 4:> Properties [Alt+Enter] must not be removed. This should be in all context menus as last item (currently not the case in the Repo view ==> a bug).It's not removed, see the command item for org.eclipse.ui.file.properties. It's only available for repository nodes though. But this is a separate issue.OpenPropertiesCommand was the manual (and badly-named) implementation of Show In > Properties.> The next patch set should also use the new helper that creates the 'Show In' menu with the key binding in the label.The key binding is already shown here because we use <menu commandId=""org.eclipse.ui.navigate.showInQuickMenu"" ... Does it not show the key binding for you?"
68963,1,"Patch Set 4:Ah, yes, it is there. Sorry about that.It appears in the main menu but I don't see it in the context menu."
68965,1,"Patch Set 4:I tested it with 3.7 as a target platform, the key binding is shown in the context menu there. With 4.2 as target platform, it doesn't work. So I guess it's a bug in 4.2.I also tried egit-4.2-staging.target, but Eclipse doesn't start because org.eclipse.emf bundles are missing."
68968,0,"Patch Set 4:> Am I supposed to add a <actionProvider> to the org.eclipse.ui.navigator.navigatorContent?Yes. Note that currently the content extension does not specify an enablement and/or possible children. This needs to be added in order to to add action providers. In RepositoriesViewActionProvider.fillContextMenu(IMenuManager) you would then add the 'Show In' menu as done in the other views (using your helper) and make sure it appears at the right location. One would normally use ""group.show"" (ICommonMenuConstants.GROUP_SHOW), but the Repo view context menu is pretty messed up, so I guess this would place it somewhere at the top."
68973,0,"Patch Set 3:Ok, done. Thanks for the push in the right direction.Also see new parent commit dependency."
68981,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
68982,0,Change has been successfully merged into the git repository.
68984,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
68987,0,"Patch Set 2: Looks good to me, but someone else must approve"
68995,0,"Patch Set 5: Looks good to me, but someone else must approve"
68996,0,"Patch Set 5: Looks good to me, approved; IP review completed"
68997,0,Change has been successfully merged into the git repository.
68998,0,"Patch Set 1: Looks good to me, but someone else must approveI assert that I - have authored 100% of the content I am contributing, - have the rights to donate the content to Eclipse, - and contribute the content under the EPL."
69000,0,"Patch Set 1:we had some discussions this week about package naming conventions.We finally decided to put messages files in a package called o.e.r.internal.<plugin-id>.l10n. Example: o.e.r.internal.completion.rcp.calls.l10n.Messages.javaAnd: yes, meaningful constant names would be nice... :)"
69001,0,"Patch Set 1: Looks good to me, but someone else must approve"
69002,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69003,0,Change has been successfully merged into the git repository.
69004,0,"Patch Set 1: Looks good to me, approved"
69005,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69006,0,Change has been successfully merged into the git repository.
69007,1,"Patch Set 1: Looks good to me, approved; Unclean IP, do not check inPlease assert your rights. See http://wiki.eclipse.org/Development_Resources/Handling_Git_Contributions#Gerrit"
69008,0,"Patch Set 1: Looks good to me, but someone else must approveThanks Robin - I hope it's ok to add the rights assertion here.With respect to this submission:1. I have authored 100% of the content I'm contributing2. I have the rights to donate the content to Eclipse3. I contribute the content under the EPL"
69012,0,"Patch Set 2: Looks good to me, approved; IP review completed"
69013,0,Change has been successfully merged into the git repository.
69016,1,"Patch Set 5:removed the negative vote from hudson which could be fixed by rebasing this change, though this isn't really required as this change doesn't affect the build but only Eclipse settings."
69017,0,"Patch Set 5: Verified; Looks good to me, but someone else must approve; IP review completed"
69018,0,"Patch Set 5: Looks good to me, approved"
69019,0,Change has been successfully merged into the git repository.
69024,0,"Patch Set 4: (2 inline comments)Looks good in general, see inline comments."
69028,0,"Patch Set 1: I would prefer that you didn't submit thisWhat's wrong with org.eclipse.egit.target/ project? On of the goals of using TP is to install required bundles but without mixing them with your runtime development environment.While some features are usefull for developer (like Mylyn Reviews Connector: Gerrit), I'm not sure about org.apache.log4j and org.kohsuke.args4j - why do developer need them?"
69031,1,"Patch Set 6: Verified; Looks good to me, but someone else must approve; IP review completedThe problem with EGit and JGit being disabled because they are already installed still exists, but I think we should submit this nevertheless. I opened a bug report against Equinox for this: https://bugs.eclipse.org/bugs/show_bug.cgi?id=397923"
69032,0,"Patch Set 6: Looks good to me, approved"
69033,0,Change has been successfully merged into the git repository.
69042,1,"Patch Set 5:- added apache commons compress- removed unnecessary source features- specify exact versions for orbit bundles only, use latest for all others"
69044,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69045,0,Change has been successfully merged into the git repository.
69047,0,"Patch Set 2: Looks good to me, approved; IP review completed"
69048,0,Change has been successfully merged into the git repository.
69049,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69050,0,Change has been successfully merged into the git repository.
69051,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69052,0,Change has been successfully merged into the git repository.
69053,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completed"
69054,0,Change has been successfully merged into the git repository.
69067,0,"Patch Set 6: Looks good to me, but someone else must approveThanks Robin. What else is necessary to merge this one?"
69068,0,"Patch Set 6:It would be good if Dariusz could have a look, the original code is from him. I added him as a reviewer."
69074,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69075,0,Change has been successfully merged into the git repository.
69078,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69082,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69085,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
69086,0,Change has been successfully merged into the git repository.
69087,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
69088,0,Change has been successfully merged into the git repository.
69090,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69096,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedApproved."
69098,0,Change has been successfully cherry-picked as 2ea705eda80f298b51672702dbb33640a2d04648
69099,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69100,0,Change has been successfully merged into the git repository.
69101,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69102,0,Change has been successfully merged into the git repository.
69104,1,"Patch Set 1: Looks good to me, but someone else must approveGreat that you have found out how to cancel moves. That's the way we should handle moves on unmerged pathes. I don't know much about the Eclipse API, so I can only give +1."
69105,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69110,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedRebased and reordered commits so we can submit this while the bigger change is still in review."
69111,0,Change has been successfully merged into the git repository.
69113,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
69114,0,"Patch Set 1: Looks good to me, but someone else must approve"
69115,0,Change has been successfully cherry-picked as 98c78de7c04128aa40c3297b95812afd4c559dd2
69116,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69122,0,"Patch Set 5: Looks good to me, approved; IP review completed"
69128,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completed"
69129,0,Change has been successfully merged into the git repository.
69131,0,Change has been successfully cherry-picked as 5bf898df4587cb5dcb2f2d924c61f68dc071375b
69133,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThis looks fine to me, all tests pass locally."
69134,0,Change has been successfully cherry-picked as c3896d90b78cf4c44c682ccd7fd14993228531f6
69140,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
69143,0,"Patch Set 6: Looks good to me, but someone else must approveThis is good to me."
69145,0,"Patch Set 6: Looks good to me, approved; IP review completedMerging under the Tasktop member agreement."
69146,0,Change has been successfully merged into the git repository.
69149,1,"Patch Set 5: Looks good to me, but someone else must approve(1 inline comment)Miles, I think this needs to be rebased against the latest master.One minor thing inline."
69151,1,Patch Set 4:Got rid of a bunch of extraneous diffs here!
69152,1,Patch Set 4: I would prefer that you didn't submit this(2 inline comments)This looks good. One thing that I'm still confused about is the contract for getAllComments(). It appears to return all topics but not the transitive closure of contained comments (i.e. replies are missing). Would it make sense to rename the method to getAllTopics() and change the signature?
69157,0,"Patch Set 4: Looks good to me, but someone else must approveThis is now ok for me.  I have no other comments"
69158,0,"Patch Set 4: Looks good to me, but someone else must approve"
69160,1,"Patch Set 4: (1 inline comment)Hi Steffen, see inline, but I don't think there is an actual problem here..?"
69162,0,Patch Set 1: I would prefer that you didn't submit this(14 inline comments)This looks very good. I have a few comments in line and would like to discuss the design of ITopic/IComment on bug 394925 before we proceed (and the build needs to pass).
69168,0,Patch Set 8: (1 inline comment)Looks much better.  Fix minor comments and it should be good to go.
69170,0,Change has been successfully cherry-picked as a3d7513a987ab6bd6fe2d81c33581b4ee45ac10b
69177,0,"Patch Set 7: Looks good to me, but someone else must approveOk for me. Waiting for Akurtakov or Jeff to push it."
69180,0,"Patch Set 9: Verified; Looks good to me, but someone else must approve; IP review completed"
69181,0,"Patch Set 9: Verified; Looks good to me, approved; IP review completed"
69184,0,"Patch Set 1: I would prefer that you didn't submit this(1 inline comment)The patch looks nice for me. There is only a indentation error in RDTFileProxy.After fixing that, let's wait Jeff to review it, before pushing."
69185,0,Change has been successfully cherry-picked as 231f3162395e644d188c882dd757e40756b9ae5c
69186,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69187,0,Change has been successfully cherry-picked as aac0c72b7b39b3be9629866432e30b8d7a2719e6
69190,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69192,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThis looks fine tome, it correctly displays errors in an error dialog preventing them form being sent to stderr."
69194,0,Change has been successfully cherry-picked as de04b7a18a291782a01a02f6d82b3846effe7446
69195,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69196,0,Change has been successfully cherry-picked as a301fbf607e06b464d4f9e90395172fd21c0c020
69197,0,Change has been successfully cherry-picked as baeac15c78aad3ad761de38dc08b9c19713b80fc
69198,1,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completedVery nice improvement, it stop getting stuck all the time when scrolling up.It exposes an annoying behavior of the Control Flow view too ;) When holding PageUp/PageDown (or arrow up/down), the CFV will try to resolve every single event that gets selected, even after it stop being the selected event."
69199,0,"Patch Set 1: Looks good to me, approved"
69200,0,Change has been successfully cherry-picked as 2ebc0b84fd830f26fa26c0c039e392dda5af694c
69201,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedPrivate probes do not appear in auto-completion proposals."
69202,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69203,0,Change has been successfully merged into the git repository.
69204,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69205,0,Change has been successfully merged into the git repository.
69206,0,Change has been successfully cherry-picked as 51e10679800932cfaaf435f5af830d5b61d9378e
69207,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69208,0,Change has been successfully cherry-picked as 84c076ae460f0cb442d7c6105a1aa9828188789d
69210,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
69214,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69215,0,Change has been successfully cherry-picked as dcae834c8bfd1ed926de18f5f90ff8bd145c2d84
69216,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69217,0,Change has been successfully merged into the git repository.
69218,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69219,0,Change has been successfully merged into the git repository.
69220,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69221,0,Change has been successfully merged into the git repository.
69222,0,Change has been successfully cherry-picked as cf0bf70a75af3e7a2aefaf1cf69c3061849ca808
69224,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedFunctions correctly appear in auto-completion proposals. Existing and new tests pass locally."
69225,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed(1 inline comment)Gogoog"
69226,0,"Patch Set 1: Looks good to me, but someone else must approve"
69227,0,Change has been successfully cherry-picked as e4b6cf5dc0d91231d014296ca0b5ca070348ce39
69228,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69229,0,Change has been successfully merged into the git repository.
69230,0,Change has been successfully cherry-picked as 843c25c84fe3002dc527ef517e456d3f8011c100
69231,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69232,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69233,0,Change has been successfully merged into the git repository.
69236,0,"Patch Set 2: Looks good to me, but someone else must approve"
69238,0,"Patch Set 3: Looks good to me, approved; IP review completed"
69239,0,Change has been successfully merged into the git repository.
69244,0,"Patch Set 3: Looks good to me, approved; IP review completed"
69245,0,Change has been successfully merged into the git repository.
69249,1,"Patch Set 3:Yep, both of those changes are later in the series --- see Ieb07702da1a54b41ae764fbb425f70826907b593 and Ica2568f4a0e443bf4b955ef0c029bc8eec62d369. Sorry for the lack of clarity."
69250,0,"Patch Set 3: Looks good to me, approved; IP review completed"
69251,0,Change has been successfully merged into the git repository.
69255,0,"Patch Set 2: (1 inline comment)Thanks. A few other changes since v2: * small typofixes in change descriptions * remembered to actually list the packages being used in org.eclipse.jgit.pgm/META-INF/MANIFEST.MF (can this check be automated when testing with Maven?) * style fixes suggested in your reviewThoughts of all kinds welcome, as always."
69257,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69260,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
69261,0,Change has been successfully merged into the git repository.
69263,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedrebased"
69264,0,Change has been successfully merged into the git repository.
69268,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69269,0,Change has been successfully merged into the git repository.
69271,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69272,0,Change has been successfully merged into the git repository.
69273,0,"Patch Set 1: Looks good to me, but someone else must approve"
69274,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69277,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69278,0,Change has been successfully merged into the git repository.
69286,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completedadded assertions for unfiltered resources"
69290,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed"
69291,0,Change has been successfully merged into the git repository.
69293,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
69294,0,Change has been successfully merged into the git repository.
69299,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
69301,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
69302,0,Patch Set 1: I would prefer that you didn't submit this(4 inline comments)Please review comments. Thanks
69304,0,"Patch Set 5: Looks good to me, but someone else must approve; IP review completed"
69305,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed"
69306,0,Change has been successfully merged into the git repository.
69309,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedrebased"
69310,0,Change has been successfully merged into the git repository.
69316,0,"Patch Set 4: Looks good to me, approved"
69322,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed"
69323,0,Change has been successfully merged into the git repository.
69326,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
69327,0,Change has been successfully merged into the git repository.
69328,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69329,0,Change has been successfully merged into the git repository.
69332,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69333,0,Change has been successfully merged into the git repository.
69334,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69335,0,Change has been successfully merged into the git repository.
69336,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69337,0,Change has been successfully cherry-picked as 425a5378c2c00e2ee58b86d97b28d81738f61530
69338,0,Patch Set 1:Looks good to me... Thanks for the patch!
69339,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69342,0,Change has been successfully cherry-picked as b578e035b47bdba3d52a15dffebe95968fd8826e
69343,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69344,0,Change has been successfully cherry-picked as a1445e7d2d8d58199c7ea10333623ca5d92b674b
69346,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69348,0,Change has been successfully cherry-picked as cd39b3018f42b1e2f84562437f60c0ea6f36eb5a
69349,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69350,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69351,0,Change has been successfully merged into the git repository.
69353,0,Change has been successfully pushed into branch orcs_search.
69354,0,Patch Set 2:Looks fine.
69355,0,Change has been successfully cherry-picked as 8f227d7a4c1d3fcdce6c9aa1373e24833f50d556
69356,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69357,0,Change has been successfully cherry-picked as 23bffbb0fc6e7051246e6d1f161f3d4f7b2f081c
69358,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69359,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69360,0,Change has been successfully cherry-picked as 99a69f71ba109a2f279f4aac59ddd8f80fe260b3
69361,0,"Patch Set 1:All new tests pass. However, testing auto-completion manually, it appears that the completion data is incomplete in regards with what is available in static_prope_list.properties. For example, there is no ""process.thread"", ""process(""PATH"").thread"", ""process(PID).thread"" completion proposals when using the prefixes ""process."", ""process(""PATH"")."", ""process(PID)."" respectively."
69362,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedStatic probes are correctly shown in auto-completion proposals. All tests pass locally."
69364,1,Patch Set 2:The issues mentioned were caused by a problem in the parse and cleanUp functions . I have fixed those in a patch that is now a parent of this one.
69366,0,Change has been successfully cherry-picked as 83b2a6a30085861d51a4f8a534f293c1b40dfd31
69367,0,Change has been successfully pushed.
69368,0,Change has been successfully pushed.
69369,0,Change has been successfully pushed.
69370,0,Change has been successfully pushed.
69371,0,Change has been successfully pushed.
69372,0,Change has been successfully pushed.
69373,0,Change has been successfully pushed.
69374,0,Change has been successfully pushed.
69375,0,Change has been successfully pushed.
69376,0,Change has been successfully pushed.
69377,0,Change has been successfully pushed.
69378,0,Change has been successfully pushed.
69379,0,Change has been successfully pushed.
69380,0,Change has been successfully pushed.
69381,0,Change has been successfully pushed.
69382,0,Change has been successfully pushed.
69383,0,Change has been successfully pushed.
69384,0,Change has been successfully pushed.
69385,0,Change has been successfully pushed.
69386,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69387,0,Change has been successfully merged into the git repository.
69388,0,Change has been successfully cherry-picked as 27e31de424bb6ff38188bee8af5dfa8d60ff2b67
69389,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69393,1,"Patch Set 2: Looks good to me, approved; Unclean IP, do not check inCQ 6933 filed to request ""works with"" use of commons-compress in JGit."
69396,0,Change has been successfully merged into the git repository.
69397,0,Change has been successfully cherry-picked as e900b94beeabc0111d6f49861fac8148fc6f3551
69398,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis fixes the incomplete auto-completion proposals issue mentioned in https://git.eclipse.org/r/#/c/8869/ for non-static probes."
69399,0,Change has been successfully cherry-picked as b89e231b88c340dc96babd918e2a986ad9ecdedb
69400,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis action is not used anymore."
69403,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69404,0,Change has been successfully merged into the git repository.
69410,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedNice change, thanks!"
69411,0,Change has been successfully merged into the git repository.
69420,0,Change has been successfully cherry-picked as 7c337442e9380afb170d067508dbfa698443e36e
69422,0,"Patch Set 9: Verified; Looks good to me, approved; IP review completed"
69426,0,"Patch Set 6: Looks good to me, approved; IP review completed"
69428,1,"Patch Set 6: FailsThe mediawiki file was updated, but the committed html files were not re-generated. Yeah, it's a pain..."
69431,0,Change has been successfully cherry-picked as bf5ddb628595280f13ac4f05e0122ac7f2ea0b5d
69432,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69433,0,Change has been successfully cherry-picked as b89d98b6fe38fb1b881d4a4ad224a9ba712298ff
69434,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69435,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
69436,0,"Patch Set 1: Looks good to me, approved"
69437,0,Change has been successfully cherry-picked as 6c86b3837f380ee69cec132485809df60d516cdd
69438,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69439,0,Change has been successfully merged into the git repository.
69440,0,Change has been successfully cherry-picked as b6cb8c39b4facd2c1fee2945385d9ddf826b49bb
69441,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69442,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completedFixes the ""jittering"" of timestamps when applying a filter in the events view.Could each method have its own lock, instead of locking the whole object?"
69443,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedDocs is good"
69444,0,Change has been successfully merged into the git repository.
69446,0,"Patch Set 2: Looks good to me, approved; IP review completed"
69447,0,Change has been successfully pushed into branch orcs_search.
69448,0,"Patch Set 1: Looks good to me, but someone else must approve"
69449,0,"Patch Set 1: Looks good to me, but someone else must approve"
69451,0,"Patch Set 2: Looks good to me, approved; IP review completed"
69452,0,Change has been successfully pushed into branch orcs_search.
69453,0,"Patch Set 1: Looks good to me, but someone else must approve"
69454,0,"Patch Set 1: Looks good to me, but someone else must approve"
69456,0,Change has been successfully pushed into branch orcs_search.
69457,0,"Patch Set 1: Looks good to me, but someone else must approve(16 inline comments)"
69460,0,Change has been successfully pushed into branch orcs_search.
69461,0,"Patch Set 1: Looks good to me, but someone else must approve(1 inline comment)"
69463,0,Change has been successfully pushed into branch orcs_search.
69465,0,Change has been successfully pushed into branch orcs_search.
69467,0,Change has been successfully pushed into branch orcs_search.
69469,0,Change has been successfully pushed into branch orcs_search.
69471,0,Change has been successfully pushed into branch orcs_search.
69473,0,Change has been successfully pushed into branch orcs_search.
69475,0,Change has been successfully pushed into branch orcs_search.
69477,0,Change has been successfully pushed into branch orcs_search.
69479,0,Change has been successfully pushed into branch orcs_search.
69481,0,Change has been successfully pushed into branch orcs_search.
69483,0,Change has been successfully pushed into branch orcs_search.
69485,0,Change has been successfully pushed into branch orcs_search.
69487,0,Change has been successfully pushed into branch orcs_search.
69489,0,Change has been successfully pushed into branch orcs_search.
69491,0,Change has been successfully pushed into branch orcs_search.
69493,0,Change has been successfully pushed into branch orcs_search.
69495,0,Change has been successfully pushed into branch orcs_search.
69496,0,"Patch Set 1: Looks good to me, but someone else must approve"
69498,0,Change has been successfully pushed into branch orcs_search.
69499,0,"Patch Set 1: Looks good to me, but someone else must approve"
69501,0,Change has been successfully pushed into branch orcs_search.
69502,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
69503,0,"Patch Set 1: Looks good to me, but someone else must approve"
69505,0,Change has been successfully pushed into branch orcs_search.
69506,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
69507,0,"Patch Set 1: Looks good to me, but someone else must approve"
69508,0,"Patch Set 1: Looks good to me, but someone else must approve"
69510,0,"Patch Set 2: Looks good to me, approved; IP review completed"
69511,0,Change has been successfully merged into the git repository.
69515,0,"Patch Set 2: Looks good to me, approved; IP review completed"
69517,0,Change has been successfully merged into the git repository.
69519,0,"Patch Set 4: Verified; Looks good to me, but someone else must approve; IP review completed"
69521,0,"Patch Set 4: Verified; Looks good to me, approvedThe checkStartTime() and checkEndTime() parts may have to be tweaked a bit (to also check if the time scales match), but this will be done in a future change."
69522,0,Change has been successfully cherry-picked
69526,0,"Patch Set 3: Verified; Looks good to me, but someone else must approve; IP review completed"
69529,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69530,0,Change has been successfully merged into the git repository.
69531,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69532,0,Change has been successfully merged into the git repository.
69533,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69534,0,Change has been successfully merged into the git repository.
69536,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69537,0,Change has been successfully cherry-picked
69538,0,"Patch Set 1: I would prefer that you didn't submit this; Unclean IP, do not check in(2 inline comments)Nice fix.  Thanks Mark.  I particularly like the reading of stderror.  Please see a couple of things to fix and we're good to go."
69539,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69540,0,Change has been successfully merged into the git repository.
69541,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69542,0,Change has been successfully merged into the git repository.
69544,1,"}I'm not following what the problem is with members, it just passes on its own commitId to its children."""
69548,1,"Patch Set 2: Verified; Looks good to me, approved; IP review completedMoved the field into the method so that we only need to check the commitId in there and when actually needed.Submitting to avoid further test failures and NPEs in the next EGit build."
69549,0,Change has been successfully merged into the git repository.
69550,1,Patch Set 2:You were faster :). authorIdent was a field because the Javadoc mentions that computing it is expensive and I don't know how many times getContentIdentifier is called. But it's probably ok.
69552,1,"Patch Set 1: Looks good to me, but someone else must approveThis helps in being able to regression test the base functionality of the ResolveMerger when the RecursiveMerger instance is used."
69553,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis is a simple change, +1"
69554,0,Change has been successfully merged into the git repository.
69555,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69556,0,Change has been successfully cherry-picked
69557,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69558,0,Change has been successfully cherry-picked
69560,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThe start.getValue() part should normalize the timestamp to nanoseconds, but this will be fixed in the next version of https://git.eclipse.org/r/#/c/8376/ (where we will change both at the same time)."
69561,0,Change has been successfully cherry-picked
69563,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69564,0,Change has been successfully cherry-picked
69566,0,"Patch Set 2: IP review completed(3 inline comments)Looks good, a very welcome change! Some small comments in the code, and some comments about the preference dialog:- The OK button doesn't implicitly click Apply (it does the same as cancel).- Wouldn't a drop-down list for each category be better? There are so many radio buttons, the whole thing looks like a checkers game ;)- I think the default sub-second delimiter should be none (or maybe space). Underline is a bit unexpected."
69568,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69569,0,Change has been successfully cherry-picked
69571,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69572,0,Change has been successfully cherry-picked
69573,0,"Patch Set 1: (1 inline comment)Everything looks good, just a small comment regarding a possibly auto-generated tag in the overview page."
69574,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69575,0,Change has been successfully merged into the git repository.
69577,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69578,0,Change has been successfully cherry-picked
69579,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThe code looks safe. I wasn't sure about the hard-coded timeout value but in this case it is possible to override this method."
69580,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69581,0,Change has been successfully cherry-picked
69582,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedI can confirm this commit seems to be causing the issue."
69583,0,Change has been successfully cherry-picked
69584,0,"Patch Set 1: Looks good to me, but someone else must approve1. I have authored 100% of the content I'm contributing2. I have the rights to donate the content to Eclipse3. I contribute the content under the EPL"
69585,0,"Patch Set 1:I think there is a difference between provisional and ""experimental"". Provisional means that this code is likely to become part of the api later. Experimental means that this code is a first try to see how an idea works out and that this code is by no means finished nor production ready. However, these annotations serve more as a reminder than anything else. Thus, I'd be fine to remove clumsy and experimental.@Provisional should only be used for types that reside outside an o.e.r.internal.* package"
69588,0,"Patch Set 3: Looks good to me, but someone else must approvePatch set 2 contained a mistake/doesn't compile. Patch set 3 should work just fine, though."
69589,0,"Patch Set 3: Looks good to me, approved; IP review completed"
69590,0,Change has been successfully merged into the git repository.
69593,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedFix looks good. Only adjusted the copyright date."
69594,0,Change has been successfully merged into the git repository.
69596,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good, verified. Tests failures are not related."
69597,0,Change has been successfully merged into the git repository.
69599,0,"Patch Set 1: Looks good to me, but someone else must approve"
69600,0,"Patch Set 1: Looks good to me, but someone else must approve@Marcel: Why no +2?"
69601,0,"Patch Set 1: Looks good to me, but someone else must approve"
69602,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69605,0,"Patch Set 2: Looks good to me, approved; IP review completed"
69608,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
69609,0,Change has been successfully merged into the git repository.
69613,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed(1 inline comment)"
69617,0,"Patch Set 3: Looks good to me, but someone else must approve"
69618,0,"Patch Set 3: Looks good to me, approved; IP review completed"
69619,0,Change has been successfully merged into the git repository.
69621,0,"Patch Set 2: Looks good to me, but someone else must approveResubmitted to make the CI server happy. Otherwise unchanged."
69622,0,"Patch Set 2: Looks good to me, approved; IP review completed"
69623,0,Change has been successfully merged into the git repository.
69628,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69629,0,Change has been successfully merged into the git repository.
69630,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69631,0,Change has been successfully merged into the git repository.
69632,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69633,0,Change has been successfully merged into the git repository.
69634,0,"Patch Set 1: Looks good to me, but someone else must approve(4 inline comments)1. I have authored 100% of the content I'm contributing2. I have the rights to donate the content to Eclipse3. I contribute the content under the EPL"
69635,0,Patch Set 1: (4 inline comments)Some follow up comments/questions :)
69639,0,"Patch Set 2: Looks good to me, but someone else must approveAddressed Marcel's comments."
69640,0,"Patch Set 2: Looks good to me, approved; IP review completed"
69641,0,Change has been successfully merged into the git repository.
69642,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69643,0,Change has been successfully merged into the git repository.
69646,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completedRebased again."
69647,0,Change has been successfully merged into the git repository.
69649,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed"
69656,0,"Patch Set 1: Verified; Looks good to me, but someone else must approveThis review was created to continue with review https://git.eclipse.org/r/#/c/6038"
69657,0,Patch Set 1: I would prefer that you didn't submit this(4 inline comments)This looks like a great start. There is still some work to be done to make it backwards compatible.
69660,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedShould I commit this?"
69663,0,"Patch Set 3: Verified; Looks good to me, but someone else must approveThe two minor nits from patch set 2 are now  included."
69664,0,"Patch Set 3: Looks good to me, approved; IP review completed"
69667,0,Patch Set 2: I would prefer that you didn't submit this(2 inline comments)Looks good. Just two minor nits.
69668,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve"
69671,0,"Patch Set 4: Looks good to me, approved; IP review completed"
69672,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
69673,0,Change has been successfully merged into the git repository.
69675,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69676,0,Change has been successfully merged into the git repository.
69680,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
69681,0,Change has been successfully cherry-picked
69683,0,"Patch Set 1: I would prefer that you didn't submit thisThe change looks good. My only comments, other than the inline comments provided, are to move the profiling properties page under the ""C/C++ General"" properties page, and to rename the parent properties page to ""Profiling Categories"". This is to show that our profiling tools are for C/C++ exclusively and to differentiate our profiling framework from other future profiling contributions."
69685,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
69692,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedApproved."
69693,0,Change has been successfully cherry-picked
69695,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedApproved."
69696,0,Change has been successfully cherry-picked
69707,0,"Patch Set 9: Verified; Looks good to me, approved; IP review completedApproved."
69708,0,Change has been successfully cherry-picked
69710,0,"Patch Set 9: Verified; Looks good to me, approved; IP review completedLooks good. APPROVED."
69711,0,Change has been successfully cherry-picked
69720,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69721,0,Change has been successfully cherry-picked
69733,0,"Patch Set 8: Verified; Looks good to me, approved; IP review completed"
69735,0,Change has been successfully cherry-picked
69737,1,"Patch Set 3: I would prefer that you didn't submit thisThe o.e.l.profiling.provider plug-in depends on functionality provided by o.e.l.profiling.launch to access launch provider extensions points. However, this functionality is redundant in the case where the provider plug-in is unavailable. Taking the functionality of the provider plug-in, and moving it to o.e.l.profiling.launch, would remove this dependency and save the time for creating a separate feature when we are ready to ship."
69739,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69740,0,Change has been successfully merged into the git repository.
69742,0,"Patch Set 2: Looks good to me, approved; IP review completed"
69743,0,Change has been successfully merged into the git repository.
69748,0,"Patch Set 9: Looks good to me, but someone else must approve"
69749,0,"Patch Set 9: (4 inline comments)Looks mostly good, but didn't have time to toy around with it yet."
69752,0,"Patch Set 5:Another -1: I am unable to drag an item downward such that it becomes the last item. (Dragging the same item upward such that it becomes the first item works fine, though.)"
69754,0,"Patch Set 1: Looks good to me, but someone else must approveI assert that I- have authored 100% of the content I am contributing,- have the rights to donate the content to Eclipse,- and contribute the content under the EPL.Storing the ExtdocProvider order in preference store will be added next."
69755,0,"Patch Set 1: Looks good to me, but someone else must approve"
69756,0,"Patch Set 1: Looks good to me, but someone else must approvepair programmed"
69758,0,"Patch Set 1:One further comment: It would be great if you could add some tests (possibly in a separate commit); there are at least three interesting cases to test: drag to an earlier position in the list, a later position, or dragging an element onto itself."
69763,0,"Patch Set 11: Looks good to me, but someone else must approve"
69764,0,"Patch Set 11: Looks good to me, but someone else must approve"
69769,0,"Patch Set 12: Looks good to me, but someone else must approve"
69770,0,"Patch Set 12: Looks good to me, approved; IP review completed"
69771,0,Change has been successfully merged into the git repository.
69773,0,"Patch Set 8: Looks good to me, but someone else must approveTest are comming soon...."
69778,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69779,0,Change has been successfully merged into the git repository.
69780,0,"Patch Set 1:By the way, does anyone know why CompareTreeView#reactOnOpen doesn't use the following on line 243?:    left = SaveableCompareEditorInput.createFileElement(res);"
69781,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69782,0,Change has been successfully merged into the git repository.
69783,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69787,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69788,0,Change has been successfully merged into the git repository.
69790,1,"Patch Set 2: Verified; Looks good to me, approved; IP review completedAdded reference to existing bug 376241."
69791,0,Change has been successfully merged into the git repository.
69794,0,Patch Set 3: I would prefer that you didn't submit this(2 inline comments)I'd prefer to leave buttons in the toolbar since this looks nicer and the text field for writing the commit message can be larger which is useful when writing larger commit messages.
69799,1,Patch Set 6:Matthias: Traversal works here (Linux). Does it work in other dialogs? Are you on Mac OS X? Maybe the following default setting is the problem: http://www.danielschneller.com/2009/01/mac-os-x-full-keyboard-control.html
69802,0,"Patch Set 2: (6 inline comments)Looks good generally, see inline comments."
69807,0,"Patch Set 7: Looks good to me, approved; IP review completedthanks for the hint Robin, you are right"
69808,0,Change has been successfully merged into the git repository.
69813,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69814,0,Change has been successfully merged into the git repository.
69815,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedWorks fine."
69818,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69819,0,Change has been successfully cherry-picked
69822,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
69823,0,Change has been successfully cherry-picked
69825,1,"Patch Set 3:I find the framing of the tool descriptions very distracting and it isn't done elsewhere in other UI pages.  I suggest just using [] around them as you did before.The tool-tips are now actually special notes to the user and IMO should start with ""Note:"". The perf tool tip doesn't provide anything meaningful since all tools require installation.  I would prefer you say: ""Note: does not require set-up or special compilation"" which explains why we chose it as the default.Instead of ""Cache Using"" for cachegrind which is very awkward I would suggest: ""Cache Usage"" or ""Cache Reporting"".For Callgraph, say: ""Note: requires SystemTap to obtain data"" or something to that effect rather than talking about the SystemTap language.For the ones requiring compilation, I'm not sure whether to include the C/C++ qualifier or not.  They will require rewording if specifying a note: for example, gprof could be worded as:  ""Note: requires compilation of at least one C/C++ source file using ""-pg"" option."" possibly leaving out the C/C++ part which is implied by our tools (see next paragraph).This brings up an interesting issue.  Since our tools only support C/C++, should the Profiling preferences and Properties be under the C/C++ Preferences and Properties.  This should not be solved in this patch and would require a separate RFE or bug.For now, I would suggest adding something to the top Profiling page, which currently doesn't have anything on it, to indicate that the preferences are for tools using the Linux Tools profiling framework for C/C++ projects.  This will at least prevent any confusion.The Restore Defaults buttons on all the pages do not operate properly as they set the default to be the first item in any radio group.  It should restore the preferred provider.  If this is due to this change, fix it, otherwise, open a separate bug and fix this in a separate patch."
69829,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedSelf-reviewing due to lack of reviewers today."
69830,0,Change has been successfully cherry-picked
69831,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedSelf-verifying due to nobody to review it.  UI is restored to old behaviour which has Prepare ChangeLog added to Project menu.  Virtual folders in C such as Binaries and Includes don't enable the menu-item because they return null when adapting to IResource and hence we cannot find whether the project properties include team support.  This might be possible with some special propertyTester which looks up the tree, but this would have to be done using reflection to avoid pulling in a CDT requirement."
69832,0,Change has been successfully cherry-picked
69833,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69834,0,Change has been successfully merged into the git repository.
69836,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69838,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedThis new version is simply to rebase to the updated dependencies.  I simply cherry-picked the commit without any modification.It was already reviewed by Mikhail."
69839,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedI have tried it with thread specific breakpoints, works fine."
69840,0,Change has been successfully cherry-picked
69841,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completed(1 inline comment)The patch looks good. My only comment is about the wording of an error message."
69845,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
69846,0,Change has been successfully cherry-picked
69847,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed(1 inline comment)Looks good. I didn't look at the help changes though."
69848,0,Patch Set 1: (1 inline comment)Thanks for the review. I'll wait until all related reviews are approved before committing.
69849,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69850,0,Change has been successfully cherry-picked
69853,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedWaiting for other reviews before committing."
69854,0,Change has been successfully cherry-picked
69856,0,"Patch Set 3: Looks good to me, approved; IP review completed"
69857,0,Change has been successfully merged into the git repository.
69858,1,Patch Set 1:According to:http://help.eclipse.org/juno/topic/org.eclipse.jdt.doc.user/gettingStarted/qs-with-java7.htm?cp=1_1_3The warning is disabled by default. Is this not the case? Maybe a better option would be to disable it in the project preferences instead of suppressing it everywhere.
69859,1,"Patch Set 1:The idea is to disable it where we are comfortable that it not a problem, leaving room for new warnings in new code."
69864,1,"Patch Set 1:We can, for test projects,1) silence the warnings for specific instances as the close is not needed because there are no external resources involved.2) add a close without regard to best practice regarding close.3) wrap the result of the constructor with a dummy method which effectively disables the warning. 4) disable the warning in project settings"
69867,0,"Patch Set 2: Looks good to me, but someone else must approve"
69868,0,"Patch Set 2: Looks good to me, approved; IP review completed"
69872,0,"Patch Set 1: (2 inline comments)Thanks, addressed in patch set 2."
69874,0,"Patch Set 2: Looks good to me, approved; IP review completed"
69875,0,Change has been successfully merged into the git repository.
69877,0,"Patch Set 6: Looks good to me, approved; IP review completed"
69880,0,"Patch Set 5: Looks good to me, approved; IP review completed"
69884,0,"Patch Set 7: Looks good to me, approved; IP review completed"
69885,0,Change has been successfully merged into the git repository.
69891,0,"Patch Set 2: Looks good to me, approvedLooks right to me. :-)"
69893,0,Change has been successfully merged into the git repository.
69895,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedThis looks fine to me."
69896,0,Change has been successfully cherry-picked
69898,0,"Patch Set 2:This looks fine to me, but it would be nice to also add the images for the launch configuration types so that they show up in the profile configurations view."
69900,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69901,0,Change has been successfully merged into the git repository.
69904,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
69905,0,"Patch Set 2: Looks good to me, approved"
69906,0,Change has been successfully merged into the git repository.
69907,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
69910,0,"Patch Set 2: Looks good to me, approved; IP review completedThanks! The contribution is covered under the Tasktop member agreement."
69911,0,Change has been successfully merged into the git repository.
69912,1,"Patch Set 1:Okay, this one is a unified commit for all of those insane commits motivated by the 250-line commit limit. I've addressed all of the concerns on those."
69918,1,"Patch Set 1:Any thoughts on whether we should have an explicit unset() method? As I mentioned in task, this would simply shadow clearValues() which is potentially confusing, but OTOH it would be nice to have a parallel method. One other possibility could be to deprecate clearValues() and replace w/ either unset() or clear(), but that's prob. not worth the disruption it would cause."
69926,0,"Patch Set 3:Okay, I'm happy with it now. :)"
69927,0,"Patch Set 3: Looks good to me, approved; IP review completed"
69929,1,Patch Set 3: VerifiedThe test failure is unrelated.
69930,1,Patch Set 3:Err.. I don't think changing the comments caused build instability. :) Can we rerun tests without a new commit?
69931,0,Change has been successfully merged into the git repository.
69933,0,"Patch Set 2: Looks good to me, approved; IP review completed(1 inline comment)Looks great! In terms of IP the contribution is covered under Tasktop's member agreement. Should I go ahead and submit it?"
69934,0,Patch Set 2: (1 inline comment)Please :D
69935,1,Patch Set 2: I would prefer that you didn't submit thisActually darn it. Don't. Notcied a mistake in javadoc and want to clean up the other thing.
69937,0,"Patch Set 2: Looks good to me, approved"
69938,0,"Patch Set 2: Verified; Looks good to me, approved"
69940,0,Change has been successfully merged into the git repository.
69943,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
69944,0,Change has been successfully cherry-picked
69949,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis looks fine to me."
69950,0,Change has been successfully cherry-picked
69951,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69952,0,Change has been successfully merged into the git repository.
69955,0,"Patch Set 8: Verified; Looks good to me, approved; IP review completedAPPROVED."
69956,0,Change has been successfully cherry-picked
69968,0,"Patch Set 8: Verified; Looks good to me, approved; IP review completedLooks good now. APPROVED."
69969,0,Change has been successfully cherry-picked
69975,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
69976,0,Change has been successfully merged into the git repository.
69977,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69978,0,Change has been successfully merged into the git repository.
69979,0,"Patch Set 1: Looks good to me, approvedMake sense to me.I didn't actually try it though."
69980,0,"Patch Set 1:Marc, could you please review this patch? The affected code is in DSF but I don't really know who else is interested in it. Maybe Randy?The fix is simple. The memory view tracks the content of the memory blocks by setting the 'HISTORY_KNOWN' flag for each byte. For some reason 'dsfMemoryBlock' sets the flag only is the byte value has changed. If the unit size is greater than 1 and only one byte in the unit has changed the remaining bytes in the unit don't have the 'HISTORY_KNOWN' flag set. As a result the entire unit is not regarded as being tracked."
69981,1,Patch Set 1:> The memory view tracks the content of the memory blocks by> setting the 'HISTORY_KNOWN' flag for each byte. For some> reason 'dsfMemoryBlock' sets the flag only is the byte > value has changed. If the unit size is greater than 1 and > only one byte in the unit has changed the remaining bytes > in the unit don't have the 'HISTORY_KNOWN' flag set. As a > result the entire unit is not regarded as being tracked.Looks to me like DSF should have set the HistoryKnown flag all the time from the start.I wonder why this problem was not visible before?
69982,1,"Patch Set 1:> Looks to me like DSF should have set the HistoryKnown flag all the time from the start.I agree, all bytes read from the backend that are not '??' should set the 'HISTORY_KNOWN' flag.> I wonder why this problem was not visible before?The code has been basically the same since the DSF plugins were moved to CDT. The only explanation is the most of the DSF clients use the traditional memory rendering with the memory view."
69984,0,Change has been successfully cherry-picked
69985,0,"Patch Set 1: Looks good to me, approved; IP review completed"
69986,0,Change has been successfully merged into the git repository.
69987,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
69988,0,Change has been successfully merged into the git repository.
69990,0,"Patch Set 3: Verified; Looks good to me, but someone else must approve; IP review completedRebased again."
69992,1,"Patch Set 5: Verified; Looks good to me, approved; IP review completedlinked second bug which is fixed as an effect of moving the useful behavior of getting the commit that last modified the file to getHeadTypedElement method"
69993,0,Change has been successfully merged into the git repository.
69997,0,"Patch Set 4: Verified; Looks good to me, but someone else must approveRebased (no conflicts)."
70000,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedRebased"
70001,0,Change has been successfully merged into the git repository.
70002,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good"
70004,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70005,0,Change has been successfully cherry-picked
70006,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThat's how it should have been from the beginning. :)"
70007,0,Change has been successfully cherry-picked
70008,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
70009,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis looks fine to me."
70010,0,Change has been successfully cherry-picked
70011,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70012,0,Change has been successfully merged into the git repository.
70014,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70017,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70018,0,Change has been successfully cherry-picked
70021,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70022,0,Change has been successfully merged into the git repository.
70024,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedReviewed with R4E"
70025,0,Change has been successfully merged into the git repository.
70026,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedReviewed with R4E"
70027,0,Change has been successfully merged into the git repository.
70030,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70031,0,Change has been successfully merged into the git repository.
70033,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
70034,0,"Patch Set 2: Looks good to me, approved"
70035,0,Change has been successfully cherry-picked
70038,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed(1 inline comment)Works as advertised"
70039,0,"Patch Set 1: Looks good to me, approved"
70040,0,Change has been successfully cherry-picked
70042,0,"Patch Set 2: Looks good to me, approved; IP review completed"
70043,0,Change has been successfully merged into the git repository.
70044,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70045,0,Change has been successfully merged into the git repository.
70046,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70047,0,Change has been successfully cherry-picked
70048,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70049,0,Change has been successfully cherry-picked
70050,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70051,0,Change has been successfully cherry-picked
70054,1,"Patch Set 2: Looks good to me, approved; IP review completedI agree that this is very easy to get wrong. I am not sure that there is a simple tests given that there are multiple ways to implement synchronization. My sense is that the API needs to be re-designed to make this easier and more obvious to implement."
70055,0,Change has been successfully merged into the git repository.
70056,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70057,0,Change has been successfully merged into the git repository.
70058,0,"Patch Set 1:Nice addition. Looks good.2 Comments- On my Linux machine, the first column of the tooltip is not wide enough. Hence the string ""> Hover Time"" is slightly chopped. Maybe increase column width or make it dynamically determine the width.- I 'm not sure if the string ""Hover Time"" is very intuitive. Maybe we can find something clearer. But, nothing clear has come into my mind."
70059,1,"Patch Set 1:For the truncated text, the tool tip handler has now been modified to use a composite with labels in a grid instead of a table. This seems to have fixed the problem. Refer to Change I2eaf701f (bug 389328)."
70060,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedComment 1 was fixed with another commit."
70061,0,Change has been successfully cherry-picked
70062,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70064,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70065,0,Change has been successfully cherry-picked
70066,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedCode looks good. I pulled in the changes as well and verified that consumers are properly added and persisted after a server restart. Thanks, Mike!"
70067,0,Change has been successfully merged into the git repository.
70068,0,"Patch Set 1: Looks good to me, but someone else must approve"
70069,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThere is still some trailing whitespace, something which Git does not handle well."
70070,0,Change has been successfully merged into the git repository.
70071,0,"Patch Set 1: Looks good to me, but someone else must approve"
70072,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThere is still some trailing whitespace, something which Git does not handle well."
70073,0,Change has been successfully merged into the git repository.
70074,0,"Patch Set 1: Looks good to me, but someone else must approveThere is still some trailing whitespace, something which Git does not handle well."
70075,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70076,0,Change has been successfully cherry-picked
70077,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks fine to me."
70078,0,Change has been successfully cherry-picked
70079,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70080,0,Change has been successfully merged into the git repository.
70081,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70082,0,Change has been successfully merged into the git repository.
70083,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70084,0,Change has been successfully merged into the git repository.
70086,0,Patch Set 1: I would prefer that you didn't submit this(1 inline comment)Good catch. I like this modification. I only propose to move the modification a few lines down to make the intent clearer.
70089,0,"Patch Set 2: Looks good to me, approved; IP review completed"
70090,0,Change has been successfully merged into the git repository.
70092,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70093,0,Change has been successfully merged into the git repository.
70095,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70098,0,Patch Set 1: I would prefer that you didn't submit this(2 inline comments)Code changes look good but I would prefer if the commit message was updated prior to merging.
70100,0,Patch Set 1:Looks good. I'm unable to reproduce on Linux since I can't de-select the file once selected.
70101,0,"Patch Set 1: Looks good to me, approved"
70105,0,"Patch Set 2: Looks good to me, approved; IP review completed"
70107,0,Change has been successfully merged into the git repository.
70110,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70111,0,Change has been successfully merged into the git repository.
70112,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis looks fine to me."
70113,0,Change has been successfully cherry-picked
70114,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70115,0,Change has been successfully merged into the git repository.
70118,1,"Patch Set 2:Ok, now it's pushed to master. I used stable-1.3 before because I had a few pb with master some days ago, and saw that stable-1.3 was merged to master from time to time. Also egit planning page says v2.1 will be based on 3.8 minimum, so I (wrongly) assumed v2.0 would perhaps require some eclipse 3.8 development code.I'll create a unit test a bit later. This patch set at least validates the workflow on my side (maven3, artifactory, gerrit via mylyn review)."
70125,1,"Patch Set 8: Unclean IP, do not check inAwaiting approval of CQ 6769"
70126,0,"Patch Set 8: Looks good to me, approved; IP review completedCQ 6769 was approved, Francois: thanks for the contribution"
70127,0,Change has been successfully merged into the git repository.
70129,0,"Patch Set 6: Looks good to me, but someone else must approve"
70131,0,"Patch Set 6: Looks good to me, approved"
70133,1,Patch Set 6:Please also add a footer with the CQ number in the commit message before submitting this change: CQ: 6979 Bug: 348318 ...
70140,0,"Patch Set 4:Made the output more C Git like. Removed the count...Re-ordererd the files by name first.I think we also need a CQ, due to the size of the patch. We'll do that once everbody is happy."
70143,1,"Patch Set 1: (1 inline comment)I pushed a new version of this change.Unfortunately, due to some difficulties when migrating my gerrit user to the new eclipse git/gerrit server, pushing it again gave it a new home: https://git.eclipse.org/r/#/c/5765/ ChangeId is still the same though..."
70144,1,"Patch Set 1: I would prefer that you didn't submit this- you ended up with a new change since you pushed it to refs/for/stable-1.3- I propose you abandon the new change as stable-1.3 is closed anyway so we can't accept this change on branch stable-1.3- then rebase this change onto the current origin/master since this is based on a very old version of jgit- add some tests to ensure this creates the same output as the parts of native git's status command you are implementing here, have a look at the new project org.eclipse.jgit.pgm.test this should help to make this an easy task"
70149,1,"Patch Set 3: (1 inline comment)See patch set #4Regarding the listing of untracked files being different from git, I'm not sure I can do anything. As you said, it's probably in IndexDiff that a fix need to be applied. Plus I haven't noticed this so a proper bug report with test case would be a good starting point for this."
70151,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed(1 inline comment)"
70152,0,Change has been successfully cherry-picked
70153,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70154,0,Change has been successfully merged into the git repository.
70155,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70156,0,Change has been successfully merged into the git repository.
70157,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedneeded by final patch"
70159,0,Change has been successfully pushed.
70161,0,Patch Set 6: (3 inline comments)Excellent code!With the minor improvements/fixes I've indicated inline I would integrate it.
70162,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completedneeded by final patch"
70164,0,Change has been successfully pushed.
70169,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedneeded by final patch"
70171,0,Change has been successfully pushed.
70172,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedneeded by final patch"
70174,0,Change has been successfully pushed.
70176,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70177,0,Change has been successfully merged into the git repository.
70178,0,"Patch Set 1: Looks good to me, approvedCan you assert the usual IP statement?"
70183,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70184,0,Change has been successfully merged into the git repository.
70189,1,"Patch Set 2:Matthias: The part about Signed-off-by seems obsolete, since that is not the wording required by the Eclipse Foundation, though the implication is the same."
70190,0,Patch Set 2:Could I please have a more prescriptive comment as to what needs to be changed for this patch to be acceptable?Thanks
70194,0,"Patch Set 4: Looks good to me, approved; IP review completedfixed typos in commit message"
70195,0,Change has been successfully merged into the git repository.
70201,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70202,0,Change has been successfully merged into the git repository.
70203,0,"Patch Set 1: I would prefer that you didn't submit this(1 inline comment)See inline comment. Otherwise looks good, verified that it fixes the NPE."
70206,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedThanks for addressing the API issue appropriately. This looks fine to me. Based on Comment #11 I'll be marking the IP review as +1 since this is less than 250 lines of change."
70207,0,Change has been successfully cherry-picked
70211,0,"Patch Set 2: Verified; Looks good to me, but someone else must approveThe patch looks fine to me. Thanks for confirming that the arg line in question may potentially not be set, and so setting it to be empty is necessary.Please confirm that the contribution is written 100% by you and that you have permission to contribute this code under the terms of the EPL."
70212,0,"Patch Set 1: (2 inline comments)Please address the comments, and thanks for the contribution :)"
70214,0,"Patch Set 1: Looks good to me, but someone else must approve"
70215,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70216,0,Change has been successfully merged into the git repository.
70217,0,"Patch Set 1: Looks good to me, approved(1 inline comment)"
70219,0,"Patch Set 2: Looks good to me, approved"
70220,0,"Patch Set 2: Looks good to me, approved; IP review completed"
70221,0,Change has been successfully merged into the git repository.
70222,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70223,0,Change has been successfully merged into the git repository.
70226,0,"Patch Set 4: Looks good to me, approved"
70227,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
70230,1,Patch Set 3: (1 inline comment)I think we need an change in BugzillaFixture.client() otherwise the tests for .../bugs36-custom-wf-and-status will fail.
70233,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completedChanges for the 3.8.x branch are tracked on I255d39f1."
70234,0,Change has been successfully merged into the git repository.
70235,0,"Patch Set 1: Looks good to me, approved"
70236,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70237,0,Change has been successfully merged into the git repository.
70239,0,"Patch Set 2: Looks good to me, approvedNice find!"
70240,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70241,0,Change has been successfully merged into the git repository.
70242,0,"Patch Set 1: Looks good to me, approved"
70243,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70244,0,Change has been successfully merged into the git repository.
70246,0,"Patch Set 2:Miles, I'm not sure that the member agreement applies in this case since it's a contribution. I would prefer if you could post the exact three statements that are on the wiki (given that you agree with the statements): http://wiki.eclipse.org/Mylyn/Contributor_Reference#Merging_Contributions. Thanks."
70248,0,"Patch Set 2: Looks good to me, approved; IP review completedThanks!"
70251,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70252,0,Change has been successfully merged into the git repository.
70253,1,"Patch Set 3:Miles, I made a slight modification so that the getFields() method returns a Collection rather than Iterator. It's more flexible for clients to work with and there didn't seem to be any harm since it's a copy anyways."
70254,0,"Patch Set 3: (1 inline comment)Sure thing. I think I only used an iterator because that's what had been suggested. Also, people tend to keep collections around longer. :) See note though -- should be unmodifiable?"
70255,0,Patch Set 1: I would prefer that you didn't submit this(2 inline comments)This looks good. I added inline comments with a few minor suggestions. Please also post a statement as outlined under http://wiki.eclipse.org/Mylyn/Contributor_Reference#Merging_Contributions to this review. Thanks!
70257,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good."
70258,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70259,0,Change has been successfully cherry-picked
70260,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70261,1,Patch Set 1:This change is only here for its dependencies to other changes in review. It is really boring (just moving classes to other packates) and doesn't need review.
70263,0,Change has been successfully pushed.
70265,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70268,0,Change has been successfully pushed.
70270,0,Change has been successfully pushed.
70272,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70275,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedApproved"
70276,0,Change has been successfully cherry-picked
70278,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedLooks good to me."
70279,0,Change has been successfully cherry-picked
70282,0,"Patch Set 2: Looks good to me, approved; IP review completed"
70285,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70286,0,Change has been successfully merged into the git repository.
70287,0,"Patch Set 1: Looks good to me, but someone else must approveThanks! Can you add an @autor tag to CoreUtil and post the statements as outlined under http://wiki.eclipse.org/Mylyn/Contributor_Reference#Merging_Contributions?"
70289,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70290,0,Change has been successfully merged into the git repository.
70291,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70293,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70296,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70297,0,Change has been successfully merged into the git repository.
70299,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70300,0,Change has been successfully merged into the git repository.
70301,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70303,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70306,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70307,0,Change has been successfully merged into the git repository.
70308,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70309,0,Change has been successfully merged into the git repository.
70310,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70313,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70314,0,Change has been successfully merged into the git repository.
70315,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70318,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70319,0,Change has been successfully merged into the git repository.
70321,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70322,0,Change has been successfully merged into the git repository.
70323,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70325,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70328,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70329,0,Change has been successfully merged into the git repository.
70331,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70332,0,Change has been successfully merged into the git repository.
70333,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70337,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedLooks good now. Approved."
70338,0,Change has been successfully cherry-picked
70346,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70347,0,Change has been successfully merged into the git repository.
70348,0,"Patch Set 1: Looks good to me, but someone else must approve"
70349,0,"Patch Set 1: Looks good to me, but someone else must approve"
70350,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70351,0,Change has been successfully merged into the git repository.
70353,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
70354,0,Change has been successfully merged into the git repository.
70356,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70357,0,Change has been successfully merged into the git repository.
70358,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70359,0,Change has been successfully merged into the git repository.
70361,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70362,0,Change has been successfully merged into the git repository.
70363,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70366,0,"Patch Set 2: Verified; Looks good to me, but someone else must approve; IP review completedLooks peachy"
70367,0,"Patch Set 2: Looks good to me, approved"
70368,0,Change has been successfully cherry-picked
70369,0,"Patch Set 1: Looks good to me, but someone else must approve"
70370,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70372,0,Change has been successfully merged into the git repository.
70373,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70374,0,Change has been successfully merged into the git repository.
70375,0,"Patch Set 1: Verified; Looks good to me, approved"
70377,0,Change has been successfully merged into the git repository.
70378,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70379,0,Change has been successfully merged into the git repository.
70381,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70382,0,Change has been successfully cherry-picked
70385,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70386,0,Change has been successfully merged into the git repository.
70387,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedYou know sometimes the beautiful obvious solution was just sitting under your nose and you don't see it... this is an example of that."
70388,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed(1 inline comment)"
70389,0,Change has been successfully cherry-picked
70395,1,"Patch Set 1:Looks good. Two things are missing:* The Papyrus feature should be included in the site.xml.* The imports in the Papyrus feature need to be updated. I'm currently getting this error when building against Juno:[INFO] {osgi.ws=cocoa, osgi.os=macosx, osgi.arch=x86, org.eclipse.update.install.features=true}[ERROR] Cannot resolve project dependencies:[ERROR]   Software being installed: org.eclipse.mylyn.mft.papyrus.feature.group 0.9.1.qualifier[ERROR]   Missing requirement: org.eclipse.mylyn.mft.papyrus.feature.group 0.9.1.qualifier requires 'org.eclipse.papyrus.uml.feature.group 0.8.0' but it could not be found"
70400,0,"Patch Set 11: Verified; Looks good to me, but someone else must approve; IP review completedAlso checked manually."
70401,0,"Patch Set 11: Looks good to me, approved"
70402,0,Change has been successfully merged into the git repository.
70406,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70407,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70413,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThis looks fine to me, and will ensure a local launch can be done."
70414,0,Change has been successfully cherry-picked
70415,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good to me."
70416,0,Change has been successfully cherry-picked
70417,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70418,0,Change has been successfully merged into the git repository.
70419,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThanks, Chris."
70420,0,Change has been successfully merged into the git repository.
70422,1,"Patch Set 1: Fails(3 inline comments)Minor comments.Also when I try to use it (connecting to localhost which has LTTng git head from the daily PPA), I can connect but get the following error message when trying to create a session.Command to create session failedCommand failed! Command:  lttng create mysession -o /home/alexandre/testReturn Value: 1Session mysession created.Traces will be written in /home/alexandre/testError: Command errorNothing shows up in the Sessions tree in the Control view, but ""lttng list"" shows the session was actually created. Will try to debug it a bit more."
70423,0,"Patch Set 1: VerifiedIt works now! Apparently one must not use ""localhost"" for the address, but 127.0.0.1, to make sure RSE uses the SSH backend."
70426,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70427,0,Change has been successfully cherry-picked
70428,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedPush."
70429,0,Change has been successfully cherry-picked
70430,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70431,0,Change has been successfully merged into the git repository.
70432,0,"Patch Set 1: Looks good to me, approved"
70434,0,Change has been successfully merged into the git repository.
70435,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedReviewed on master by Doug.  Cherry-picking to cdt_8_1 branch."
70436,0,Change has been successfully cherry-picked
70438,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70439,0,Change has been successfully cherry-picked
70440,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good."
70442,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks fine to me."
70443,0,Change has been successfully cherry-picked
70444,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedApproved."
70445,0,Change has been successfully cherry-picked
70446,0,"Patch Set 1: Looks good to me, approved"
70448,0,Change has been successfully cherry-picked
70449,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70450,0,Change has been successfully cherry-picked
70460,1,"Patch Set 8: Verified; Looks good to me, approved; IP review completedThe workaround was only the part dealing with the ""<resource>"" tag, but looking at the build, it seems the source bundles were generated anyways. In fact, according to http://wiki.eclipse.org/Tycho/Reference_Card#Source_Bundles , as long as tycho-source-plugin is declared in our top-level pom, all eclipse-plugin/eclipse-test-plugin packaging types will have generated sources."
70461,0,Change has been successfully cherry-picked
70466,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
70468,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedSimple change."
70469,0,Change has been successfully merged into the git repository.
70470,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70471,0,Change has been successfully cherry-picked
70472,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis looks good to me."
70473,0,Change has been successfully cherry-picked
70475,0,"Patch Set 4: Looks good to me, approved; IP review completedJust rebased"
70478,0,Change has been successfully merged into the git repository.
70484,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70485,0,Change has been successfully cherry-picked
70486,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70487,0,Change has been successfully cherry-picked
70490,0,"Patch Set 2: Looks good to me, approved; IP review completed"
70491,0,Change has been successfully merged into the git repository.
70499,0,"Patch Set 2: Looks good to me, approved"
70502,0,Change has been successfully merged into the git repository.
70503,0,"Patch Set 1: Looks good to me, but someone else must approveJust incrementing minor versions."
70504,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70505,0,Change has been successfully cherry-picked
70506,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70507,0,Change has been successfully cherry-picked
70508,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70509,0,Change has been successfully cherry-picked
70510,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70511,0,Change has been successfully cherry-picked
70513,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
70514,0,Change has been successfully merged into the git repository.
70516,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70517,0,Change has been successfully merged into the git repository.
70518,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
70523,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70524,0,Change has been successfully cherry-picked
70532,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completed"
70533,0,Change has been successfully cherry-picked
70535,0,"Patch Set 4: Verified; Looks good to me, but someone else must approve; IP review completed"
70536,0,"Patch Set 4: Verified; I would prefer that you didn't submit this(9 inline comments)Code works well, good work.There are still some typos (did I miss them the first time? Hard to say, I wish we were using Gerrit 2.4 ;) ). And the ++(blahbla.getValue().directFieldAccess)  thingy I really don't like..."
70539,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completedWhew, finally ;)  Good work!"
70540,0,"Patch Set 6: Verified; Looks good to me, but someone else must approve; IP review completed"
70541,0,"Patch Set 6: Verified; Looks good to me, but someone else must approve; IP review completed"
70542,0,Change has been successfully cherry-picked
70543,1,"Patch Set 1: (24 inline comments)Here comes the statistics!Some inline comments, mostly typos. I haven't tested it yet.The formatting fixes are mostly appreciated, however could you split them in a separate commit if possible? That will make review much easier.Also, could you rebase your next version on top of https://git.eclipse.org/r/#/c/6969/ please? It should be mostly trivial, and it will drop all the generics we don't use anymore."
70550,0,"Patch Set 2: I would prefer that you didn't submit this(6 inline comments)Overall it looks good. However, please look at my comments. Also make sure that all class version numbers are updated, @since tags are there where applicable and fix all compiler warnings."
70552,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70553,0,Change has been successfully cherry-picked
70554,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70555,0,Change has been successfully merged into the git repository.
70556,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedGood to go to master branch. Nice job."
70558,0,Change has been successfully cherry-picked
70560,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedNice work!"
70561,0,Change has been successfully cherry-picked
70562,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70563,0,Change has been successfully cherry-picked
70565,0,"Patch Set 2: Looks good to me, but someone else must approve"
70566,0,Change has been successfully pushed.
70567,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70568,0,Change has been successfully merged into the git repository.
70569,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70570,0,Change has been successfully merged into the git repository.
70571,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70572,0,Change has been successfully merged into the git repository.
70573,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70574,0,Change has been successfully merged into the git repository.
70575,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70576,0,Change has been successfully merged into the git repository.
70577,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70578,0,Change has been successfully merged into the git repository.
70579,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70580,0,Change has been successfully merged into the git repository.
70581,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70582,0,Change has been successfully merged into the git repository.
70583,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70584,0,Change has been successfully merged into the git repository.
70585,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70586,0,Change has been successfully merged into the git repository.
70587,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70588,0,Change has been successfully merged into the git repository.
70589,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70590,0,Change has been successfully merged into the git repository.
70591,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70592,0,Change has been successfully merged into the git repository.
70593,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70594,0,Change has been successfully merged into the git repository.
70595,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70596,0,Change has been successfully merged into the git repository.
70597,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed(1 inline comment)Looks great. for others: this will load pids in the cfv that don't have any events during the run, but are running."
70598,0,"Patch Set 1: Looks good to me, approved"
70599,0,Change has been successfully cherry-picked
70600,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
70601,0,"Patch Set 1: Looks good to me, approved"
70602,0,Change has been successfully cherry-picked
70604,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70605,0,Change has been successfully cherry-picked
70607,1,"Patch Set 2: Verified; Looks good to me, approved; IP review completedIt forgot Bernd's review somehow :("
70608,0,Change has been successfully cherry-picked
70609,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completedYour statement ""This means the exact plugin must bepresent in the current Eclipse installation to fulfill the dependency"" only is not true if you use p2 (Eclipse installer) for installing Features. p2 will resolve and install required plug-ins if they are defined in Require-Bundle and if packages of these plug-ins are are defined in Import-Package. It tried both. Your observation might be true for distribution-installed plug-ins. Nevertheless, I'm OK with the change. The move to Import-Package will allow for looser coupling between plug-ins.Here is an interesting blog about this topic:http://www.vogella.com/blog/2009/03/27/required-bundle-import-package/"
70610,0,"Patch Set 1:Thanks for the review Bernd!I hadn't tried with p2, but if it still works, great!I meant ""the exact plugin must be present in the current Eclipse installation to build the workspace from within Eclipse"". I will update the commit message before pushing it."
70611,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
70612,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedCode looks good and it is working in my tests. Thanks for the patch."
70613,0,"Patch Set 1: Verified; Looks good to me, approvedCode looks good and it is working in my tests. Thanks for the patch."
70614,0,Change has been successfully cherry-picked
70616,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
70617,0,Change has been successfully cherry-picked
70618,1,"Patch Set 1: Fails; Looks good to me, approved; IP review completed(2 inline comments)Check the inline comments, they're not stoppers, but might be good to keep in mind for afterwards.Looks very refreshing!Unfortunately it fails to merge at the moment, we'll just have to wait for the dependencies to get in first."
70621,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedLooks great to me."
70623,0,"Patch Set 3:Very good, no warnings are introduced!Small typos left, see inline comments."
70624,0,Patch Set 3: (3 inline comments)Looks good. Only minor comments.
70628,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good to me. Thanks :)"
70629,0,Change has been successfully merged into the git repository.
70630,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70631,0,Change has been successfully merged into the git repository.
70632,1,"Patch Set 1:just my 2cents: is the snipmatch view a component developers will use as frequently as the package explorer or the mylyn task list? If not, it's probably more disturbing a developer than it supports them."
70633,1,"Patch Set 1:We just add SnipMatch view in JDT's default perspective, in the below part, behind ""Problems"" view, it will not affect JDT's default perspective very much.And if user does not like/use this view, he can close it, it will not appear next time.I do not think this is a big disturbing for users."
70635,0,Change has been successfully pushed.
70637,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70638,0,Change has been successfully merged into the git repository.
70640,0,Change has been successfully pushed.
70642,0,Change has been successfully pushed.
70644,0,Change has been successfully pushed.
70645,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedReviewed and tested.  No issues."
70648,0,Change has been successfully pushed.
70650,0,Change has been successfully pushed.
70652,0,Change has been successfully pushed.
70654,0,Change has been successfully pushed.
70658,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good. This addresses the problem I saw with Change I3550a46b. Thanks, Steve!"
70663,0,Change has been successfully pushed.
70665,0,Change has been successfully pushed.
70666,0,"Patch Set 1: Looks good to me, but someone else must approve(1 inline comment)"
70669,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedpatch set 3 is OK so we can submit"
70670,0,Change has been successfully merged into the git repository.
70673,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedSteve's other changes depend on this change."
70675,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedReviewed and tested.   No issues."
70678,0,Change has been successfully pushed into branch query-review.
70679,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedReviewed and tested.   No issues."
70680,0,Change has been successfully merged into the git repository.
70681,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70682,0,Change has been successfully merged into the git repository.
70684,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70685,0,Change has been successfully merged into the git repository.
70687,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70689,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
70692,1,"Patch Set 1:You write: ""Fix this:"" and describe a bug. How do you make sure that this bug never crawls in again? I'm speaking about writing tests for every bug you make. Otherwise you will never know if any change introduces another bug or a previous one again."
70693,1,"Patch Set 1:Ok, now i know what is your mean, i should add unit test cases for all the methods and confirm i can pass all the test after every change.SnipMatch is lack of unit test, it seems that i have a long way to go. And as my talk with Doug, we should add some small features for SnipMatch before alpha release. This patchset is not a bug fix patchset, in fact, it's a small feature implementation patch.Anyway, we should focus on SnipMatch's unit test things now, i will talk with Doug about this. Unit test first or feature development first, it is a problem"
70694,0,"Patch Set 1:It's not a question what comes first :) A good approach is to have at least one test for each component that tests the ""happy path"" through a component. We don't expect a 100% test coverage here. But we should be able to add more test cases for every component as soon as we experience a new bug.It will pay out. It payed out for me every time a made fix and other parts of my completion engines suddenly became broken. It happens ;)"
70695,0,"Patch Set 1: Looks good to me, approved"
70696,0,Change has been successfully merged into the git repository.
70697,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70698,0,Change has been successfully merged into the git repository.
70699,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70700,0,Change has been successfully merged into the git repository.
70702,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70703,0,Change has been successfully merged into the git repository.
70706,0,"Patch Set 2: Verified; Looks good to me, approved"
70710,0,"Patch Set 2: Verified; Looks good to me, approved"
70714,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70715,0,Change has been successfully merged into the git repository.
70718,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70719,0,Change has been successfully merged into the git repository.
70722,0,"Patch Set 2: Verified; Looks good to me, approved"
70726,0,"Patch Set 2: Verified; Looks good to me, approvedAssertionProgressMonitor should have an @author tag but we can also add that later."
70733,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70734,0,Change has been successfully merged into the git repository.
70736,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completedReleasing the fix"
70737,0,Change has been successfully merged into the git repository.
70744,0,"Patch Set 3: Verified; IP review completed(2 inline comments)Just a couple of minor comments, looks good otherwise."
70746,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis works for me, and allows all tests to pass when run under the assumption that valgrind is not present."
70747,0,Change has been successfully cherry-picked
70749,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedEverything looks fine even if I can't tell that the fix is comprehensive. However, it loads and executes fine. If anything is missing, we can always fix it later.Great work."
70750,0,Change has been successfully cherry-picked
70753,0,"Patch Set 3: Looks good to me, but someone else must approveI think it's in good shape for review now."
70757,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedBrace yourselves, here we gooo"
70758,0,Change has been successfully cherry-picked
70760,0,"Patch Set 4: Looks good to me, but someone else must approve"
70761,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
70762,0,Change has been successfully cherry-picked
70766,0,"Patch Set 1: Looks good to me, but someone else must approveLooks fine to me. Can you assert that you wrote the code and have the right to contribute it under the EPL?"
70768,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70769,0,Change has been successfully merged into the git repository.
70771,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70772,0,Change has been successfully merged into the git repository.
70774,0,Change has been successfully pushed.
70776,1,"Patch Set 3:The new behaviour only applies to dev mode, i.e. when running Tycho ITs from within m2e workspace using special ""Tycho IT"" launch configuration. Verifier will fork maven in separate JVM when running ITs from command line.In dev mode, Verifier is supposed to create new classloader(s) for each invocation, so each test should get fresh set of all static variables and singletons. Unfortunately, there is several thread leaks in Maven and P2 that result in OOME permgen due to classloader leak if you attempt to run all Tycho ITs in dev mode. I know how to fix these leaks, but did not have time/motivation to push these yet.Still, even ability to run/debug individual Tycho ITs without having to do ""mvn install"" first is a huge step forward in my opinion."
70778,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70779,0,Change has been successfully merged into the git repository.
70780,1,"Patch Set 1: Verified; Looks good to me, approved; Unclean IP, do not check inI don't think the Signed-off line is significant wrt the IP process in in Eclipse."
70781,1,"Patch Set 1:Ah yes, sorry: I am the author of the content I am contributing. I own the copyright of the contributed content. I have the right to contribute the content to Eclipse."
70783,0,Change has been successfully merged into the git repository.
70799,0,"Patch Set 19: Looks good to me, but someone else must approve- rebased on a fix for PackWriter. Now all tests run- modified commit message"
70800,1,Patch Set 19: I would prefer that you didn't submit this(30 inline comments)I have still only managed to complete a partial review. I have not looked at the prune logic in this cycle. Basically I only read the methods which have comments in them. :-(
70802,0,"Patch Set 19: Looks good to me, but someone else must approve"
70826,0,"Patch Set 20: Looks good to me, but someone else must approve"
70827,0,"Patch Set 20: Verified; Looks good to me, approved; IP review completed"
70830,1,"Patch Set 18: I would prefer that you didn't submit thisKeep files are handled now. But there is a failing test. Although I specify to PackWriter to exclude a certain commit objects he writes it into the packfile. Strangely for other objects (trees, blobs, ...) the exclude mechanism seems to work."
70838,0,"Patch Set 21: Verified; Looks good to me, approved; IP review completed"
70839,0,Change has been successfully merged into the git repository.
70853,0,"Patch Set 2: Looks good to me, approved; IP review completed"
70855,0,Change has been successfully merged into the git repository.
70858,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70859,0,Change has been successfully merged into the git repository.
70861,0,"Patch Set 2: Verified; Looks good to me, but someone else must approve; IP review completedLooks good to me"
70862,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70863,0,Change has been successfully cherry-picked
70865,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
70868,0,"Patch Set 5: Looks good to me, approved; IP review completed"
70869,0,Change has been successfully merged into the git repository.
70870,0,Patch Set 1: I would prefer that you didn't submit this(3 inline comments)Thanks for the proposed change! Adding the API makes sense to me. I would suggest that we do a bit more clean up of code duplication and it'd be nice if you could include a test case.
70874,1,Patch Set 2: (1 inline comment)Thanks. This looks good to me. I only had one comment and we need the usual IP blurb :).
70876,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70878,0,Patch Set 1: I would prefer that you didn't submit this(6 inline comments)Looks like a good start. I added a few suggestions.
70882,0,"Patch Set 9: Verified; Looks good to me, approved"
70884,0,Change has been successfully merged into the git repository.
70886,0,"Patch Set 8: Looks good to me, but someone else must approveLooks good! Please feel free to submit."
70887,0,"Patch Set 8: Verified; Looks good to me, approved; IP review completed"
70891,0,Patch Set 4:> All categories are defined in the plugin.xml Should we really add a custom one?Good point. Testing that the default contributions work should be sufficient.
70893,0,"Patch Set 2: (2 inline comments)Looks good, only one nit. Would be great if you could add a few test cases as well."
70901,1,Patch Set 6:Local this works!I get no compile errors.
70902,0,Patch Set 6: I would prefer that you didn't submit this(2 inline comments)Thanks! Looks like the build is now working. I'm okay with submitting this if we rename the extension point.
70904,0,Patch Set 3: I would prefer that you didn't submit this(5 inline comments)Great! Thanks for the update. I have a few more comments for now I'd prefer if the part was embedded in existing editor pages rather than contributed through a page. If you prefer a separate page we would need to use a TaskFormPage though instead of extending AbstractTaskEditorPage.
70908,0,"Patch Set 6: Verified; Looks good to me, but someone else must approvePerfect! Can you attest that you authored the code and have the right to contribute it under the EPL? I'll then merge the change."
70911,0,"Patch Set 6: Looks good to me, approved; IP review completed"
70912,0,Change has been successfully merged into the git repository.
70915,0,"Patch Set 4: Looks good to me, but someone else must approve(1 inline comment)Looks good to me. I only have one minor suggestion.I wonder if we could include the viewer and content provider now since that wouldn't add any new dependencies?"
70917,0,Patch Set 1: I would prefer that you didn't submit this(6 inline comments)Thanks. I added a few comments.This change should be scoped to the UI changes only. I'd prefer to discuss the core changes in a later review.The page contribution either needs to be changed to use a TaskFormPage or we need to embed the part in the task editor. I think we should consider the latter as the activity stream would be most useful it was directly visible in the editor.Can you make those changes? If more discussion is needed please follow up on bug 378003.
70918,0,Patch Set 1: (6 inline comments)Thanks for the comments @Steffen!I have made the changes and answered to your comments.  
70920,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed~200 warnings gone, woo"
70921,0,"Patch Set 1: Looks good to me, approvedChanges submitted!"
70922,0,Change has been successfully cherry-picked
70923,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70924,0,Change has been successfully merged into the git repository.
70932,1,"Patch Set 1: Looks good to me, but someone else must approveLooks like a good solution for now, but in the long run we should consider replacing the static OprofileProject, since it causes many similar issues."
70934,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed(1 inline comment)"
70935,0,"Patch Set 3: Looks good to me, but someone else must approve"
70936,0,Patch Set 3: Verified; IP review completedI'm approving the commit as I got +1 from two guys. Don't be shy to approve yourself guys :)
70937,0,"Patch Set 3: Looks good to me, approvedI'm approving the commit as I got +1 from two guys. Don't be shy to approve yourself guys :)"
70938,0,Change has been successfully cherry-picked
70941,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
70942,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70943,0,Change has been successfully merged into the git repository.
70944,1,"Patch Set 1: Looks good to me, approved; IP review completedGreat! this proves I can be lazy and let others do work for me!"
70945,0,"Patch Set 1: VerifiedRather, it means the reviewers were not diligent enough in the first place, and let this slip in while it introduced warnings :P"
70946,0,Change has been successfully cherry-picked
70947,0,"Patch Set 1: Looks good to me, but someone else must approve"
70949,0,"Patch Set 1: Looks good to me, approved"
70950,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70951,0,Change has been successfully merged into the git repository.
70952,0,"Patch Set 1: Looks good to me, approved; IP review completed"
70954,0,Change has been successfully cherry-picked
70956,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
70957,0,Change has been successfully merged into the git repository.
70958,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
70960,0,Change has been successfully cherry-picked
70961,1,"Patch Set 1: I would prefer that you didn't submit thisMost often ""error"" represents some networking failure, like socket closed by remote peer. I'm sure somebody will report it as a bug if we start to put such errors into the Eclipse log, because neither Eclipse nor TCF is responsible for those failures. Perhaps, a better approach is to use Eclipse tracing to log such errors, or log only severe errors, like instances of RuntimeException."
70962,1,"Patch Set 1:I posted a patch that only logs runtime exceptions.  More tracing for tcf would be good, but for runtime exceptions, they should be logged even without tracing.  Otherwise users' bug reports will be difficult to track down."
70964,0,"Patch Set 2: Looks good to me, approved"
70965,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThanks! submitting."
70966,0,Change has been successfully merged into the git repository.
70967,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70968,0,Change has been successfully cherry-picked
70969,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
70970,0,"Patch Set 1: Looks good to me, approvedThanks Bernd, merging."
70971,0,Change has been successfully cherry-picked
70974,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
70975,0,Change has been successfully merged into the git repository.
70976,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThanks, this fixes the problem."
70977,0,Change has been successfully cherry-picked
70978,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70979,0,Change has been successfully merged into the git repository.
70980,0,"Patch Set 1: Looks good to me, but someone else must approve"
70981,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70982,0,Change has been successfully cherry-picked
70983,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70984,0,Change has been successfully merged into the git repository.
70985,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70986,0,Change has been successfully merged into the git repository.
70987,0,"Patch Set 1: Looks good to me, but someone else must approve"
70988,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
70989,0,Change has been successfully merged into the git repository.
70991,1,"Patch Set 7: Looks good to me, but someone else must approverebased and tested harder on Windows where we have problems with locked files & file deletions.From my side the fix is ready to be submitted."
70994,1,Patch Set 7:Do we really need that? I wrote a big parts of this and only my last addition of test cases brought it over >250 lines. Markus asked in on a comment on patchset 2 from Jul 9 whether somebody wants to take over this change. Since he was the one who found the initial problem I didn't wanted to take over. But if this leads now to a CQ I ask myself:- would it help if I takeover authorship. Markus is ok with that.- would it help if I remove my last testcase additions and add them in a different change.
70996,1,"Patch Set 4: I would prefer that you didn't submit thisI found a bug and fixed it, but I have to do some double-checks with native git before we can accept this bug.That's the problem: During merge we update the index and populate the worktree for some paths. Problem is: it's a long running operation and we want to be able to recover from a failed operation without leaving a corrupted repo/work-tree. E.g. what happens if we have succesfully updated (overwritten) 10000 files but when writing file 10001 this fails and we want to rollback. Therefore we prepare the new index first and if the index was succesfully persisted then we start modifying the work-tree (what we should write in the work-tree can be seen from the new index). Means: we first call indexBuilder.commit() and then we call checkout(). That's wrong because the checkout() provides us with information which have to go into the index. Especially we don't know lastModified and length of a file until we have written it to disk. For lastmodified that's clear. But think about how autocrlf influences length. I changed it now that we first checkout all files (which updates lastModified and length of DirCacheEntries) and then we persist the index. As I said: no sure about whether this is correct and I'll investigate further."
71001,0,Patch Set 5:Mainly cleaned up the test case and increased the performance of this test. The test contained a lot of sleeps to avoid racily clean index entries. The number of sleeps have been reduced and the test runs faster.I am more confident about this fix because I see that native git also goes the same direction to update the working tree first and the update the index (see http://dev.eclipse.org/mhonarc/lists/jgit-dev/msg01730.html).One leftover is still not completely clear. Are there situations where we have to rollback modified working tree files in case while updating the working tree or the index we run into exceptions (e.g. can't update a locked working tree file)
71003,0,"Patch Set 8: Looks good to me, but someone else must approveI removed a tests which I authored and which was not important for this specific issue. Now this change has according to lcp 243 lines. Markus gave his legal statement ... so in my eyes this is ready to be submitted."
71004,0,"Patch Set 8: Verified; Looks good to me, approved; IP review completedIP-clean, see comment on Patch 9"
71005,0,Change has been successfully merged into the git repository.
71012,0,"Patch Set 3:it would be cool if we could find a quick (correct) solution for this (even if it's not yet complete for all cases), since this makes ~70 developers wait all the time. on our repo this really makes a rebase take ~2 minutes instead of 2 seconds."
71014,0,"Patch Set 2:thanks robin; actually, i would have liked it very much to be able to re-use old index entries with stored values instead of asking the working tree iterator for them; is there a way to do this (a performant way of course ;))?"
71015,1,Patch Set 2: I would prefer that you didn't submit thisas already discussed: we definitely have a bug in how ResolveMerger creates DirCacheEntries. But blindly copying a for every entry metadata from the file to the dircache is wrong and not performant. I will contribue in a few hours one testcase which I am currently developing which already now shows the bug (unnecessary smugded entries after a merge). Also because of another problem discussed in http://dev.eclipse.org/mhonarc/lists/jgit-dev/msg01726.html I am developing more tests here.But in general I think we found a more severe bug and I am happy to see the root cause of smudged entries. Better than trying to repair (unsmudge) the entries afterwards.
71016,0,"Patch Set 2:yeah :) i'm waiting for instructions, and will then happily adapt my patchset.as per the new guideline, i hereby state that this is all my work, and that i'm allowed to contribute it. if somebody (who knows better than me) want's to take-over thats ok with me."
71021,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71022,0,Change has been successfully merged into the git repository.
71023,0,"Patch Set 1: Looks good to me, approved"
71024,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThanks scott."
71025,0,Change has been successfully merged into the git repository.
71028,0,"Patch Set 2: Looks good to me, but someone else must approve"
71029,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71030,0,Change has been successfully cherry-picked
71031,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71033,0,Change has been successfully merged into the git repository.
71035,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71036,0,Change has been successfully cherry-picked
71038,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71039,0,Change has been successfully cherry-picked
71041,0,"Patch Set 2: Looks good to me, but someone else must approve"
71043,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71044,0,Change has been successfully merged into the git repository.
71045,0,"Patch Set 1: Looks good to me, but someone else must approveI confirm: 1.authored 100% the content they are contributing 2.have the rights to donate the content to EPL 3.contribute the content under the EPL"
71047,0,"Patch Set 1: Looks good to me, but someone else must approveI confirm: 1.authored 100% the content they are contributing 2.have the rights to donate the content to EPL 3.contribute the content under the EPL"
71050,0,"Patch Set 2: Looks good to me, but someone else must approve"
71052,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71053,0,Change has been successfully merged into the git repository.
71055,0,"Patch Set 2: Looks good to me, approved; IP review completed"
71056,0,Change has been successfully merged into the git repository.
71057,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71058,0,Change has been successfully merged into the git repository.
71060,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71061,0,Change has been successfully merged into the git repository.
71062,0,"Patch Set 1: Looks good to me, but someone else must approve"
71065,0,"Patch Set 2: Looks good to me, approved"
71066,0,Change has been successfully merged into the git repository.
71071,0,Change has been successfully pushed.
71079,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed- rebased- fixed typo in commit message"
71080,0,Change has been successfully merged into the git repository.
71082,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71083,0,Change has been successfully merged into the git repository.
71084,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71085,0,Change has been successfully merged into the git repository.
71086,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completedCouldn't reproduce the bug with this and code looks good to me. Good work."
71087,1,"Patch Set 1: I would prefer that you didn't submit thisThe fix makes sure that no colors are disposed (which by itself is a good thing) but it does not fix the underlying problem that one job continues to draw even though it got cancelled. It will just continue to draw only to be replaced by the already scheduled new job.Besides that, the changes are quite big for RC3/RC4. I would only submit them to 'master' together with improved job cancelling.For 2.0 I would simply abort drawing when one of the colors is disposed. This also saves CPU cycles.Possible fix/workaround) in CommitGraphTable.doPaint(Event):if (c instanceof SWTCommit) {  SWTLane lane = ((SWTCommit)c).getLane();  if (lane !=null && lane.color != null      && lane.color.isDisposed())    return;  }}I can provide the change, if others agree with this."
71093,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
71094,0,Change has been successfully merged into the git repository.
71096,0,"Patch Set 2: Looks good to me, approved; IP review completed"
71097,0,Change has been successfully merged into the git repository.
71099,0,"Patch Set 2: Looks good to me, approved; IP review completed"
71100,0,Change has been successfully merged into the git repository.
71102,0,"Patch Set 2: Looks good to me, approved; IP review completed"
71103,0,Change has been successfully merged into the git repository.
71105,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedChecked in. Marc will review the patch later."
71106,0,Change has been successfully cherry-picked
71107,0,"Patch Set 1: Looks good to me, but someone else must approveI confirm: 1.authored 100% the content they are contributing 2.have the rights to donate the content to EPL 3.contribute the content under the EPL"
71108,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve"
71109,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71110,0,Change has been successfully merged into the git repository.
71112,0,"Patch Set 2: Looks good to me, but someone else must approve"
71113,0,"Patch Set 2: Verified; Looks good to me, but someone else must approve; IP review completed"
71114,0,"Patch Set 2: Looks good to me, approved"
71115,0,Change has been successfully merged into the git repository.
71117,0,"Patch Set 2: Looks good to me, approved; IP review completedTested together with Christian Halstrick."
71118,0,Change has been successfully merged into the git repository.
71119,0,"Patch Set 1: Looks good to me, but someone else must approveThis patch is more than 200 lines, it need IP check..I confirm: 1.authored 100% the content they are contributing 2.have the rights to donate the content to EPL 3.contribute the content under the EPL"
71121,0,"Patch Set 2: Looks good to me, but someone else must approveThis patch is more than 200 lines, it need IP check..I confirm: 1.authored 100% the content they are contributing 2.have the rights to donate the content to EPL 3.contribute the content under the EPL"
71123,0,"Patch Set 3: Looks good to me, but someone else must approveThis patch is more than 200 lines, it need IP check..I confirm: 1.authored 100% the content they are contributing 2.have the rights to donate the content to EPL 3.contribute the content under the EPL"
71124,0,"Patch Set 3: Verified; Looks good to me, but someone else must approve"
71125,0,Patch Set 3:I'm missing little conversation and review activity on these commits. Are they all fine? Is the big picture to which all these changes contribute too clear? What are the other action items that have to be done? Which features are implemented?Gerrit should not just be a way to get changes in but also to discuss things and review proposals.
71126,0,"Patch Set 3: No scoreYeah, Doug reviewed the change, and we discussed the changes in GTalk as GTalk is more convenient than Gerrit in chat things. That is why i submited 3 patchset.We will try to use Gerrit more about features/changes discussion :-)"
71127,0,"Patch Set 3: Looks good to me, but someone else must approve"
71129,0,"Patch Set 3: Looks good to me, approved; IP review completed"
71130,0,Change has been successfully merged into the git repository.
71131,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71132,0,Change has been successfully merged into the git repository.
71134,0,"Patch Set 2: Verified; Looks good to me, but someone else must approve; IP review completed"
71135,0,"Patch Set 2: Looks good to me, approved"
71136,0,Change has been successfully merged into the git repository.
71137,0,"Patch Set 1: Looks good to me, but someone else must approveThis patch is more than 200 lines, it need IP check..I confirm: 1.authored 100% the content they are contributing 2.have the rights to donate the content to EPL 3.contribute the content under the EPL"
71138,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve"
71140,0,"Patch Set 1: Looks good to me, approved"
71141,0,Change has been successfully merged into the git repository.
71146,0,"Patch Set 3: I would prefer that you didn't submit thisI like the idea to cleanup certain timestamps during checkout, but we can't do this so blindly. It's wrong to always update the index entry with the timestamp of the associated work-tree file. Sometimes we keep index entries although we know that the filesystem has already been modified. Simply copying the filesystem timestamp would be wrong. Think about this: git init touch f.txt        // lastmodified(f.txt) = m git add f.txt      // timestamp(indexEntry(f.txt)) = m git commit -m initial git checkout -b side touch g.txt git add g.txt git commit -m modified1 sleep 2            // to avoid smudged entries echo x > f.txt     // lastmodified(f.txt) = m + 1 git checkout masterIn the last checkout we want to keep the index entry for f.txt with the timestamp of 'm' although we know that thefilesystem has already 'm + 1'Another issue is that this may be quite expensive (not sure about it). Imagine you have the linux kernel repo with 38000 files. You switch from branch master to develop. Since you have not touched the files we want to keep all 38000 files. And youre change forces us to ask the filesystem 38000 times for a timestamp. Without your change we can completely ignore the filesystem and the index for all those files where the HEAD version and the BRANCH version are equal (BRANCH version is the active version on the branch you want to checkout). I love this feature of git to be able to switch branches without having to check the dirtyness of the index and the working tree for 99% of the files.But: maybe you could check for smudged entries and update only them. If for smudged entries (timestamp=0) the filesystem content is the same as the index content then we could use copy over the filesystem lastmodified date and unsmudge the entry."
71147,0,"Patch Set 3:thanks for the review. i'm clearly no expert in this area (not yet ;)), and i knew this approach is (probably) not perfect. if you have ideas on how to do better, please feel free to instruct me (instruct me like a 4 year old, pls ;)) or even take over the change.i can only say about the performance: we have a repo with ~33000 files, and this was the reason i tried to improve the situation: re-indexing took ~5-10 minutes (!), and with this change is down to a few seconds, which is way better. AFAICT, the reading of the filestamp is rather unexpensive (at least compared to not reading it, and re-hashing file contents all the time ;)).if the keep() method is the wrong place, or if more care needs to be taken when to call it with zero (old behaviour) or the current file's timestamp (new behaviour) - i can't tell, but you may tell me, and i'll do my best :)currently i just can say that all unit tests go ok, and that i'm quite satisfied with how /fast/ this makes working with JGit/EGit; it really is approximately 50 times faster in most situations, and i had to wait _a lot_ before."
71148,1,"Patch Set 3:ah, i missed your last sentence: update updating only when timestamp = 0. the initial problem was that _all_ timestamps, except for file that where staged or modified in the last commit on the tip of the current branch (cool, eh?) where zero. thats why i was re-setting them. but after actually running this code once, timestamps where kept correct i think. maybe it would be better to check and only do when it is zero."
71149,0,"Patch Set 3:long story short - i think a unit test to check the modification times in the index would be a good idea, to proof the different states.could you help me figure out the different things that should work? your first example is a good one for the first test case :)"
71150,1,"Patch Set 3:i now did a little testing (i will add the test to this change later). for me it seems that my change does not change the behavior in any case. even the case you mentioned in your comment behaves the same (it's broken ;)), regardless of whether i have my code in or not. i will look into fixing it to behave correctly - we'll see"
71153,0,"Patch Set 6: Looks good to me, but someone else must approve"
71154,0,"Patch Set 6: Looks good to me, approved"
71156,0,Change has been successfully merged into the git repository.
71159,1,Patch Set 4:my bad - i tested wrong - now it's working with and without my code.
71166,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71167,0,Change has been successfully merged into the git repository.
71169,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
71170,0,Change has been successfully merged into the git repository.
71172,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71173,0,Change has been successfully merged into the git repository.
71174,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71175,0,Change has been successfully merged into the git repository.
71176,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71177,0,Change has been successfully merged into the git repository.
71178,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71179,0,Change has been successfully merged into the git repository.
71180,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71181,0,Change has been successfully merged into the git repository.
71182,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71183,0,Change has been successfully merged into the git repository.
71185,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed- rebased- fixed style nit"
71186,0,Change has been successfully merged into the git repository.
71188,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
71193,0,"Patch Set 5:Updated the unit test, thanks for the thorough review."
71195,0,"Patch Set 6: Looks good to me, approved; IP review completed"
71196,0,Change has been successfully merged into the git repository.
71201,1,Patch Set 4: I would prefer that you didn't submit thisa junit test on windows is broken now ... I work on it
71203,0,Patch Set 2:I have reworked this change to allow WorkingTreeIterator to report file mode differences through consideration of the core.filemode setting.Thanks Chris for pointing this out.
71204,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
71205,0,"Patch Set 1: I would prefer that you didn't submit thisHow does this relate to core.filemode?I was wondering why we don't need this kind of check in other places (e.g. status (decoration), checkout, reset). Why does the decorator in EGit shows the file as non-dirty although the jgit Merger thinks they are dirty?I think that most jgit code respects core.filemode configuration parameter. If set to false jgit will think that differences in executable bits are irrelevant. See WorkingTreeIterator.compareMetadata() to see how executable bits are handled there. Can't we make use of this method also here instead of reinventing the check?Native git on windows has the same problem. Clone jgit on windows with msysgit and afterwards set the configuration parameter core.filemode to true. A git status will tell that the worktree is dirty e.g. because of the filemode of org.eclipse.jgit.test/tst-rsrc/org/eclipse/jgit/test/resources/create-second-pack.If you now try to rebase master on top of another branch msysgit will not start doing this because he thinks the worktree is dirty. In native git the solution is setting core.filemode."
71207,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71208,0,Change has been successfully merged into the git repository.
71219,0,"Patch Set 4: Verified; Looks good to me, but someone else must approve; IP review completedLooks good!"
71220,0,"Patch Set 4: Looks good to me, approved; IP review completedrebased"
71221,0,Change has been successfully merged into the git repository.
71222,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71223,0,Change has been successfully merged into the git repository.
71226,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedfixed typo in commit message"
71227,0,Change has been successfully merged into the git repository.
71229,0,"Patch Set 1: Looks good to me, approved"
71231,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71232,0,Change has been successfully merged into the git repository.
71233,0,"Patch Set 1: Looks good to me, but someone else must approveLooks good to me. I have no MacOS to check in real life that's why I only give +1 instead of +2."
71234,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71235,0,Change has been successfully merged into the git repository.
71237,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedfixed typo in commit message"
71238,0,Change has been successfully merged into the git repository.
71239,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71240,0,Change has been successfully merged into the git repository.
71242,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71243,0,Change has been successfully merged into the git repository.
71245,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71246,0,Change has been successfully merged into the git repository.
71248,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed- fixed typo in commit message- rebased"
71249,0,Change has been successfully merged into the git repository.
71250,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71251,0,Change has been successfully merged into the git repository.
71252,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71253,0,Change has been successfully merged into the git repository.
71256,0,"Patch Set 2: Looks good to me, approved(2 inline comments)"
71257,0,"Patch Set 2: Looks good to me, but someone else must approve(1 inline comment)"
71260,0,Change has been successfully merged into the git repository.
71264,0,"Patch Set 2: Looks good to me, approved; IP review completed"
71265,0,Change has been successfully merged into the git repository.
71266,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71267,0,Change has been successfully cherry-picked
71268,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71269,0,Change has been successfully merged into the git repository.
71270,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71271,0,Change has been successfully merged into the git repository.
71273,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
71275,1,"Patch Set 3:The redundant exception subclasses in the throws clauses aren't needed, but it can be useful to have some kind of documentation of the specific subclasses that can be thrown by a given method (and why). I would just use @throws for this because it gives you room to add an explanation in cases where it is not obvious."
71280,0,"Patch Set 4: Looks good to me, but someone else must approveImproved the throws documentation, identified another APIexception to throw."
71283,0,Patch Set 5: I would prefer that you didn't submit this(2 inline comments)In general I like this. Only one typo and one missing exception in a signature should be fixed.
71286,0,"Patch Set 7: Verified; Looks good to me, but someone else must approve; IP review completed- rebased- added some more declarations of GitAPIExceptions subclasses which could be thrown on Git API commands"
71287,1,"Patch Set 7: Looks good to me, but someone else must approve(7 inline comments)only whitespace errors, otherwise looks good to me"
71290,0,"Patch Set 9: Verified; Looks good to me, approved; IP review completed- fixed whitespace nits- rebased"
71291,0,Change has been successfully merged into the git repository.
71293,0,Change has been successfully merged into the git repository.
71294,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71295,0,Change has been successfully merged into the git repository.
71297,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71298,0,Change has been successfully merged into the git repository.
71299,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71300,0,Change has been successfully merged into the git repository.
71305,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedrebased"
71306,0,Change has been successfully merged into the git repository.
71307,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71308,0,Change has been successfully merged into the git repository.
71310,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71311,0,Change has been successfully merged into the git repository.
71313,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71314,0,Change has been successfully merged into the git repository.
71316,0,"Patch Set 2: Verified; Looks good to me, but someone else must approve; IP review completed"
71317,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedNice job w/ testing!"
71318,0,Change has been successfully merged into the git repository.
71319,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
71320,0,"Patch Set 1: Looks good to me, approved"
71321,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71322,0,Change has been successfully merged into the git repository.
71323,0,"Patch Set 1: Looks good to me, but someone else must approve"
71325,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedrebased"
71326,0,Change has been successfully merged into the git repository.
71328,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71329,0,Change has been successfully merged into the git repository.
71330,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71331,0,Change has been successfully merged into the git repository.
71333,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71334,0,Change has been successfully merged into the git repository.
71335,0,"Patch Set 1: Verified; Looks good to me, but someone else must approveLooks good to me. I also built locally and tested the UI."
71336,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completed"
71337,0,"Patch Set 1: Looks good to me, approved"
71340,0,"Patch Set 3: Looks good to me, approved"
71342,0,Change has been successfully merged into the git repository.
71344,0,"Patch Set 2: Verified; Looks good to me, but someone else must approveLooks good."
71346,0,"Patch Set 2: Looks good to me, approved"
71348,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedLooks good. Did not find any issues."
71349,0,Change has been successfully merged into the git repository.
71351,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedLooks good, thanks."
71352,0,Change has been successfully merged into the git repository.
71354,0,"Patch Set 2: Looks good to me, but someone else must approve"
71355,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71356,0,Change has been successfully cherry-picked
71357,0,"Patch Set 1: Looks good to me, but someone else must approve(1 inline comment)"
71360,0,"Patch Set 2: Looks good to me, approved; IP review completed(rebased to current master)"
71362,0,Change has been successfully merged into the git repository.
71363,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71365,0,"Patch Set 1: Looks good to me, but someone else must approve"
71367,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
71368,0,Change has been successfully merged into the git repository.
71371,0,"Patch Set 2: Looks good to me, approvedLooks good to me, and couldn't reproduce the NPE with it."
71372,1,"Patch Set 2: Verified; Looks good to me, but someone else must approve; IP review completedThis probably fixes the problem. I couldn't reprodue this eiher, even without this patch. Threading problems. A wonder if the clear call is needed. It was added, allegedly to fix a memory leak, but i'm not sure theclear call belongs in the dispose method. For lack of a better solution, this one should go into 2.0"
71374,1,"Patch Set 3: Verified; Looks good to me, approved; IP review completedyes, 62f7bfff9 added this clear to fix a memory leak. It occurred when switching the input to another repository, which cancels a running GenerateHistoryJob, since disposeListeners weren't deregistered so that SWTCommitList didn't release the list of commits of the no longer interesting repository"
71375,0,Change has been successfully merged into the git repository.
71376,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completedGood catch"
71377,0,"Patch Set 1: Looks good to me, but someone else must approveGreat, I was also hunting for the reason for the extra RefsChangedEvents. I think you found it!"
71378,0,"Patch Set 1: Looks good to me, but someone else must approveit works ;)"
71379,0,"Patch Set 1: Looks good to me, approved"
71380,0,Change has been successfully merged into the git repository.
71385,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
71386,0,Change has been successfully merged into the git repository.
71388,0,"Patch Set 1:Hi Dariusz,did you use JGit with Change I9291ba8c34c8744bc009b1bd302ed28bfa4e9476? I think with that there should not be such an Exception.Best Regards,Stefan"
71389,1,"Patch Set 1:now with change #6150 I got compile error in GenerateHistoryJob:The method fillTo(int) in the type RevCommitList<PlotCommit<SWTCommitList.SWTLane>> is not applicable for the arguments (RevCommit, int)"
71391,1,Patch Set 2:Where can I see this bug in action?
71394,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedif walk.setRetainBody(false) then I expect to get a null body later. PlotWalk obviously assumed implicitly that body is set to be retained"
71395,0,Change has been successfully merged into the git repository.
71396,1,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completedOn my Linux UI tests for Repositories View are failing, but this shouldn't be connected with this change"
71400,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
71401,0,Change has been successfully merged into the git repository.
71402,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedFixed Spellig, but: The truth is, that this is simply a Gerrit-Test."
71403,0,Change has been successfully merged into the git repository.
71405,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71406,0,Change has been successfully merged into the git repository.
71407,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71411,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71412,0,Change has been successfully merged into the git repository.
71413,0,"Patch Set 1: Looks good to me, but someone else must approve"
71414,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71415,0,Change has been successfully merged into the git repository.
71417,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completedRebased and signed off."
71418,0,Change has been successfully merged into the git repository.
71426,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedRebased and minor formatting changes."
71427,0,Change has been successfully merged into the git repository.
71428,0,"Patch Set 2:No problem, thanks for reviewing!"
71430,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71431,0,Change has been successfully merged into the git repository.
71433,0,Change has been successfully merged into the git repository.
71437,0,Change has been successfully merged into the git repository.
71441,0,Change has been successfully merged into the git repository.
71442,0,Change has been successfully merged into the git repository.
71446,0,"Patch Set 4: Looks good to me, but someone else must approve(1 inline comment)"
71453,0,Change has been successfully pushed.
71455,0,"Patch Set 1: Looks good to me, but someone else must approve(2 inline comments)"
71456,0,"Patch Set 1: Looks good to me, approved(1 inline comment)OK."
71458,0,Change has been successfully merged into the git repository.
71459,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71460,0,Change has been successfully merged into the git repository.
71461,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71462,0,Change has been successfully merged into the git repository.
71463,0,"Patch Set 1: Looks good to me, approved; IP review completedCode reviewed by Jacques"
71466,0,Change has been successfully merged into the git repository.
71467,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71468,0,Change has been successfully merged into the git repository.
71469,0,"Patch Set 1:While testing, I found a few issues.   I think it is best to commit what we have and open new Bugzillas to address issues and move this forward."
71470,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71471,0,Change has been successfully merged into the git repository.
71473,0,"Patch Set 2: Looks good to me, but someone else must approveThis seems about right to me. If it works for you, ship it. :-)"
71474,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedThere is an integration test to prove it works (in one artificial and limited scenario) :-)"
71475,0,Change has been successfully merged into the git repository.
71477,0,"Patch Set 1: Looks good to me, but someone else must approveLooks good to me.  But I am a little cautious about adding the generics as often it causes some unforeseen stuff up... but should be safe in this case."
71478,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71479,0,Change has been successfully merged into the git repository.
71480,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71481,0,Change has been successfully merged into the git repository.
71482,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71483,0,Change has been successfully merged into the git repository.
71484,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71485,0,Change has been successfully merged into the git repository.
71486,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71487,0,Change has been successfully merged into the git repository.
71489,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71490,0,Change has been successfully merged into the git repository.
71495,0,"Patch Set 1: Looks good to me, but someone else must approve"
71497,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
71498,0,Change has been successfully merged into the git repository.
71500,0,"Patch Set 1: Looks good to me, but someone else must approve"
71501,0,"Patch Set 1: Looks good to me, but someone else must approve"
71502,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71503,0,Change has been successfully merged into the git repository.
71504,0,"Patch Set 1: Looks good to me, approvedTesting."
71506,0,Change has been successfully merged into the git repository.
71508,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed- rebased- fixed typo"
71509,0,Change has been successfully merged into the git repository.
71512,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71513,0,Change has been successfully merged into the git repository.
71516,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71517,0,Change has been successfully merged into the git repository.
71520,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71521,0,Change has been successfully merged into the git repository.
71526,0,"Patch Set 11: Verified; Looks good to me, approved; IP review completedok, got it- rebased- fixed typos in commit message"
71527,0,Change has been successfully merged into the git repository.
71541,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completed"
71542,0,Change has been successfully merged into the git repository.
71546,0,"Patch Set 1: Looks good to me, approved"
71548,0,Change has been successfully merged into the git repository.
71549,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71550,0,Change has been successfully merged into the git repository.
71553,0,"Patch Set 11: Verified; Looks good to me, approved; IP review completed"
71554,0,Change has been successfully merged into the git repository.
71560,1,"Patch Set 10:Content can't change during reading. Or at least it shouldn't. The correct way to modify the config file is to write a new copy of it to config.lock, then atomically rename config.lock to config. Anyone who edits the file in place is just asking to corrupt the file, and/or confuse a concurrent reader.But since this code is opening the file and then later stats it to find the length to estimate the read, and these are both resolving the path down to the inode separately it is possible for the file to change in length if someone renames an updated version in between the two calls.This is low level enough, and used often enough by JGit, that I want it to robustly handle the file size changing when the lock file rename protocol was followed by a concurrent writer. Otherwise servers will fall over periodically when a concurrent writer races against a reader, and the reader will eventually get caught between the two path->inode translations.Go ask Sun why the felt it wasn't necessary to be able to determine the length of an open file from a FileInputStream using the fstat() system call. Blame them for needing to make us code defensively against this stupidity."
71573,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedcool"
71574,0,Change has been successfully merged into the git repository.
71582,1,Patch Set 3:oups - i'm pretty sure you took the wrong way somewhere....? your change is unrelated to this change?!
71583,1,Patch Set 3:Right. This was an accident. Can you push a new patch-set? Thanks.
71584,1,"Patch Set 3:no, since the server migration left our firewall exceptions in a wrong state, and our IT department is slow in reacting.... i cannot connect to the new server. please fetch patch-set 2 (maybe rebase it), and re-push."
71588,1,"Patch Set 11: Verified; Looks good to me, approved; Unclean IP, do not check in- fixed wrong JavaDoc- fixed style nit- waiting for CQ to be approved"
71590,0,"Patch Set 12: Verified; Looks good to me, approved; IP review completed- CQ 6347 was approved- rebased onto current master"
71591,0,Change has been successfully merged into the git repository.
71598,1,"Patch Set 10: Looks good to me, but someone else must approve; Unclean IP, do not check inI think that the IP-review could be started now"
71603,0,"Patch Set 4: (11 inline comments)thanks for the review, finally i had time to rebase and incorporate some changes. patchset will follow in a second"
71604,0,"Patch Set 1: Verified; Looks good to me, approved"
71606,0,Change has been successfully merged into the git repository.
71607,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71608,0,Change has been successfully merged into the git repository.
71609,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71610,0,Change has been successfully merged into the git repository.
71611,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71612,0,Change has been successfully merged into the git repository.
71613,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71614,0,Change has been successfully merged into the git repository.
71615,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71616,0,Change has been successfully merged into the git repository.
71617,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71618,0,Change has been successfully merged into the git repository.
71619,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71620,0,Change has been successfully merged into the git repository.
71621,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71622,0,Change has been successfully merged into the git repository.
71623,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71624,0,Change has been successfully merged into the git repository.
71625,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71626,0,Change has been successfully merged into the git repository.
71627,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71628,0,Change has been successfully merged into the git repository.
71629,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71630,0,Change has been successfully merged into the git repository.
71631,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71633,0,Change has been successfully merged into the git repository.
71634,0,"Patch Set 1: Verified; Looks good to me, approved"
71636,0,Change has been successfully merged into the git repository.
71637,1,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedIt looks good to me so far, but I'll checkout and verify later.If I wanted to be picky I would say that you could reduce the number of classes as I don't think you need both a Compression stream interface and abstract class.  In fact because gzip and deflate are only different in the compressor and content type that are passed in, I probably would have gone with just a compressable stream class and passed those things into the constructor.    I would also drop the enum for compression type, as that is not compatible with polymorphism anyway. Just use the string mime type instead.I'll review again later this weekend and verify operation."
71639,0,"Patch Set 1: Looks good to me, approvedI'm going to approve this and then make some of the simplifications I suggested."
71640,0,Change has been successfully merged into the git repository.
71645,0,"Patch Set 5: Looks good to me, approved; IP review completedLooks good now"
71646,0,Change has been successfully merged into the git repository.
71654,0,Patch Set 6: (5 inline comments)Tests that relays on old implementation must be removed and we cannot rewrite them to be useful in new implementation since both are very different. I'll try to unignore some tests in few days.
71657,0,"Patch Set 15: Looks good to me, approved; IP review completed(3 inline comments)"
71658,0,Change has been successfully merged into the git repository.
71684,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedrebased"
71685,0,Change has been successfully merged into the git repository.
71687,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedrebased"
71688,0,Change has been successfully merged into the git repository.
71694,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedrebased"
71695,0,Change has been successfully merged into the git repository.
71699,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71700,0,Change has been successfully merged into the git repository.
71701,0,Patch Set 1:The behavior of equality here matches the behavior of equality for C Git. Subsection names are case sensitive. Section names and variable names are case insensitive in the US-ASCII character set.This is OK because section names and variable names are limited to a subset of US-ASCII. Subsection names are case sensitive because they could contain localized characters in e.g. branch names and C Git didn't want to mess with that. :-)
71702,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71703,0,Change has been successfully merged into the git repository.
71706,0,"Patch Set 3: Looks good to me, but someone else must approveLooks good, verified that it works."
71707,0,"Patch Set 3: Looks good to me, but someone else must approve"
71708,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
71709,0,Change has been successfully merged into the git repository.
71711,0,"Patch Set 2: Looks good to me, but someone else must approveI checked every line of code where we use <<. I think this covers all of them."
71713,0,"Patch Set 2: Looks good to me, but someone else must approveWorks now for the user."
71714,0,"Patch Set 2: Looks good to me, approved; IP review completed"
71715,0,Change has been successfully merged into the git repository.
71717,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedFixed line endings.Thanks, Paul!"
71718,0,Change has been successfully merged into the git repository.
71721,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
71722,0,Change has been successfully merged into the git repository.
71727,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
71730,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71731,0,Change has been successfully merged into the git repository.
71732,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71733,0,Change has been successfully merged into the git repository.
71735,0,"Patch Set 2: Looks good to me, approved; IP review completed"
71736,0,Change has been successfully merged into the git repository.
71743,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
71744,0,Change has been successfully merged into the git repository.
71748,0,Patch Set 2: (3 inline comments)thanks for the review!
71751,1,"Patch Set 3: Verified; Looks good to me, approved; IP review completedI also like this more, the text only confuses the user."
71754,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed"
71755,0,Change has been successfully merged into the git repository.
71758,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
71759,0,Change has been successfully merged into the git repository.
71762,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedVery useful!"
71766,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71767,0,Change has been successfully merged into the git repository.
71768,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71769,0,Change has been successfully merged into the git repository.
71771,0,"Patch Set 2: Looks good to me, approvedThanks Steffen, looks good to me!"
71772,0,"Patch Set 2: IP review completedThanks Steffen, looks good to me!"
71773,0,Change has been successfully merged into the git repository.
71774,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
71777,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedIt's unfortunate but yes. We need to submit a CQ and wait :/"
71778,0,Change has been successfully merged into the git repository.
71787,1,"Patch Set 6: Verified; Looks good to me, approved; Unclean IP, do not check in- rebased- waiting for CQ to be approved"
71788,0,"Patch Set 6: IP review completedCQ has been approved, thanks Tomasz!"
71791,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completedrebased"
71792,0,Change has been successfully merged into the git repository.
71796,0,Patch Set 7: (3 inline comments)I only would like to see three classes being renamed. Other than that: Looks good to me
71801,0,"Patch Set 6:> if you agree I can push another patchset fixing these issuesSure, be my guest. Thx!"
71806,0,"Patch Set 8: Looks good to me, approved; IP review completed"
71807,0,Change has been successfully merged into the git repository.
71821,0,"Patch Set 3: I would prefer that you didn't submit this(3 inline comments)- yeah, I think it's a good idea to move this into a new project- this change needs a rebase and adaption of versions to 2.0- this change will need a CQ"
71823,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71824,0,Change has been successfully merged into the git repository.
71837,0,"Patch Set 8: Verified; Looks good to me, approved; IP review completed"
71838,0,Change has been successfully merged into the git repository.
71841,0,"Patch Set 6: I would prefer that you didn't submit thisI have problems with this. I agree that the display of ORIG_HEAD, FETCH_HEAD and MERGE_HEAD should be avoided for the 99% of the cases. But I would say that they are nearly always important to be displayed when the point to objects which are otherwise unreferenced. My suggestion: By default always show them when they point to something which is not referenced by any other ref. And add a preference which allows me to show them always & never.Here is my argument: Even middle-experienced EGit users start doing rebases quite soon. If I am in the middle of a rebase I sometimes want to compare the state before I started the rebase operation to the current state. Without ORIG_HEAD the state where I startet rebase is lost.Another argument: Even the gerrit Web-UI suggest the usage of FETCH_HEAD. If I just want to look at a specific proposal I want to be able to inspect it locally without having to create and afterwards delete a temporary ref. FETCH_HEAD is perfect for that.You may say: that's your use-case but 99% of the normal users don't work like that and are beeing disturbed by these technical refs. My argument: Fine, if they don't work like that then they will never have ORIG_HEAD,MERGE_HEAD and FETCH_HEAD pointing to something which is otherwise unreferenced. Means: they will not see these refs with the default setting I propose."
71842,1,"Patch Set 6:In reply to Christians remarks:I can see the point with respect to the Refs that are not otherwise referenced (users may want to use them during a Rebase, for example). However, this whole thing started out by some colleague (and me) being irritated by exactly such References. You do a Rebase, it finishes, and suddenly you have that ORIG_HEAD thing popping into your face from the HistoryView. Instead of the nice linear history you wanted to achieve by the Rebase, you suddenly have something looking very much like two branches....I think that turning the toggle into some Always/Unreferenced/Never switch would confuse the poor user too much. They would have some branch on a commit and no white label, but once the branch moves to the next commit, the white label would magically appear?So perhaps the solution to this could be to make the Additional Refs visible by default and put a button close to the ""Show All Branches"" button so that users can more easily suppress the Refs? In other words, invert the flag to mean ""Suppress Additional Refs""?"
71850,0,"Patch Set 8: Verified; Looks good to me, approved; IP review completedReflogWriter is a good idea, thanks Kevin."
71851,0,Change has been successfully merged into the git repository.
71857,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completedLooks fine."
71858,0,Change has been successfully merged into the git repository.
71866,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completedLooks good, we should mimic what cgit does."
71867,0,Change has been successfully merged into the git repository.
71870,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
71871,0,Change has been successfully merged into the git repository.
71874,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedLooks good, thanks Kevin."
71875,0,Change has been successfully merged into the git repository.
71877,0,"Patch Set 1: Looks good to me, approvedSimple refactoring to allow overriding, approved."
71879,0,Change has been successfully merged into the git repository.
71880,0,"Patch Set 1: Verified; Looks good to me, approvedVisual code review and testing complete.  Looks good.   Tested various literals, blank nodes and nested blank nodes.  GETs returned resources as expected."
71881,0,"Patch Set 1: IP review completedVisual code review and testing complete.  Looks good.   Tested various literals, blank nodes and nested blank nodes.  GETs returned resources as expected."
71882,0,Change has been successfully merged into the git repository.
71884,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedrebased"
71885,0,Change has been successfully merged into the git repository.
71891,0,"Patch Set 5: Verified; Looks good to me, approved; IP review completed"
71892,0,Change has been successfully merged into the git repository.
71902,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completed- unclear why change Ie2d1518f5f6a72a0d409285d553e378379456223 which is depending on this change could be merged with this change pending in review- this change is required to fix the test errors in change Ie2d1518f5f6a72a0d409285d553e378379456223"
71903,0,Change has been successfully merged into the git repository.
71909,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completed"
71910,0,Change has been successfully merged into the git repository.
71913,0,"Patch Set 3: Looks good to me, approved; IP review completedCode Reviewed and updated"
71914,0,Change has been successfully merged into the git repository.
71917,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedLooks good."
71918,0,Change has been successfully merged into the git repository.
71919,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
71922,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completedrebased"
71923,0,"Patch Set 1: Looks good to me, but someone else must approvePing. It's a one-liner, except for the test."
71925,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedLooks good, thanks."
71926,0,Change has been successfully merged into the git repository.
71929,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71930,0,Change has been successfully merged into the git repository.
71932,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71933,0,Change has been successfully merged into the git repository.
71935,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed"
71936,0,Change has been successfully merged into the git repository.
71939,1,"Patch Set 1: IP review completedVery nice :-)When the repository is selected in the Repositories View (or any node under the repository) the icon in the git toolbar looks disabled even when actions ""Abort"" and ""Continue"" in the drop-down are enabled. I think this is a general problem and selection of nodes in Repositories View doesn't enable corresponding git actions in git toolbar but it should do so. Probably some adapter to RepositoryViewNode types is missing here.I think this drop-down should be also added to the staging view as this is a very convenient place to find and resolve conflicts."
71941,1,"Patch Set 1: I would prefer that you didn't submit thisNow after having resolved a conflict the user can press the button ""Rebase"" again which opens the branch selection dialog. This is not meaningful in state ""Rebase interactive"". Is it possible to disable the button but enabling the list in this case?"
71942,1,"Patch Set 1:Good catch Stefan! Yes, we cannot disable rebase icon because the drop down menu will be also disabled, but we can prevent action from being executed ... maybe also add an information dialog, but I'm not sure about this idea. I'll push another version in a minute ;)"
71945,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71946,0,Change has been successfully merged into the git repository.
71947,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71948,0,Change has been successfully merged into the git repository.
71954,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completed"
71955,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completedLooks good."
71956,0,Change has been successfully merged into the git repository.
71959,1,"Patch Set 1: Looks good to me, but someone else must approveif submitted, this makes I9f5998fd1094c390c20cd5ecab7f1942cabb9164 obsolete"
71960,0,"Patch Set 1: Looks good to me, approved; IP review completed"
71961,0,Change has been successfully merged into the git repository.
71962,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71963,0,Change has been successfully merged into the git repository.
71964,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
71965,0,Change has been successfully merged into the git repository.
71967,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71968,0,Change has been successfully merged into the git repository.
71972,0,Patch Set 3:I couldn't find out how to use the paste button in a useful way
71974,0,"Patch Set 4: Verified; Looks good to me, approved; IP review completed- rebased- I meant the paste button near the refspec field, tried again and it works, don't know what I did before"
71975,0,Change has been successfully merged into the git repository.
71978,0,Patch Set 6:I couldn't find out how to use the paste button in a useful way
71984,0,"Patch Set 7: Verified; Looks good to me, approved; IP review completedrebased"
71985,0,Change has been successfully merged into the git repository.
71989,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedrebased"
71990,0,Change has been successfully merged into the git repository.
71993,0,"Patch Set 1: Looks good to me, but someone else must approve"
71995,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedrebased"
71996,0,Change has been successfully merged into the git repository.
71997,0,"Patch Set 1: Looks good to me, approvedApproved by alvsan09"
71999,0,Change has been successfully merged into the git repository.
72001,0,"Patch Set 3: Verified; Looks good to me, but someone else must approve; IP review completed"
72002,0,"Patch Set 3: Looks good to me, but someone else must approve"
72003,0,Change has been successfully pushed.
72005,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
72006,0,Change has been successfully merged into the git repository.
72007,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
72008,0,Change has been successfully merged into the git repository.
72009,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
72010,0,Change has been successfully merged into the git repository.
72011,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
72012,0,Change has been successfully merged into the git repository.
72021,0,"Patch Set 8: Verified; Looks good to me, approved; IP review completedLooks good, thanks Kevin for further iterating."
72022,0,Change has been successfully merged into the git repository.
72024,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedrebased"
72025,0,Change has been successfully merged into the git repository.
72029,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completedrebased"
72030,0,Change has been successfully merged into the git repository.
72034,0,"Patch Set 5: Looks good to me, approved; IP review completedrebased"
72035,0,Change has been successfully merged into the git repository.
72042,0,"Patch Set 3: Verified; Looks good to me, approved; IP review completed- fixed typo- rebased"
72043,0,Change has been successfully merged into the git repository.
72045,0,"Patch Set 2: Looks good to me, but someone else must approve"
72046,0,"Patch Set 2: Verified; Looks good to me, approved"
72048,0,Change has been successfully merged into the git repository.
72049,0,"Patch Set 1: Looks good to me, but someone else must approve(2 inline comments)"
72053,1,"Patch Set 2:i see the test failure on my gentoo linux in a Xephyr nested x server, running the StagingViewTest solely. it fails because the selection of the repository node in the (inactive!) repository view in the background does not trigger a selection event. this causes the staging view to not do anything - and the test fails. it works when i manually activate the view and click on the repository node - no idea whats wrong with the test.new patchset with new commit message is coming up..."
72056,0,"Patch Set 9: Verified; Looks good to me, approved; IP review completedLooks good, thanks Markus!"
72057,0,Change has been successfully merged into the git repository.
72061,0,Patch Set 5:just rebased once more as a staging view related change came in :)
72072,0,"Patch Set 7: Looks good to me, but someone else must approve; IP review completed- rebased- waiting for Jens to also review this change"
72074,0,"Patch Set 7: (3 inline comments)ok, i also changed the refresh action to trigger a complete recalculation of the index diff :) it's hard to get the index diff cache out of sync, but i can verify that at least a complete calculation starts if i press the button ;)"
72076,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72077,0,Change has been successfully merged into the git repository.
72079,0,"Patch Set 6: Verified; Looks good to me, approved; IP review completed"
72080,0,Change has been successfully merged into the git repository.
72091,1,"Patch Set 2: I would prefer that you didn't submit thisWhen revert hits a merge conflict I still see the progress dialog open and another error dialog opens at the top of the screen (looks pretty ugly) which says that the revert of commit xyz did not complete successfully but it doesn't disclose this is caused by a conflict which I should resolve, stage to declare conflict resolution and commit to seal the deal. This seems to be caused by the fact that we only check for failing paths but not for the merge result."
72092,1,"Patch Set 2:This commit was only aimed at fixing an NPE, it does not change the appearance of the revert failure dialog when failing paths don't exist but unmerged paths do.I would be happy to improve it to show what unmerged paths exist and instructions for committing them but it should probably be in a different change since it will required a JGit change to the RevertCommand to expose the unmerged paths."
72093,0,Change has been successfully merged into the git repository.
72095,0,Change has been successfully merged into the git repository.
72097,0,Change has been successfully merged into the git repository.
72098,0,Change has been successfully merged into the git repository.
72100,0,Change has been successfully merged into the git repository.
72102,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72103,0,Change has been successfully merged into the git repository.
72106,0,Change has been successfully merged into the git repository.
72108,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72109,0,Change has been successfully merged into the git repository.
72111,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72112,0,Change has been successfully merged into the git repository.
72115,1,"Patch Set 2: Looks good to me, approved; IP review completedyeah, this fixes the build problem on hudson.eclipse.org"
72116,0,Change has been successfully merged into the git repository.
72118,0,Change has been successfully merged into the git repository.
72123,1,"Patch Set 4: Do not submit(8 inline comments)A few minor comments.Also, could you please rebase on top of master.This will require resolving a conflict in AllHeadlessTests since that class was reformatted to have once test per line so that adding new tests only involves modifying a single line."
72125,0,Change has been successfully merged into the git repository.
72133,0,Change has been successfully merged into the git repository.
72134,0,Change has been successfully merged into the git repository.
72146,0,Change has been successfully merged into the git repository.
72151,0,Change has been successfully merged into the git repository.
72152,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72153,0,Change has been successfully merged into the git repository.
72155,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72156,0,Change has been successfully merged into the git repository.
72158,0,Change has been successfully merged into the git repository.
72159,0,Change has been successfully merged into the git repository.
72160,0,Change has been successfully merged into the git repository.
72162,0,Change has been successfully merged into the git repository.
72163,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72164,0,Change has been successfully merged into the git repository.
72165,0,Change has been successfully merged into the git repository.
72166,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72169,0,"Patch Set 2: Looks good to me, but someone else must approve"
72170,0,Change has been successfully merged into the git repository.
72172,0,"Patch Set 7: Looks good to me, approved; IP review completed"
72173,0,Change has been successfully merged into the git repository.
72180,0,"Patch Set 4: Looks good to me, but someone else must approve"
72181,0,"Patch Set 4: (2 inline comments)looks good, found some typos"
72185,0,"Patch Set 6: Looks good to me, approved; IP review completed"
72188,0,Change has been successfully merged into the git repository.
72190,0,Change has been successfully merged into the git repository.
72191,0,Change has been successfully merged into the git repository.
72192,0,Change has been successfully merged into the git repository.
72193,0,Change has been successfully merged into the git repository.
72194,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72203,0,"Patch Set 3: Looks good to me, approved; IP review completed"
72204,0,Change has been successfully merged into the git repository.
72206,0,Change has been successfully merged into the git repository.
72212,0,Change has been successfully merged into the git repository.
72219,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72220,0,Change has been successfully merged into the git repository.
72225,0,"Patch Set 6: Looks good to me, approved; IP review completed"
72226,0,Change has been successfully merged into the git repository.
72229,0,"Patch Set 4: Looks good to me, approved; IP review completed"
72230,0,Change has been successfully merged into the git repository.
72234,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72235,0,Change has been successfully merged into the git repository.
72237,0,Change has been successfully merged into the git repository.
72239,0,Change has been successfully merged into the git repository.
72241,0,Change has been successfully merged into the git repository.
72242,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72243,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedFrom my side ok. Let's fix the API!"
72247,0,Change has been successfully merged into the git repository.
72248,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72249,0,Change has been successfully merged into the git repository.
72250,0,"Patch Set 1: Looks good to me, approved; IP review completed(1 inline comment)"
72252,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72253,0,Change has been successfully merged into the git repository.
72255,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72256,0,Change has been successfully merged into the git repository.
72260,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72261,0,Change has been successfully merged into the git repository.
72263,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72264,0,Change has been successfully merged into the git repository.
72272,0,Change has been successfully merged into the git repository.
72274,1,"Patch Set 2: Looks good to me, approved; IP review completed- fixed typo in commit message- give credit to Vadim who has pointe out the problem"
72275,0,Change has been successfully merged into the git repository.
72277,0,Change has been successfully merged into the git repository.
72279,0,Change has been successfully merged into the git repository.
72281,0,Change has been successfully merged into the git repository.
72282,0,Patch Set 2:Thank you Matthias!! ;)
72283,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72284,0,Change has been successfully merged into the git repository.
72285,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72286,0,Change has been successfully merged into the git repository.
72287,0,Change has been successfully merged into the git repository.
72288,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72290,0,Change has been successfully merged into the git repository.
72292,0,Change has been successfully merged into the git repository.
72294,0,Change has been successfully merged into the git repository.
72295,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72296,0,Change has been successfully merged into the git repository.
72297,0,Change has been successfully merged into the git repository.
72298,0,Change has been successfully merged into the git repository.
72300,0,Change has been successfully merged into the git repository.
72306,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72307,0,Change has been successfully merged into the git repository.
72308,1,"Patch Set 1: I would prefer that you didn't submit thisI have to add a test which proves that this one fixes history rendering. Up to know I was not able to produce such a test, but I am proposing this early to get feedback from those who have problems with history rendering."
72309,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72310,0,Change has been successfully merged into the git repository.
72311,1,Patch Set 1:- can we close the associated bug ?- I will cherry-pick this to stable-1.2 as this was a bug confusing quite a number of users
72312,0,Change has been successfully merged into the git repository.
72314,0,Change has been successfully merged into the git repository.
72315,1,Patch Set 1:No problem ;)
72317,1,"Patch Set 6: I would prefer that you didn't submit this(4 inline comments)I think there is one bug with the >= vs. > on the length test, the other remarks are more style nits than actual bugs preventing submission."
72324,0,"Patch Set 8: Looks good to me, approved; IP review completed"
72325,0,Change has been successfully merged into the git repository.
72335,1,"Patch Set 1: Looks good to me, but someone else must approveThe change looks good to me. Sorry for missing the dependency nuance. I filed bug 365397 against API Tools to prevent this kind of situations in the future. Do you have a bug for dropping support for 3.4? I'm feeling obliged to update the code once you bump the dependency to 3.6."
72336,0,Change has been successfully merged into the git repository.
72338,0,Change has been successfully merged into the git repository.
72339,0,Patch Set 2:Thank you Matthias!
72341,0,Change has been successfully merged into the git repository.
72343,0,Change has been successfully merged into the git repository.
72362,0,Change has been successfully merged into the git repository.
72365,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72366,0,Change has been successfully merged into the git repository.
72369,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
72374,0,Change has been successfully merged into the git repository.
72381,1,Patch Set 1:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1778/ : UNSTABLE
72384,0,Change has been successfully merged into the git repository.
72386,0,Change has been successfully merged into the git repository.
72390,1,Patch Set 2: I would prefer that you didn't submit thischeckout action is now always disabled (tried this on Mac)
72394,1,Patch Set 2:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/2024/ : UNSTABLE
72398,0,"Patch Set 4: Looks good to me, but someone else must approveIt would be great if we could have some unit tests that will prevent from braking this functionality in future."
72402,0,Change has been successfully merged into the git repository.
72410,0,Change has been successfully merged into the git repository.
72413,1,Patch Set 3:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1729/ : UNSTABLE
72427,0,Change has been successfully merged into the git repository.
72434,0,Change has been successfully merged into the git repository.
72437,0,Change has been successfully merged into the git repository.
72438,0,Change has been successfully merged into the git repository.
72440,0,Change has been successfully merged into the git repository.
72448,0,Change has been successfully merged into the git repository.
72452,1,Patch Set 2: I would prefer that you didn't submit this(1 inline comment)I'm afraid that this change will not work for non-workspace files
72455,0,"Patch Set 2:I will add some unit tests now, thanks for the reminder."
72457,0,Change has been successfully merged into the git repository.
72458,0,"Patch Set 4: Looks good to me, approved"
72460,0,Change has been successfully merged into the git repository.
72468,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
72469,0,"Patch Set 3: Looks good to me, approved"
72470,0,Change has been successfully merged into the git repository.
72479,0,Change has been successfully merged into the git repository.
72485,0,Change has been successfully merged into the git repository.
72489,0,"Patch Set 7: (5 inline comments)nice feature, works as expectedHow about adding a test for this non-trivial feature ?I think it would be more consistent to also provide this same functionality when the compare editor is opened from synchronize view in workspace mode and also when opened from the staging view ?"
72507,1,Patch Set 15: I would prefer that you didn't submit thisWhen opening compare editor on a dirty / not yet staged non-workspace file from staging view in the pane for unstaged changes I can't save changes done in the left pane of the compare editor (corresponding to working tree state of the file). When clicking save or Ctrl-S the change I did in the left pane disappears. When copying a hunk from the right pane to the left using the left arrow button the copying works but the result cannot be saved. For workspace files this works properly.
72512,0,Change has been successfully merged into the git repository.
72523,0,"Patch Set 13: I would prefer that you didn't submit this(2 inline comments)- when saving the compare editor it seems the synchronize view doesn't auto-refresh, when explicitly synchronizing again it looks fine- can't open compare editor from staging view for non-workspace files"
72529,1,"Patch Set 9:works like a charm for the described use case I think it would make sense if this would also hunks of untracked files could be staged in this way, also the other way round it should also be possible to revert staging of previously unstaged changes"
72539,0,Change has been successfully merged into the git repository.
72543,0,Change has been successfully merged into the git repository.
72546,0,Change has been successfully merged into the git repository.
72547,1,"Patch Set 1: I would prefer that you didn't submit thisThis change works for java files. In case of eg. xml files d-n-d will insert file name or path into xml file content.Here are steps to reproduce this:1. Open an xml file eg. pom.xml by dragging from repositories view or from package explorer2. Grab a file from repositories view and drop it on xml editor3. bum, you inserted path to dropped file into xml content"
72549,1,Patch Set 1: No scoreIn deed it seams to be default Eclipse behavior
72551,0,Change has been successfully merged into the git repository.
72554,0,Change has been successfully merged into the git repository.
72558,0,Change has been successfully merged into the git repository.
72560,1,Patch Set 2: I would prefer that you didn't submit thisI found the following problem:1. There is a commit c with branch b pointing to it2. I checkout c itself to get a detached HEAD (did it on command line)3. Now I execute the Delete Branch action and do not get a warning.As result I have a commit c with no branch pointing on it.
72561,0,"Patch Set 2:Well, if you didn't submit anything with that new branch, that's fine. The logic comes from DeleteBranchOperation from egit.core, so there is nothing special here."
72564,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72565,0,Change has been successfully merged into the git repository.
72566,0,Change has been successfully merged into the git repository.
72567,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72568,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72569,0,Change has been successfully merged into the git repository.
72572,0,Change has been successfully merged into the git repository.
72574,0,Change has been successfully merged into the git repository.
72584,0,"Patch Set 1: Looks good to me, approved; IP review completedWorks fine"
72585,0,Change has been successfully merged into the git repository.
72586,0,Change has been successfully merged into the git repository.
72588,0,Change has been successfully merged into the git repository.
72590,0,Change has been successfully merged into the git repository.
72592,0,Change has been successfully merged into the git repository.
72594,0,Change has been successfully merged into the git repository.
72596,0,Change has been successfully merged into the git repository.
72598,0,Change has been successfully merged into the git repository.
72599,0,Change has been successfully merged into the git repository.
72601,0,Change has been successfully merged into the git repository.
72602,0,Change has been successfully merged into the git repository.
72603,0,Change has been successfully merged into the git repository.
72605,0,Change has been successfully merged into the git repository.
72607,0,Change has been successfully merged into the git repository.
72609,0,Change has been successfully merged into the git repository.
72613,0,Change has been successfully merged into the git repository.
72615,0,Change has been successfully merged into the git repository.
72616,0,Change has been successfully merged into the git repository.
72618,0,Change has been successfully merged into the git repository.
72619,0,Change has been successfully merged into the git repository.
72621,0,Change has been successfully merged into the git repository.
72623,0,Change has been successfully merged into the git repository.
72625,0,Change has been successfully merged into the git repository.
72627,0,Change has been successfully merged into the git repository.
72629,0,Change has been successfully merged into the git repository.
72631,0,Change has been successfully merged into the git repository.
72633,0,Change has been successfully merged into the git repository.
72634,1,Patch Set 1:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1521/ : UNSTABLE
72637,0,Change has been successfully merged into the git repository.
72648,0,"Patch Set 5: Looks good to me, approved; IP review completed"
72650,0,Change has been successfully merged into the git repository.
72653,0,Change has been successfully merged into the git repository.
72655,0,Change has been successfully merged into the git repository.
72656,1,Patch Set 2:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1558/ : UNSTABLE
72661,0,Change has been successfully merged into the git repository.
72665,0,"Patch Set 1: Looks good to me, approved; IP review completed(1 inline comment)"
72669,0,Change has been successfully merged into the git repository.
72671,0,Change has been successfully merged into the git repository.
72672,1,Patch Set 2:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1554/ : UNSTABLE
72675,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72676,0,Change has been successfully merged into the git repository.
72679,0,"Patch Set 3: Looks good to me, approved; IP review completed"
72680,0,Change has been successfully merged into the git repository.
72682,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72683,0,Change has been successfully merged into the git repository.
72685,1,Patch Set 1:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1519/ : UNSTABLE
72688,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72691,0,Change has been successfully merged into the git repository.
72692,1,Patch Set 3:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1544/ : UNSTABLE
72693,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72694,0,Change has been successfully merged into the git repository.
72701,0,Change has been successfully merged into the git repository.
72702,1,Patch Set 6:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1542/ : UNSTABLE
72713,0,Change has been successfully merged into the git repository.
72721,0,Change has been successfully merged into the git repository.
72727,1,"Patch Set 8: I would prefer that you didn't submit this(7 inline comments)- the testing notes are described in bug 343597 - when following these instructions I face some compile errors with the emf.compare projects (see bug), any hints to fix this appreciated"
72736,0,"Patch Set 1: Looks good to me, approved; IP review completedThanks, looks cleaner now."
72737,0,Change has been successfully merged into the git repository.
72738,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72739,0,Change has been successfully merged into the git repository.
72743,0,Change has been successfully merged into the git repository.
72751,0,"Patch Set 4: Looks good to me, approved; IP review completedfixed style nit"
72752,0,Change has been successfully merged into the git repository.
72757,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72758,0,Change has been successfully merged into the git repository.
72762,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72763,0,Change has been successfully merged into the git repository.
72765,0,Change has been successfully merged into the git repository.
72773,0,Change has been successfully merged into the git repository.
72774,1,Patch Set 1:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1482/ : UNSTABLE
72777,1,"Patch Set 3:Ok, here's Round 2.  I think I hit all of the style issues from before, and addressed the commonBase problem we discussed.  I did it in a slightly different way than your suggestion, but I think it makes a little bit more sense given how the data comes into the generator.  Let me know if you see any problems with it.The generator should now return all commits up to the specified depth, ignoring any that were part of commonBase.  But it will correctly start returning any commits below the boundary of a previous shallow checkout, and return all commits at the old boundary as UNINTERESTING so that the PackWriter can exclude the right things from the pack.  As far as I can tell, this is correct behavior in all cases.I couldn't do the SEEN thing like I was planning on doing, because uninteresting commits get the flag set on them as well (as part of markStart()), so sometimes it's already present on commits in our queue even though we haven't added all their parents yet.  I reworked the depth stuff a bit and added some comments, hopefully making it clear enough that the depth sorting accomplishes the same thing.I'm cautiously optimistic that this is getting pretty close.  Please let me know if there's anything else that needs to be done to get this thing completely out the door."
72778,0,Patch Set 3: I would prefer that you didn't submit this(19 inline comments)You almost might not want to bother reading these comments.  I'm starting to realize its pretty complex and I don't feel like I fully understand it all myself.  I'm going to try poking at it more tomorrow to see if I can get somewhere with it.
72782,1,Patch Set 3:Shawn is on leave until October so his responses will be a bit slow. The rest of the EGit and JGit teams are focusing on shipping 0.9 so our responses will be a bit slow too.Sorry for the delayed response.
72786,1,"Patch Set 3:I am, but sadly I haven't been able to put any time into this lately.  I'm hoping to work on it a bit this week.  Sorry for the delay. :("
72787,0,Patch Set 3:Thanks for the response Matt.Just checking if you're alive as we're planning to release 0.10 December 15th and if we want this in... would be good to get something squared away by the end of November.Thanks!
72790,1,"Patch Set 8: Looks good to me, approved; Unclean IP, do not check inMatt, can you login to Bugzilla and comment on [1]? We need a statement on Bugzilla from you that says the following:1.  You authored 100% of the content2.  You have the rights to contribute the content to Eclipse (to be augmented by employer consent)3.  You contribute the content under the EDL (BSD style license)https://bugs.eclipse.org/bugs/show_bug.cgi?id=301627"
72791,0,"Patch Set 8:Awesome, thanks for taking another look at this!  I'm checking with a couple people here and making sure there aren't any issues with transferring the license, but this was all developed with the express purpose of being submitted to you guys, so I don't foresee any problems.I'm not sure I completely understand your comments about the extra commits...is it doing something incorrectly?"
72792,1,"Patch Set 8:There was a bad interaction between this patch, and a change that I added to PackWriter more recently. I had to turn off my reorder commits logic when a shallow clone is being used, because the reordering was packing parent commits that should not have been included in the pack. Not your fault, since the code is newer than the last version you touched in the patch. :-)I think I also busted shallow clone over smart HTTP. The server always crashes with an exception during the exchange, but it works correctly. Smart HTTP clients have an extra intermediate request that the UploadPack code isn't expecting. I'll try to get it fixed just so we don't have the exception showing up in server logs."
72795,1,"Patch Set 5:Woo hoo, I managed to sneak away to work on this for a little bit! :)This should fix all of the style issues Shawn mentioned in the previous one.  I'm still relatively confident that the basic algorithm in this version will work right, but I'd really appreciate some review on that--there are a lot of weird edge cases."
72798,1,Patch Set 5:Thought I'd drop by again to check on this.  Anybody else had a chance to look it over?
72800,1,"Patch Set 7: Looks good to me, but someone else must approve; Unclean IP, do not check inPatch set 7 looks good to me. The extra commits was caused by the resorting process done during a normal pack creation. Since shallow clones are already pretty borked (and not likely to have many commits), I just bypassed that resort logic in PackWriter on a shallow pack."
72801,0,Patch Set 1:This will most likely need a CQ once ready Shawn. Let me know when it's in a good state and I can take care of the CQ process.
72803,0,Patch Set 1: (3 inline comments)Style comments are all simple enough--I'll submit a new version that has all of that taken care of.A couple other comments inline.
72806,0,Change has been successfully merged into the git repository.
72807,0,"Patch Set 12:Huzzah!  Thanks for helping to get this pushed through (and thanks especially to Shawn, for going back and forth about a hundred times with me on the algorithmic details.)  Hopefully folks will find this useful."
72809,1,"Patch Set 6: I would prefer that you didn't submit thisPatch set 6 is rebased and (mostly) works. Simple testing shows shallow clones and deepen requests are functional.The shallow clone is a bit wrong right now; its over-transmitting a number of commits that should not have been set. 331 commits for a shallow clone of C Git are sent, but not expected, and show up as dangling commits on the client side."
72811,1,"Patch Set 9: Looks good to me, but someone else must approve; Unclean IP, do not check inI think this version fixes the stack trace servers get during the shallow clone over smart HTTP."
72817,0,Change has been successfully merged into the git repository.
72822,0,Change has been successfully merged into the git repository.
72830,0,"Patch Set 4: Looks good to me, but someone else must approve"
72831,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completed"
72833,0,Change has been successfully merged into the git repository.
72835,0,Patch Set 1: I would prefer that you didn't submit this(4 inline comments)Looks good except a few minor things.
72836,0,Patch Set 1: (5 inline comments)I screwed up a bit with Patch Sets but the last one seems fine.I committed fixes as separate commit with same Change-Id on my fix branch. Then rebased it on top of the most recent changes from upstream. Then pushed to gerrit. For some reason only first commit from my branch was recognized that's why my second Patch Set looks exactly as first. The third patch set is the result of soft reset and ammend of my fixes from second commit into third. I hope this won't affect merging of my changes.
72839,0,Patch Set 3: (3 inline comments)Patch looks good to me besides a small glitch with the junit version in the manifest.
72840,0,"Patch Set 3:> I hope this won't affect merging of my changes.It won't. Merging a change means merging its latest patch-set.Older patch-sets don't play any role.This change looks OK for me except that I am not sure about themotivation for the changes in the MergeCommandTest:The theory testMergeSuccessAllStrategies was added in order toreproduce the ClassCastException issue, and it does it.However, several other test were converted to theories but they don'treproduce the ClassCastException.  While this may be a valuablecontribution to execute these tests with multiple merge strategies,it seems like this doesn't directly help for the issue you are fixing with thischange.  I would rather propose to split your change into two changes:- one which introduces the testMergeSuccessAllStrategies and fixes the ClassCastException- one which converts several other tests into theories in order to improve the quality of the tests in general"
72843,0,Change has been successfully merged into the git repository.
72849,0,Change has been successfully merged into the git repository.
72852,0,Change has been successfully merged into the git repository.
72853,1,Patch Set 2:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1507/ : UNSTABLE
72855,0,Change has been successfully merged into the git repository.
72856,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72857,0,Change has been successfully merged into the git repository.
72858,0,Change has been successfully merged into the git repository.
72860,0,"Patch Set 1: Looks good to me, approved; IP review completed"
72861,0,Change has been successfully merged into the git repository.
72862,0,Change has been successfully merged into the git repository.
72864,0,Change has been successfully merged into the git repository.
72866,0,"Patch Set 1: Looks good to me, approved; IP review completedThanks, Remy"
72867,0,Change has been successfully merged into the git repository.
72869,0,Change has been successfully merged into the git repository.
72871,0,Change has been successfully merged into the git repository.
72872,1,Patch Set 3:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1489/ : UNSTABLE
72876,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks good to me ... if I would know why hudson complains I would merge it."
72877,1,Patch Set 2:This test failure isn't connect with this patch. I would suggest to ignore it.
72882,0,Change has been successfully merged into the git repository.
72883,1,Patch Set 3:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1488/ : UNSTABLE
72885,0,Change has been successfully merged into the git repository.
72886,1,Patch Set 2:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1487/ : UNSTABLE
72890,0,Change has been successfully merged into the git repository.
72891,0,Change has been successfully merged into the git repository.
72892,0,Change has been successfully merged into the git repository.
72894,0,Change has been successfully merged into the git repository.
72895,0,Change has been successfully merged into the git repository.
72896,0,Change has been successfully merged into the git repository.
72898,0,Change has been successfully merged into the git repository.
72902,0,Change has been successfully merged into the git repository.
72903,1,Patch Set 2:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1485/ : UNSTABLE
72906,0,"Patch Set 2: Looks good to me, but someone else must approveThanks, Stefan."
72907,0,"Patch Set 2: Looks good to me, approved; IP review completedThanks, Robin!"
72908,0,Change has been successfully merged into the git repository.
72910,0,"Patch Set 4: Looks good to me, but someone else must approveChanged all of JGit to use the new Set style, but left the older Collecton marked @Deprecated until 2.0."
72911,0,Change has been successfully merged into the git repository.
72912,0,"Patch Set 4: Looks good to me, approved; IP review completed"
72920,1,Patch Set 1:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1429/ : UNSTABLE
72924,0,"Patch Set 5: Looks good to me, approved; IP review completed"
72925,0,Change has been successfully merged into the git repository.
72927,1,"Patch Set 3:Thanks Remy, I missed the second leaking example you listed in that bug, uploaded a new changeset."
72929,1,"Patch Set 2:The patch itself looks good. Kevin, are you planning to use a second change set for the other problem described in the bug or is this change set still a work-in-progress?"
72930,1,Patch Set 1:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1474/ : UNSTABLE
72932,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72933,0,Change has been successfully merged into the git repository.
72935,0,Change has been successfully merged into the git repository.
72937,0,Change has been successfully merged into the git repository.
72939,0,Change has been successfully merged into the git repository.
72941,0,Change has been successfully merged into the git repository.
72942,0,Change has been successfully merged into the git repository.
72943,0,Change has been successfully merged into the git repository.
72945,0,Change has been successfully merged into the git repository.
72946,0,Change has been successfully merged into the git repository.
72947,0,Change has been successfully merged into the git repository.
72949,0,Change has been successfully merged into the git repository.
72950,1,Patch Set 2:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1464/ : UNSTABLE
72952,1,"Patch Set 4:It now uses the HEAD ref by default, good idea."
72955,1,Patch Set 2:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/1439/ : UNSTABLE
72958,0,Change has been successfully merged into the git repository.
72963,0,Patch Set 3: I would prefer that you didn't submit this(1 inline comment)- whitespace nit- how about a test to verify we don't break this :)
72967,0,Change has been successfully merged into the git repository.
72969,0,Change has been successfully merged into the git repository.
72970,0,"Patch Set 2: Looks good to me, approved; IP review completedThanks, Robin!"
72971,0,Patch Set 1: I would prefer that you didn't submit this(1 inline comment)This is a great feature.Please see my inline comment.
72974,0,"Patch Set 2: Looks good to me, approved; IP review completedThat's neat. I'll directly twitter that :-)"
72975,0,Change has been successfully merged into the git repository.
72977,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
72979,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed- adapted tests- rebased"
72980,0,Change has been successfully merged into the git repository.
72982,0,"Patch Set 2: Looks good to me, approved; IP review completed"
72983,0,Change has been successfully merged into the git repository.
72985,0,Change has been successfully merged into the git repository.
72987,0,"Patch Set 1: Looks good to me, approved"
72988,0,Change has been successfully merged into the git repository.
72989,1,"Patch Set 1:Sorry about that, didn't notice the change. The encoding problem is still fixed, because CompareUtils.getFileRevisionTypedElement does the right thing with Ie26b68355d53456c1000afb51f15f12f5098e6be."
72990,0,Change has been successfully merged into the git repository.
72991,0,Change has been successfully merged into the git repository.
72993,0,Change has been successfully merged into the git repository.
72994,0,Change has been successfully merged into the git repository.
72995,0,Change has been successfully merged into the git repository.
72997,0,Change has been successfully merged into the git repository.
72999,0,Change has been successfully merged into the git repository.
73000,0,Change has been successfully merged into the git repository.
73002,0,Change has been successfully merged into the git repository.
73005,0,Change has been successfully merged into the git repository.
73008,0,"Patch Set 3: Looks good to me, approved; IP review completed"
73009,0,Change has been successfully merged into the git repository.
73013,0,Change has been successfully merged into the git repository.
73016,0,Change has been successfully merged into the git repository.
73021,1,Patch Set 2:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/820/ : UNSTABLE
73026,0,"Patch Set 3: I would prefer that you didn't submit this(3 inline comments)I like this change, now commit dialog looks really great (maybe it is less intuitive)."
73029,0,Patch Set 4:Placed toolbar above message and file areas so that it will scale better with a dropdown menu at the end of the toolbar for advanced actions (currently used for configure preferences).  Thanks Chris Aniszczyk for the suggestion.http://img.skitch.com/20110519-8ggj8ytsxtbmwbnmn92wbc2gf7.png
73034,1,Patch Set 1:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/819/ : UNSTABLE
73037,0,Change has been successfully merged into the git repository.
73040,1,Patch Set 5:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/807/ : UNSTABLE
73047,0,Change has been successfully merged into the git repository.
73054,0,Change has been successfully merged into the git repository.
73056,0,"Patch Set 1: I would prefer that you didn't submit thisneeds tests, love"
73058,0,Change has been successfully merged into the git repository.
73062,0,Change has been successfully merged into the git repository.
73065,0,Change has been successfully merged into the git repository.
73067,0,Change has been successfully merged into the git repository.
73068,1,"Patch Set 1: Looks good to me, but someone else must approveI have verified that this works ok for my test case. On second merge we will get a conflict and that's way better than mismerge or null pointer exception. Command line git would merge this using recursive algorithm but that's another story.$ ./test-case.sh...+ jgit merge d1/masterFast-forward+ jgit merge d2/masterCONFLICT(content): Merge conflict in xAutomatic merge failed; fix conflicts and then commit the result"
73074,0,Change has been successfully merged into the git repository.
73076,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
73078,0,Change has been successfully merged into the git repository.
73079,0,Change has been successfully merged into the git repository.
73081,0,Change has been successfully merged into the git repository.
73082,0,Change has been successfully merged into the git repository.
73084,0,"Patch Set 3: Looks good to me, but someone else must approveThanks Matthias, uploaded new patch with that corrected."
73085,1,"Patch Set 3:ok, this looks betterI found a use case where ""select all"" / ""deselect all"" would be more useful than ""toggle selection"":Suppose I have 17 repos in the list and 8 are already checked, now I want to just search one repo which is not yet selected, toggle selection is not useful here as it would select the 9 repos which weren't selected previously, so I need to click a lot of check boxes to reach what I want.In this case the cheapest path would require 9 clicks (deselect 8 and select one).Using ""deselect all"" button I could reach what I want with just 2 clicks.Hence I would vote for replacing the ""toggle selection"" by ""select all"" / ""deselect all"" buttons, this pattern is also used in import projects wizard."
73089,1,Patch Set 7:I darkened the check mark. I would prefer to keep them the current size since it is the same size as the collapse all and expand all icons used in toolbar buttons throughout Eclipse.
73091,1,Patch Set 4:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/804/ : UNSTABLE
73099,0,Change has been successfully merged into the git repository.
73100,1,Patch Set 8:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/814/ : UNSTABLE
73103,0,Change has been successfully merged into the git repository.
73108,1,Patch Set 3: I would prefer that you didn't submit thisThe invalid file mode bug has been fixed.  Unstaging however seems completely broken.  When I unstage a change the index is updated to a blob which matches the working tree instead of HEAD so 'git status' doesn't see any change but the change is there in the working tree.  I'm quite confused by this behaviour and have tried a few variations of the implementation but can't find the bug.
73112,0,Change has been successfully merged into the git repository.
73115,0,Change has been successfully merged into the git repository.
73116,1,Patch Set 4:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/799/ : UNSTABLE
73117,0,"Patch Set 1: I would prefer that you didn't submit this(2 inline comments)I like the idea of this feature! I wonder if this could replace ""Synchronize..."" on projects and we move the full-fledged Synchronize Action into the Repository view instead of the team menu."
73130,0,Change has been successfully merged into the git repository.
73131,0,Change has been successfully merged into the git repository.
73133,0,Change has been successfully merged into the git repository.
73134,0,Change has been successfully merged into the git repository.
73135,1,Patch Set 1:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/798/ : UNSTABLE
73136,0,Change has been successfully merged into the git repository.
73137,0,Change has been successfully merged into the git repository.
73138,0,Change has been successfully merged into the git repository.
73139,0,Change has been successfully merged into the git repository.
73141,0,Change has been successfully merged into the git repository.
73147,0,"Patch Set 1: I would prefer that you didn't submit this(1 inline comment)Test looks good, but implementation could be simpler (see comment)."
73157,0,Change has been successfully merged into the git repository.
73160,1,Patch Set 1:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/792/ : UNSTABLE
73164,0,Change has been successfully merged into the git repository.
73167,0,Change has been successfully merged into the git repository.
73168,0,Change has been successfully merged into the git repository.
73170,0,Patch Set 1: I would prefer that you didn't submit thisThis is work-in progress.  Feedback welcome.
73171,1,"Patch Set 1: I would prefer that you didn't submit this(15 inline comments)I did some testing and compared this view with the staging/commit view provided by GitX.I think the UI should rather follow what GitX does, I think this is close to optimal.I would propose to do the following changes:- add a combo to select the repository, if you feel you really need a way to have a staging view for all repositories add an entry ""<all>"" to this combo, I think looking at staged changes for multiple repos isn't really useful and requires more scrolling- divide the staging view horizontally into three panes in the same way as GitX does:   - list of unstaged files in the left pane, decorate modified, deleted, untracked files with different decorators, this removes the need for a lot of tree nodes   - draft for commit message in the middle (could reuse the new stuff done by Kevin)   - list of staged change on the right side, decorate to show details about staged changes- I would prefer flat file lists as this removes the need to open/collapse unnecessary tree nodes which also eat up vertical screen real estate (compare the two screenshots I attached to bug 313263 comparing current EGit proposal and GitX)"
73175,0,"Patch Set 5: I would prefer that you didn't submit this(1 inline comment)rebased to adapt build to new target version 1.0.0I like this approach it looks much better now :-)Mainly since the layout is much more clear and has the right focus for the task we want to accomplish with the staging viewI also like the idea to use the current selection to decide which repo is of interest.Though some ideas for further improvement:- the staging view should have an explicit label showing for which repository the status is currently being displayed- the staging view should also follow if the focus is set on a repository using the repositories view- the file lists should be sorted, maybe there could be options for different sorting criteria (alphabetically, file status)- on a big screen this layout works well on a small laptop screen we need a way to see the full path of the files in the lists, this requires more horizontal real estate for the file lists (maybe we could have an option to stack the two lists vertically) or we make the lists themselves more compact by something similar to compressed package option in package explorer"
73181,1,"Patch Set 7:The commit pane still grabs more horizontal space than necessary according to auto-wrapping limit.The vertical distance between the checkboxes isn't consistent (the bottom one has a bit larger distance).Drag&Drop doesn't yet work, right ?I noticed that when a project shared with git is selected and then the staging view is opened via ""Window > Show View > Git > Staging View"" the selection isn't used to fill the staging view initially, so you have to click the project again to get the staging view filled with the data for the repository this project is in.Adding Jens as a reviewer to comment on your last two open points."
73186,1,"Patch Set 8: Looks good to me, but someone else must approve; Unclean IP, do not check inLooks good as first iteration. Has been submitted to IP review. Hence blocked via IP review flag until CQ has been approved. Subsequent iterations should be done in additional changes depending on this one to not invalidate the started IP review process for this first part."
73191,0,Change has been successfully merged into the git repository.
73192,1,Patch Set 10: (5 inline comments)Staging view is a great thing. I like the UI layout.I have some concerns regarding the update of the staging view using reload (calculating IndexDiff). IndexDiff.diff is very expensive on big repos. On the other hand IndexChangedEvent / RefsChangedEvent occur in many situations. So I'm not sure if it's feasible to update the view based on these events.
73194,1,Patch Set 9:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/696/ : UNSTABLE
73198,1,Patch Set 6: (4 inline comments)I uploaded another iteration for the mockup in bug 313263
73199,1,Patch Set 6: (1 inline comment)That screen shot looks good.  Do you think its preferable or we should just have both accessible by a menu option?
73201,0,Change has been successfully merged into the git repository.
73204,0,Change has been successfully merged into the git repository.
73206,0,Change has been successfully merged into the git repository.
73215,1,"Patch Set 2:Dariuz, the culprit was the mapping as it did not return exact traversals (only projects) for the resources included in this model container.Regarding the resources outside of the workspace: I'm not sure if we should handle this case here. Maybe the commit dialog should warn the user that there may be resources outside of the workspace."
73218,1,"Patch Set 2:Dariusz, I'm sorry but I cannot reproduce the NPE with closed projects. But it makes sense to not give out null Traversals, they're now removed in the current patchset. Could you try to reproduce the problem?Fixed style nit."
73222,0,Patch Set 1: I would prefer that you didn't submit this(3 inline comments)It would be nice if files listed in <working tree> node would be automatically selected in commit dialog so that user shouldn't think what files he need to select.I've also added minor style nits comments.BTW. The commit dialog doesn't include resources that are out of the workspace or in closed project. In some cases this behavior can confusing for the users
73224,0,Change has been successfully merged into the git repository.
73225,1,Patch Set 6:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/791/ : UNSTABLE
73226,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73227,0,Change has been successfully merged into the git repository.
73229,0,Change has been successfully merged into the git repository.
73230,0,Change has been successfully merged into the git repository.
73235,0,Change has been successfully merged into the git repository.
73241,0,"Patch Set 3: Looks good to me, but someone else must approve"
73242,0,"Patch Set 1: Looks good to me, but someone else must approveLooks good, works fine with the new test in change 3409."
73246,0,"Patch Set 2: Looks good to me, but someone else must approve"
73253,1,"Patch Set 3: Looks good to me, but someone else must approveI found out that the error is related to bug 292138. It only occured when the history page was already there on workbench startup and the framework instantiated two HistoryPages.I added a line that fixes it."
73258,0,Change has been successfully merged into the git repository.
73269,0,"Patch Set 1: I would prefer that you didn't submit thisActually JVM uses StringBuffer (on bytecode level) for all append operations on strings.Lets suppose that in feature somebody will implement better append algorithm than it is actually used in StringBuffer and this new implementation would replace StringBuffer in complied java classes. If we are bind to StringBuffer implementation in our code we should replace it, but if we would be relaying on JVM string-appending-implementation we'll get performance boost after code recompilation.Therefore I'm not sure that should we tray to be more intelligent then java compiler and JVM developers ..."
73272,0,Change has been successfully merged into the git repository.
73275,0,Change has been successfully merged into the git repository.
73276,0,"Patch Set 1: Looks good to me, approved; IP review completedI tested it with a/kernel/sched_fair.c and it worked."
73277,0,Change has been successfully merged into the git repository.
73279,0,Change has been successfully merged into the git repository.
73284,0,"Patch Set 2: I would prefer that you didn't submit this- icon for menu entry is missing (green + like ""add"" in team menu)- add action is not available on root of the working directory, this would be handy to stage all changes in one action- add action shouldn't be available on .git folder and all nodes below- would be nice if multi-selection of multiple files/folders would be also supported- it works but isn't easy to use as there are no decorators in the repositories view so the status for non-workspace files can only be seen in commit dialog"
73292,0,Change has been successfully merged into the git repository.
73293,1,Patch Set 1:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/724/ : UNSTABLE
73295,0,Change has been successfully merged into the git repository.
73297,0,Change has been successfully merged into the git repository.
73299,0,Change has been successfully merged into the git repository.
73302,0,"Patch Set 2: Looks good to me, but someone else must approve"
73303,0,Change has been successfully merged into the git repository.
73304,0,Change has been successfully merged into the git repository.
73306,0,"Patch Set 5: Looks good to me, but someone else must approve"
73307,0,Change has been successfully merged into the git repository.
73311,0,"Patch Set 1: Do not submit(8 inline comments)Had a few comments before we submit this, great start though, thanks for the contribution."
73318,0,Change has been successfully merged into the git repository.
73322,0,Change has been successfully merged into the git repository.
73325,1,"Patch Set 4:I finally made it, here is a simpler patch, without those ugly hacks in org.eclipse.jgit.pgm."
73327,0,"Patch Set 6: Looks good to me, approved; IP review completed"
73328,0,Change has been successfully merged into the git repository.
73331,1,"Patch Set 1: Do not submit(11 inline comments)We can't submit this because its a partially set up test case. The test might show the bug, but its not in a state that we can submit because it messes around with the public API of the pgm package.Anyway, thank you for the test that shows the bug."
73334,0,Change has been successfully merged into the git repository.
73343,1,"Patch Set 3:Fixes the untracked bug & rebased.For the re-open compare view, CompareUtils.openInCompare looks like it would do the trick but that would need modifying the Command*Handler instances to use that method instead of CompareUI.openCompareEditor.Need to;* fix drag and drop (is there jgit support for unstage?)* add context menu* workspace file event tracking"
73344,1,Patch Set 3:- ACK now can open compare on untracked file- I think CommitFileDiffViewer.showTwoWayFileDiff(final FileDiff d) shows how to open compare view with reusing the compare view (that's what is used when double clicking on a file entry in a commit's file list in History View when compare mode is enabled in order to bring up the compare view)- for unstage support in jgit have a look at IndexDiffTest.removeFromIndex(String path)I think this should do the trick
73347,1,"Patch Set 2: I would prefer that you didn't submit thislooks quite good, but some things could still be improved (your choice if you do this in this change or a later one):- can't open compare view on untracked file but on deleted file, to not surprise users this should be also possible on untracked files- staging view doesn't recognize if a new (hence untracked file) is created or an existing one is modified and saved- I think by default compare view should be reused so that you don't end up with lots of these views when inspecting the current status. There could be a toggle to pin compare view so that subsequent double click would add a new compare view for the next file.- when compare view is already open and not pinned selecting another file in staging view could automatically update the compare view. This would save one click per file navigation.- staging through drag&drop doesn't yet work (don't know if it should already)"
73355,0,Change has been successfully merged into the git repository.
73356,0,Change has been successfully merged into the git repository.
73357,0,Change has been successfully merged into the git repository.
73358,0,Change has been successfully merged into the git repository.
73359,0,Change has been successfully merged into the git repository.
73360,0,Change has been successfully merged into the git repository.
73367,0,Change has been successfully merged into the git repository.
73368,1,Patch Set 2:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/742/ : UNSTABLE
73369,1,Patch Set 2:Yay! Now we just have to fix the other unstable tests. I opened bug 345812 about GitRepositoriesViewFetchAndPushTest.
73370,1,"Patch Set 2:Yes, it would be nice to have stable UI tests ..."
73376,0,Change has been successfully merged into the git repository.
73378,0,Change has been successfully merged into the git repository.
73379,0,Patch Set 1: I would prefer that you didn't submit this(1 inline comment)looks good except the typo
73380,0,"Patch Set 1: Looks good to me, approved; IP review completedlooks good"
73381,0,Change has been successfully merged into the git repository.
73388,0,Change has been successfully merged into the git repository.
73389,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73390,0,Change has been successfully merged into the git repository.
73391,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73392,0,Change has been successfully merged into the git repository.
73398,0,Change has been successfully merged into the git repository.
73399,1,Patch Set 6:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/719/ : UNSTABLE
73406,0,Change has been successfully merged into the git repository.
73408,0,"Patch Set 5: Looks good to me, but someone else must approve* Undid edits to @see tags* Group by repository when in tree mode"
73412,0,Change has been successfully merged into the git repository.
73414,0,"Patch Set 3:that's a very useful enhancement !some remarks after playing a bit (not thoroughly tested yet):- results should be grouped by repository- search hits should be highlighted in commit viewer, so that I can see where my search term has been found- is there a way to display which branches contain a given commit returned in the result list? - the result list header could list a short summary of the search criteria- there should be an option (which should be on by default) to reuse the commit viewer views so that after having navigated a long list of results I don't end up with zillions of open commit views"
73415,0,"Patch Set 3: I would prefer that you didn't submit this(34 inline comments)Why did you remove all ""@see"" javadocs? It it is necessary for some reasons this should be done in separate change or at least mentioned in commit message.Also I think that 'Expand All' and 'Collapse All' buttons should be disabled (if it is possible) because there is thing to be collapsed/expanded in search result.Apart from that, this is a very good idea to have search commit option! I like it ;)"
73416,1,Patch Set 3:I removed the @see tag that were introduced in previous commits pertaining to this same bug since I got feedback on JGit patches that @see tags are not used when overriding methods.  Are @see tags used in EGit when overriding methods?
73419,1,Patch Set 4:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/714/ : UNSTABLE
73421,0,"Patch Set 2: Looks good to me, but someone else must approveBye, bye Helios, Indigo welcome :-)"
73422,0,Change has been successfully merged into the git repository.
73423,0,"Patch Set 1: I would prefer that you didn't submit this(1 inline comment)Looks good, just had one comment on the MANIFEST.MF change."
73425,0,"Patch Set 1:To be honest, I'd love for us to drop the dependency on commons.logging..."
73429,0,Change has been successfully merged into the git repository.
73430,1,Patch Set 1:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/703/ : UNSTABLE
73433,0,Change has been successfully merged into the git repository.
73434,1,Patch Set 2:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/701/ : UNSTABLE
73436,0,Change has been successfully merged into the git repository.
73447,1,Patch Set 2:Imagine situation when one of these repository don't have configured remote repo or both compared branches are local (they don't track a remote branch). In that situation it is unclear for me what we should done. From my point of view the 'Push' button should be disabled because push operation is impossible.
73448,0,"Patch Set 2:We should check for that and only then disable it (or enable only do the push for those repo where it's possible).It's possible when all repos have a remote configured and are not compared to a local branch (IMO, comparing to remote and pulling/pushing will be the primary thing people do with the synchronize view once it's possible.)We should aim to make the synchronize view at least as good as the CVS one. And the CVS synchronize view *can* commit to multiple modules/repos at once. That's one of the reasons why it's so useful."
73450,0,Change has been successfully merged into the git repository.
73451,1,Patch Set 3:Build Unstable  https://hudson.eclipse.org/sandbox/job/egit.gerrit/698/ : UNSTABLE
73455,0,Change has been successfully merged into the git repository.
73458,0,"Patch Set 2:On Mac egit ui tests were successful for me with this change, maybe you have to run maven once with the -U option, this was also mentioned in some mails of the mail thread around the mail with the migration instructions. On which platform do you face problems with ui tests ?"
73462,1,Patch Set 2: I would prefer that you didn't submit thisUnit tests are failing...
73464,0,"Patch Set 3: Looks good to me, approved; IP review completed"
73465,0,Change has been successfully merged into the git repository.
73468,0,"Patch Set 2: Looks good to me, approved; IP review completed- rebased- fixed style nits"
73469,0,Change has been successfully merged into the git repository.
73471,0,"Patch Set 3:Inline comments are fixed in changeset 3.Yes, ideally there would be only one result dialog, with the results grouped by repository. A tree view may be a good idea, something like:ÔÇó Repo 1: already up to dateÔÇó Repo 2: pulled  ÔÇó Fetched master into origin/master    ÔÇó Commit 1    ÔÇó Commit 2  ÔÇó Merge branch 'master' of git:origin    ÔÇó Parent commit 1    ÔÇó Parent commit 2"
73473,0,"Patch Set 3:I will work on it, but can't give any estimates as to when I'll be able to submit it.In the meantime, it would be nice if this simple implementation could get in. IMO it's better than no support for pull multiple, and it doesn't negatively affect the interaction for pulling one."
73474,1,"Patch Set 3:Ok, I suggest the following:* create a bug that says something like ""PullResultDialog should be able to show results for multiple Repositories""* update the commit message (remove the RFC prefix and the ""proof of concept"" part, describe the issue we discussed here and mention that new bug)I might be able to get around to working on the PullResultDialog these days, but we should have a bug first."
73475,1,"Patch Set 3:Ok, I suggest the following:* create a bug that says something like ""PullResultDialog should be able to show results for multiple Repositories""* update the commit message (remove the RFC prefix and the ""proof of concept"" part, describe the issue we discussed here and mention that new bug)I might be able to get around to working on the PullResultDialog these days, but we should have a bug first."
73476,1,"Patch Set 3:Ok, I suggest the following:* create a bug that says something like ""PullResultDialog should be able to show results for multiple Repositories""* update the commit message (remove the RFC prefix and the ""proof of concept"" part, describe the issue we discussed here and mention that new bug)I might be able to get around to working on the PullResultDialog these days, but we should have a bug first."
73477,1,"Patch Set 3:Ok, I suggest the following:* create a bug that says something like ""PullResultDialog should be able to show results for multiple Repositories""* update the commit message (remove the RFC prefix and the ""proof of concept"" part, describe the issue we discussed here and mention that new bug)I might be able to get around to working on the PullResultDialog these days, but we should have a bug first."
73479,1,"Patch Set 1: I would prefer that you didn't submit this(2 inline comments)Calling the pull operation several times makes the user experience a bit ugly, for example when it comes to errors (multiple error pop-ups etc.)... Also the result dialog currently would be shown several times... Not sure how problematic this is in reality. In the long run, we might need to improve PullOperation to accept multiple repos in its constructor and make sure error handling.In any case, I'd like to get a second opinion on this aspect."
73483,0,Change has been successfully merged into the git repository.
73484,0,"Patch Set 6: Looks good to me, approved; IP review completed"
73488,0,"Patch Set 5: Looks good to me, approved; IP review completed"
73489,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73490,0,Change has been successfully merged into the git repository.
73491,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73492,0,Change has been successfully merged into the git repository.
73496,0,"Patch Set 2: Looks good to me, approved; IP review completed"
73497,0,Change has been successfully merged into the git repository.
73504,0,"Patch Set 6: Looks good to me, approved; IP review completedRebased to current master.Checked on Windows 7 and Ubuntu."
73505,0,Change has been successfully merged into the git repository.
73510,0,"Patch Set 4: Looks good to me, approved; IP review completed"
73511,0,Change has been successfully merged into the git repository.
73518,0,Change has been successfully merged into the git repository.
73519,1,"Patch Set 9: Looks good to me, approved; IP review completed- rebased- fixed whitespace error"
73523,0,"Patch Set 4: (3 inline comments)Looks good, but I'm not sure whether the 'create branch page/wizard' document changes are supposed to be part of this changeset?"
73526,0,"Patch Set 4: Looks good to me, but someone else must approveI'm looking forward for having this feature in EGit it is more useful then ""Checkout"" dialog."
73530,1,"Patch Set 2:As for the remarks in the last review:1. We can not check out selectively for the selected projects, so I think letting the user select only a single project would be less confusing (we have many actions like this already in the team menu, so I believe people are getting used to that over time).2. Branch names are sorted now."
73538,1,"Patch Set 5:So, the automated build filter works then :) Is it a transient failure?"
73539,1,"Patch Set 1: I would prefer that you didn't submit thisA few comments - apologies for lack of inline but iPhone doesn't permit me :-)You're limiting selection to one project. Why? If they are all the same repository then there's no harm. If there are multiple repos then we might disable, or could show common names. For example, I might naively think I have to select all EGit projects to switch to another branch, or in the future, you might want to switch all EGit and JGit projects to the 0.11 branch. Although the branch would be different in each case they have the same name. The entry set could give branches in arbitrary order if I read this correctly. If so, can we sort?The comment in the single arg constrictor has ""default constructor"" which seems to be a cut and paste from the single arg version. The other menu should probably be disabled in the case of multiple projects being selected with individual repositories."
73541,0,"Patch Set 2: Looks good to me, approved; IP review completed"
73542,0,Change has been successfully merged into the git repository.
73543,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73544,0,Change has been successfully merged into the git repository.
73547,0,"Patch Set 2: Looks good to me, but someone else must approveLooks good"
73548,0,"Patch Set 2: Looks good to me, approved; IP review completedthanks Kevin"
73549,0,Change has been successfully merged into the git repository.
73550,0,Change has been successfully merged into the git repository.
73552,0,Change has been successfully merged into the git repository.
73554,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
73555,0,Change has been successfully merged into the git repository.
73558,0,"Patch Set 4: Looks good to me, approved"
73559,0,"Patch Set 4:I should say, nice work guys. Thanks for bearing with us through the review process. As soon a the CQ is approved, lets submit this."
73562,0,Change has been successfully merged into the git repository.
73564,0,"Patch Set 1: (1 inline comment)You write: "" I would prefer that you didn't submit this"" Does this mean you don't want it submitted in the current form (we are obviously happy to fix the very reasonable suggestions) or do you not like the change in general?"
73570,0,"Patch Set 2: I would prefer that you didn't submit this(29 inline comments)I'm really happy with this approach. I'm just down to style nits, and what appears to be a bug where you use milliseconds but document the timeout as seconds."
73575,0,"Patch Set 5: Looks good to me, approved; IP review completed"
73576,0,Change has been successfully merged into the git repository.
73578,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73579,0,Change has been successfully merged into the git repository.
73580,0,Change has been successfully merged into the git repository.
73583,0,"Patch Set 3: Looks good to me, approved; IP review completed"
73584,0,Change has been successfully merged into the git repository.
73586,0,"Patch Set 4: Looks good to me, approved; IP review completed- rebased"
73587,0,Change has been successfully merged into the git repository.
73591,1,"Patch Set 5:Actually I'm not sure does we need to disable synchronize action on repositories when there are no commits. I see here a day to day use case here, when after user creates new project, shares it and made some changes he would like to review those changes in synchronize view. So actually we shouldn't disable a synchronize action. What do you think about this Matthias?"
73597,1,"Patch Set 2: I would prefer that you didn't submit thisLooks good, but I think the set of operations which should be disabled when there is no commit yet is incomplete. I think the following operations should be also disabled:Team menu:- Synchronize- Pull (if no upstream configuration is available)Repositories View:- Merge- Rebase- Import Projects- Create Branch (on Branches node)- Push to Upstream (there is nothing to push yet)- Push...In addition we should show some hint on the label decorators otherwise it's hard to understand why all these menus are disabled:[jgit|Empty master]"
73598,0,Patch Set 2:Good point! I'll implement this and repush this change ;)
73600,1,"Patch Set 7:Rebasedrepositories view* actions like merge, rebase, tag, create branch, import projects are disabled instead of removing them from menuIn case of ""Configure fetch from/push to upstream"", those actions assume that the source/destination branch exists in repository, but in our scenario such branch does not exist therefore those actions are disabledNow ""Fetch from..."" action in enabled all the time."
73602,1,"Patch Set 3:We don't need to change any action in repositories view because all actions appears only on branch/tag level, since there are no branch and tags they aren't show in context menu. I've also add some code to disable push/fetch actions when there are no remotes and disable synchronize action when HEAD cannot be resolved. In case of changing tool tips for disabled action, I don't know how to achievieve this ... I'm afraid that we can't change them or display on show on disabled elements."
73603,1,"Patch Set 3:Unfortunately this is not true (see screenshot I sent via separate email), I suspect that there is a problem with the menu activation rules in repositories view if the repository is empty.I thought we could show the information that the repo is empty on the label decorator of the repository (in repositories view) / project level (package explorer)."
73606,1,"Patch Set 6:ah, ok, I missed this use case that synchronize also shows not yet committed changes, I agree we should not disable the synchronize menu entry due to this"
73608,1,"Patch Set 6: I would prefer that you didn't submit thisstill I see the following problems:repository view:- on repo node-- merge and rebase action are not disabled but removed, I think it's better to disable them so that users can see what operations they might expect when repo is not empty-- does ""Import Projects"" make sense in that state ?- on ""Branches"" node-- Create Branch doesn't work since it requires a source branch ?- on ""Tags"" node-- ""Create Tag"" should be disabled ?team menu:- ""Remote > Configure Fetch from Upstream"" should be enabled since if you did that you may fill your empty repo by running ""Fetch from Upstream"", right ?-- configuring that should then enable ""Fetch from Upstream""- similarly ""Remote > Fetch from..."" should be also enabled as this might be the way to get commits in- ""Remote > Configure Push to Upstream"" should be enabled as you may want to configure that before you created the first commit (or fetched some changes) (but ""Push to upstream"" and ""Remote > Push...) should be disabled until there is anything to puhs"
73609,1,"Patch Set 1: I would prefer that you didn't submit thisI believe bare repositories typically also define HEAD, just semantics are different: for bare repository they point to the default branch which is the one a local branch is created for when cloning the repositoryI think instead you should check if the config parameter core.bare is true."
73613,1,"Patch Set 8: Looks good to me, but someone else must approve; IP review completed- rebased- found a use case why ""Import Projects"" should not be disabled: create a new project, share it with Git, create new repo, remove repository and project from workspace but don't delete them, add the repository again, now you need a way to import the project again despite the repo is empty, hence re-enabled ""Import Projects""- disabled also ""Push..."" in the git repositories view"
73614,0,"Patch Set 8: Looks good to me, approved"
73615,0,Change has been successfully merged into the git repository.
73620,0,Change has been successfully merged into the git repository.
73621,0,Change has been successfully merged into the git repository.
73622,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73623,0,Change has been successfully merged into the git repository.
73625,1,Patch Set 2:Rebased on current master.I think that users are anxious for this performance improvement.
73626,0,Change has been successfully merged into the git repository.
73628,1,"Patch Set 1:The main problem of testing synchronize view performance is to build a testing repository with proper history size and that could be created anaing for each test run.I don't know how we could build such repository in test case, rest of this test case seams to be pretty simple. Any ideas how such repo can be created in test case?"
73630,0,Change has been successfully merged into the git repository.
73631,0,"Patch Set 1: I would prefer that you didn't submit this(3 inline comments)First of all, great contribution, thanks Kevin. There are just a few ""style nits"" here.Feel free to contact me directly if I'm being unclear with anything."
73633,0,Change has been successfully merged into the git repository.
73634,0,Change has been successfully merged into the git repository.
73636,0,Change has been successfully merged into the git repository.
73643,0,Change has been successfully merged into the git repository.
73646,0,Change has been successfully merged into the git repository.
73647,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73648,0,Change has been successfully merged into the git repository.
73649,0,Change has been successfully merged into the git repository.
73650,0,Change has been successfully merged into the git repository.
73651,0,Change has been successfully merged into the git repository.
73654,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
73655,1,"Patch Set 2: Looks good to me, approvedSeems OK, but unstaged changes preventing merge isn't abnormal... its the most common way I see my merges fail. :-)"
73659,0,"Patch Set 3: Looks good to me, but someone else must approveChange was already approved (see above) but needed to be rebased."
73660,0,"Patch Set 3: Looks good to me, approved; IP review completed"
73661,0,Change has been successfully merged into the git repository.
73663,0,"Patch Set 2: Looks good to me, but someone else must approveChange was already approved (see above) but needed to be rebased."
73664,0,"Patch Set 2: Looks good to me, approved; IP review completed"
73665,0,Change has been successfully merged into the git repository.
73666,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73667,0,Change has been successfully merged into the git repository.
73669,0,Change has been successfully merged into the git repository.
73675,0,Change has been successfully merged into the git repository.
73684,0,Change has been successfully merged into the git repository.
73685,0,Patch Set 2:Looks fine.
73686,0,Change has been successfully merged into the git repository.
73687,0,Change has been successfully merged into the git repository.
73690,1,Patch Set 1: (3 inline comments)Sorry for mixing things up. There now is a separate change for the refactorings (Ieb089668834d0a395c9ab192c555538917dfdc47).
73692,0,"Patch Set 2: Looks good to me, approved; IP review completed"
73695,0,"Patch Set 3: Looks good to me, approved; IP review completed"
73696,0,Change has been successfully merged into the git repository.
73700,0,"Patch Set 2: Looks good to me, approved; IP review completed"
73701,0,Change has been successfully merged into the git repository.
73703,1,"Patch Set 2: Looks good to me, but someone else must approveTotally makes sense. But UI tests are still failing for me :-("
73704,0,Change has been successfully merged into the git repository.
73705,1,"Patch Set 1: Looks good to me, but someone else must approveWhen I run the BranchAndResetActionTest I still see 3 errors, but when checking out a state before the referenced change, I see the same results. And without this fix, there a 5 errors. So this fix seem to work as expected."
73706,0,Change has been successfully merged into the git repository.
73708,0,"Patch Set 2: Looks good to me, but someone else must approve"
73709,0,Change has been successfully merged into the git repository.
73710,0,Change has been successfully merged into the git repository.
73712,0,Change has been successfully merged into the git repository.
73716,0,"Patch Set 2: Looks good to me, but someone else must approve"
73717,0,"Patch Set 2: Looks good to me, approved; IP review completed"
73721,0,"Patch Set 4: Looks good to me, approved; IP review completed"
73722,0,Change has been successfully merged into the git repository.
73728,0,"Patch Set 2: Looks good to me, approved; IP review completed"
73729,0,Change has been successfully merged into the git repository.
73731,0,Change has been successfully merged into the git repository.
73732,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
73734,0,Change has been successfully merged into the git repository.
73735,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
73737,0,Change has been successfully merged into the git repository.
73739,0,Change has been successfully merged into the git repository.
73740,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
73742,0,"Patch Set 2: Looks good to me, approved; IP review completed"
73743,0,Change has been successfully merged into the git repository.
73746,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedI first thought that change-id computation should be in EGitand that we should provide a generic callback allowingto modify commit messages. But I learned that change-id computation so near to JGit that I think it's ok to have the change-id as JGit concept. Therefore I agree to this proposal."
73748,0,Change has been successfully merged into the git repository.
73749,1,"Patch Set 2: Looks good to me, approved; IP review completedJust added a few unit tests to protect us from regression."
73753,0,"Patch Set 2: (1 inline comment)Great. Just a very minor remark regarding the comment, sorry."
73756,0,Change has been successfully merged into the git repository.
73757,0,Change has been successfully merged into the git repository.
73758,0,"Patch Set 1: Looks good to me, but someone else must approvemapTree() is still used by EGit (org.eclipse.egit.core.op.CommitOperation.prepareTrees(IFile[], HashMap<Repository, Tree>, IProgressMonitor)) so I'll wait a bit on this..."
73761,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73762,0,Change has been successfully merged into the git repository.
73765,0,Change has been successfully merged into the git repository.
73767,0,Change has been successfully merged into the git repository.
73770,0,Change has been successfully merged into the git repository.
73771,0,Change has been successfully merged into the git repository.
73772,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73773,0,Change has been successfully merged into the git repository.
73775,0,Change has been successfully merged into the git repository.
73776,0,Change has been successfully merged into the git repository.
73777,0,Change has been successfully merged into the git repository.
73778,0,Change has been successfully merged into the git repository.
73779,0,"Patch Set 1: Looks good to me, but someone else must approveTrivial change. Ready to submit from my point of view."
73780,0,Change has been successfully merged into the git repository.
73783,0,Change has been successfully merged into the git repository.
73785,0,Change has been successfully merged into the git repository.
73786,0,"Patch Set 1: Looks good to me, but someone else must approveFor me looks great, thank you ;)"
73788,0,Change has been successfully merged into the git repository.
73789,0,Change has been successfully merged into the git repository.
73790,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
73791,0,Change has been successfully merged into the git repository.
73792,0,Change has been successfully merged into the git repository.
73793,0,Change has been successfully merged into the git repository.
73795,0,Change has been successfully merged into the git repository.
73798,0,Change has been successfully merged into the git repository.
73800,0,Change has been successfully merged into the git repository.
73802,0,Change has been successfully merged into the git repository.
73803,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73804,0,Patch Set 1:Looks good.
73805,0,Change has been successfully merged into the git repository.
73806,0,"Patch Set 1: Looks good to me, but someone else must approveTrivial change. Ready to submit from my point of view."
73807,0,Change has been successfully merged into the git repository.
73808,0,"Patch Set 1: Looks good to me, but someone else must approveTrivial change. Ready to submit from my point of view."
73809,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73810,0,Change has been successfully merged into the git repository.
73812,0,Change has been successfully merged into the git repository.
73813,0,Change has been successfully merged into the git repository.
73818,0,Change has been successfully merged into the git repository.
73820,0,Change has been successfully merged into the git repository.
73821,1,Patch Set 1: I would prefer that you didn't submit thisUpdated unit test coming soon :-(
73822,0,Change has been successfully merged into the git repository.
73823,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73824,1,"Patch Set 1:Oops, wrong bug number: should beBug: 339829"
73825,0,"Patch Set 1: I would prefer that you didn't submit thisThis patch works great for workspace files, but for non-workspace files it opens an editor with information: ""Could not open the editor: The file does not exist."".IMHO the ""Open"" action should support opening non-workspace files or at least should be disabled for those kind of files."
73829,0,Change has been successfully merged into the git repository.
73831,0,Change has been successfully merged into the git repository.
73833,0,Change has been successfully merged into the git repository.
73834,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73836,0,"Patch Set 1: Looks good to me, but someone else must approve"
73839,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73842,0,Change has been successfully merged into the git repository.
73843,0,Change has been successfully merged into the git repository.
73844,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73846,0,Change has been successfully merged into the git repository.
73847,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
73848,0,Change has been successfully merged into the git repository.
73849,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
73853,0,Change has been successfully merged into the git repository.
73854,0,Change has been successfully merged into the git repository.
73855,0,Change has been successfully merged into the git repository.
73856,0,Change has been successfully merged into the git repository.
73858,1,"Patch Set 5: I would prefer that you didn't submit thisYes, we need support for the lightweight tags eventually, but I'm afraid if we only show them in the project label, we'll confuse our users. Before we show the tag in the label, we should first include them in the tag dialog (see bug 323607) and if at all possible in the history view (I'm not aware of a bug for this one...)."
73859,1,"Patch Set 5:Simple tags already show up in the history view, so we actually have some support for them.The problem is that the existence of a simple tags cause problems for annotated tags too, since there is an exception that aborts processing altogether."
73862,0,Change has been successfully merged into the git repository.
73867,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73868,0,Change has been successfully merged into the git repository.
73870,0,Change has been successfully merged into the git repository.
73874,0,Change has been successfully merged into the git repository.
73875,0,Change has been successfully merged into the git repository.
73876,0,Patch Set 1:Looks good.
73877,0,Change has been successfully merged into the git repository.
73878,0,Change has been successfully merged into the git repository.
73880,0,Change has been successfully merged into the git repository.
73885,0,Change has been successfully merged into the git repository.
73886,0,"Patch Set 1: I would prefer that you didn't submit this(1 inline comment)I'm not sure its an improvement over what was there before, but I'll accept the change if you cleanup the threads from the pool."
73889,0,Change has been successfully merged into the git repository.
73890,0,Change has been successfully merged into the git repository.
73892,0,Change has been successfully merged into the git repository.
73895,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73896,0,Change has been successfully merged into the git repository.
73908,0,Change has been successfully merged into the git repository.
73911,0,"Patch Set 6: Looks good to me, but someone else must approveCool - thanks for the additional comments"
73912,0,Change has been successfully merged into the git repository.
73914,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completedI think I'm happy with patch set 3.  The object allocation count is the same as before, but we should be faster if your testing on IndexPack works out the same on PackFile, and we can load deep chains without overflowing the thread stack."
73916,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completed(4 inline comments)Hmmph, maybe patch set 4 is final.  :-)"
73926,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
73927,0,Change has been successfully merged into the git repository.
73930,0,Change has been successfully merged into the git repository.
73931,0,"Patch Set 10: Looks good to me, approved"
73935,0,"Patch Set 9: Looks good to me, but someone else must approveMade unit tests compatible with JUnit 4"
73936,0,"Patch Set 9: Looks good to me, but someone else must approve; IP review completedConsider this your +1 from the PMC"
73937,1,Patch Set 9:Can we get a +1 from a current SAP committer?  :-)
73941,0,"Patch Set 6: I would prefer that you didn't submit this(4 inline comments)I'm almost happy with this.  A couple of style nits, and two bugs that should be fixed, and then we can get PMC approval to merge it."
73962,0,Change has been successfully merged into the git repository.
73967,0,Change has been successfully merged into the git repository.
73969,0,Change has been successfully merged into the git repository.
73971,0,Change has been successfully merged into the git repository.
73978,0,Change has been successfully merged into the git repository.
73983,1,"Patch Set 1:One would think that /etc/gitconfig would be the system wide configuration file. I did that for a while, but found out it wasn't, which is also documented in the man page for git-config.That you cannot save to a non-writeable file is not something I can do anything about, but the user does get an error message. I can annotate the location and insert a read-only warning"
73988,0,Change has been successfully merged into the git repository.
73989,0,Change has been successfully merged into the git repository.
73991,0,Change has been successfully merged into the git repository.
73993,0,"Patch Set 2: Looks good to me, but someone else must approveMinor update. Made the Note.getData() method public"
73994,0,"Patch Set 1: Looks good to me, approved; IP review completed(2 inline comments)Two minor nits, but we can address them later."
73996,0,Change has been successfully merged into the git repository.
73997,0,"Patch Set 1: Looks good to me, approved; IP review completed"
73998,0,Change has been successfully merged into the git repository.
74000,0,"Patch Set 3: Looks good to me, approved"
74001,0,Change has been successfully merged into the git repository.
74005,0,Change has been successfully merged into the git repository.
74007,0,Change has been successfully merged into the git repository.
74010,0,Change has been successfully merged into the git repository.
74015,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completed"
74016,0,Change has been successfully merged into the git repository.
74020,0,Change has been successfully merged into the git repository.
74024,0,"Patch Set 4: Looks good to me, but someone else must approve(2 inline comments)This is a fairly minor tidy-up over Patch Set 3 - the nextVisit() method sits better on the DeltaVisit class if you ask me.The code looks good to me, tho I just wanted to say that personally I prefer lobbing around immutable strongly-typed objects - I find the code easier to follow. I can see that mutability is sometimes necessary  but I wouldn't like to think it was being used prematurely... my 2 cents :-)"
74025,0,"Patch Set 4: (1 inline comment)Yea, immutable objects work well... usually.  Here DeltaVisit is almost immutable, but its not where we implement tail recursion, and the list of children that need to be processed, because those are faster to be mutable.  The Java GC is good, but its not *that* good."
74029,0,"Patch Set 1: I would prefer that you didn't submit this(9 inline comments)I love the idea, but I think we can do even better.  See the inline comments."
74031,0,"Patch Set 3:OK, I think patch set 3 is way better.  I'd appreciate a review Roberto."
74032,0,"Patch Set 3: (1 inline comment)Thanks Shawn - I'd like to do a perf-test on the updated code, will do that and a code review in a few hours."
74035,0,Change has been successfully merged into the git repository.
74037,0,Change has been successfully merged into the git repository.
74042,0,Change has been successfully merged into the git repository.
74044,0,Change has been successfully merged into the git repository.
74049,0,Change has been successfully merged into the git repository.
74050,0,Change has been successfully merged into the git repository.
74051,0,"Patch Set 1: I would prefer that you didn't submit this(1 inline comment)Fix looks good, but I don't like the test using the system temp directory."
74053,0,Change has been successfully merged into the git repository.
74058,0,Change has been successfully merged into the git repository.
74060,0,Change has been successfully merged into the git repository.
74063,0,Change has been successfully merged into the git repository.
74066,0,"Patch Set 2: Looks good to me, approved; IP review completedI like that."
74067,0,Change has been successfully merged into the git repository.
74068,0,"Patch Set 1: Looks good to me, approved"
74069,0,Change has been successfully merged into the git repository.
74070,0,"Patch Set 1: Looks good to me, but someone else must approve"
74071,0,"Patch Set 1: Looks good to me, approved"
74072,0,Change has been successfully merged into the git repository.
74074,0,Change has been successfully merged into the git repository.
74077,0,Change has been successfully merged into the git repository.
74081,0,Change has been successfully merged into the git repository.
74082,1,Patch Set 1: I would prefer that you didn't submit thishyperlinks to egit documentation are broken
74084,0,Change has been successfully merged into the git repository.
74086,0,"Patch Set 3: Looks good to me, approved; IP review completedLooks good."
74088,1,Patch Set 3:Can you file a bug?Sigh... file path/system issues after all these years still :)
74095,0,"Patch Set 2: Looks good to me, but someone else must approve"
74098,0,Change has been successfully merged into the git repository.
74100,0,"Patch Set 2:ps 2 fixes the existing application issue, so this should be safe to submit."
74101,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74104,0,"Patch Set 3: Looks good to me, approved; IP review completedLooks good, thanks."
74105,0,Change has been successfully merged into the git repository.
74106,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74107,0,Change has been successfully merged into the git repository.
74108,0,"Patch Set 1: Looks good to me, approved; IP review completed(1 inline comment)"
74109,0,Change has been successfully merged into the git repository.
74111,0,Change has been successfully merged into the git repository.
74112,0,"Patch Set 6: Looks good to me, approved; IP review completed"
74119,0,Change has been successfully merged into the git repository.
74120,0,"Patch Set 5: Looks good to me, approved; IP review completedLooks good."
74124,0,"Patch Set 1: Looks good to me, but someone else must approve"
74126,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks great. We'll eventually replace with CloneCommand once it gets written..."
74127,0,Change has been successfully merged into the git repository.
74128,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74131,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
74132,0,Change has been successfully merged into the git repository.
74133,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks good."
74150,0,"Patch Set 7: Looks good to me, approved; IP review completedlooks good.Fixed remaining stile nits.Rebased to current master."
74151,0,Change has been successfully merged into the git repository.
74153,1,"Patch Set 4: Looks good to me, but someone else must approve; IP review completedQuestion: is it right to map the steps inside a wizard to cheat cheet items? Or is processing a wizard related to one item?"
74157,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74162,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks good."
74163,0,Change has been successfully merged into the git repository.
74164,0,Patch Set 2:Looks good.
74165,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good, thanks for the catch Robin."
74166,0,Change has been successfully merged into the git repository.
74167,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good."
74168,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74170,0,Change has been successfully merged into the git repository.
74172,0,Change has been successfully merged into the git repository.
74173,0,"Patch Set 2: Looks good to me, approved; IP review completedrebased"
74174,0,"Patch Set 1: Looks good to me, approved; IP review completedthanks, good catch"
74175,0,Change has been successfully merged into the git repository.
74176,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74177,0,Change has been successfully merged into the git repository.
74178,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74179,0,Change has been successfully merged into the git repository.
74180,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74181,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74182,0,Change has been successfully merged into the git repository.
74183,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74185,0,"Patch Set 2: Looks good to me, but someone else must approve"
74186,0,"Patch Set 2: Looks good to me, approved; IP review completedsuccessfully tested on galileo sr2 and helios sr1"
74187,0,Change has been successfully merged into the git repository.
74189,0,"Patch Set 2: Looks good to me, but someone else must approve"
74190,0,"Patch Set 2: Looks good to me, approved; IP review completedsuccessfully tested on galileo sr2 and helios sr1"
74191,0,Change has been successfully merged into the git repository.
74192,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good. Time to get a build out to do more testing before we sign and publish :)"
74193,0,Change has been successfully merged into the git repository.
74194,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74195,0,Change has been successfully merged into the git repository.
74197,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74198,0,Change has been successfully merged into the git repository.
74200,0,"Patch Set 1: Looks good to me, approved"
74203,0,"Patch Set 2: Looks good to me, approved; IP review completed(Rebased earlier in series to submit.)"
74204,0,Change has been successfully merged into the git repository.
74205,0,"Patch Set 1: Looks good to me, approved(1 inline comment)"
74208,0,"Patch Set 2: Looks good to me, approved; IP review completed(Rebased earlier in series to submit.)"
74209,0,Change has been successfully merged into the git repository.
74210,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74211,0,Change has been successfully merged into the git repository.
74212,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74213,0,Change has been successfully merged into the git repository.
74214,0,"Patch Set 1: Looks good to me, approved; IP review completedyeah, it's better not to automatically put username in HTTP URLs"
74215,0,Change has been successfully merged into the git repository.
74216,0,"Patch Set 1: Looks good to me, approved; IP review completedthanks, this works now :-)"
74217,0,Change has been successfully merged into the git repository.
74218,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
74220,0,Change has been successfully merged into the git repository.
74221,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks good."
74223,0,Change has been successfully merged into the git repository.
74224,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks good."
74231,1,Patch Set 4: I would prefer that you didn't submit this(1 inline comment)I still find problems:- The comparison of the staged changes is not with HEAD but with the parent of HEAD (see inline comment in GitCacheCompareInput)- The compare editor for a file with both index and working dir changes shows conflicts in red- When a file is deleted I see the file with a normal decorator; the right hand side of the compare editor is just empty. I can see nowhere that the file is deleted.
74235,1,Patch Set 1:This change fixes the problem with the wrong content. But it does not fix the wrong headers in the compare editor. There I still see the commit ids of HEAD on the left and of its first parent on the right.
74238,0,Change has been successfully merged into the git repository.
74239,0,"Patch Set 9: Looks good to me, approved; IP review completedLooks good."
74244,1,Patch Set 8: I would prefer that you didn't submit thisI do not see a difference between patch set 7 and 8. I still have the issue with the conflict-style compare editor.If you do not find the reason we could submit this but track the issue in bug 326674.
74248,1,"Patch Set 7: I would prefer that you didn't submit thisHi Dariusz,I still have the issue.I uploaded both my test repository and a screen shot of what I see to the bug. You can do the following to reproduce:- unzip the repo and import the project- On the project, synchronize HEAD with local changes and HEAD- In the synchronize view, double click on Calc4.java, both on the node below <working tree> and below <staged changes>In both case I see the whole content marked as conflicting.Stefan"
74249,0,Patch Set 1: (1 inline comment)except typo in commit message this looks good to me
74251,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks good."
74252,0,Change has been successfully merged into the git repository.
74254,1,Patch Set 1:This now running version of Gerrit (2.1.6-12-ge143def) should contain the necessary bug fixes to work with EGit.
74255,1,"Patch Set 1: Looks good to me, approved; IP review completed- this now works against egit.eclipse.org :-)- I think its conforming to RFC 2617"
74256,0,Change has been successfully merged into the git repository.
74261,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completed(1 inline comment)"
74264,0,Change has been successfully merged into the git repository.
74265,0,"Patch Set 5: Looks good to me, approved; IP review completedLooks good."
74268,0,Change has been successfully merged into the git repository.
74269,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks good."
74271,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed(1 inline comment)"
74274,1,"Patch Set 7: I would prefer that you didn't submit thisAddresses some of Christian's comments.  I also tried to improve the performance a bit by reusing the prior match data from the higher level invocations, but its hurting more than its helping for some input sizes on this trivial CharArray type.  In theory we should see really good results from something like RawText where lines would otherwise need to be compared often.  This might actually be completely unnecessary if I do that hash code normalization thing I was talking about in the refactor diff API change.    testMyers 10000 bytes took  491400 ns. N=20000, D=32, time/(N*D):7.68E-1, time/(N*D^2):2.4E-2 testPatience 10000 bytes took 1342281 ns. N=20000, D=7, time/(N*D):9.59E0, time/(N*D^2):1.37E0    testMyers 20000 bytes took 1769911 ns. N=40000, D=64, time/(N*D):6.91E-1, time/(N*D^2):1.08E-2 testPatience 20000 bytes took 5263157 ns. N=40000, D=13, time/(N*D):1.01E1, time/(N*D^2):7.79E-1    testMyers 40000 bytes took  7142857 ns. N=80000, D=131, time/(N*D):6.82E-1, time/(N*D^2):5.2E-3 testPatience 40000 bytes took 12500000 ns. N=80000, D=25, time/(N*D):6.25E0, time/(N*D^2):2.5E-1    testMyers 80000 bytes took 26000000 ns. N=160000, D=263, time/(N*D):6.18E-1, time/(N*D^2):2.35E-3 testPatience 80000 bytes took 32000000 ns. N=160000, D=50, time/(N*D):4E0, time/(N*D^2):8E-2    testMyers 160000 bytes took 116000000 ns. N=320000, D=528, time/(N*D):6.87E-1, time/(N*D^2):1.3E-3 testPatience 160000 bytes took  76000000 ns. N=320000, D=100, time/(N*D):2.38E0, time/(N*D^2):2.38E-2    testMyers 320000 bytes took 438000000 ns. N=640000, D=1052, time/(N*D):6.51E-1, time/(N*D^2):6.18E-4 testPatience 320000 bytes took 228000000 ns. N=640000, D=199, time/(N*D):1.79E0, time/(N*D^2):9E-3    testMyers 640000 bytes took 1753333333 ns. N=1280000, D=2104, time/(N*D):6.51E-1, time/(N*D^2):3.09E-4 testPatience 640000 bytes took 696250000 ns. N=1280000, D=397, time/(N*D):1.37E0, time/(N*D^2):3.45E-3    testMyers 1280000 bytes took 7060000000 ns. N=2560000, D=4210, time/(N*D):6.55E-1, time/(N*D^2):1.56E-4 testPatience 1280000 bytes took 2443333333 ns. N=2560000, D=793, time/(N*D):1.2E0, time/(N*D^2):1.52E-3"
74277,0,"Patch Set 6: (5 inline comments)Regarding the latest performance improvements: that's really great and also votes for Patience diff as default diff.But one more general view on it here: Shawn last comment contained lines like:     testMyers 1280000 bytes took  21600751000 ns. N=2560000, D=4210, time/(N*D):2E0, time/(N*D^2):4.76E-4   testPatience 1280000 bytes took   3022629000 ns. N=2560000, D=793, time/(N*D):1.49E0, time/(N*D^2):1.88E-3This tells us that Patience diff can be even faster then Myers. But even more interesting to me is the value for D (the size of the found edit-script). PatienceDiff found an 5 times lesser edits than myers. I won't say that smaller edit-scripts (with probably huger regions) are better, but my big hope is that PatienceDiff brings ""better diffs"" regarding readability by humans. We should have tests with real-world content which proof that. Tests which show better quality of the diffs as listed here: http://bramcohen.livejournal.com/73318.html"
74278,1,"Patch Set 6: (5 inline comments)FWIW, I'm still not done speeding up PatienceDiff.  I think we can do even better than we are doing right now.  Some of the ideas may even be leveraged back into MyersDiff.  I just haven't thought about doing that yet because its still a big ugly black box to me.Coming up with D=793 on PatienceDiff when MyersDiff comes up with D=4210 is because we are only looking at unique common lines.  When PatienceDiff cannot find a unique line in a region, it just bails and does a giant replace, while MyersDiff continues to look for context.If we plugged in MyersDiff at this point as a fallback, we should get D=4210 again.  But I'm not sure that is the best immediate fallback strategy.  We could instead build a histogram of the common lines and pick the least duplicated common lines and try to find the LCS around those.  By using least duplicated we should still avoid nasty cases like ""\t}\n"" as being an anchor point for the matching, but would still be able to break out of the degenerate case.Thus far I have done only very limited testing of PatienceDiff on real-world input.  I did wire it into DiffFormatter and run `jgit log -p` to scan through the diffs.  I didn't see any obvious variations from MyersDiff, but I don't think recent JGit history is a poster child for where patience diff is supposed to produce more readable results.In case you didn't know, my motivation behind PatienceDiff was to find another solution to Gerrit issue 487 [1], infinite loop in MyersDiff.  Unfortunately patience diff really fails on single-character sequences (due to insufficient common unique points), but the algorithm is trivially simple and easy to prove that it will terminate.  I'm probably going to try and do a word-level variant of RawText and see if we can get a word-level thing to work better under PatienceDiff for the intraline difference coloring in Gerrit.Also, MyersDiff is really slow for Gerrit.  For some patches it takes 2.5s to display the page.  Of that 2.5s, 2.450s is spent in MyersDiff doing the intraline work.  Getting a faster algorithm under it would be nice.[1] http://code.google.com/p/gerrit/issues/detail?id=487"
74283,0,"Patch Set 5:so this strategy's name is well chosen, you need patience to wait for its results :-)"
74289,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completedI'm happy with this initial implementation.  Its not optimized, but its rather clear to read and follow, and unit test coverage is quite high."
74291,0,Patch Set 10: I would prefer that you didn't submit thisI'm still working on cleaning this up.  :-)
74292,0,Change has been successfully merged into the git repository.
74293,0,"Patch Set 10: Looks good to me, approved; IP review completedLet's do it."
74296,1,"Patch Set 2:Patch set 2 has the refactoring done that I was talking about.  I think its way shorter than MyersDiff, and a whole lot easier to understand.Its still not optimized, but this naive version isn't horrible.  I'll look at optimizing it a little tomorrow as a follow-up change.  I don't want to make the code review impossible by combing the basic algorithm with optimizations applied on top of it."
74298,0,Change has been successfully merged into the git repository.
74299,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks ok."
74300,0,"Patch Set 1:I think this change permits us to stop having the comparator in the RawText instance, which fixes the issue you noticed during the earlier refactoring that added the comparator type.I wrote this while I wasn't the most lucid.  So it really needs a lot of review before we include it.  :-)"
74305,0,Change has been successfully merged into the git repository.
74306,0,"Patch Set 3: Looks good to me, approved; IP review completedLooks good."
74307,0,"Patch Set 1:I'm not fully sold on this change yet.  In theory it seems like this will be faster to handle the common headers on files like the copyright notice.  But I'm not fully convinced that it correctly updates the Edit with new begin/end positions for every case.Like the hash code change, I wrote this while I wasn't the most lucid, so its probably full of even more bugs than my usual quota.  :-)"
74309,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks reasonable."
74310,0,Change has been successfully merged into the git repository.
74312,0,"Patch Set 2: Looks good to me, approved; IP review completedI would like to eventually see us do some UI testing in this area."
74313,0,Change has been successfully merged into the git repository.
74315,0,"Patch Set 2: Looks good to me, approved; IP review completedSure."
74316,0,Change has been successfully merged into the git repository.
74317,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks fine."
74318,1,"Patch Set 1: Looks good to me, but someone else must approveCan you rebase and resolve conflicts?"
74320,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completedStrange CGit didn't show any conflicts.Rebased."
74321,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74322,0,Change has been successfully merged into the git repository.
74323,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks fine."
74324,0,Change has been successfully merged into the git repository.
74325,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good."
74326,0,Change has been successfully merged into the git repository.
74327,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks fine."
74328,0,Change has been successfully merged into the git repository.
74329,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74330,0,Change has been successfully merged into the git repository.
74332,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
74333,0,"Patch Set 2: Looks good to me, approved"
74334,0,Change has been successfully merged into the git repository.
74335,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74336,0,Change has been successfully merged into the git repository.
74338,0,"Patch Set 2: Looks good to me, approved; IP review completed- rebased to current master"
74339,0,Change has been successfully merged into the git repository.
74341,0,Change has been successfully merged into the git repository.
74342,0,"Patch Set 2: Looks good to me, approved; IP review completed- rebased to current master"
74347,0,"Patch Set 5: Looks good to me, approved; IP review completed- rebased to current master"
74348,0,Change has been successfully merged into the git repository.
74349,1,"Patch Set 1: Looks good to me, approved; IP review completedLooks good. We should find a good way to automate this somehow to prevent mistakes like this..."
74350,0,"Patch Set 1: Looks good to me, approved; IP review completedThanks for the catch, this was missed in my workspace."
74351,0,"Patch Set 1: Looks good to me, approved; IP review completedOoops :)"
74352,0,Change has been successfully merged into the git repository.
74355,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks good, thanks Dariusz."
74356,0,Change has been successfully merged into the git repository.
74358,0,"Patch Set 1: Looks good to me, but someone else must approve"
74360,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
74361,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks good."
74362,0,Change has been successfully merged into the git repository.
74364,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
74365,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks reasonable."
74366,0,Change has been successfully merged into the git repository.
74367,1,Patch Set 1:rebase and resolve conflicts
74371,0,Change has been successfully merged into the git repository.
74372,0,"Patch Set 4: Looks good to me, approved; IP review completedSeems reasonable."
74380,0,"Patch Set 4: Looks good to me, approved; IP review completedLooks good."
74381,0,Change has been successfully merged into the git repository.
74386,0,"Patch Set 6: Looks good to me, approved; IP review completed"
74388,0,"Patch Set 6: Looks good to me, approved; IP review completedLet's do it now that 0.10 is open for fun."
74395,0,Change has been successfully merged into the git repository.
74396,0,"Patch Set 7: Looks good to me, approved; IP review completedPushing to master."
74399,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74401,0,"Patch Set 3:RCS working only if the IDE Windows is active: this is very useful.On testing, I got some strange effects:1. Create a new file x in the IDE and add it to Git.If you change x outside Eclipse, the repo scan triggers an indexChanged event and x is refreshed2. Change a file y that is in repo outside the IDE.The repo scan does not get this change, no refresh is performed.I think all external changes to resources should be refreshed or no change.GitLighweightDecorator listens to repo changes. So when refresh stuff is turned of, still changes like staged, branch change etc are shown to the user. Just the dirty information is missing and external changes are not refreshed. Reacting to external changes is provided by setting ""refresh automatically"", so this should be used for any kind of external change (you mentioned ""refresh automatically"" has a too long delay until it works).Summary: I have some doubts if it is the right way to refresh resources based on Git Repo eventing because not all external content changes in the working tree are detected.Furthermore this EGit refresh mechanism somehow does the Job of a standard mechanism (""refresh automatically"")."
74415,0,"Patch Set 7: Looks good to me, but someone else must approve"
74420,0,"Patch Set 9: Looks good to me, approved; IP review completed- rebased to current master- fixed typo in preference page"
74421,0,Change has been successfully merged into the git repository.
74423,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74426,0,Change has been successfully merged into the git repository.
74427,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedThis seems fine to me.  But do we want it in 0.9?"
74428,0,"Patch Set 1: Looks good to me, approved; IP review completedThanks, Shawn!I would think that it is sufficient to fix this in master because there is the workaround to manually set the filemode property to false later on."
74429,0,Change has been successfully merged into the git repository.
74430,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74431,0,Change has been successfully merged into the git repository.
74432,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74433,0,Change has been successfully merged into the git repository.
74434,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74435,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74436,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74437,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74438,0,Change has been successfully merged into the git repository.
74439,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74440,0,Change has been successfully merged into the git repository.
74441,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74442,0,Change has been successfully merged into the git repository.
74444,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completedIncorporated Shawns comments"
74445,0,Change has been successfully merged into the git repository.
74446,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74448,0,"Patch Set 1: Looks good to me, approved; IP review completedWe'll need a 0.9.3 after this :/"
74449,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good, from the looks of it we'll need a 0.9.3 now :/"
74450,0,Change has been successfully merged into the git repository.
74451,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74452,0,Change has been successfully merged into the git repository.
74455,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74456,0,Change has been successfully merged into the git repository.
74457,0,"Patch Set 1: Looks good to me, approved; IP review completedSimple fix."
74460,1,"Patch Set 2: Looks good to me, but someone else must approve; IP review completedYes, this does fix the clone bug.  :-)"
74461,0,"Patch Set 2: Looks good to me, approved; IP review completedSo the question is, do we want to retag 0.9.1? We haven't shipped 0.9.1 yet and I'd like to see this in before we post qualify our builds for >0.9.1"
74462,0,Change has been successfully merged into the git repository.
74464,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74465,0,Change has been successfully merged into the git repository.
74466,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74467,0,Change has been successfully merged into the git repository.
74468,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74469,1,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedRemoving trailing whitespace from html generated from wiki content and checking the result is a bit too expensive to do. Looking at the resulting Eclipse help this looks ok to me."
74471,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks good."
74472,0,Change has been successfully merged into the git repository.
74473,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
74474,0,"Patch Set 1: Looks good to me, approved"
74475,0,Change has been successfully merged into the git repository.
74476,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74477,0,Change has been successfully merged into the git repository.
74479,1,"Patch Set 4: Looks good to me, but someone else must approve; IP review completedI fixed some bugs for layouting complicated histories. Now I am quite happy with it. We have good tests, I tried it with linux and git-git histories and at least it doesn't show wrong topologies.When looking at big, complicated repos (like linux) our history is using substantially more lanes than e.g. gitk. There are some tricks in gitk which don't have in yet - but at least the display is correct now."
74482,1,Patch Set 2:Regarding the wrong display of the EGit repository history which Matthias detected: I can see that the JGit internal history viewer Glog does show the history correct. I guess it is something in the EGit rendering. Or JGit reports inconsistent data which Glog doesn't disturb but which let EGit present things wrongly.
74484,1,"Patch Set 3: Looks good to me, but someone else must approveTopology of the graphs looks better now. I also added a complicated test which replays part of the history of the egit repo"
74486,0,"Patch Set 5: Looks good to me, approved; IP review completed- improved formatting of comments- fixed potential NPE"
74487,0,Change has been successfully merged into the git repository.
74491,0,Patch Set 1:Looks good.
74492,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good."
74493,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
74494,0,"Patch Set 1: Looks good to me, but someone else must approve"
74495,0,Change has been successfully merged into the git repository.
74496,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74498,1,"Patch Set 3: I would prefer that you didn't submit thisI would like to switch off the workspace model in case of comparing two arbitrary branches because it compares the workspace with the remote state. I suppose that here the team API must be extended.But the main issue with this change is that the workspace model is now broken when the HEAD is synchronized with another branch. Now I do not see the local changes anymore, even if I check the ""Include local..."" checkbox."
74503,0,"Patch Set 5: Looks good to me, approved; IP review completedThanks, Dariusz!"
74504,0,Change has been successfully merged into the git repository.
74508,1,"Patch Set 2: I would prefer that you didn't submit this(1 inline comment)Now the Git Change Set Model works fine for comparing two arbitrary branches.But on the other hand, the workspace model is now broken when the HEAD is synchronized with another branch. In the workspace model the left side is the workspace version of the file. Now uncommitted changes are not visible anymore in the synchronize view.Furthermore the workspace model is still broken in case of comparing two arbitrary branches (see bug 322489). Could it be switched off in that case?"
74511,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74512,0,Change has been successfully merged into the git repository.
74513,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74514,0,Change has been successfully merged into the git repository.
74516,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74517,0,Change has been successfully merged into the git repository.
74520,0,"Patch Set 1: Looks good to me, approved; IP review completedThanks so much for hunting this down Jens."
74521,0,Change has been successfully merged into the git repository.
74524,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74525,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74528,0,"Patch Set 3: Looks good to me, approved; IP review completed"
74529,0,Change has been successfully merged into the git repository.
74532,0,Change has been successfully merged into the git repository.
74533,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74534,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good."
74535,0,Change has been successfully merged into the git repository.
74536,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74539,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74540,0,Change has been successfully merged into the git repository.
74543,0,Change has been successfully merged into the git repository.
74544,0,"Patch Set 3: Looks good to me, approved; IP review completed- rebased to current master"
74545,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
74549,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74550,0,Change has been successfully merged into the git repository.
74554,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completedI think we want this in 0.9 because otherwise large objects stored as deltas in packs can be incredibly slow to access, especially if they are accessed often.The downside is, when checking out a large object into the local working directory, we're also deflating it as a loose object just in case we need to re-read that content in the future.  Large binary objects are probably less frequently modified by the user in the working directory, so we're probably less likely to actually need this faster access.  So we might be doing too much work in some cases.But for a gerrit code review server serving large binary files, this really helps, because users of the server tend to access the same objects several times before the next git gc runs."
74555,0,"Patch Set 4: Looks good to me, approved; IP review completed"
74556,0,Change has been successfully merged into the git repository.
74559,1,"Patch Set 3: Looks good to me, but someone else must approve; IP review completedI think this is ready to go now.  The cache is simple and pretty low cost to put in front of pack lookup."
74560,0,"Patch Set 3: Looks good to me, approved; IP review completed"
74561,0,Change has been successfully merged into the git repository.
74562,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
74563,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74564,0,Change has been successfully merged into the git repository.
74566,0,"Patch Set 3: Looks good to me, but someone else must approve"
74567,1,"Patch Set 1: I would prefer that you didn't submit thisI git the following problem on testing:Import->Git->Projects from GitPush ""Clone""Now the clone Job runs in backgroundAfter the clone Job has finished, the new repo is not offered in the repository list.I think this should be fixed. Additionally the user should somehow see that the Import projects from Git dialog is waiting for the result of the clone operation."
74570,0,"Patch Set 4: Looks good to me, approved; IP review completed"
74571,0,Change has been successfully merged into the git repository.
74573,1,Patch Set 2: I would prefer that you didn't submit this(2 inline comments)Now import wizard uses getContainer.run to clone and clone action in repository view uses a Job. This seems to be the best solution.Small bug in code (see inline comment).
74574,0,Patch Set 2: (2 inline comments)Thanks
74575,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
74576,0,"Patch Set 1: Looks good to me, approved; IP review completedYes, that's true!"
74577,0,Change has been successfully merged into the git repository.
74578,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
74580,1,"Patch Set 2: Looks good to me, approved; IP review completedThis makes sense.However, the checkbox does not work. If I haven't checked it I still see the local changes in the workspace model. I have opened bug 324826 for this."
74581,0,Change has been successfully merged into the git repository.
74582,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74583,0,Change has been successfully merged into the git repository.
74585,0,"Patch Set 1: Looks good to me, but someone else must approve(2 inline comments)"
74589,1,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed- rebased to current master and resolved conflict- fixed minor style nit"
74590,0,"Patch Set 3: Looks good to me, approved"
74591,0,Change has been successfully merged into the git repository.
74594,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good."
74595,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good."
74596,0,Change has been successfully merged into the git repository.
74597,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good."
74598,0,Change has been successfully merged into the git repository.
74600,0,Change has been successfully merged into the git repository.
74601,1,"Patch Set 2: Looks good to me, approved; IP review completed- rebased to current master- fixed copy&paste error with tooltips"
74602,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
74603,0,"Patch Set 1: Looks good to me, but someone else must approve"
74604,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good."
74605,0,Change has been successfully merged into the git repository.
74607,0,"Patch Set 2: Looks good to me, approved; IP review completed- improved commit messagethanks Jens,finally we have working core tests :-)"
74608,0,Change has been successfully merged into the git repository.
74609,0,"Patch Set 1: Looks good to me, approved; IP review completedThanks Matthias."
74611,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks good to me."
74612,0,Change has been successfully merged into the git repository.
74619,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completedYep, looks much better! Thanks"
74620,0,"Patch Set 3:Yep, looks much better! Thanks"
74621,0,"Patch Set 3: Looks good to me, approved; IP review completed"
74622,0,Change has been successfully merged into the git repository.
74625,1,"Patch Set 1: No score(2 inline comments)If that's the case, I would be more lenient to have this feature available in the earlier builds. As we get more stable, we can consider removing this if it isn't needed anymore."
74630,0,"Patch Set 6: Looks good to me, approved; IP review completed- fixed some typos- improved commit message"
74631,0,Change has been successfully merged into the git repository.
74639,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74640,0,Change has been successfully merged into the git repository.
74643,0,Change has been successfully merged into the git repository.
74644,0,"Patch Set 4: Looks good to me, approved; IP review completedrebased"
74650,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completedRebased, fixed, and cleaned up the dialog."
74651,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedYep, much more reliable for me now. Some sync tests are still red but I think this has to do with the usage of different repository instances."
74652,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74653,0,Change has been successfully merged into the git repository.
74655,0,"Patch Set 5: Looks good to me, approved; IP review completedLooks good."
74659,0,Change has been successfully merged into the git repository.
74660,0,"Patch Set 6: Looks good to me, approved; IP review completedRebased and pushed."
74665,0,Patch Set 4: (2 inline comments)I reviewed all modifications now. Looks good to me. I have only two minor comments.
74670,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completedI think this version addresses the reviewer's comments."
74671,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
74673,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks fine."
74674,0,Change has been successfully merged into the git repository.
74676,0,Change has been successfully merged into the git repository.
74677,0,"Patch Set 3: Looks good to me, approved; IP review completed- rebased to current master"
74681,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74682,0,Change has been successfully merged into the git repository.
74683,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74684,0,Change has been successfully merged into the git repository.
74685,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74686,0,Change has been successfully merged into the git repository.
74687,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74694,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
74695,0,Change has been successfully merged into the git repository.
74696,0,"Patch Set 3: Looks good to me, approved; IP review completedLooks reasonable."
74698,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
74699,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good."
74700,0,Change has been successfully merged into the git repository.
74701,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good. Should save time on the tests."
74703,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed- fixed some typos- rebased to current master"
74704,0,Patch Set 2:Looks good.
74705,0,"Patch Set 2: Looks good to me, approved; IP review completedLooks good."
74706,0,Change has been successfully merged into the git repository.
74708,0,Change has been successfully merged into the git repository.
74709,0,"Patch Set 4: Looks good to me, approved; IP review completedrebased to current master"
74711,0,Patch Set 2: I would prefer that you didn't submit thisThe text fields for merge result and new head look like they were editable but they are not (which makes sense). It should be visible that these fields are read-only.I think the merge inputs should be shown above the result since the operation starts from the inputs to result in the merge result.Would be also interesting to see which branch or tag has been merged into which branch (if a branch or tag has been merged).It's not really obvious that the entries in the merge input table are representing commits since the column labels are rather generic.
74714,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74715,0,Change has been successfully merged into the git repository.
74718,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
74719,0,"Patch Set 3: Looks good to me, approved; IP review completed"
74720,0,Change has been successfully merged into the git repository.
74724,0,Change has been successfully pushed.
74725,0,"Patch Set 1: Looks good to me, but someone else must approve"
74726,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74727,1,"Patch Set 1: I would prefer that you didn't submit thisDoes not look good after all, though I cannot understand why.See I09d0aafb3d15436e942acc4b722a63d35f58051a for the version of EGit I tried where BlobStorageTest.testFailCorrupt2 fails. I had to change it to actually read data now that we are streaming."
74729,1,"Patch Set 1: Looks good to me, approvedSomethings rotten.. now works"
74731,0,Change has been successfully pushed.
74732,0,"Patch Set 1: Looks good to me, approved"
74734,0,Change has been successfully pushed.
74735,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74736,0,Change has been successfully pushed.
74737,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74738,0,Change has been successfully pushed.
74740,0,"Patch Set 1: Looks good to me, but someone else must approve"
74741,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74742,0,Change has been successfully pushed.
74743,0,"Patch Set 1: Looks good to me, but someone else must approve(1 inline comment)"
74746,0,"Patch Set 2: Looks good to me, but someone else must approve"
74747,0,"Patch Set 2: Looks good to me, but someone else must approve"
74748,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74749,0,Change has been successfully pushed.
74750,0,"Patch Set 1: Looks good to me, but someone else must approve(1 inline comment)"
74751,0,"Patch Set 1: Looks good to me, approved; IP review completed(1 inline comment)"
74752,0,Change has been successfully pushed.
74754,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74756,0,Change has been successfully pushed.
74758,0,Change has been successfully pushed.
74760,0,Change has been successfully pushed.
74762,0,"Patch Set 2: Looks good to me, but someone else must approve"
74764,0,"Patch Set 3: Looks good to me, approved; IP review completed"
74765,0,"Patch Set 3: Looks good to me, but someone else must approveI wish Gerrit wouldn't make me re-review something if there were no changes in the last patchset. If the change has no differences, it shouldn't revoke my review from last time."
74766,0,Change has been successfully pushed.
74768,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
74769,0,"Patch Set 3: Looks good to me, but someone else must approve"
74770,0,"Patch Set 3: Looks good to me, approved; IP review completed"
74771,0,Change has been successfully pushed.
74773,0,"Patch Set 2: Looks good to me, but someone else must approveAs a general observation, it's useful to decouple the text of the message to the variable name - this renaming technically is an API breakage because this is in a public class (I think ... the package doesn't have 'internal') whereas you can always change the text in the properties file. Since we're in incubation, it doesn't matter - but either way, it probably makes sense for this class to be in an internal package rather than part of the API, if it's a public package (which it looks like it is)."
74775,0,"Patch Set 1: Looks good to me, but someone else must approve"
74777,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74778,0,"Patch Set 2: Looks good to me, but someone else must approve"
74779,0,Change has been successfully pushed.
74781,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
74782,0,"Patch Set 2: Looks good to me, but someone else must approve"
74783,0,"Patch Set 2: Looks good to me, approved"
74784,0,Change has been successfully pushed.
74785,0,"Patch Set 1: Looks good to me, but someone else must approve"
74786,0,"Patch Set 1: Looks good to me, but someone else must approve"
74787,0,"Patch Set 1: Looks good to me, but someone else must approve"
74788,0,Change has been successfully pushed.
74790,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74791,0,Change has been successfully merged into the git repository.
74792,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74793,1,"Patch Set 1:I have not generated a Change-Id, because I had amended the commit from http://egit.eclipse.org/r/#change,1153 which was abandoned. EGit calculated the Change-Id of the abandoned commit, so gerrit did not let me push."
74794,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74795,0,Change has been successfully merged into the git repository.
74801,0,"Patch Set 4: Looks good to me, but someone else must approve"
74802,0,"Patch Set 4: Looks good to me, approved; IP review completed"
74803,0,Change has been successfully merged into the git repository.
74805,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74808,0,Change has been successfully merged into the git repository.
74812,0,"Patch Set 4: Looks good to me, approved; IP review completed"
74813,0,Change has been successfully merged into the git repository.
74816,1,"Patch Set 3: I would prefer that you didn't submit thisMore tests.  Currently testSlashOnlyMatchesDirectory is broken.  The test is correct according to `man gitignore` so our code is broken.  It seems that IgnoreRule is matching the rule ""out/"" with ""out"" even though ""out"" is a file."
74817,1,Patch Set 3:Caused by a faulty check for the nameOnly ignore condition. I'll upload a quick fix to demonstrate the issue.
74818,1,"Patch Set 3:I can't push to this Change-Id, sorry. Here is a pastebin demonstrating the problem and a quick 3-line solution:http://pastebin.com/2GDdCZVv"
74820,0,"Patch Set 5: Looks good to me, approved; IP review completed"
74821,0,Change has been successfully merged into the git repository.
74825,0,"Patch Set 4: Looks good to me, but someone else must approveIncluded the change posted by Charley. Now the tests are green."
74826,0,"Patch Set 4: Looks good to me, approved; IP review completed"
74834,0,"Patch Set 4: Looks good to me, approved; IP review completed"
74835,0,Change has been successfully merged into the git repository.
74837,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74838,0,Change has been successfully merged into the git repository.
74839,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
74840,0,"Patch Set 1: Looks good to me, approved"
74841,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
74842,0,"Patch Set 1: Looks good to me, approved(1 inline comment)"
74844,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74845,0,Change has been successfully merged into the git repository.
74846,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74847,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74848,0,Change has been successfully merged into the git repository.
74850,0,Change has been successfully merged into the git repository.
74851,0,"Patch Set 1: Looks good to me, approved"
74852,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74853,0,Change has been successfully merged into the git repository.
74854,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74860,0,Patch Set 3:Thanks Remy for these great comments. I have worked them into the new patch set.
74862,0,"Patch Set 10: Looks good to me, approved; IP review completed"
74863,0,Change has been successfully merged into the git repository.
74870,0,"Patch Set 9: Looks good to me, but someone else must approve"
74879,0,Change has been successfully merged into the git repository.
74883,0,"Patch Set 7: Looks good to me, approved; IP review completedLooks good"
74887,0,"Patch Set 3: Looks good to me, but someone else must approve"
74888,0,Change has been successfully merged into the git repository.
74889,0,"Patch Set 3: Looks good to me, approved; IP review completed"
74892,0,"Patch Set 2: Looks good to me, but someone else must approve"
74893,0,Patch Set 2: I would prefer that you didn't submit this; IP review completedGreat!Just a style nit: putting the bugs into individual lines will generate the bug links properly.
74894,0,"Patch Set 1: Looks good to me, but someone else must approve"
74897,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74900,0,"Patch Set 3: Looks good to me, approved; IP review completedRebased to master"
74901,0,Change has been successfully merged into the git repository.
74902,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74903,0,Change has been successfully merged into the git repository.
74904,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74905,0,Change has been successfully merged into the git repository.
74907,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completed- rebased to current master- generate additional 100 random commits to get some more food for cloning"
74908,1,"Patch Set 4: I would prefer that you didn't submit thisVery nice and quite a progress. However, we should not use System.out to write messages to the console: it disturbs the user and doesn't help anyone."
74910,1,"Patch Set 2: No score- works from inside Eclipse 3.6 M7 on windows xp- still need to test with tycho, fighting (again) with broken downloaded artifacts"
74913,1,"Patch Set 2:Some ideas- Slow down the cloning with the same daya. I've used AspectJ in another project where mocking would be too intrusive to test some legacy code. Introducing a few delays would be easy.- Create a test repo from EGit, by cloning ourself and fixing the branches. That would give us a large repo for testing. Remember we are not testing cloning itself, but only the GUI on top of clone, so we can presume that cloning as such is working."
74915,0,"Patch Set 5: Looks good to me, but someone else must approve; IP review completed- removed System.out.println calls- rebased to current master- increased memory settings for maven run to values used to run tests in Eclipse- increased timeout to wait for branch table in clone wizard"
74916,0,"Patch Set 5: Looks good to me, approved; IP review completedGreat!"
74917,0,Change has been successfully merged into the git repository.
74920,0,"Patch Set 2: Looks good to me, but someone else must approve- rebased to current master- verified that this works with Jetty 7.1.5- improved commit message"
74921,0,Change has been successfully merged into the git repository.
74922,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74923,1,Patch Set 1: No score; No score- looks like an incompatible change in the jetty Logger interface- which version of jetty are you using here ? - currently we build against jetty 7.0.1.- which helios package or feature includes org.eclipse.jetty.util.log ? I use PDE and there is no such problem so far
74924,1,"Patch Set 1: I would prefer that you didn't submit this; No scoreThere really isn't a problem with this change, we can include it.  But it seems odd that we need to update our implementation of this interface without also changing the version of Jetty we reference in our build and our manifests.  Did Jetty make an incompatible API change in a service release?"
74925,1,"Patch Set 1: No scoreI get the compile errors when using Eclipse 3.6M7 Helios - the RCP distribution. I then added Jetty from the Eclipse RT project. In 3.6M7, Jetty is at 7.1 but in M6 it was at 7.02 and did not have the new Logger interface. The problem we face is that any potential contributor who has a fully up to date Helios environment will encounter this problem when they build under Eclipse. The Maven builds will not be affected because you reference specific versions in them."
74927,0,Change has been successfully merged into the git repository.
74928,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74930,1,"Patch Set 1:Ok, then my wording was incorrect."
74932,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74933,0,Change has been successfully merged into the git repository.
74934,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74935,0,Change has been successfully merged into the git repository.
74936,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74937,0,Change has been successfully merged into the git repository.
74938,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74939,0,Change has been successfully merged into the git repository.
74940,0,"Patch Set 1: Looks good to me, approved; IP review completed"
74941,0,Change has been successfully merged into the git repository.
74943,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed+1 from Tech PMC"
74944,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74945,0,Change has been successfully merged into the git repository.
74952,0,"Patch Set 5: Looks good to me, but someone else must approveLGTM, will submit after we get further through the series."
74953,0,"Patch Set 5: Looks good to me, approved; IP review completed"
74954,0,Change has been successfully merged into the git repository.
74956,0,"Patch Set 2: Looks good to me, approvedLGTM, but I'm going to hold off on submitting this until we have more of the series ready to go in."
74959,0,"Patch Set 3: Looks good to me, but someone else must approveWill submit when more of the series is complete."
74960,0,"Patch Set 3: Looks good to me, approved; IP review completed"
74961,0,Change has been successfully merged into the git repository.
74964,0,"Patch Set 2: Looks good to me, approved; IP review completed"
74965,0,Change has been successfully merged into the git repository.
74967,0,"Patch Set 3: Looks good to me, approved"
74969,0,Change has been successfully merged into the git repository.
74974,0,"Patch Set 2: Looks good to me, approved"
74976,0,Change has been successfully merged into the git repository.
74977,0,"Patch Set 1: Looks good to me, but someone else must approve"
74978,0,"Patch Set 1: Looks good to me, but someone else must approve"
74980,0,"Patch Set 2: Looks good to me, approved"
74981,0,"Patch Set 2: Looks good to me, approved"
74983,0,Change has been successfully merged into the git repository.
74985,0,"Patch Set 3: Looks good to me, approved"
74988,0,Change has been successfully merged into the git repository.
74994,0,"Patch Set 1: Looks good to me, but someone else must approveLGTM, but has to be rebased, so I'll +2 again later..."
74996,0,"Patch Set 2: Looks good to me, approved"
74998,0,Change has been successfully merged into the git repository.
75000,0,"Patch Set 2: Looks good to me, approved"
75002,0,Change has been successfully merged into the git repository.
75005,0,"Patch Set 5: Looks good to me, approved"
75006,0,"Patch Set 5: Looks good to me, but someone else must approve"
75007,0,"Patch Set 5: Looks good to me, but someone else must approve; IP review completedLooks good."
75009,0,Change has been successfully merged into the git repository.
75017,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75018,0,Change has been successfully merged into the git repository.
75019,0,"Patch Set 1: Looks good to me, but someone else must approve"
75020,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75021,0,Change has been successfully merged into the git repository.
75022,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75023,0,Change has been successfully merged into the git repository.
75024,1,"Patch Set 1:The problem with this is we have 3 almost identical methods, each of which does subtly different things, and they're already diverging. there's a mixture of int n and long n, and some arguments have final size and the others don't.The only difference appears to be whether we write it into a temporary buffer, and what method gets called in the middle of the loop (fillInFromFile, fillInFromStream). We could parameterise that to the same function and delegate based on a switch (e.g. fillInFrom(FILE), fillInFrom(STREAM) and then code if( from==FILE)fillInFromFile() else (if from = STREAM) fillInFromStream() so we only need this implementation once. Or, we could pass in a class (FillInSource) and have that delegated to.Either way, I think the duplicate looping logic should be removed so that when there's a future error, we only do it once, and it can be detected appropriately (and means we only have one place to fix in the future)."
75027,0,Patch Set 2: I would prefer that you didn't submit this(1 inline comment)Can we fix the comment? Otherwise it looks much better than it was before :)
75032,0,"Patch Set 3: Looks good to me, but someone else must approve"
75033,0,"Patch Set 3: Looks good to me, approved; IP review completed"
75036,0,Change has been successfully merged into the git repository.
75037,0,"Patch Set 4: Looks good to me, approved; IP review completed"
75039,0,"Patch Set 2: Looks good to me, approved; IP review completed"
75040,0,Change has been successfully merged into the git repository.
75043,1,"Patch Set 2:I found issues with TrackUntrackOperationTest if the test workspace was NOT cleared. I fixed this along with two other tests that were failing in this case onhttp://egit.eclipse.org/r/#change,1086I could not reproduce the problems with the PushOperationTests, though."
75049,0,"Patch Set 2: Looks good to me, approved; IP review completed"
75050,0,Change has been successfully merged into the git repository.
75051,1,Patch Set 1: I would prefer that you didn't submit thisLGTM but this change should not depend on the change removing RIRefresh. Please rebase to get rid of this dependency.
75054,0,"Patch Set 3: I would prefer that you didn't submit this(3 inline comments)- verified tests and tried it, good :-)- some minor issues (style nits, comment)"
75056,0,"Patch Set 5: Looks good to me, approved; IP review completedrebased to current master and fixed typo in commit message"
75057,0,Change has been successfully merged into the git repository.
75059,1,"Patch Set 2: I would prefer that you didn't submit this; IP review completedThanks, that's much better than my quick-and-dirty patch... There are some whitespace problems with the test class, though."
75062,1,"Patch Set 4:Great, this can directly be used in EGit in DecoratableResourceAdapter for the dirty markers, can't it?"
75064,1,"Patch Set 5: Looks good to me, but someone else must approve; IP review completedjust rebased it to get rid of a unneeded dependency"
75070,1,"Patch Set 6: Looks good to me, but someone else must approvetested this change by using it for Label decoration (dirty marker). Worked pretty well."
75072,1,"Patch Set 6:yes, we will change this dirty-detection to look for racy git situations"
75073,1,"Patch Set 6: Looks good to me, but someone else must approve(1 inline comment)LGTM, but I think there is a redundant line of code here that we can safely remove.  I assume you will be doing a subsequent change to handle racily clean stuff."
75076,0,Change has been successfully merged into the git repository.
75077,0,"Patch Set 7: Looks good to me, approved; IP review completedremoved one duplicate if and rebased to master"
75079,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75080,0,Change has been successfully merged into the git repository.
75081,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75082,0,Change has been successfully merged into the git repository.
75086,0,"Patch Set 7: Looks good to me, approved; IP review completedrebased to master, tested again (also with Linux).Since all comments are answered and tests work well I will submit this this evening when I don't see new comments"
75087,0,Change has been successfully merged into the git repository.
75100,0,"Patch Set 3: Looks good to me, approved; IP review completedverified"
75101,0,Change has been successfully merged into the git repository.
75104,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75105,0,Change has been successfully merged into the git repository.
75108,0,"Patch Set 2: Looks good to me, approved; IP review completed"
75109,0,Change has been successfully merged into the git repository.
75110,0,"Patch Set 1: Looks good to me, approved; IP review completedDone."
75111,0,Change has been successfully merged into the git repository.
75115,0,"Patch Set 5: Looks good to me, approved; IP review completedthanks Mathias"
75116,0,Change has been successfully merged into the git repository.
75120,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completedjust changed commit message"
75122,0,Change has been successfully merged into the git repository.
75123,0,"Patch Set 3: Looks good to me, approved; IP review completed- rebased to current master- verified"
75126,1,"Patch Set 20: Looks good to me, approved; IP review completed- CQ 4302 has been approved- Charley changed copyright headers as discussed in CQ 4302- fixed some style nits (redundant braces around single line blocks and some extra blank lines)thanks Charley this is an important step for jgit"
75127,0,Change has been successfully merged into the git repository.
75130,0,Patch Set 16:Thanks Chris! I will run a set of tests tonight on Windows to make sure the tests run properly there as well.
75133,0,"at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)Test coverage could be improved:- IgnoreRule: get methods- IgnoreNode: parse methods, isIgnored, wasMatched- SimpleIgnoreCache: fullyInitialize, readIgnoreRules,     addIgnoreNode when (ignoreMap.get(directory) != null)     getParent when return value isn't empty string"""
75136,0,"Patch Set 5:I made the recommended changes, please let me know if anything else needs fixing :)"
75144,1,"Patch Set 17: Looks good to me, but someone else must approve; IP review completedI fixed the line ending problem."
75146,1,"Patch Set 17: Looks good to me, but someone else must approve; Unclean IP, do not check inWaiting for CQ clearance and we can check this in. Hopefully it will only take a few days."
75149,1,"Patch Set 11:I made some of the suggested changes, added to the JavaDoc comments. Test coverage is at 98% of ignore classes. I am unable to reproduce test errors on a fresh clone on my machine, it may be related to the way the tests handled file paths, made some fixes in this patch.Now looking at using TreeWalk and WorkingTreeIterator, looking at NameConflictTreeWalk as a way to get started.Thanks for the comments and suggestions. :)"
75152,1,"Patch Set 12:I made the requested changes to use TreeWalk and a TreeIterator. The SimpleIgnoreCache implementation now uses a TreeWalk to populate nodes for the cache. Checks the timestamp on the .gitignore to avoid unnecessary updates. Code coverage hasn't changed, but there are still more test cases to add to cover more cases (e.g. bad times to delete a .gitignore file).I have a Windows XP box set up for EGit now and will try to get the tests fixed for Windows tonight, I need to fix a number of clumsy String manipulation attempts for compatibility with Windows path strings."
75154,0,Patch Set 14: (3 inline comments)Good and important work!You should change the commit message. It should describe the whole change. Comments meant for review should go into the gerrit comments. Otherwise it is difficult for a new reviewer to understand the whole change.I would find it useful to have the description of compatibility tests here (as in https://bugs.eclipse.org/bugs/show_bug.cgi?id=303925#c5).Do you plan to add core.excludesfile? Regarding that I would however suggest to do that in a subsequent commit.Please have a look at my inline comments.
75160,1,"Patch Set 4:(Sorry for the triple commit) I've extended the test coverage as required.If the tests are failing, it is probably because they are unable to create a .git/info/exclude file. I used a hack to generate the file on the fly because I can't commit excludeTest/.git/info/exclude to the repository. It's also useful for other testing. The current patch should correctly delete any extra files/folders created for testing purposes.Please let me know if there is anything else I need to change :)"
75162,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good, not sure why we had this call in the first place."
75163,0,Change has been successfully merged into the git repository.
75164,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good."
75165,0,Change has been successfully merged into the git repository.
75166,0,"Patch Set 1: Looks good to me, approved; No scorePlease abandon the previous versions."
75168,0,Change has been successfully merged into the git repository.
75173,0,"Patch Set 3: Looks good to me, approved; IP review completedLooks good, thanks Mathias."
75174,0,Change has been successfully merged into the git repository.
75176,1,"Patch Set 2: No scoreAs for the comments in the .options, this is done; as for the second remark, I believe this is a little mistake (see my answer in patch set 1)."
75177,0,"Patch Set 2: No score; No scoreI see now. It's x-friends so it implies internal.Can we name the package ""org.eclipse.egit.core.internal.trace"" to be consistent with the other internal packages?"
75179,1,"Patch Set 2: No scoreAdded headers to new files, sorry for this glitch."
75181,0,"Patch Set 4: Looks good to me, approved; IP review completedLooks great."
75185,1,Patch Set 3: No scorePatch set 3: I put the icons in the right class and added some to get rid of the button texts on the toolbar.
75188,0,"Patch Set 5: Looks good to me, approved; IP review completedGreat work Mathias."
75189,0,Change has been successfully merged into the git repository.
75190,1,"Patch Set 1: No score; Unclean IP, do not check inmissing license headers in all new files"
75194,1,"Patch Set 2: Looks good to me, approved; IP review completedfixed the broken copyright statement and rebased to current head."
75195,0,Change has been successfully merged into the git repository.
75196,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75197,0,Change has been successfully merged into the git repository.
75198,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75200,0,Change has been successfully pushed.
75202,0,Change has been successfully pushed.
75203,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75206,0,Change has been successfully pushed.
75207,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75209,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
75210,0,Change has been successfully pushed.
75213,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completedThis now compiles.  Thanks Matthias for locating the places tools/version.sh didn't update correctly; these have been addressed in the script and in are included in this version change."
75214,0,"Patch Set 4: Looks good to me, approved; No score"
75215,0,Change has been successfully merged into the git repository.
75217,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed- maven build now works- tested installation and checked version numbers in Eclipse after installation to be all 0.7.0"
75218,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completedAwesome :)"
75219,1,"Patch Set 1: I would prefer that you didn't submit this; No scoreUnfortunately, even with [1] in my workspace and built as with the instructions in [2], I'm getting build failures.  The p2 resolver can't find 'package org.eclipse.jgit.lib [0.7.0,0.8.0)'[1] I9b00a4041c19115e81326afd2213b98603f789ad[2] http://wiki.eclipse.org/EGit/Contributor_Guide#Maven_Build_Sequence"
75222,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
75223,0,"Patch Set 2: Looks good to me, approved; No score"
75224,0,Change has been successfully merged into the git repository.
75227,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75228,0,Change has been successfully merged into the git repository.
75229,1,"Patch Set 1: Looks good to me, approved; IP review completedWorks for me. I don't know why we need the dependent patch."
75231,0,Change has been successfully merged into the git repository.
75234,0,"Patch Set 3: Looks good to me, approved; IP review completedThe reflog is translated:http://dev.eclipse.org/mhonarc/lists/egit-dev/msg00979.html"
75235,0,Change has been successfully merged into the git repository.
75238,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75239,0,Change has been successfully merged into the git repository.
75241,0,"Patch Set 2: Looks good to me, approved; IP review completedThis is a good first cut of things.I want to push it in so we can iterate on it and make it better."
75242,0,Change has been successfully merged into the git repository.
75243,0,"Patch Set 1: I would prefer that you didn't submit this; No scoreThis is interesting.  I have only taken an initial scan through the code, but I think there is a lot of potential here for something very useful for users.  Notes on some lines below.  Obviously we don't want to submit this in its current state, but I'm happy to see this bug being worked on."
75245,0,Patch Set 1:Most suggestions were implemented. I also externalized Strings and added Icon support.
75247,0,"Patch Set 5: Looks good to me, approved; IP review completed"
75248,0,Change has been successfully merged into the git repository.
75255,0,"Patch Set 4: Looks good to me, approved; IP review completed"
75256,1,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedFiles generated by wikitext. I had to manually fix some image links pointing to the navigation pictures (next.gif, prev.gif, home.gif) which are wrongly generated (images/images/xxx.gif instead of images/xxx.gif)."
75257,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good. Can you file the bug against wikitext for the images path?Also, I need to update wikitext. Will file a bug.We should also add the Git For Eclipse Users piece to the doc [1].[1] - http://wiki.eclipse.org/EGit/Git_For_Eclipse_Users"
75258,0,Change has been successfully merged into the git repository.
75259,0,"Patch Set 1: Looks good to me, but someone else must approve"
75260,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75261,0,Patch Set 1:Just a note: this series fixes https://bugs.eclipse.org/bugs/show_bug.cgi?id=297584#c9 which prevents Buckminster from releasing Git headless support in 3.6 timeframe.
75263,0,"Patch Set 1: Looks good to me, but someone else must approve"
75265,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completedSquashed as suggested by Matthias"
75266,0,"Patch Set 2: Looks good to me, but someone else must approve"
75267,0,"Patch Set 2: Looks good to me, approved; IP review completedThanks, looks good."
75268,0,Change has been successfully merged into the git repository.
75270,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completedDefault build now just packages checked in userguide. To update help pages run with system property update.egit.doc"
75271,0,"Patch Set 2: Looks good to me, approved; IP review completedThanks Matthias!"
75272,0,Change has been successfully merged into the git repository.
75275,0,"Patch Set 1: Looks good to me, approved; IP review completedThanks, looks good."
75276,0,Change has been successfully merged into the git repository.
75278,0,"Patch Set 4:  Looks good to me, approved; IP review completed"
75279,0,Change has been successfully pushed into branch stable-0.7.
75281,0,"Patch Set 2:  Looks good to me, but someone else must approve; IP review completed"
75283,0,"Patch Set 3:  Looks good to me, but someone else must approve; IP review completed"
75284,0,"Patch Set 3:  Looks good to me, but someone else must approve; IP review completed"
75285,0,"Patch Set 3: Looks good to me, but someone else must approve"
75286,0,"Patch Set 3: Looks good to me, approved; No score"
75287,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75289,0,"Patch Set 4:  Looks good to me, approved; IP review completed"
75290,0,Change has been successfully pushed into branch stable-0.7.
75292,0,"Patch Set 3:  Looks good to me, but someone else must approve; IP review completed"
75293,0,"Patch Set 3:  Looks good to me, but someone else must approve; IP review completed"
75294,0,"Patch Set 3: Looks good to me, but someone else must approve"
75297,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75299,0,"Patch Set 2:  Looks good to me, but someone else must approve; IP review completed"
75300,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75301,0,"Patch Set 1: Looks good to me, but someone else must approve"
75303,0,"Patch Set 2:  Looks good to me, approved; IP review completed"
75304,0,Change has been successfully pushed into branch stable-0.7.
75305,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75306,0,"Patch Set 1: Looks good to me, but someone else must approve"
75308,0,"Patch Set 2:  Looks good to me, approved; IP review completed"
75309,0,Change has been successfully pushed into branch stable-0.7.
75310,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75311,0,"Patch Set 1: Looks good to me, but someone else must approve"
75313,0,"Patch Set 2:  Looks good to me, approved; IP review completed"
75314,0,Change has been successfully pushed into branch stable-0.7.
75315,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75316,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75317,0,"Patch Set 1: Looks good to me, but someone else must approve"
75319,0,"Patch Set 2:  Looks good to me, approved; IP review completed"
75320,0,Change has been successfully pushed into branch stable-0.7.
75321,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75322,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75323,0,"Patch Set 1: Looks good to me, but someone else must approve"
75324,0,"Patch Set 1: Looks good to me, but someone else must approve"
75325,0,"Patch Set 1: Looks good to me, but someone else must approve; No score"
75327,0,"Patch Set 2:  Looks good to me, approved; IP review completed"
75328,0,Change has been successfully pushed into branch stable-0.7.
75330,0,"Patch Set 3:  Looks good to me, approved; IP review completed"
75331,0,Change has been successfully pushed into branch stable-0.7.
75332,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75334,0,"Patch Set 2:  Looks good to me, but someone else must approve; IP review completed"
75335,0,"Patch Set 2:  Looks good to me, but someone else must approve; IP review completed"
75336,0,"Patch Set 2: Looks good to me, but someone else must approve"
75337,0,"Patch Set 2: Looks good to me, but someone else must approve; No score"
75338,0,"Patch Set 2: Looks good to me, but someone else must approve"
75340,0,"Patch Set 3:  Looks good to me, but someone else must approve; IP review completed"
75342,0,"Patch Set 5:  Looks good to me, approved; IP review completed"
75343,0,Change has been successfully pushed into branch stable-0.7.
75345,0,"Patch Set 4:  Looks good to me, but someone else must approve; IP review completed"
75346,0,"Patch Set 4:  Looks good to me, but someone else must approve; IP review completed"
75348,0,"Patch Set 4: Looks good to me, but someone else must approveSorry, should have been +1"
75350,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75352,0,"Patch Set 4:  Looks good to me, but someone else must approve; IP review completed"
75353,0,"Patch Set 4:  Looks good to me, but someone else must approve; IP review completed"
75354,0,"Patch Set 4: Looks good to me, but someone else must approve"
75356,0,"Patch Set 5:  Looks good to me, approved; IP review completed"
75357,0,Change has been successfully pushed into branch stable-0.7.
75359,0,"Patch Set 3:  Looks good to me, but someone else must approve; IP review completed"
75361,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75363,0,"Patch Set 2:  Looks good to me, but someone else must approve; IP review completed"
75365,0,"Patch Set 4:  Looks good to me, approved; IP review completed"
75366,0,Change has been successfully pushed into branch stable-0.7.
75367,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75369,0,"Patch Set 3:  Looks good to me, but someone else must approve; IP review completed"
75370,0,"Patch Set 3:  Looks good to me, but someone else must approve; IP review completed"
75371,0,"Patch Set 3: Looks good to me, but someone else must approveDo we have tests that already cover this?"
75373,0,"Patch Set 3:  Looks good to me, but someone else must approve; IP review completed"
75374,0,"Patch Set 3: Looks good to me, but someone else must approve; No score"
75375,0,"Patch Set 3:  Looks good to me, but someone else must approve; IP review completed"
75376,0,"Patch Set 3: Looks good to me, but someone else must approve"
75377,0,"Patch Set 3: Looks good to me, but someone else must approve"
75379,0,"Patch Set 4:  Looks good to me, approved; IP review completed"
75380,0,Change has been successfully pushed into branch stable-0.7.
75381,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75383,0,"Patch Set 2:  Looks good to me, but someone else must approve; IP review completed"
75385,0,"Patch Set 2:  Looks good to me, but someone else must approve; IP review completed"
75387,0,"Patch Set 3:  Looks good to me, but someone else must approve; IP review completed"
75388,0,"Patch Set 3:  Looks good to me, but someone else must approve; IP review completed"
75389,0,"Patch Set 3: Looks good to me, but someone else must approve"
75390,0,"Patch Set 3: Looks good to me, but someone else must approve"
75391,0,"Patch Set 3: Looks good to me, approved; No score"
75393,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75395,0,"Patch Set 4:  Looks good to me, approved; IP review completed"
75396,0,Change has been successfully pushed into branch stable-0.7.
75397,0,"Patch Set 1:  Looks good to me, approved; IP review completed"
75399,0,Change has been successfully pushed into branch stable-0.7.
75401,0,"Patch Set 2:  Looks good to me, approved; IP review completed"
75402,0,Change has been successfully pushed into branch stable-0.7.
75403,0,"Patch Set 1: Looks good to me, but someone else must approve"
75404,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75405,0,"Patch Set 1: Looks good to me, but someone else must approve"
75408,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75409,0,Change has been successfully merged into the git repository.
75411,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75412,0,Change has been successfully merged into the git repository.
75413,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75414,0,Change has been successfully merged into the git repository.
75415,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75417,0,Change has been successfully pushed.
75419,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75420,0,Change has been successfully pushed.
75421,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75422,0,Change has been successfully pushed.
75425,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75426,0,Change has been successfully pushed.
75427,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75429,0,Change has been successfully pushed.
75431,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75432,0,Change has been successfully pushed.
75436,0,"Patch Set 5: Looks good to me, but someone else must approveAddressed all comments from Shawn given for the patch set 4. Let's see if I understood them well :-)"
75437,1,"Patch Set 5: Looks good to me, but someone else must approve; No scoreI'm OK with this.Shawn, seems like we may want to sneak this in for 0.7.0 if you're comfortable."
75438,1,"Patch Set 5: Looks good to me, approved; No scoreThough I would like an IP Review +1 from a current SAP committer before we submit this."
75439,0,Patch Set 5: IP review completedMissed the Matthias/Chris exchange above saying the change is fine.
75440,0,Change has been successfully merged into the git repository.
75443,1,"Patch Set 2: I would prefer that you didn't submit this; No scoreYour commit message spells JGit inconsistently, I think you should always spell it JGit."
75446,0,"Patch Set 4: Looks good to me, but someone else must approve"
75447,1,"Patch Set 4: Looks good to me, but someone else must approve; No scoreChris: for this change I would like to claim the IP process described in figure 2 in http://www.eclipse.org/legal/EclipseLegalProcessPoster.pdf, can you supervise this change ? Is it ok to use Gerrit for that or do we need to document this in a bug in Bugzilla ? Sasa and myself are working for the same company and SAP is a member company which signed the member committer agreement."
75448,0,Patch Set 4: I would prefer that you didn't submit this; No scoreNice.  I'm happy with the general approach.  Nits below.
75449,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completedIP wise, this is fine.I would address Shawn's comments and I think we are good to go on this one."
75451,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
75452,1,"Patch Set 3: Looks good to me, but someone else must approve; No scoreI hesitate to submit the change because I would prefer a dialog when the repo is in state conflict and ""add to index"" it not yet supported."
75454,0,"Patch Set 5: Looks good to me, approved; IP review completed"
75455,0,Change has been successfully merged into the git repository.
75458,0,"Patch Set 4: Looks good to me, approved; IP review completed"
75461,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75462,0,Change has been successfully merged into the git repository.
75464,0,"Patch Set 3: Looks good to me, approved; IP review completedrebased to current master"
75465,0,Change has been successfully merged into the git repository.
75467,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75468,0,"Patch Set 1: No score; IP review completedLooks good, I just have two small improvement proposals:- You could also save the URI from the fetch wizard (FetchWizard.java)- I would prefer that the content proposals were filtered by the content of the inpout field."
75470,0,"Patch Set 1: I would prefer that you didn't submit thisGreat step forward :-) I was able to build and install the plugin via Export > Plug-in development > Deployable plug-ins and fragments.I found the following issues:- is it ok to have the wikitext jars in the lib folder checked into our repo ? I think we should rather refer to them via plugin dependencies.- some images are missing:  - images for previous, next and EGit User Guide links in headers and footers of all documentation pages  - images for topic ""Committing changes"" are all missing- I think the doc plugin should be added to the EGit feature"
75473,1,"Patch Set 3: No score; No score- removed trailing whitespace- some image filenames had blank instead of ""_""- added missing images next.gif, prev.gif, home.gif- fixed image path for next, prev and home.gif, they all had path images/images/xxx.gif- committing jars to the repo seems still ugly to me, what's the advantage of this approach ?"
75474,0,"Patch Set 3: Looks good to me, approved; IP review completedOk, this is nicer ;)"
75475,0,"Patch Set 3:In regards to the embedded jars, I created this bug:https://bugs.eclipse.org/bugs/show_bug.cgi?id=305431I believe we can solve it at a later time.Thanks for the modifications."
75476,0,Change has been successfully merged into the git repository.
75478,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completedI made the changes requested.We ship with the wikitext jars because this is the pattern other projects use. I would like to get this in before we release 0.7.0... we can always make changes in the future."
75487,0,"Patch Set 7: Looks good to me, but someone else must approve; IP review completed"
75488,0,"Patch Set 7: Looks good to me, approved; No score"
75489,0,Change has been successfully merged into the git repository.
75491,0,"Patch Set 5: Looks good to me, but someone else must approve; No scoreI'm currently trying to run this script.  Its uh, how should we put it, slow?  Almost 1 minute per commit.  530 commits need to be processed to also try and salvage the Gerrit review history."
75492,0,"Patch Set 5: No score; No scoreIn the last round I ran it on a RAM disk this improved speed on win32 quite a bit, but still it took a lot of time.At SAP we use individual copyright statements but if your approach is easier that's also fine.It's late already, I need some sleep now, I'll give it a try tomorrow."
75496,1,"Patch Set 1:There's also a flaw in the way git blame is finding the data.  For example on the tip of master we get this: diff --git a/org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/glue/MetaServlet.java b/org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/glu index 52bb69c..0d77354 100644 --- a/org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/glue/MetaServlet.java +++ b/org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/glue/MetaServlet.java @@ -1,5 +1,14 @@  /* + * All rights reserved. This program and the accompanying materials + * are made available under the terms of the Eclipse Development + * License v1.0 which accompanies this distribution, is reproduced + * below, and available at http://www.eclipse.org/org/documents/edl-v10.php + * + * Eclipse Distribution License - v 1.0 + * + * Copyright (C) 2009, Constantine Plotnikov <constantine.plotnikov@gmail.com>   * Copyright (C) 2009, Google Inc. + * Copyright (C) 2009-2010, Shawn O. Pearce <spearce@spearce.org>   *Now I know Constantine didn't contribute any code to MetaServlet, because I wrote all of it, and there's only one commit which affects it.  But git blame seems to think he wrote something anyway: $ git blame -C -w org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/glue/MetaServlet.java ... (Constantine Plotnikov 2009-06-24 21:48:03 +0400  56) import java.util.List; (Shawn O. Pearce       2009-07-25 11:52:57 -0700  57) import java.util.Map; (Constantine Plotnikov 2009-06-24 21:48:03 +0400  58) import java.util.Set;Apparently, he wrote two import lines from java.util.List and Set somewhere else in our sources, and git blame decided to attach those same occurrences here in MetaServlet to him, rather than to me."
75498,1,"Patch Set 2: No score; No scoreYou are right, we should not use real entities in the samples. You missed to remove the unused line.I struggled a lot with the regex and felt that mine looks much too complicated, yours looks much simpler :) I'll try it out in the evening.I found the trick with the uncommitted changes detected by git blame by experimenting, but I do not really understand why blame finds uncommitted changes. Is the offset we pass via -L incorrect or is this caused by the mechanics of filter-branch ?Is there any detailed documentation about how filter-branch works ? It took me quite a while of experimenting to find out that I have to rewrite all files in every commit."
75502,0,"Patch Set 4: Looks good to me, but someone else must approve"
75503,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completedLooks fine, a nice usability win."
75504,0,"Patch Set 4: Looks good to me, approved; IP review completed"
75507,0,"Patch Set 5: Looks good to me, approved; IP review completedThe change was rebased to master."
75508,0,Change has been successfully merged into the git repository.
75511,1,"Patch Set 2: Looks good to me, but someone else must approve; No scoreI like this change.The mentioned problem (projects not shared after import) is fixed with commit 667f571b266f7c0dab952733c22bb5f029754f44 (Fix enabling team operations on project import)."
75513,0,"Patch Set 2: Looks good to me, but someone else must approveUseful extension. Perhaps as default all projects should be deselected. With all projects selected in advance you wonder why the filter has no effect."
75516,1,Patch Set 1: No scoreThe problem is that the code formatter settings were changed in the meantime... What's your take on this?
75520,0,"Patch Set 4: Looks good to me, approved; IP review completed"
75523,1,"Patch Set 3: I would prefer that you didn't submit this; No scoreWhile trying out I found the following problem: On the ""Import Git Repository"" page of our wizard ...- select a ""Protocol:"" different from ""file""- press the button ""Local file...""... then nothing happens but you see exceptions in the error log. I expected that when I explicitly press the ""Local file.."" button then my previous protocol selection will be overwritten. Or at least a error message should pop up."
75525,0,"Patch Set 5: Looks good to me, approved; IP review completed"
75526,0,Change has been successfully merged into the git repository.
75528,0,"Patch Set 2: Looks good to me, but someone else must approve"
75529,0,"Patch Set 2: Looks good to me, approved; IP review completed"
75531,0,"Patch Set 1: Looks good to me, but someone else must approve"
75534,0,"Patch Set 3: Looks good to me, approved; IP review completedrebased to current master"
75535,0,Change has been successfully merged into the git repository.
75539,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed"
75540,1,"Patch Set 3: Looks good to me, approved; IP review completedThe bug is fixed with this.As a further improvement we should stay on the CloneDestinationPage when the cloning is canceled. This could be done in the getNextPage method."
75541,0,Change has been successfully merged into the git repository.
75542,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75546,1,"Patch Set 2: Looks good to me, but someone else must approve; IP review completedI fixed the resource leak by managing GDI resources using LocalResourceManager. I removed the second sentence of the commit message to avoid this confusion."
75547,0,"Patch Set 2: Looks good to me, but someone else must approve"
75548,0,"Patch Set 2: Looks good to me, approved"
75549,0,Change has been successfully merged into the git repository.
75551,0,"Patch Set 5: Looks good to me, but someone else must approve; IP review completed"
75552,0,"Patch Set 5: Looks good to me, but someone else must approve"
75553,0,"Patch Set 5: Looks good to me, approved"
75554,0,Change has been successfully merged into the git repository.
75560,1,"Patch Set 1: Do not submit; IP review completed- This works if tests are run from Eclipse.- Running this from Maven CLI fails with :------------------------------------------------------- T E S T S-------------------------------------------------------Running org.eclipse.egit.core.test.op.T0001_ConnectProviderOperationTestTests run: 3, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec <<< FAILURE!org.eclipse.egit.core.test.op.T0001_ConnectProviderOperationTest.testNoRepository()  Time elapsed: 0.016 sec  <<< FAILURE!java.lang.NullPointerException        at org.eclipse.egit.core.test.op.T0001_ConnectProviderOperationTest.testNoRepository(T0001_ConnectProviderOperationTest.java:47)org.eclipse.egit.core.test.op.T0001_ConnectProviderOperationTest.testNewRepository()  Time elapsed: 0 sec  <<< FAILURE!java.lang.NullPointerException        at org.eclipse.egit.core.test.op.T0001_ConnectProviderOperationTest.testNewRepository(T0001_ConnectProviderOperationTest.java:57)org.eclipse.egit.core.test.op.T0001_ConnectProviderOperationTest.testNewUnsharedFile()  Time elapsed: 0 sec  <<< FAILURE!java.lang.NullPointerException        at org.eclipse.egit.core.test.op.T0001_ConnectProviderOperationTest.testNewUnsharedFile(T0001_ConnectProviderOperationTest.java:75)Running org.eclipse.egit.core.test.T0003_AdaptableFileTreeIteratorTestTests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0 sec <<< FAILURE!org.eclipse.egit.core.test.T0003_AdaptableFileTreeIteratorTest.testFileTreeToContainerAdaptation()  Time elapsed: 0 sec  <<< FAILURE!java.lang.NullPointerException        at org.eclipse.egit.core.test.T0003_AdaptableFileTreeIteratorTest.testFileTreeToContainerAdaptation(T0003_AdaptableFileTreeIteratorTest.java:58)Is this caused by a Tycho bug ?"
75562,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75563,0,"Patch Set 1: Looks good to me, but someone else must approve"
75564,0,"Patch Set 1: Looks good to me, but someone else must approve"
75567,1,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed- removed redundant append(""/"")- rebased to current head"
75568,0,"Patch Set 3: Looks good to me, but someone else must approve"
75569,0,"Patch Set 3: Looks good to me, approved"
75570,0,Change has been successfully merged into the git repository.
75571,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75572,0,"Patch Set 1: Looks good to me, but someone else must approve"
75573,0,"Patch Set 1: Looks good to me, approved; No score"
75574,0,Change has been successfully merged into the git repository.
75576,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completed"
75577,0,"Patch Set 4: Looks good to me, but someone else must approveSeems to do the right thing."
75579,1,"Patch Set 4:Hi Robin,I have to admit that I have not yet tested the code on linux (it is a flaw that we do not yet have linux and Mac OS instances in our department).However, the code is basically the same as in CommitFileDiffViewer (l.62). The double click only has effect when the input of the history page is file. Could you please check once again if in your case the history is shown for a file and not for a folder or the project?Thanks,Stefan"
75580,1,"Patch Set 4: No score; No score- I tried with Eclipse 3.6 M5 on Ubuntu 9.10, this is working for me.- When selecting an older version in the CommitGraphTable and then double clicking the entry in the path pane (bottom right pane in the resource history view) this modifies the working copy of the double clicked file. I recognized this since I had the working copy open in an editor and bringing up the compare view turned the editor to the dirty state. I don't know if this is caused by this patch but I think this should be fixed since comparing versions should not have side effects on the working copy."
75584,0,"Patch Set 5: Looks good to me, but someone else must approve; IP review completedI changed the coding which used an eclipse 3.5 feature (GitHistoryPage, l.422).The bug mentioned by Matthias is not related to this change, there even already exists a bugzilla entry (302145)."
75585,0,"Patch Set 5: Looks good to me, approved; No score"
75586,0,Change has been successfully merged into the git repository.
75589,0,Now I'm convinced that the double-click solution is a good one (as CVS does it the same).Could you please fix the minor issues? I just copied my remarks from the original patch set.
75592,1,"Patch Set 2: No score; No scoreCVS doesn't show folder history, presumable because that would be expensive. EGit, on the other hand filters history at folder level so we should not behave like the CVS plugin in this respect."
75594,0,"Patch Set 2: Looks good to me, approved; IP review completedRebased to current master."
75595,0,Change has been successfully merged into the git repository.
75596,0,"Patch Set 1: Looks good to me, approved; No score"
75597,0,"Patch Set 1: Looks good to me, but someone else must approve"
75598,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75601,0,"Patch Set 4: Looks good to me, but someone else must approve; IP review completed- maven build works again- test execution in Eclipse and maven works again"
75602,0,"Patch Set 4: Looks good to me, approved; No score"
75603,0,Change has been successfully merged into the git repository.
75606,0,"Patch Set 1: Looks good to me, approved; No score"
75608,0,Change has been successfully merged into the git repository.
75609,1,Patch Set 1: I would prefer that you didn't submit this; No scorePlease use the following format to link to a bug: Bug: 292612 Signed-off-by: Stefan Lay <stefan.lay@sap.com>rather than the complete URL.
75611,0,"Patch Set 2: Looks good to me, approved; IP review completed"
75612,0,Change has been successfully merged into the git repository.
75613,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75614,0,"Patch Set 1: Looks good to me, but someone else must approve; No score"
75615,0,"Patch Set 1: Looks good to me, approved"
75616,0,Change has been successfully merged into the git repository.
75620,0,"Patch Set 7: Looks good to me, approved; IP review completed"
75621,0,Change has been successfully merged into the git repository.
75628,1,"Patch Set 5: I would prefer that you didn't submit thisthis patch set is incomplete, I screwed up. Please wait before reviewing.Sorry."
75629,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75630,0,"Patch Set 1: Looks good to me, but someone else must approve"
75631,0,"Patch Set 1: Looks good to me, approved"
75632,0,Change has been successfully merged into the git repository.
75634,0,"Patch Set 2: Looks good to me, approved; IP review completed"
75635,0,Change has been successfully merged into the git repository.
75636,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedChris, same deal as in JGit, right?"
75637,0,"Patch Set 1: Looks good to me, but someone else must approveLooks good, only a couple of nit picks"
75641,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75644,0,"Patch Set 3: Looks good to me, but someone else must approve; IP review completedImproved initial patch, now I assume that the repository which just has been cloned is the one the contained projects should be shared for."
75645,0,"Patch Set 3: Looks good to me, approved; IP review completedThis works and looks good."
75646,0,Change has been successfully merged into the git repository.
75648,0,"Patch Set 4: Looks good to me, approved; IP review completed"
75652,1,Patch Set 3: I would prefer that you didn't submit this; No scoreAlmost ready.  I apparently didn't read the Javadoc closely enough in the last rounds.  :-(
75655,0,"Patch Set 5: Looks good to me, approved; IP review completed(Rebased onto current master)"
75656,0,Change has been successfully merged into the git repository.
75659,1,"Patch Set 2:Also, your Change-Id: line has a tab after the : not a space.  Please amend and fix it to be a space.  Gerrit's web UI injects a tab when you copy literally from the info table.  Its a bug I'd like to fix in the Gerrit UI but haven't had time to do, and keep forgetting about."
75661,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75662,0,"Patch Set 1: Looks good to me, approved"
75663,0,Change has been successfully merged into the git repository.
75664,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75665,0,"Patch Set 1: Looks good to me, approved"
75666,0,Change has been successfully merged into the git repository.
75667,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75668,0,"Patch Set 1: Looks good to me, approved"
75669,0,Change has been successfully merged into the git repository.
75670,0,"Patch Set 1:  Looks good to me, but someone else must approve; IP review completed"
75671,0,"Patch Set 1: Looks good to me, approved; No scoreI agree: after looking at the code I fully agree that the ?: operator can be skipped here."
75672,0,Change has been successfully merged into the git repository.
75674,0,Change has been successfully pushed into branch stable-0.7.
75675,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedtested successfully on win32"
75676,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedtested successfully on win32"
75677,0,Change has been successfully pushed.
75685,1,"Patch Set 4: Looks good to me, but someone else must approve; No score- uploaded improved patch provided by Charley from bug 297265- corrected typo in commit message"
75686,0,"Patch Set 4: Looks good to me, approved; IP review completedLooks good."
75687,0,Change has been successfully merged into the git repository.
75689,0,"Patch Set 1: Looks good to me, but someone else must approveStill figuring out how this thing works.I'd recommend using perspectiveByLabel() to make tests more readable."
75690,0,"Patch Set 1: Looks good to me, approved; No score"
75691,0,Change has been successfully merged into the git repository.
75693,0,"Patch Set 1: Looks good to me, but someone else must approve; No scoreYea, we should do this.  I'm holding back on +2 for someone who actually cares about Windows though.  :-)"
75694,0,"Patch Set 1: Looks good to me, but someone else must approve; No score"
75695,0,"Patch Set 1: Looks good to me, but someone else must approve; No score"
75696,0,Change has been successfully pushed into branch stable-0.7.
75697,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75698,0,"Patch Set 1: Looks good to me, but someone else must approve; No scoretested successfully"
75699,0,Change has been successfully pushed into branch stable-0.7.
75701,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedThis series of 3 commits has been sitting on my desktop since September. I posted it to the git ML before we moved our repository to eclipse.org, but no discussion happened, and it appears to have been dropped.Since it fixes issues in DirCache relating to applications being able to create bogus data structures, I'm reviving it and trying to get it in before 0.7.0."
75702,0,"Patch Set 1: Looks good to me, but someone else must approve; No score"
75704,0,Change has been successfully pushed into branch stable-0.7.
75707,0,Change has been successfully pushed into branch stable-0.7.
75709,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75710,0,"Patch Set 1: Looks good to me, but someone else must approve; No scoreWould it make sense to add another constructor public DirCacheEntry(final String newPath, final FileMode mode) ?"
75711,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75712,0,Change has been successfully merged into the git repository.
75713,0,"Patch Set 1: Looks good to me, approved; IP review completed"
75714,0,Change has been successfully merged into the git repository.
75717,0,"Patch Set 2: Looks good to me, but someone else must approve; IP review completed"
75718,0,"Patch Set 2: Looks good to me, approved; No score"
75719,0,Change has been successfully merged into the git repository.
75720,0,"Patch Set 1: Looks good to me, approved; IP review completedLegal files are legal files."
75721,0,Change has been successfully merged into the git repository.
75722,0,"Patch Set 1: Looks good to me, approved; IP review completedAdding a simple license file to the EGit feature."
75723,0,Change has been successfully merged into the git repository.
75724,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedChris, can you double check these specifications?  Is this sane?"
75725,1,"Patch Set 1: Looks good to me, approved; IP review completedLooks fine. I noticed that we're scoping 0.6.0 to 0.7.0 which may be a bit too aggressive. Since we're still kind of incubating and not at 1.0.0 yet, this is fine. When we hit 1.0.0, we should scope 1.0.0-2.0.0"
75726,0,Change has been successfully merged into the git repository.
75727,1,"Patch Set 1:Chris wrote:  > Since we're still kind of incubating and not at 1.0.0 yet,  > this is fine. When we hit 1.0.0, we should scope 1.0.0-2.0.0Yup.   My opinion is, we're not freezing any APIs until we release 1.0.0.  Until then we may rip up APIs during a 0.x to 0.(x+1) release, so we should scope that way, and anyone linking to us should assume that same risk.Part of the problem I have though is the foundation encourages a 2 year commitment to supporting published APIs.  I really don't want to make a 2 year commitment to supporting some of the crap we still have in the library..."
75728,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75729,0,"Patch Set 1: Looks good to me, but someone else must approve; No scoretested successfully"
75730,0,"Patch Set 1: Looks good to me, approved"
75731,0,Change has been successfully merged into the git repository.
75732,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75733,0,"Patch Set 1: Looks good to me, but someone else must approve; No scoretested successfully"
75734,0,"Patch Set 1: Looks good to me, approved"
75735,0,Change has been successfully merged into the git repository.
75736,0,"Patch Set 1: Looks good to me, approved; No score"
75737,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75738,0,Change has been successfully merged into the git repository.
75739,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75740,0,"Patch Set 1: Looks good to me, approved; No score"
75741,0,Change has been successfully merged into the git repository.
75742,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75743,0,"Patch Set 1: Looks good to me, approved; No score"
75744,0,Change has been successfully merged into the git repository.
75745,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75746,0,"Patch Set 1: Looks good to me, but someone else must approve; No scoretested successfully"
75747,0,"Patch Set 1: Looks good to me, approved"
75748,0,Change has been successfully merged into the git repository.
75749,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75750,0,"Patch Set 1: Looks good to me, approved; No scoretested successfully"
75751,0,Change has been successfully merged into the git repository.
75752,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75753,0,"Patch Set 1: Looks good to me, approved; No score"
75754,0,Change has been successfully merged into the git repository.
75756,0,"Patch Set 6: Looks good to me, approved; IP review completedSquashed with I0906536c4544bb5122ec87be802032c7736b51f0 from Ketan"
75757,0,Change has been successfully merged into the git repository.
75761,1,"Patch Set 4: Looks good to me, but someone else must approve; Unclean IP, do not check inThis is mine and Ketans code squashed and amended further to use import-packages instead of require plugins. Also added more copyright headers. Tested with Eclipse 3.4"
75764,1,I get the same problem using eclipse.swtbot too. Therefore I think net.sf.swtbot is a good choice. Part of the reason may be that the net.sf.swtbot represents a newer version than the one that comes with out current Eclipse 3.4 baseline.
75768,1,"I did some more testing and found that my laptop needs a bit more patience, by increasing the timing parameters a bit I get consistent results:-Dorg.eclipse.swtbot.playback.poll.delay=500 -Dorg.eclipse.swtbot.playback.delay=400The last 2 tests consistently fail since EGit doesn't behave in the way these tests expect (verified that manually).If you want I may upload my changes squashed to your patch."
75769,1,"Setting sleeps like you suggest probably only works on your machine, Sleep, dfirectly ir indirectly is a rteceipe for fragile code. Something else is wrong here.I am running my tests on Eclipse 3.4 if that's relevant."
75772,0,"Patch Set 5: Looks good to me, approved; IP review completed- CQ3738 has been approved on 2010-01-28- rebased onto current HEAD- tested successfully on Eclipse 3.6 M5"
75773,0,"Patch Set 1: Looks good to me, approved; IP review completedThanks for the contribution, looks good."
75776,0,"Patch Set 3: Looks good to me, approved; IP review completedagain rebased to current HEAD"
75777,0,Change has been successfully merged into the git repository.
75779,1,"Patch Set 2: No score- rebased to current HEAD- cleaned up trailing whitespace in plugin.xmlI installed this change but I can't see the difference yet, where should I look at ? I expected to see some different fonts for e.g. dirty files."
75780,0,"Patch Set 2: Looks good to me, approved; IP review completedok, first I have to adjust font and color settings underPreferences > General > Appearance > Color and Fonts > Gitthen it works :-)"
75782,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed"
75784,0,"Patch Set 1: Looks good to me, approved"
75785,0,Change has been successfully merged into the git repository.
75811,1,Abandoned
75813,1,"Patch Set 1:This doesn't work for me.It looks like AST is not re-created at all.My fix uses just a code like:ast[0] = JavaScriptPlugin.getDefault().getASTProvider().getAST(unit, ASTProvider.WAIT_ACTIVE_ONLY, fProgressMonitor);to create AST after a text change - and then selection starts to work well (selected identifier's usages get highlighted in text correctly)The only my concern is high CPU load - yes, the AST is being recalculated almost every time you type in a character."
75814,1,"Patch Set 1:Forgot to say...Also, I have changes in ASTProvider those changes it's algorithm of re-calculate AST/return cached AST as well as in CompilationUnitEditor's aboutToBeReconciled()/reconciled() methods: the notification of ASTProvider is disabled. Otherwise I'm getting ASTProvider state machine completely broken and deadlocks happening.These are also a risk factors I'm concerned about."
75821,1,Abandonedset as draft to avoid noise on the gerrit and jobs
75826,1,Abandoned
75829,1,"AbandonedSorry, please follow the new review:https://git.eclipse.org/r/85117"
75830,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6536/ : UNSTABLE
75831,0,"Patch Set 3: Code-Review-2Hi Dominic,Thank you very much from bringing this to my attention. As mentioned in the bug I have fixed this in a different way (and opened a can of worms). If you would like to review the change it is here https://git.eclipse.org/r/#/c/85024.If you are satisfied that this change is no longer needed, can you ""Abandon"" it please? If not, please let me know your comments.Thanks again, and I really hope I have solved your (and many others) use case on Windows,Jonah"
75832,1,"Patch Set 3:Thanks for your work, Jonah. I will abandon my patch and review yours ASAP.Best regards,Dominic"
75835,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5705/ : UNSTABLE
75837,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6253/ : UNSTABLE
75857,1,Abandonedsuperseded by https://git.eclipse.org/r/#/c/85097/
75863,1,AbandonedIt's not essential to make the developer's life easier and there is still an IP issue with ANTLR.
75868,1,"Patch Set 1:> (1 comment)So you are OK with merging this (after moving it to the Releng component)?I'd also like to add ShellEd for editing .sh files. It's part of the Eclipse Dynamic Languages Kit (DLK) and comes from the eclipse repo, so I don't think that would cause trouble. In theory that belongs only in releng, but we do have the standalong generator script as well. What do you think?FYI, in April I sent a message to the Xtext forum asking for clarification on the IP issues (https://www.eclipse.org/forums/index.php?t=tree&th=1076793&goto=1730152&#msg_1730152)The message has a summary of what I found. That feature at the Itemis update site is called ""Antlr runtime"" but it actually seems to contain the parser generator, at least going by the name. That would make sense, because the ANTLR runtime is not the one with IP problems, it's the generator."
75869,1,"Patch Set 1:> > (1 comment) >  > So you are OK with merging this (after moving it to the Releng > component)?I am, yes. > I'd also like to add ShellEd for editing .sh files. It's part of > the Eclipse Dynamic Languages Kit (DLK) and comes from the eclipse > repo, so I don't think that would cause trouble. In theory that > belongs only in releng, but we do have the standalong generator > script as well. What do you think?Hmm.  The TPD editor is one thing, because it's pretty much absolutely required to generate a correct target platform.  Not so much this shell editor.  I don't want to keep piling in more and more editors and other tools for this or that developer's preference.It's quite easy to maintain a local setup of your favourite tools and combine that with the RT setup to build your environment.  That's what I do, myself, for a variety of other Eclipse plug-ins that I use but aren't actually required for Papyrus-RT development. > The message has a summary of what I found. That feature at the > Itemis update site is called ""Antlr runtime"" but it actually seems > to contain the parser generator, at least going by the name. That > would make sense, because the ANTLR runtime is not the one with IP > problems, it's the generator.Ah, yes indeed.  Quite so.  The ANTLr run-time is in Orbit but the generator probably will never be."
75870,1,AbandonedIt's not essential to make developer's life easier.
75878,0,"Patch Set 1:(3 comments)> The nightly TPs use the nightly Designer p2: >  > https://hudson.eclipse.org/papyrus/view/Designer/job/papyrus-designer-neon-papyrusnightly/ws/releng/org.eclipse.papyrus.designer.p2/target/repository/ >  > which I assume has not changed, and therefore our nightly TPs > wouldn't change either, or should I regenerate the .target anyway?They don't at least archive the repository to provide a more friendly URL?  ughIf not, then right, this should remain as is."
75879,0,"Patch Set 1:Those are all very good questions for which I have no answers. I think those are for the Designer team. While they respond should we keep the 1.0.1_*_133, or use the new, simplified one?"
75880,0,"Patch Set 1:> Those are all very good questions for which I have no answers. I > think those are for the Designer team.Yeah, sorry.  Not fair to ask you! > While they respond should we keep the 1.0.1_*_133, or use the new, > simplified one?I think it would be best to stick with 1.0.1_*_133.  Goodness knows what might happen otherwise.  This much is at least probably stable."
75900,0,Patch Set 3: Code-Review+1I'll let you duke it out with C├®line to see whether you prefer this patch or her 74367.  :-)
75910,1,Abandonednow the bug is fixed without this gerrit.
75918,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6616/ : UNSTABLE
75921,1,"Patch Set 1:I'm proposing this temporary solution to make sure the user can see the early output from GDB.  In case we don't manager to provide the proper solution of review 82675 in time, we could fall-back this this solution temporarily."
75923,0,Patch Set 1:(4 comments)Nice to see this become a first-class service.
75924,0,"Patch Set 1: Code-Review-1The Guava issue is fixed in RC3, so this contribution is not critical anymore (Still useful, but it won't be integrated into Luna SR0)One of my comments from https://git.eclipse.org/r/#/c/27815/ is still valid for this contribution:> The ValidationService should probably use more generic interfaces for the returned commands (i.e. EMF Command, GMF ICommand or Eclipse IOperation). The validation commands don't need to be transactional, as they don't modify the model."
75926,1,"AbandonedThe bug is now closed fixed, so I abandon this contribution"
75937,1,Abandoned
75941,1,Abandoned
75945,1,Abandoned
75947,0,Patch Set 1: Code-Review+1Thanks Fran├ºois for this nice contribution.Could you please add the EPL license header to the files ?Thanks
75950,1,Abandoned
75957,0,Patch Set 1: Code-Review-1(1 comment)good once versions removed
75962,1,Abandonedduplicate
75964,0,Patch Set 1: Code-Review-1Very first draft !
75965,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6594/ : UNSTABLE
75968,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6596/ : UNSTABLE
75972,1,AbandonedGerrit fails when we have a new method and corresponding JUnit as part of single Patch. Hence pushed the changes directly via below git commit:http://git.eclipse.org/c/platform/eclipse.platform.swt.git/commit/?h=R4_6_maintenance&id=06c84738708c839d8b8abd240d414db8a63273f7
75981,1,Abandoned
75984,1,Abandoned
75997,1,Abandoned
75999,1,Abandoned
76001,1,Abandonedduplicate
76003,0,Patch Set 1: Code-Review-1The transition should be only used when the selection value is increased. Otherwise it would look funny if a progress-bar is re-used (animating form 100 to 0).
76004,0,"Patch Set 1:(In reply to comment #4)> Patch Set 1: Code-Review-1> > The transition should be only used when the selection value is increased.> Otherwise it would look funny if a progress-bar is re-used (animating form 100> to 0).ProgressBar is not ""one directional"" - from 0 to 100, even this is the use in most cases. You could use it as ""rollback"" ProgressBar - from 100 to 0. Maybe only for state reset from 0 to 100 and from 100 to 0 to remove the ""transition"" property. What do you think?"
76007,1,Abandonedoutdated
76014,1,AbandonedThis has already been shipped in samples like Papyrus for Information Modeling. Abandon this change.
76018,0,Patch Set 1: Code-Review+2 Verified+1All look good.
76021,0,Patch Set 1: Code-Review+2 Verified+1(1 comment)Looks good. Pl. make changes as per some minor review comments and do a separate commit.
76025,0,Patch Set 1: Code-Review+2 Verified+1(1 comment)Looks good. Pl. make changes as per review comments and do separate commit.
76032,0,Patch Set 1: Code-Review+2 Verified+1Looks good. Pl. make changes as per review comments and do separate commit.
76036,0,Patch Set 1: Code-Review+2 Verified+1All look good.
76042,1,Abandonedproblem has been solved by the patch for Bug 507098
76045,0,Patch Set 1: Code-Review+1patch was provided for using existing table part + internally filtered tree + with some method signature improvements it seems good for mesee proposed patchset #2 in original review
76046,1,Abandoned
76051,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6164/ : UNSTABLE
76058,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6138/ : UNSTABLE
76059,1,"Patch Set 1:To reproduce the initial problem, use the following test and run it manually, you will see the red messages in the console which highlight the fact that jobs were left running.https://git.eclipse.org/r/#/c/81235/6/dsf-gdb/org.eclipse.cdt.tests.dsf.gdb/src/org/eclipse/cdt/tests/dsf/gdb/tests/nonstop/GDBMultiNonStopRunControlTest.java@3137"
76066,0,AbandonedAbandoned in favor of https://git.eclipse.org/r/#/c/84561/4
76067,0,Patch Set 2:Things seem to load just fine with these changes but I'm seeing the following when I go to Help -> Help Contents and attempt to do a search for the first time (index computation begins) :http://paste.stg.fedoraproject.org/5509/raw/!ENTRY org.eclipse.help.base 4 0 2016-11-02 13:02:44.571!MESSAGE Error trying to consume Lucene index from bundle org.eclipse.wst.sse.doc.user_1.1.100.v201610061600 [787]. Please use an index built with Lucene 6.1 or higher.I guess this could only be tested by rebuilding help docs against with the newer Lucene. Other than that it looks fine to me.
76071,1,Abandoned
76079,1,Abandoned
76083,0,"Patch Set 6:Shawn, Matthias: could you review updated patches? Thanks."
76090,1,"Patch Set 7:> This seems worrying to me --- if there are unbalanced calls to > incrementOpen() and close(), isn't this hiding a more serious > problem?The main problem is the API design which allows unmatched open/close calls.Since the code does not enforce specific repository usage pattern, the problem of unbalanced calls cannot be solved, this by design. The patch does not change the problem root cause (unbalanced API usage on client side), but tries to reduce the side effects of API misuse. > e.g., if there are unbalanced calls to increment and decrement the > use count, doesn't that lead to doClose being called too early?Before the patch ""bad"" part of client code could make lot of unmatched ""close()"" calls and the next ""good"" part of client code would leak files handles.After the patch, the ""bad"" client code could call as many close() as it will, the next ""good"" part of the client code would behave as expected.Before the patch:1) close() > incrementAndGet(), next incrementAndGet(): illegal system state,  next close() will left open file handles.2) close() < incrementAndGet(), next incrementAndGet(): open file handles.3) incrementAndGet() > close() + 1, next close(): open file handles.4) incrementAndGet() < close(), next close(): illegal system state, next incrementAndGet() will left open file handles.By correct API use after any points above we have unpredictable system behavior where the file handles could stay open unconditionally.After the patch:1) close() > incrementAndGet(), next incrementAndGet(): correct system state.2) close() < incrementAndGet(), next incrementAndGet(): open file handles.3) incrementAndGet() > close() + 1, next close(): open file handles.4) incrementAndGet() < close(), next close(): correct system state.By correct API use, only after points 2 and 3 above we have unpredictable system behavior where the file handles could stay open unconditionally.So after the patch we reduce the probability that system goes into the unpredictable state."
76091,0,"Patch Set 7:Johnatan, could you please check the last comment? Thanks."
76092,1,"Patch Set 7:> Johnatan, could you please check the last comment? Thanks.I still think this approach is sweeping the problem under the rug. I can say from experience that a reference counter that allows unbalanced increments and decrements is very very difficult to debug.That said, if this logged, threw an IllegalStateException, or had a boolean that requires the caller to explicitly request the more tolerant behavior then I'd be in favor of it.I'll try looking more closely at the examples you mentioned this weekend (e.g., if there are double-close scenarios, then the relevant classes should be fixed to keep enough state to only close once)."
76093,1,Abandoned
76095,1,"Patch Set 2:> (1 comment)Yep, thanks, I must confess I have not expected the code is multi-thread safe. Last patch set should address your concern."
76096,0,"Patch Set 2: Code-Review+1Synchronizing on an AtomicInteger looks ... funny, but considering the alternatives, I guess this is as good as anything."
76100,1,"Patch Set 5:> > Johnatan, could you please check the last comment? Thanks. >  > I still think this approach is sweeping the problem under the rug. > I can say from experience that a reference counter that allows > unbalanced increments and decrements is very very difficult to > debug. >  > That said, if this logged, threw an IllegalStateException, or had a > boolean that requires the caller to explicitly request the more > tolerant behavior then I'd be in favor of it. >  > I'll try looking more closely at the examples you mentioned this > weekend (e.g., if there are double-close scenarios, then the > relevant classes should be fixed to keep enough state to only close > once).maybe you find another day to look at the examples ?"
76103,1,Abandoned
76105,1,Abandoned
76107,1,Abandoned
76111,1,AbandonedI was too distracted by current events to git commit --amend.
76115,0,"Patch Set 1: Code-Review-1(1 comment)Ready to merge, nice documentation update. One question first"
76118,1,"AbandonedNot needed for now, this was a new problem introduced by changes to the TimeGraphViewer."
76129,1,"AbandonedThanks for the patch, Sergey. I updated the patch to follow JDT UI coding conventions (no space before '=').Committed the patch directly: http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=efa6153a9db66355c4925183c74f8fc512713073. Since the Change-Id was same, the Gerrit patch should have been updated with merged status. Abandoning this now."
76132,1,"Patch Set 2:(2 comments)I have some concerns over this patch. Doubling a check is suspicious at least, it's also suspicious that a return value is ignored in the current codebase."
76134,1,Patch Set 5:If there is no communicated intention to work further on this patch with some actions I'll abandon it in couple of weeks.
76135,1,AbandonedNo interest. Abandoning.
76138,0,"Patch Set 4: Code-Review+1The logic of this code seems fine to me, but I can't reproduce the issue with the snippet from the Bugzilla. Since I can't do this I am only giving +1 -- looks good but ideally should be reviewed by someone who can reproduce the issue."
76144,0,Patch Set 1: Code-Review-1(1 comment)Makes definite sense!
76147,1,Abandonedhey patch. DIE DIE DIE
76149,1,Abandoned
76156,1,Abandonedit was just a test to ensure job was well configured
76158,1,Abandoned
76160,1,Abandoned
76162,1,Abandonedchanged elsewhere
76168,0,"Patch Set 4:Yes, this is a partial patch, the true solution is in the next patch. Want me to squash them?"
76169,1,Abandonedrendered moot by next patch
76174,1,Abandoned
76176,1,Abandoneddue to complexity this patch has been refactorized with https://git.eclipse.org/r/#/c/84476/
76185,1,"Patch Set 1:Hi Tristan,I understand your concern about regression butActually the Documentation has been removed from extra@see :tag last/org.eclipse.papyrus.views.documentationcommit 0ea91ae364d5f65ad0dace367aa3fef7fa8d1377Also (from what I know) the profile was always in an Incubation plugin which was never released in the official train. Do you want still want to keep this kind of elements in Gendoc ?Benoit"
76197,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6080/ : UNSTABLE
76198,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6083/ : UNSTABLE
76202,1,Patch Set 15: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6147/ : UNSTABLE
76207,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6065/ : UNSTABLE
76208,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6075/ : UNSTABLE
76211,1,Patch Set 12: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6123/ : UNSTABLE
76213,1,Patch Set 13: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6129/ : UNSTABLE
76215,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6090/ : UNSTABLE
76216,1,Patch Set 4: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6095/ : UNSTABLE
76221,1,Patch Set 3:> I've rebased the commit to master and fixed the typo/formatting > problems.Did you push to refs/for/master? It's stange because the review still shows R4_6_maintenance as the branch.
76222,1,"Patch Set 3:> Did you push to refs/for/master? It's stange because the review still shows R4_6_maintenance as the branch.No, I'm new to gerrit and finding it a little difficult to use. I rebased my commit on top of master then did:$ git push gerrit HEAD:refs/changes/83175I just tried again using$ git push gerrit HEAD:refs/for/masterthis time I get:Total 0 (delta 0), reused 0 (delta 0)remote: Processing changes: refs: 1, done    To https://pwebbnjc@git.eclipse.org/r/platform/eclipse.platform.swt ! [remote rejected] HEAD -> refs/for/master (no new changes)error: failed to push some refs to 'https://pwebbnjc@git.eclipse.org/r/platform/eclipse.platform.swt'"
76223,1,"Patch Set 3:OK, I managed to trick it into accepting a new change request. See https://git.eclipse.org/r/#/c/84428/I'll close this one."
76224,1,Abandoned
76226,0,"Patch Set 1: Code-Review-1(3 comments)Minor comments. But I tested the patch and it works!Can you push this patch against the master branch? Usually, patches go in master first then there it needs some agreement/approval for going in the maintenance branch."
76230,1,AbandonedNo failing tests and no bug referenced
76237,1,Abandoned
76239,1,Abandonedsuperseded by https://git.eclipse.org/r/#/c/80701/
76241,1,Abandonedsuperseded by https://git.eclipse.org/r/#/c/80701/
76243,1,Abandonedsuperseded by https://git.eclipse.org/r/#/c/80701/
76245,1,Abandonedsuperseded by https://git.eclipse.org/r/#/c/80701/
76248,1,Abandonedcommitted on the old branch according Jeremie
76252,1,AbandonedDone in bug 501707.
76273,1,Abandoned
76277,1,AbandonedDifferent approach was preferred. See Bug
76292,1,Abandoned
76293,1,AbandonedI forgot how I determined that this code is obsolete.
76298,1,Abandoned
76302,1,Abandoned
76304,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mpc/job/epp-mpc-gerrit/97/ : UNSTABLE
76305,1,Abandoned
76310,1,Patch Set 3:Gerrit will catch all these. As Egit and JGit committers uses in most cases Gerrit I think this error setting is outdated.
76311,1,Patch Set 3:> Gerrit will catch all these. As Egit and JGit committers uses in > most cases Gerrit I think this error setting is outdated.how does Gerrit catch this ?
76312,1,Abandoned
76314,1,Patch Set 1:The build log says:[INFO] --- tycho-surefire-plugin:0.23.1:test (default-test) @ org.eclipse.e4.core.tests ---[INFO] Skipping testsIs it expected?
76317,0,Patch Set 2: Verified-1> The Gerrit build setup contained skipTests=true. I > remove this setting.Now please make sure that the test setup is complete so that the tests can pass. Thanks.
76321,1,AbandonedFixed via Bug 486480.
76323,1,Abandoned
76325,1,Abandoned
76328,1,AbandonedSee bug
76332,1,Abandoned
76337,1,Abandoned
76341,1,"Patch Set 1: Code-Review-1Funny thing, I saw this once I had Java 1.8 installed and used as default also for 1.7 target projects. Is this your case too?If yes, we should open a bug against PDE or JDT, since both environments are ""equal"" in this concrete API."
76344,1,Abandoned
76349,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4181/ : UNSTABLE
76350,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4192/ : UNSTABLE
76353,1,Abandoned
76360,1,"Patch Set 3:> > Just for clarification, using Require-Capability you want to > remove the direct dependency to equinox. But you don't remove the > Require-Bundle. So I don't understand why the change should solve > the described requirement. >  > Dirk, I do not see a direct dependency to ""equinox.ds"" in the > MANIFEST.MF file. Can you clarify what you mean?Sorry, my fault. I completely misunderstood the ticket and the contribution.For anybody who comes across this, here is my understanding of this now. Equinox DS provides the osgi.extender capability since Neon M4. Now the e4 bundles can specify Require-Capability to that osgi.extender. If the capabilities are configured correctly, the former implicit dependency to DS becomes an explicit dependency and the auto start configuration for the ds bundle shouldn't be necessary anymore.Does that makes sense?"
76366,1,Abandoned
76370,1,"Patch Set 2:> I keep getting a ""does not contain a valid product"" message when I > try the file.It was my fault now it works for me as well."
76373,1,Patch Set 3:@Esteban I guess this one can be safely abandoned ?
76375,1,Abandoned
76377,1,"Patch Set 1: Code-Review+2 Verified+1Thanks for the patch.In JDT UI, we usually prefer a new bug report for an issue and the Gerrit patch should be attached to that."
76382,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10416/ : UNSTABLE
76383,1,AbandonedSee bug report
76398,1,Abandoned
76403,1,"Patch Set 15: Code-Review-1Before we start looking at the code lets face some logical/UI issues:1) on a new testsuite there is no way to create any kind of element2) when creating a new group you also create a variable within it. Please only create a group and let the user decide if he wants to move/create stuff there3) the context menu is using the action framework which is deprecated for approx 10 years. Use the command framework4) the content of a new variable should be something valid. eg use a string qualifier. Creating a new variable and clicking run right away would result in an error5) add new sibling group on subgroups creates a new root group -> wrong location6) please add sorting right away, otherwise creating multiple elements causes very confusing shifts of the current selected element7) please use absolute paths in the xml content for your paths expressionsLets continue review once these topics are addressed"
76404,1,Abandoned
76422,1,Abandoneddone in other commit
76428,1,Abandonedon 24.0
76431,1,Abandoned
76434,1,Abandonedredundant with https://git.eclipse.org/r/#/c/79674/
76444,1,Abandoned
76446,1,Abandoned
76448,1,AbandonedOutdated.
76457,1,Abandoned
76459,1,Abandonedanother fix has been selected
76461,1,Abandoned
76471,1,Patch Set 1: Code-Review-1This fix is too dangerous in case of re-import in Papyrus. It would create noise inside the user model.
76472,1,"AbandonedAbandonned, but probably the best solution to fix the bug. Maybe we should redo the export too."
76476,1,Patch Set 1: Code-Review-1This fix is too dangerous in case of re-import in Papyrus. It would create noise inside the user model.
76477,1,"AbandonedAbandonned, but probably the best solution to fix the bug. Maybe we should redo the export too."
76479,1,Abandonedduplicate
76481,1,Abandonedtest if I have the write access
76483,1,Abandonedtest for write access
76485,1,Abandoned
76489,1,Abandoned
76491,1,"Abandonedalready merged, sorry for that."
76494,1,Abandonedsuperseded by https://git.eclipse.org/r/#/c/80865/
76510,1,"Patch Set 4:I completely forgot that this review was waiting for an action on my part. I need to rebase it, so I'll handle the addition of the error call back at the same time."
76518,1,"AbandonedAbandon, this is now in https://git.eclipse.org/r/#/c/76102/"
76524,1,Abandoned
76527,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/3154/ : UNSTABLE
76531,1,Abandoned
76533,1,Abandoned
76540,1,Abandoned
76543,1,Abandoned
76553,1,Abandonedtest patch abandon
76555,1,Abandoned
76566,1,Abandoneda bug into the hipp community could be necessary to trace those performance issue
76571,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/1019/ : UNSTABLE
76573,1,Abandonedpushed directly
76580,1,Abandonedpushed directly
76582,1,Abandonedfixed already on dev.  cherry-picking that commit.
76584,1,Abandoned
76590,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/6008/ : UNSTABLE
76593,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1546/ : UNSTABLE
76594,1,Patch Set 1: Verified+1Test failure is unrelated.
76596,1,Patch Set 1:Thanks for catching that Frank. I've reopened the bug because we need to fix this. Could you look into it?
76597,1,Abandoned
76601,0,Patch Set 3:(4 comments)Looks great. Some minor issues with the patch.
76604,1,AbandonedI think this is obsolete and has been replaced by http://git.eclipse.org/c/platform/eclipse.platform.ui.git/commit/?id=3edac4c8cc78f94b0f55a99fd6cee612f2121099
76606,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9433/ : UNSTABLE
76609,1,Abandonedduplicate 80677
76615,1,Abandonednow as https://git.eclipse.org/r/#/c/80683/
76621,1,"Patch Set 12:Hi Arun and Alex,Sorry I took some so long to get to this. Arun your comment makes sense. I think this version of the patch should address the issue."
76626,0,"Patch Set 6: Code-Review+1Looks pretty good to me. Arun, what do you think?"
76627,0,"Patch Set 6:(3 comments)Code looks good but few styling issues to be taken care of as mentioned in the comments.I haven't tested the method much yet, will try to create a simple code snippet and test it..."
76630,1,"Patch Set 11:Sami / Alex,I still have a doubt about this patch which I commented in patch set 10, do you think that question is valid or not?"
76631,0,"Patch Set 11:Can't say yet, I'm getting back to SWT work and trying to finish from where Sami left it. Hope to have better ideas soonish."
76658,1,Abandonedtriggered by bug status wontfix
76660,1,Abandonedfixed
76661,1,Abandonedtriggered by bug status wontfix
76663,1,Abandonedtriggered by bug status wontfix
76667,1,Abandonedtriggered by bug status wontfix
76669,1,Abandonedtriggered by bug status wontfix
76672,1,Abandonedfixed
76675,1,Abandoned
76676,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1138/ : UNSTABLE
76680,1,Abandonednot relevant anymore
76691,1,"Abandonedno more progression on this topic, still there to be rebased if necessary (most recent of both I think: https://git.eclipse.org/r/#/c/42522/)"
76696,1,"Abandonedno more progression on this topic, still there to be rebased if necessary"
76699,1,"Patch Set 1: Code-Review-1wait to merge it if you can I just saw some leftover imports, my bad :/"
76703,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1137/ : UNSTABLE
76704,1,Abandoned
76706,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1486/ : UNSTABLE
76708,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1487/ : UNSTABLE
76709,1,Abandoned
76713,1,Abandonedtest case 3
76717,1,Abandonedtest case
76719,1,Abandonedtest case
76722,1,Abandoned
76725,1,"Patch Set 1:> Why are merged necessary?I dont know, I have uploaded only a ""normal"" Gerrit review.I dont understand that!? Is that a bug?"
76727,1,Abandoned
76729,1,Abandoned
76731,1,Abandoned
76736,1,Abandoned
76739,1,"AbandonedHmmmh, something went wrong."
76742,1,Abandoned
76744,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-commons/363/ : UNSTABLE
76745,1,Abandoned
76752,1,Abandoned
76754,1,Abandoned
76756,1,Abandoned
76758,1,Abandoned
76760,1,Abandoned
76762,1,Abandoned
76764,1,Abandoned
76769,1,"Patch Set 1:> Sorry, you probably have added m2e plugin to your Eclipse, and this > one touched lot of things it shouldn't touch.Hmm.  I'm just using Eclipse for Java out of the box, and I guess it came with that plugin included.How are people using Eclipse for Jgit without m2e? >  > Merging this will enforce everyone to use m2e plugin or see errors.I didn't expect that this will be merged. I just wanted to provoke some feedback about how to stop those files from getting modified ;)"
76770,1,"Patch Set 1:> How are people using Eclipse for Jgit without m2e? I never needed it. What should it do for me? > I didn't expect that this will be merged. I just wanted to provoke > some feedback about how to stop those files from getting modified > ;)You got your feedback now :-)To stop it, uninstall m2e plugin."
76771,1,Abandoned
76774,1,"Patch Set 1:> > Uninstalling m2e removes the Maven options from the ""Import"" > > dialog, so how do you get the project into Eclipse without that? >  > See https://wiki.eclipse.org/EGit/Contributor_GuideThanks, got it working now.  I'd overlooked that document before.Incidentally, removing m2e was futile because it somehow reinstalled itself next time I started Eclipse :-/"
76788,1,Patch Set 1: -Code-ReviewThis was made purely for demonstration purposes so I have no objection to abandon this one.
76789,1,Abandoneddemonstration of scrolled composites
76791,1,Abandoned
76795,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1119/ : UNSTABLE
76797,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1121/ : UNSTABLE
76798,1,Abandoned
76800,1,Abandoned
76803,1,Abandoned
76805,1,Abandoned
76808,1,Abandoned
76810,1,Abandoned
76812,1,Abandoned
76814,1,"Patch Set 1: Code-Review-1So, silly question, why not have a long NO_LINE = -1;? I don't think we can have a negative line number, and this way, we can have a lot less changes.The -1 is to show you there is feedback, I did not do an in depth review yet."
76815,1,"Patch Set 1:> So, silly question, why not have a long NO_LINE = -1;?That's what the new default implementation does. But in general a @Nullable Long that is ""null"" is more meaningful to represent ""no information"" than a long with value -1.We also have compilation errors/warnings that remind us to check for the null value. We cannot have such warnings to tell us to check for -1."
76816,0,"Patch Set 1:(1 comment)The code looks good, I will change this to a +1 if you add the 3 test cases for valid nulls."
76824,0,"Patch Set 1:If you do this, please warn in advance as we are considering moving the symbol provider to core, which would make an interesting rebase."
76829,1,Abandoned
76831,1,"Abandonedabandon, as it should be another patchset for 76835..."
76834,1,Abandonedpatch set used for tests
76836,1,Abandoned
76838,1,Abandoned
76842,0,Patch Set 2:It would be nice to have all/both option. So one can compile both GTK3 and GTK2 in single action.
76845,0,Patch Set 3: Code-Review+1(1 comment)I like where this is going. Just a bit of more user friendliness needed.
76848,1,Abandonedduplicate patch
76853,1,Abandoned
76857,1,Abandoned
76865,1,Abandoned
76867,1,Abandoned
76869,1,Abandoned
76875,1,AbandonedSee Bug report
76880,1,Abandoned
76882,1,Abandoned
76896,1,Abandonednot more used
76899,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1460/ : UNSTABLE
76901,1,Abandonedno longer needed we have the fix in review https://git.eclipse.org/r/#/c/77095/
76903,1,Abandoned
76905,1,Abandoned
76907,1,Abandoned
76909,1,Abandoned
76911,1,Abandoned
76913,1,Abandoned
76915,0,"Patch Set 1:This is genevieve's work, I just prettied it up"
76918,1,"Patch Set 1:Genevieve, should I abandon this?"
76919,1,"Abandoned(03:44:35 PM) tahini: TheMatthew, on abandonne, je crois que tout ├ºa a ├®t├® mis ailleurs mais en mieux"
76922,1,Abandonednot the right approach
76927,0,"Patch Set 3:This has been a bit lower priority for me but I'd like to finish it for Mars. But feel free to take over it you feel like it ;) I also had some issues reproducing the ""beep"" issue mentioned in Bugzilla on Ubuntu but I installed a Fedora VM last week and could reproduce it now."
76931,1,Abandoned
76933,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2949/ : UNSTABLE
76937,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2946/ : UNSTABLE
76939,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2947/ : UNSTABLE
76941,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2950/ : UNSTABLE
76945,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2981/ : UNSTABLE
76947,0,"Patch Set 2:Well, yes, the createLabel method is final as well (in AbstractControlSWTRenderer). It would be sooo easy if it wasn't final."
76952,0,"Patch Set 2:Yes, that would be great"
76957,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2978/ : UNSTABLE
76966,1,"AbandonedAlex, fixed that."
76973,1,Abandoned
76975,1,Patch Set 1: Code-Review-1I added these methods to fix broken build in Eclipse Neon. Without these dummy implementation I get the following error when using Eclipse Neon target platform (4.6)The type new MappedLoginService(){} must implement the inherited abstract method MappedLoginService.loadRoleInfo(MappedLoginService$KnownUser).The type new MappedLoginService(){} must implement the inherited abstract method MappedLoginService.loadUserInfo(String)Unfortunately I missed that this now creates errors in Eclipse when using e.g. Mars target platform coming with an older Jetty version.I pushed a different solution which works with all target platformshttps://git.eclipse.org/r/#/c/77351/
76978,1,Abandoneddid better test with text
76980,1,Abandoned
76982,1,Abandoned
76984,1,Abandoned
76986,1,Abandonedalready merged
76993,1,"AbandonedAt this moment, the rebase is too hard on this. we know it is a possible improvement, but as a spare time patch, it's just not worth it. Alex, if you want to take this over, go ahead.Thanks for the review. Sorry to have wasted our time."
76996,0,"Patch Set 1: Code-Review-1This is a prototype!!.we should verify that the range is within the trace. Also, the start, end, and duration elements should have their own 'unit' as attribute.Updates will follow soon."
77000,1,Abandoned
77003,1,Abandoned
77005,1,Abandoned
77007,1,Abandoned
77009,1,Abandoned
77011,1,Abandoned
77013,1,Abandoned
77015,1,Abandoned
77019,1,Abandoned
77023,1,Abandoned
77025,1,Abandoned
77030,1,Abandoned
77042,1,Abandoned
77044,1,Abandoned
77046,1,Abandoned
77049,1,AbandonedSorry.
77053,1,"Abandonedabandon and replaced by this contribution https://git.eclipse.org/r/#/c/73913/ (it is the same than this one, but with some minor changes))"
77055,1,"Patch Set 2:Niraj, I removed the active committers names from the ack as mentioned in the bug, comment 6. I was unable to push the change through gerrit. Hence, pushed the changes directly. http://git.eclipse.org/c/www.eclipse.org/eclipse.git/commit/?id=29af1ae152970cdfa267b944d33edb876f288d25"
77063,1,Abandoned
77065,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-builds/192/ : UNSTABLE
77066,1,Abandoned
77068,1,Abandonednot required
77071,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/5302/ : UNSTABLE
77072,1,"Patch Set 2: Code-Review-1Hi Alvaro, thanks for tracking down this issue. At the moment I would prefer this is not submitted, as although it passed the tests on the build machine, tests in SourceLookupTest (specifically sourceSubstituteChanges and sourceSubstituteAdded) now fail intermittently when I run the tests. This is because the operation has stopped being atomic by changing it from a Query to a DsfRunnable.That said, I am aware their is a tradeoff between locking the entire GUI (VERY BAD!) and a corner case of source lookup changes not working. I will take a of additional time to investigate and understand the alternatives a bit better, including seeing if I can extract the issues as additional tests."
77073,0,"Patch Set 2: Code-Review-2 Verified-1(1 comment)Summary:With this change the CSourceNotFound does not work reliably, exposing a race condition. I am working on an alternate patch to resolve this issue.Thank you for tracking down this issue."
77075,0,Patch Set 2: Code-Review-2(1 comment)Good catch by Jonah.
77076,0,AbandonedAn improved solution has been submitted and tracked with:   https://git.eclipse.org/r/#/c/73871/
77079,1,Abandoned
77081,1,Abandonedbranch is no more active
77088,1,"AbandonedPapyrus-RT is already available on Neon, abandon this contribution"
77104,1,"AbandonedThis has been done by removing the reference to jdt.annotation in the TPs, since it was actually useless."
77106,1,Patch Set 1:(1 comment)I tried this patch but I got the same problem when launching from eclipse.I did:  - checkout the patch - set the target platform - open the product in eclipse      - Launch an Eclipse Application=> Bunch of  Unresolved requirement: Require-Bundle: ....Did I missed something ?
77107,1,"Patch Set 1:Hi Benoit, I could reproduce your error. Please try opening the launch configuration and adding all required plugins, then most of the errors should be gone. And I just saw that some of the batik plugins must be added manually to the launch configuration: version 16 of *batik.util, *batik.util.gui, *batik.css although version 17 is already selected. This removed all errors for me and I could launch the product as expected. Unfortunately, the launch directly out of the product is still a challenge, because we can add only features."
77112,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/8652/ : UNSTABLE
77113,1,"AbandonedI don't think this is necessary.1. We only keep a provider ID in our session property, not a reference to a RepositoryProvider. So there's no danger of keeping around a stale provider.2. In ResourceUtil, we always check the team plugin's session property first and re-set our own property based on that. So even if we miss providers being unmapped and thus temporarily have an incorrect value in our session property, it gets corrected before we test our own property the next time."
77115,1,Abandoned
77117,1,Abandoned
77119,0,"Patch Set 2: Code-Review+1(2 comments)Looks good. With 2 minor nits fixed, feel free to +2 and submit."
77120,1,"Patch Set 2:(In reply to comment #6)> Patch Set 2: Code-Review+1> > (2 comments)> > Looks good. With 2 minor nits fixed, feel free to +2 and submit.OK, I can change the two points but we need a review of * 151807: default assignee is not shown when filing a new bug report* 414360: add support for the new REST API (Bugzilla 5.0)before I can push this."
77126,0,"Patch Set 2:(In reply to comment #10)> Patch Set 2:> > I'm fine with having this in the REST connector only. Since you have already> done a bunch of work I was wondering if it's easy to do for the existing> connector but that's totally up to you.If we want to support this we need to implement a new storage structure for the existing connector.See https://git.eclipse.org/r/#/c/8752/6 and maybe some of the code from https://git.eclipse.org/r/#/c/9796/.Do you think we should do this? If so we can also fix ""372592: support Disabling Old Components, Versions and Milestones of Bugzilla 4.2"".Thoghts?"
77128,1,Patch Set 2:We change the bug to only support this in the new REST Connector.
77129,1,Abandonedwe now track this in review https://git.eclipse.org/r/#/c/73884/
77146,1,Abandonedalready merged in another patch
77155,1,Abandoned
77157,1,Abandonedshould not be pushed as new contribution
77159,1,Patch Set 1:This revert makes nothing for me now. Weird.
77160,1,Patch Set 1:This revert doesnot resolve the problem for me too. I am testing on Ubunti 15.10
77161,1,"Patch Set 1: Code-Review-1 Verified-1This revert doesn't fix the underlying issue. I can reproduce this issue without any CTabfolder involvement (see bug).I think we shouldn't revert, instead I'll research if we can find a better fix."
77165,1,"Patch Set 1: Code-Review-1Do you have a stack trace of the SWTException?I'm not sure this is the right problem & solution. Normally a widget can be disposed more than once (see Widget.dispose()), I tried to look at Chart source and couldn't find any obvious indication against doing so. Even intentionally calling fChart.dispose() twice does not cause an exception.So I suspect it is some other user code that is accessing the Chart after it has been disposed (probably delayed through a Runnable where shutdown happens in the meantime) and that is where the protection should be added. I'm not sure the added check here would prevent the exception."
77166,0,"Patch Set 1:I wasn't able to reproduce it, unfortunately. I should have saved the full call stack... This was on an older Eclipse/SWT though, maybe it was a fixed in SWT in the meantime?If I see it again I will reopen. Thanks for the explanation!"
77167,1,Abandoned
77170,1,Abandonedit was just test
77179,1,Abandoned
77184,1,Patch Set 1: Code-Review-1The commit message does not describe this change and refers to the wrong task.
77185,1,Abandonedwe now track this in the new review https://git.eclipse.org/r/73689
77187,1,Abandoned
77189,1,Abandoned
77191,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1243/ : UNSTABLE
77193,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1240/ : UNSTABLE
77195,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1241/ : UNSTABLE
77197,1,Patch Set 9: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1244/ : UNSTABLE
77199,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1237/ : UNSTABLE
77201,1,Patch Set 12: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1249/ : UNSTABLE
77203,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1245/ : UNSTABLE
77205,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1238/ : UNSTABLE
77207,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1239/ : UNSTABLE
77209,1,Patch Set 11: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1246/ : UNSTABLE
77211,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1236/ : UNSTABLE
77213,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1242/ : UNSTABLE
77215,1,Patch Set 13: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/1250/ : UNSTABLE
77216,1,Abandoned
77218,1,Abandoned
77220,1,Abandoneduseless
77222,1,AbandonedThis is bogus merge
77228,1,Abandoned
77230,1,AbandonedIt looks like the problem is not related to Lucene as H2 fails in exactly the same way. Abandoning
77233,1,Abandoned
77237,1,Abandoned
77241,1,Abandoned
77243,1,Abandoned
77245,1,Abandonedalready in other patch
77256,1,"Patch Set 8:Hi. Sorry, I got whisked away for a meeting without warning. > Ernesto, I am indeed trying to add the rts (the model library) into > the core of Papyrus. Goal is to have it available at the same time > for the tooling, for any code generation and all other > dependencies.Right, but you need only the library and not the actual C++ library, right?  > I removed all java/xtext nature as the plugin only provides a model > library as a UML file, and so should not be build as a java > project. I did not yet investigate what would be the impact on the > runtime/code generation build jobs. I thought the C++ code was > compiled and assembled in another plugin. I missed you old message > on the mailing list in March before your vacation, indicating that > this model library was independant from the C++.The C++ is independent of the library and viceversa, but Charles put the library into that plugin for convenience. However they could be in separate plugins. I think your latest patch moves the library to o.e.prt.umlrt.core.rts.library, right? If so, that will impact the code generator in several places. I can push a patch with the corresponding changes. I'm assuming this is based on the master (Neon) branch, right?  > So if I am correct, we(I?) should move the UML model files in > another plugin (not java nor C++), which would be a core plugin. > The rts plugin would contain then only the compiled runtime. Am I > going in the right direction there?Yes, I think that's the right idea."
77258,1,"Patch Set 6:Hi Remi. I think the codegen/rts build is failing because the rts is not being built (o.e.prt.rts), or more precisely, the actual C++ rts, which we deploy in that plugin. I saw that you removed the maven-antrun-plugin from that pom, which is the one that builds the rts.I remember you saying something about including the model library in the core dependencies. Is that the reason? What should we do then about the actual runtime? Perhaps separate the RTS model library from the RTS?"
77266,1,"Patch Set 12:> Uploaded patch set 12.We may have a chicken-and-egg problem with this build because the runtest.sh script we execute after the build needs to install the o.e.prt.core feature with the new library location, but since that's not merged, the test will fail.I think we'll have to disable this test in order to merge this change.Let me know when you want to do that. (Basically it's just setting the TEST_MODEL parameter in the build to nothing)."
77270,1,Patch Set 13:(1 comment)I think the codegen tests might fail with the renaming of the rts library plugin.I can push another patch to fix that.
77304,1,Patch Set 3: Code-Review-1(1 comment)Sorry for the slow review. I'm not sure I understand what this change does yet. An example in the commit message would help.
77311,0,Patch Set 2: Code-Review-1(6 comments)some tests would be nice
77315,0,Patch Set 5:Will this get merged somehow?I'm hoping this change will make eclipse support having projects/source trees come from a path that is actually a git-worktree path rather than the original git repo path. Is this true?
77320,1,Abandoned
77323,1,Abandoned
77341,0,Patch Set 1:Good thing we waited for a +1 before merging this!
77342,0,Patch Set 1:> Good thing we waited for a +1 before merging this!Yup!
77344,0,"Patch Set 5: Code-Review-1Sorry, I doesn't want puplish it yet!"
77345,1,Abandonederror publishing it
77347,1,Abandonedobsolete
77352,1,Patch Set 1:I did not want upload a new patch. Maybe caused by a push to gerrit of another branch (which should not contain changes related to this bug). Sorry about that.
77353,1,Patch Set 1:> I did not want upload a new patch. Maybe caused by a push to gerrit of another branch (which should not contain changes related to this bug). Sorry about that.You need a change ID in the commit message so that Gerrit knows it is another version of the same contribution
77363,1,Abandoned
77366,1,Patch Set 21: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Tooling-Gerrit/388/ : UNSTABLE
77378,1,Patch Set 24: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Tooling-Gerrit/399/ : UNSTABLE
77380,1,Patch Set 26: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Tooling-Gerrit/420/ : UNSTABLE
77381,1,Abandoned
77383,1,Patch Set 23: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Tooling-Gerrit/390/ : UNSTABLE
77392,1,Patch Set 22: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Tooling-Gerrit/389/ : UNSTABLE
77398,1,Abandoned
77419,1,Patch Set 13: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Tooling-Gerrit/353/ : UNSTABLE
77425,1,Abandoned
77451,1,Abandoned
77464,0,Patch Set 1:Nice work! I tried using the proposed code on our examples and only see some minor issues that should be mostly easy to fix - I sent you an e-mail.
77466,1,"Patch Set 1:If I'm not mistaken, IN and VAR parameter values are still being exposed by the engine / rule application. To be correct here, only OUT and INOUT (and UNNOWN) parameter values should be accessible after a unit / rule application. But I don't know where a good place would be to implement it. I think it also causes problems with the result matches and Assignments etc."
77476,1,Abandonedforget commit changeid
77479,1,Abandonedto be corrected with the Mars version of Bug 482344
77481,1,"Patch Set 3: Code-Review-1The contribution is almost complete. It passes the Maven build but fails on the Codegen postbuild.sh script (Codegen may not be fully compatible with 0.7.2 yet)Further cleanup and minor improvements are still needed:- Clean duplicate or redundant properties/variables- Move more Maven plugins in the Top Pom when they are reused, and reduce copy/pasting (Maybe introducing more inheritance)- Do not run all tests in UI mode- Support 32 bits platforms"
77489,1,Abandoned
77491,1,Abandoned
77494,1,Abandoned
77502,1,"AbandonedOops, this was abandoned in favour of #68872. Sorry for the confusion."
77504,1,Abandonedmoved to dev
77505,1,Abandonedmoved to dev
77512,1,Abandoned
77516,1,Abandoned
77520,1,Abandoned
77522,1,Abandoned
77524,1,Abandonednode_modules included by error
77526,1,Abandoned
77528,1,Abandonednot intended
77530,1,Abandonednot intended
77542,1,Abandoned
77549,1,Abandoned
77553,1,Abandonedforgot the changeID
77564,1,Abandoned
77567,1,Abandoned
77577,0,"Patch Set 10:> Just to be clear, this allows compile time instead of runtime errors, right?Yes something like that. The current TmfTraceUtils#resolveIntEventAspectOfClassForEvent does not guarantee that the passed aspect class returns an integer, and will also resolve all aspects of the trace, which could be slow for nothing.However, doing a bit more testing, I found that with only the previous patch (add generics), I am now unable to pass to resolveIntEventAspectOfClassForEvent an aspect that does not return an integer. So we may not have to do filtering manually, which means we may not need this patch here at all!"
77580,1,"Patch Set 10:I wanted to keep it as backup until https://git.eclipse.org/r/#/c/69856/ would get reviewed/merged, but then I remembered that it's easy to bring back abandoned patches anyway, so might as well clean it up."
77581,1,Abandoned
77607,1,"Patch Set 6:> Looks like we missed that. Can you add it to M7 N&N?Yes, I will abandon this change and create a new one."
77608,1,AbandonedChange on M1 abandoned
77610,0,AbandonedNo real commit. Just a test for my local gerrit configuration!
77612,1,Abandoned
77614,1,Abandoned
77617,0,"Patch Set 2: Code-Review+1I have tested this on Gtk3.4+, and Gtk2.24. Resolves the issue with menu font colors in Gtk3.14+. Doesn't seem to cause any other issues with older versions of Gtk, neither with menus nor Eclipse in general. Looks good to me."
77618,0,"Patch Set 2:> I have tested this on Gtk3.4+, and Gtk2.24. Resolves the issue with > menu font colors in Gtk3.14+. Doesn't seem to cause any other > issues with older versions of Gtk, neither with menus nor Eclipse > in general. Looks good to me.To clarify, Gtk3.4+ means all versions from Gtk3.4 - Gtk3.16."
77619,0,Patch Set 2: Verified-1I like the patch (Patch Set 2) in general as Menu's look much nicer :-). But it looks like it breaks other controls. (See attached screen shots in Bug)If I may make a humble suggestion:Perhaps we should disable foreground checking on a per-widget basis as oppose to doing it globally on every widget. Thoughts?
77625,1,Abandoned
77634,1,Abandoned
77640,1,AbandonedThe parenting is wrong and I can't fix it
77650,1,Abandoned
77654,1,Abandoned
77656,1,Abandoned
77663,1,Abandoned
77669,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4832/ : UNSTABLE
77670,1,Abandoned
77672,1,Abandonedtoo much work to rebase
77674,1,Abandoned
77682,1,Abandoned
77684,1,Abandoned
77695,1,Abandoned
77697,1,Abandonedold
77704,1,"AbandonedAbandon, text is already Java 8"
77707,1,Abandoned
77709,1,Abandoned
77711,1,Abandoned
77714,1,Abandoned
77727,0,Patch Set 2: Code-Review-1Looks like this was merged in another patch? there's nothing left after rebase :)
77728,1,Abandonednothing to fix!
77738,1,Abandonednot needed
77739,1,Abandonedtesting
77751,1,Abandonedreplaced with https://git.eclipse.org/r/#/c/65755/
77752,1,Abandoned
77756,1,Abandoned
77766,1,Abandonedhas been replaced by: https://git.eclipse.org/r/#/c/69420/
77775,0,AbandonedAbandoned in favour of https://git.eclipse.org/r/#/c/69348/.
77777,1,Abandoned
77779,1,Abandoneddup
77786,1,Abandoned
77791,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/webtools/job/jsdt-gerrit/312/ : UNSTABLE
77792,1,Abandoned
77797,1,AbandonedThis fix introduces new bug.
77803,1,Abandoned
77808,0,AbandonedIn favour of https://git.eclipse.org/r/#/c/68346/
77818,0,Patch Set 2:> Abandoned >  > Abandoned to save Dani few clicks to remove his -2.Thanks Sergey. I think you could have simply removed me as reviewer to clear the -2.
77820,0,Patch Set 1: Code-Review+1Looks good
77825,0,Patch Set 1:Why not? This is a backward compatible change since multiple calls to done() are harmless.
77830,1,"Patch Set 1:> If such a root bug exists, I'd be willing to go ahead with that change.We should definitely have a ""master"" bug for this work, if the plan to deliver it piecewise. I'm a little bit unclear how we want to make the caller responsible for calling done(). Is it planned to enforce this via the code or will this be a Javadoc convention?"
77834,1,Abandoned
77836,1,Abandoned
77838,1,Patch Set 4: Code-Review-1I'd rather keep them then assuming things are wrongly NonNull. There are also not that many. Maybe we can start annotating the more obvious ones?
77839,1,"Patch Set 4:Ok if we're fine with having the warnings, I don't really mind them either.One thing though, there are *many* classes where we just annotated one or a few methods we use (and I'm very guilty of that too). The rationale of Bug 461268 is that as soon as there is a .eea file for a given class, all non-annotated types are to be considered ""same as declaration"".So there might be such error cases right now that would not throw warnings due to our existing .eea files."
77840,1,"Patch Set 4: Code-Review-1Also this patch overrode the custom settings in tmf.ui I think to not throw errors on using deprecated APIs. This reverts it back to error, which are now thrown when using the new 4.6 target."
77841,1,Abandoned
77846,1,Abandonedun-necessary
77848,1,Abandonedold
77853,1,Abandoned
77856,1,Abandoned
77858,1,Abandoned
77860,1,Abandoned
77865,1,Abandoneddon't fix properly my problem and I'm not able to reproduce the problem
77867,1,Abandoneddupplicate patchset because of lack of change-id
77870,0,"Patch Set 1:Patrick, I'll wait for your review before pushing.FYI, this utility class is very useful for the analysis we are developing here (dependency analysis and critical path, VM analysis, stackbar charts), where we have the use case that a selection in one of the views (for example control flow view), will trigger the update of another view. It hides the workbench mechanisms necessary to add those listeners and avoids having to copy paste this code."
77872,1,"Patch Set 1:Thanks for finding this. The difference here is that the component registering the listener is not necessarily a view, it can be an analysis parameter provider, for instance for some analysis like the critical path who respond to a selection in the control flow view. In that case, there is no getSite().etcStill, that may not be the recommended way to do this, but it works. Any idea?"
77873,1,"Patch Set 1:If these methods are not called from the UI thread, getActiveWorkbenchWindow() will return null.There is also the possibility that if you have two Eclipse workbench windows, the active one is the wrong one and then the notifications won't work.It's probably recommended that these listeners are somehow tied at their creation to a particular workbench part, page or window."
77875,0,Patch Set 1:not sure what to do. One of the current students need the functionality that this patch offered a way to provide. I'll see with him how best to do it and if this patch is still of actuality... Isn't that sort of like a kind of clear answer?
77877,1,"AbandonedSo, abandon it is"
77880,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2328/ : UNSTABLE
77881,1,Abandonedalex fixed it now
77883,1,Abandoned
77885,1,Abandoned
77889,1,Abandoned
77891,1,Abandoned
77899,1,Abandoned
77901,1,Patch Set 1: Code-Review-1 Verified+1I'm not sure this is something we should do.  The impact may be painful for extenders.  Maybe keeping them as @deprecated is sufficient to avoid any confusion on our part.  I'll give it more thought.
77902,0,"AbandonedImpact would be greater than what it is worth.  These old tabs are deprecated, so there won't be any confusion about not using them."
77910,1,Abandoned
77920,1,Patch Set 10: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/97/ : UNSTABLE
77924,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/62/ : UNSTABLE
77925,1,"Patch Set 5:(In reply to comment #4)> Patch Set 4:> > (6 comments)> > (In reply to comment #16)> > Patch Set 4:> >> > (6 comments)> >> > This looks like a good start, but I have some concerns. I don't know if it> makes> > sense to track the max and min time going back to the query creation. What if> > one time the query was much slower than usual due to a network or other issue?> > It seems like it would be more useful to only report on the last, say, 10> query> > runs.> > Ok, but then we need to store the last 10 valuesThat's a good point. It makes me think we should have another place to store this kind of thing. Maybe to simplify it we could just store the average and the count as query properties and then reset them when the count is >= 10.> >> > Just from looking at the tooltip, I don't know if it will be obvious what> those> > numbers mean. I also don't know if it makes sense to show this information in> > the tooltip since most users probably won't care about it. If we want to> > encourage users to make their queries more efficient I think we would have to> do> > something more noticable (and annoying) than this.> > Do you have a suggestion how we can do this better.I don't have a better idea than a tooltip right now, but maybe it would be better to simplify the toolip and just report the average time. That would leave enough space for a little bit of description: Average query time: 1s> > >> > Finally, is it correct to store this data in the query properties or should we> > have a separate store for this kind of thing?> > Yes we can store this in an other place. Any suggestion?No. :( Steffen, do you have an opinion on whether it makes sense to do this for 3.10?"
77927,0,Patch Set 5:Let's move the discussion back to the task and remove the milestone for now. It's not clear to me where we are going with the statistics tracking and I'd like to see a more generic solution than adding a few properties here and there. There should be an abstraction that makes it obvious what statistics are tracked and that encapsulates the persistence. Using properties seems okay to me but we could consider GSon for persistence for example.
77932,0,"Patch Set 4:(6 comments)This looks like a good start, but I have some concerns. I don't know if it makes sense to track the max and min time going back to the query creation. What if one time the query was much slower than usual due to a network or other issue? It seems like it would be more useful to only report on the last, say, 10 query runs.Just from looking at the tooltip, I don't know if it will be obvious what those numbers mean. I also don't know if it makes sense to show this information in the tooltip since most users probably won't care about it. If we want to encourage users to make their queries more efficient I think we would have to do something more noticable (and annoying) than this.Finally, is it correct to store this data in the query properties or should we have a separate store for this kind of thing?"
77933,0,Patch Set 4:(1 comment)Hope that I can create an new patch set today!
77934,1,"Patch Set 4:(6 comments)(In reply to comment #16)> Patch Set 4:> > (6 comments)> > This looks like a good start, but I have some concerns. I don't know if it makes> sense to track the max and min time going back to the query creation. What if> one time the query was much slower than usual due to a network or other issue?> It seems like it would be more useful to only report on the last, say, 10 query> runs.Ok, but then we need to store the last 10 values> > Just from looking at the tooltip, I don't know if it will be obvious what those> numbers mean. I also don't know if it makes sense to show this information in> the tooltip since most users probably won't care about it. If we want to> encourage users to make their queries more efficient I think we would have to do> something more noticable (and annoying) than this.Do you have a suggestion how we can do this better.> > Finally, is it correct to store this data in the query properties or should we> have a separate store for this kind of thing?Yes we can store this in an other place. Any suggestion?"
77940,1,AbandonedI'm abandoning this given https://bugs.eclipse.org/bugs/show_bug.cgi?id=151807#c6. Please reopen if this is still relevant.
77942,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/56/ : UNSTABLE
77943,1,"Patch Set 4: Code-Review-1(2 comments)This was designed with goals of fast insertion, fast iteration and low memory footprint in mind. These changes makes these worst on all three fronts, but I'm not sure by how much.I don't think it's a good idea to make it worst for everybody else to accommodate the few that do not insert events in the time graph event lists in the proper order. I would rather see those updated to fix the order in a way that doesn't affect the others."
77955,1,"Patch Set 2: Code-Review-1Okay, finally: The parent commit is the correct one from the MARS branch, but unfortunately the change has been pushed to refs/for/master (instead of refs/for/MARS) which is why I'm unable to merge this change.I've created change 66313 with the same content but pushed to refs/for/MARS; I am going to abandon this change here and will merge the correct one."
77962,0,Patch Set 1:We should also prepare/update the wiki (supported tp and future update sites list)IMO this should not only be done in a [build] commit
77964,1,Abandoned
77966,1,Abandoned
77970,1,AbandonedNope. Completely wrong approach.
77979,0,"Patch Set 1:(1 comment)@ marc-andre, I'm cool with false positive or even leaving it as-is. I am exploring jiggling the code and seeing what happens."
77980,1,Abandoned
77982,0,Patch Set 1:@Joraj I thought you would enjoy this feature
77985,0,"Patch Set 1: Code-Review-2(2 comments)Thanks for the review. This is more of a ""hey guys, we should think about this"" patch than a ""let's get this in"" patch, I think you got it, judging from your comments."
77988,1,Abandoned
77991,1,Abandoned
77994,1,Patch Set 1: Code-Review-2Why such extensive changes in the Welcome Page Model to test a paste handler?  The commit comment is devoid of information and does not reference a bugzilla.
77996,0,Patch Set 2:Please don't try to fix this by just editing the patch in the Gerrit web app; now it actually deletes the welcome page model.  It looks like the patch is not based on the correct branch.  Please just rebase your original commit onto the latest master branch.
77997,1,Abandoned
77999,1,Abandoned
78004,1,Abandoned
78012,1,Abandoned
78017,1,Abandoned
78022,1,Abandoned
78030,1,Abandoned
78035,1,Abandonedno commit on this branch
78040,0,"Patch Set 1: Code-Review-2After a little more thinking about this, -2.While this spec would solve the immediate need for filter variables, it creates yet another ""island of functionality"", with a feature (string variables) which would only be available for filters, even though it would make much more sense to have it also in the other places where we already support user-defined variables, i.e. inside tools.The existing FilterVariable should probably be replaced by SelectModelElementVariable, which is both structurally and functionaly equivalent (the both extends SelectionDescription with a name attribute), and the underlying code unified (there are some differences in the way the variable's value, once obtained, is handled, but the rest of the code can probably be shared).VariableFilter.ownedVariables could then be a list of plain AbstractVariables, the same types as the ones already used for tools.In the tools, we then add a StringVariable (or maybe even something more general, why restrict ourselves to Strings instead of any EDataType?), which would then be available both for filters and tools."
78043,1,Abandoned
78045,1,Abandoned
78048,1,Abandoned
78050,1,Abandoned
78052,1,Abandoned
78080,1,"AbandonedThx for your contribution,I squashed the 3 of them in one patchhttps://git.eclipse.org/r/#/c/66092/Also attached this bug to the contributionhttps://bugs.eclipse.org/bugs/show_bug.cgi?id=487307the easiest way : use this line as the title of your commitBug 487307 - [rcptt] Rcptt shall be used to test UseCase diagram"
78082,1,"AbandonedThx for your contribution,I squashed the 3 of them in one patchhttps://git.eclipse.org/r/#/c/66092/Also attached this bug to the contributionhttps://bugs.eclipse.org/bugs/show_bug.cgi?id=487307the easiest way : use this line as the title of your commitBug 487307 - [rcptt] Rcptt shall be used to test UseCase diagram"
78084,1,"AbandonedThx for your contribution,I squashed the 3 of them in one patchhttps://git.eclipse.org/r/#/c/66092/Also attached this bug to the contributionhttps://bugs.eclipse.org/bugs/show_bug.cgi?id=487307the easiest way : use this line as the title of your commitBug 487307 - [rcptt] Rcptt shall be used to test UseCase diagram"
78086,1,"AbandonedThx for your contribution,I squashed the 3 of them in one patchhttps://git.eclipse.org/r/#/c/66092/Also attached this bug to the contributionhttps://bugs.eclipse.org/bugs/show_bug.cgi?id=487307the easiest way : use this line as the title of your commitBug 487307 - [rcptt] Rcptt shall be used to test UseCase diagram"
78089,1,Abandoned
78091,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/435/ : UNSTABLE
78093,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/436/ : UNSTABLE
78094,1,Abandoned
78096,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/4295/ : UNSTABLE
78097,1,"Patch Set 1:ok, now I see why I didn't publish the patches. Back then I ran those unit tests and seemingly didn't continue to solve those remaining issues, because here in my test files I just found the code snippets for those failing tests.What I also just realized is that the current patch set also tries to solve bug 441581."
78098,1,Abandoned
78107,1,Patch Set 7:(1 comment)It would have been problematic if you didn't like it then!1 inline for you Miles.
78109,0,"Patch Set 8:The changs to ReviewExplorer look really nice, Lei. I'll try to review win the next day or two."
78111,0,Patch Set 8:But it's different. I just did a ... oh I see. Those were the changes that I made that you'd rebased to. No wonder I liked them. ;-P
78112,1,"Patch Set 8: -Code-ReviewI made some more changes but am having some problems with pushing the patches to Gerrit, it seems some new rules were introduced and I missed them ):"
78127,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/730/ : UNSTABLE
78129,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/731/ : UNSTABLE
78141,1,Patch Set 17: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/481/ : UNSTABLE
78145,1,Patch Set 13: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/458/ : UNSTABLE
78147,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/23/ : UNSTABLE
78148,1,Patch Set 7:Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-tasks-gerrit/804/ : UNSTABLE
78154,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/35/ : UNSTABLE
78161,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/27/ : UNSTABLE
78164,0,"Patch Set 2:(1 comment)Tomek, I think you're exactly right. It looks like we've been getting false positives all along for whether reviews need to be updated or not. As far as I can tell, we'd always be updating reviews. This could explain the rather hyper-active updating we've been seeing. And yeah, we should look at the tests as they seem to be expecting one too many updates. But we need to be careful to test this change in UI as it could have significant consequences. (Note that by default, we simply returned true in all cases for model updates as that is the ""safe"" strategy -- you shouldn't be able to screw anything up by over-reporting your need for an update but you could by under-reporting it.)"
78165,1,"Patch Set 2:The plot thickens a bit. Looking further at the code, it appears that what was actually happening was that the false positive was masking a failure to request an update for when reviewer changes occurred. As w/ dependencies, it seems that adding a reviewer may not actually case the modification date to be updated. So I think that isModelUpdated will need to be modified to test that the number of current reviewers matches the number of expected reviewers.At some point this becomes a bit of a performance question, because by the time we make all of the API calls to determine whether an update should occur, we may have made enough calls to actually just go ahead and update the review! So we end up making a number of calls twice. Instead we might look at always returning true here, and checking for deltas in updateModel and returning false if there aren't any. (Right now we just assume that if updateModel is called, that updates have in fact occurred.) But that's a big change and probably not something to consider now."
78166,1,"Patch Set 2:(In reply to comment #14)> Patch Set 2:> > The plot thickens a bit. Looking further at the code, it appears that what was> actually happening was that the false positive was masking a failure to request> an update for when reviewer changes occurred. As w/ dependencies, it seems that> adding a reviewer may not actually case the modification date to be updated. So> I think that isModelUpdated will need to be modified to test that the number of> current reviewers matches the number of expected reviewers.Letme restate that -- that the current reviewers match the expected reviewers. It's possible of course that someone might remove one reviewer and add another."
78169,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/13/ : UNSTABLE
78170,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-reviews-gerrit/1033/ : UNSTABLE
78171,1,"Patch Set 1:Miles, any ideas why is this trivial change causing the other tests to fail?"
78172,0,"Patch Set 1:(3 comments)Actually, the changes don't look that trivial, given the potential side-effects of Gerrit API calls. :) See inline comments."
78176,1,Abandonedmerge in previous patch
78179,1,AbandonedWon't merge
78181,1,"Patch Set 1:Yes, i've seen later, that you've updated to the latest upstream version of Buck in a new ps of dependent change.I just picked up the version that is used by Gerrit project. Given that some developers are working on both projects, having different Buck versions in JGit and in Gerrit is going to be a pain. So may be we can update Buck version in Gerrit instead and abandon this change?"
78183,1,Abandoned
78184,1,Abandoned
78185,1,Abandoned
78188,1,AbandonedSee Bug 442285
78192,1,Abandonedit is old
78198,1,Abandoned
78202,1,AbandonedCI Build test complete. Abandoning
78204,1,Abandoned
78208,1,Abandoned
78210,1,"Patch Set 1: Code-Review-1Hi Kristopher,integrating AGG in this way is problematic. To use third-party open-source software we need an official approval (there is a link in the project portal: ""[use] a third-party library from Orbit""). So ideally, there should be an Eclipse plugin for the AGG runtime, and it should be made available via Orbit: https://www.eclipse.org/orbit/To make progress, you can push your current implementation to a new branch. But to make it available in the next release, we first need to clarify how we deal with AGG.Cheers,Christian"
78214,1,Abandoned
78216,1,Abandoned
78217,1,Abandoned
78228,1,Abandoned
78234,1,Abandoned
78236,1,"AbandonedAbondaned, SWT repaired itself"
78239,0,"AbandonedPushed directly, thanks Jay"
78242,1,Abandoned
78244,1,Abandoned
78246,1,Abandonedpushed directly
78248,1,Abandoned
78249,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/1195/ : UNSTABLE
78254,1,"Patch Set 1:You can hit ""Reply"" and change your vote.Why do you think this change is wrong per-se? Is this a technical issue, or ""only"" the fact that you don't want to encourage this approach to SimRel contributors? If the later, why do you think the whole approach is an issue?"
78256,0,"Patch Set 1:You asked, ""Why do you think this change is wrong per-se?""It is because you are changing other projects (all other projects!) files. It is up to the projects to input their data."
78258,1,"Patch Set 1:> As long as it is open (not abandoned nor merged, you can change your vote via the ""reply...""Pretty sure that is what I tried first, and hit 'abandon' because I got simple dialog box, no ""vote"" radio buttons.But, thanks. I'll try again someday."
78259,1,"Patch Set 1:The goal of this change would be to set up a ""good basis"" to encourage projects to use fully-specified versions (see the many mails I already sent on this topic on the cross-project-issues-dev list). Those who don't want that could remove it next time they update their contribution."
78260,1,"Patch Set 1:I read your mail to cross-project list. I think you did not read mine and others replies. Perhaps I was not direct enough, so I will repeat ... Not a worthy enough idea to spend so much distracting time on."
78261,1,"Patch Set 1:I did read your and other comments, and criticism was from some people who don't want to make additional effort (fair enough, that's why I've also worked on tools), none of them invalidates the idea that fully qualified version offer the necessary guarantees on predictability, reproducibility and testability that are necessary for a more agile workflow; ideally driving to continuous delivery of the simultaneous release.About not being worth it, it's pure opinion. My opinion is all the contrary: if we manage to get ""trusted"" HEAD of Git, then we can have continuous releases, user get access to fix sooner and many other issues discussed here and there become invalid since other projects wouldn't have to set up workarounds. Being able to ""trust"" Git HEAD requires build to be fully predictable, that requires fully-qualified version."
78266,1,Abandonedsee Gerrit Change 65802
78280,1,Abandoned
78288,1,Abandoned
78290,1,Abandoned
78303,1,Abandoned
78311,1,Abandoned
78313,1,Abandoned
78318,1,Abandoned
78338,1,Patch Set 2: Code-Review-1replaced by https://git.eclipse.org/r/#/c/56875/ - Abandon?
78339,1,"Abandonedreplaced by another PR, as mentioned."
78355,1,Abandoned
78357,1,AbandonedDoesn't work with transactional
78359,1,Abandoned
78362,0,AbandonedAbandon in favour of https://git.eclipse.org/r/#/c/62513/
78387,1,"Patch Set 3:Changes in Patch set #3:Functionally no changes, just cleanups to better match the surrounding code.Reverted the JavaModelManager.isExternalFile() and addExternalFile() methods back to their original forms, which match the accessors of the other JavaModelManager caches. Moved the File.isFile() checks back to the ExternalFolderManager and JavaModel classes.Reverted changes to ClasspathTests, which was validating that caching is in place for the ExternalFoldersManager.Reran the performance test and saw the same results as previously reported."
78413,0,"Patch Set 1:(4 comments)Looks good, but this should move to the reviews repository."
78415,1,"Patch Set 2:If this looks OK, lemme know and I'll abandon this and move to reviews."
78420,1,Abandoned
78422,1,"Patch Set 1:We use spaces in pom.xml files, we should keep that consistent.Also, https://git.eclipse.org/r/#/c/59442/ should also fix this problem *wink wink* and even reduces the chances of such mistakes."
78424,1,"Patch Set 1:ctrl-shift-f tabbifies xml, is this a bug?"
78425,1,Patch Set 1:IMHO yes if all the other pom.xml are space indented. If there is both space and tabs indented then it might be a good time to enforce one or the other formally. Does tc have a any style guideline somewhere?
78426,1,"Patch Set 1:> IMHO yes if all the other pom.xml are space indented. If there is > both space and tabs indented then it might be a good time to > enforce one or the other formally. Does tc have a any style > guideline somewhere?We use spaces everywhere, I think it was just a mistake."
78427,1,"Patch Set 1:> > IMHO yes if all the other pom.xml are space indented. If there is > > both space and tabs indented then it might be a good time to > > enforce one or the other formally. Does tc have a any style > > guideline somewhere? >  > We use spaces everywhere, I think it was just a mistake.https://wiki.eclipse.org/Trace_Compass/Code_Style"
78430,0,Patch Set 2:TESTING. DO NOT REVIEW!
78431,1,"Patch Set 2:> > IMHO yes if all the other pom.xml are space indented. If there is > > both space and tabs indented then it might be a good time to > > enforce one or the other formally. Does tc have a any style > > guideline somewhere? >  > We use spaces everywhere, I think it was just a mistake. > > > IMHO yes if all the other pom.xml are space indented. If there > is > > > both space and tabs indented then it might be a good time to > > > enforce one or the other formally. Does tc have a any style > > > guideline somewhere? > > > > We use spaces everywhere, I think it was just a mistake. >  > https://wiki.eclipse.org/Trace_Compass/Code_StyleThanks!"
78432,1,"AbandonedInvestigated, not worth fixing before alltests is removed."
78437,1,Abandoned
78450,1,AbandonedYAY!
78455,1,Abandoned
78458,0,"Patch Set 1: Code-Review-1(5 comments)Looks good, but missing a few distribution statements/ author"
78470,1,Abandoned
78477,1,AbandonedCan't merge
78482,1,Abandonedjust a test
78485,1,Abandoned
78491,1,Abandonedoutdated
78494,1,"Patch Set 1:Hi, bug-476628 is indeed not related, it is a previous commit (never reviewed indeed :( ) which has been committed again by mistake. Don't know how to remove it..."
78504,1,Abandonedthis doesn't seem to help reproducing it. It's pretty mysterious.
78510,1,Abandonedshould be on the dev branch
78518,0,AbandonedAlready resolved.
78525,1,"Patch Set 3:Hey Alexander,I will abandon this patch (I had forgotten to do so). Wainer started to work in a different solution but he is out for some days and maybe he continuous working on it when he is back"
78527,1,Abandoned
78529,1,Patch Set 1:This seem to hurt LT proxy design. I'm not certain how to handle this change too. So lets discuss some ideas.I think it should be designed as:1. Create a new interface org.eclipse.linuxtools.profiling.launch.IRemoteConnection2. Provides an implementation of IRemoteConnection for local connections (org.eclipse.linuxtools.profiling.launch.LocalConnection)3. Your RDTConnection goes to package org.eclipse.linuxtools.internal.rdt.proxy. It should implement the IRemoteConnection interface too.4. The method RDTConnection#getConnectionsName goes to org.eclipse.linuxtools.internal.rdt.proxy.RDTProxyManager. Perhaps it should return a list of IRemoteConnection instead of the connections name. Notice that RDTProxyManager has already a getConnection(uri) method5. Finally create a method in org.eclipse.linuxtools.profiling.launch.RemoteProxyManager to return either LocalConnection or RDTConnection based upon the URI and/or IProject.Notice that org.eclipse.linuxtools.profiling.launch has already two classes about remote connection: RemoteConnection and RemoteConnectionException. They doesn't fit in current LT proxy design but I am not sure how to deal with it... :(
78537,1,AbandonedThis bug is not the wanted correction: A new gerrit is available https://git.eclipse.org/r/#/c/62370/
78543,1,Abandonedold
78546,1,Abandonedabandonned to gerrit https://git.eclipse.org/r/#/c/62335
78549,1,AbandonedIt's an error from my side. I need to merge commit with Change-Id: Id025078ce31b3a81a760534bb3b774abfdef8cfa
78554,1,Abandoned
78556,1,Abandoned
78562,1,"Patch Set 2:(1 comment)Thanks for the comments Patrick. This is a proof of concept. I will abandon it, it can be resurrected if we ever need it."
78569,1,Abandonedcan't merge
78580,1,Abandonedcan't merge
78586,1,Abandonedcan't merge
78591,0,AbandonedAbandoned in favour of https://git.eclipse.org/r/#/c/58768/
78592,1,RestoredNot sure why I abandoned this one.. it's the wrong review.
78594,0,"Patch Set 3:I think I did a 360 actually, pretty I meant to abandon this in favour of this: https://git.eclipse.org/r/#/c/58769/and the tasklistinterest filter reviews."
78595,1,Abandoned
78599,0,Patch Set 2:(5 comments)Looks like there's some whitespace changes in two of the files. Otherwise it looks good for the most part. Overall we should wait to implement this based on how we end up doing the TaskReviewsMappingStore
78600,0,Patch Set 2:(5 comments)Thanks for the timely review!
78609,1,AbandonedThis was a WIP patch. Abandoning the patch - see bug 470763 comment #6.
78611,1,Abandoned
78620,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1046/ : UNSTABLE
78621,1,"AbandonedLet's first remove dead code, then do other cleanups."
78623,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/1028/ : UNSTABLE
78629,0,"Patch Set 1:(1 comment)Now this is a good change, the previous method would create unneeeded intermediate strings.Although you might want to look into http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/base/Objects.ToStringHelper.html it does what we want in an even simpler way.Also look into (Java 8's) StringJoiner when you need "", "" and things like that."
78634,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/papyrus-rt/job/Papyrus-RT-Tooling-Gerrit/287/ : UNSTABLE
78638,1,"Patch Set 1: Code-Review-2(2 comments)The fix looks overly specific to the ""null to empty string"" transition. Either the actual bug is in how the failing test is coded, or in Sirius itself, but in this case there is no reason to assume it would exist only for String-typed features."
78639,1,Abandoned
78642,1,"Patch Set 1:This patch looks like a workaround rather than a solution. ElementTypes should never inherit from a ""null"" type. This most likely indicates an error in the ElementType Configuration modelThe issue might be similar to the symptom observed in Bug 479043, and the solution might be similar to commit 31fd563 (i.e. fixing the ElementType model)I haven't looked into the details, so I might also be wrong here :)"
78643,1,"Patch Set 1:> ElementTypes should never inherit from a ""null"" type. This most likely indicates an error in the ElementType Configuration modelAfter re-reading a little bit closer, it is the type itself that might be null (rather than its supertype). So it's a little bit different from Bug 479043.Do you know in which case the CreateElementRequest is not associated with an ElementType? It would be nice to determine if this is an expected behavior or an actual bug"
78645,1,AbandonedNPE fixed from another manner
78658,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/2073/ : UNSTABLE
78659,0,Abandonedwas voted down successfully
78665,1,Abandonednot appropriate
78681,0,"Patch Set 3:Hi Gunnar,Did you have a chance to check the latest rebased patch set?Thanks!"
78719,1,Abandoned
78722,1,Abandoned
78725,1,Abandoned
78727,1,Abandonedbad commit
78729,1,Abandoned
78732,1,Abandoned
78734,1,Abandoned
78737,1,Abandoned
78739,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/15/ : UNSTABLE
78740,1,Abandoned
78743,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/18/ : UNSTABLE
78744,1,Abandoned
78746,1,Abandoned
78748,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/41/ : UNSTABLE
78750,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_5_2_and_higher_gerrit/40/ : UNSTABLE
78751,1,Abandoned
78755,1,Abandoned
78761,1,"Patch Set 5:Excuse my ignorance, but asOccurencesIndicationColorwriteOccurrenceIndicationColor are the colors you are taking about?"
78766,1,Abandonedpushed directly
78770,1,Patch Set 1: Code-Review-1I found a bug in FileTreeIterator which was up to know hidden. But latest changes for attribute handling let bug pop up and let the egit tests fail. See my change 61826 which I think makes this change  obsolete.
78771,0,AbandonedThanks Christian!
78773,1,Abandoned.
78776,1,Abandoned
78778,1,Abandoneduse isRowSelectable
78780,1,Abandonednot sure why this got duplicated.
78785,1,Abandonedremove it
78787,1,Abandonedreplaced by 58828
78794,1,Abandoned
78798,1,Abandonedremove it
78800,1,Abandoned
78803,1,"AbandonedThis solution is bad solution, because of complexity from view point"
78805,1,Abandonedcan't merge
78810,1,Abandonedcan't merge
78812,1,Abandoned
78817,1,Abandoned
78819,1,Abandonedwrong branch
78820,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/3054/ : UNSTABLE
78822,1,Abandoned
78826,1,"Patch Set 1:Sorry, I'm quite new to Eclipse/GIT/Gerrit world.As some mess is already done, how do I proceed ?1. Revert last commit2. Commit again with Change-ID from first patchThat's it ?"
78829,1,Abandoned
78832,1,Abandoned
78837,1,Abandoned
78840,1,Abandoneda
78842,1,Abandoned
78847,1,Abandoned
78855,1,"AbandonedNothing wrong with the change itself, built off of wrong branch, will create another change on the correct branch"
78859,1,"at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:149)"""
78860,1,Abandonedreplaced by 58195 .
78869,1,Abandoned
78871,1,Abandoned
78877,1,Abandonednot for master
78880,1,AbandonedSorry wrong branch should be staging!
78884,1,Abandoned
78886,1,AbandonedTest abandon and see what happens to related changes
78888,1,Abandoned
78890,1,Abandonedthis was just a test
78892,1,Abandonedpo
78894,1,Abandonedo
78896,1,Abandonedreplaced
78900,1,Abandoned
78902,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1603/ : UNSTABLE
78903,1,Abandoned
78907,1,Abandoned
78922,1,"Abandonedwill be done incrementally, this is 3 patches: 1- add irqs to state system2- display irqs3- display softirqs"
78924,1,Abandoned
78927,1,"AbandonedYes forgot about that, abandoning the change, will create a new one."
78929,1,Abandonedwrong push
78931,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/7112/ : UNSTABLE
78933,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/7121/ : UNSTABLE
78935,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/7118/ : UNSTABLE
78937,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/7111/ : UNSTABLE
78940,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/7115/ : UNSTABLE
78943,1,Abandoned
78947,1,Abandonedoops
78951,1,Abandoned
78953,1,Abandoned
78955,1,Abandoned
78957,1,Abandoned
78959,1,Abandoned
78961,1,Abandonedwrong commit
78969,1,Abandoned
78971,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/emfstore/job/gerrit/138/ : UNSTABLE
78972,1,Abandoned
78974,0,Patch Set 2: Code-Review-1(8 comments)I think the change should be improved. I reviewed two places to give some guidence.
78975,0,"Patch Set 2:> (8 comments) >  > I think the change should be improved. I reviewed two places to > give some guidence.I don't understand, the JavaModelManager#touchProjects() is invoked locally with a null progress monitor. In that case, isn't the same monitor that gets passed onto runInWorkspace(..)?"
78976,1,"Patch Set 2: Code-Review-1(4 comments)It looks like this patch just did a search-and-replace of ""new SubProgressMonitor(...)"" with ""SubMonitor.convert(...)"", which won't work. :-("
78997,1,Abandoned
78999,1,AbandonedI've accidentially already pushed this to master.
79001,1,AbandonedI've accidentially already pushed this to master.
79003,1,Abandonedold
79010,1,"Patch Set 1: Code-Review-2:-)Yes, I still need to open a bug for that. Also the bug fix is not yet complete."
79018,1,"Patch Set 2: Code-Review-2In case of sryle customization, we could put some expression returning 0. DTreeElementSynchronizerSpec, StyleHelper and DtableElementSynchronizer should also avoid to set 0 value for the font size. They should set 1 per default (we could even change the mm default value)"
79024,1,Abandonedpushed to wrong Gerrit branch
79027,0,"Patch Set 1: Code-Review-1See my comment on https://bugs.eclipse.org/bugs/show_bug.cgi?id=478366. I think we should just use a property to store this so that persistence is taken care of already. Also, this makes it easier to add other kinds of incoming (e.g. incoming build results) without having to add a method for each one. Maybe we'll end up with a single API method that returns an object that describes the incoming state but I don't think we have enough use cases to try to design that API yet."
79030,1,Patch Set 3:Some context switch of branches got me on this task... accidentally did the initial work on my local master which ended up being a disaster since it picked up the derivative commits with it. :)
79031,1,AbandonedMoving to the new bug since this old one was marked as a dupe.
79036,1,Abandoned
79052,1,Abandonedmoving to 23
79054,1,Abandoned
79056,1,AbandonedPushed to wrong branch
79058,1,Abandoned
79065,1,Abandoned
79068,1,Abandoned
79070,1,AbandonedGerrit misunderstanding
79072,1,AbandonedGerrit misunderstanding
79074,1,AbandonedGerrit misunderstanding
79076,0,"Patch Set 1: Code-Review-1 Verified+1This contribution is good, but it needs to wait for the official release of Papyrus 1.1.2 (Papyrus Mars.1), as this has a dependency to the addition in the new child metamodel (=> filters)"
79079,0,Patch Set 1:https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews-test/1029/ : SUCCESS
79080,1,Patch Set 1:https://onlyBuildURLasComment/999/ : UNSTABLE
79081,1,Patch Set 1:https://onlyBuildURLasComment.com/999/ : UNSTABLE
79082,1,Patch Set 1:https://onlyBuildURLasComment.com/111/ : UNSTABLE
79083,1,"AbandonedKyle, you can use the Gerrit servers listed at http://mylyn.org/ for testing."
79085,1,Abandonedsquashed into previous
79090,0,Patch Set 1:(1 comment)Wow! quick question.
79091,1,Patch Set 1:> (1 comment) >  > > but [getIntersectingElements] can return an unsorted iterable. >  > Would it make sense to always sort the results of the method in the > library before returning them?I don't know... you could sort then by end time too. It's a bit arbitrary. Would we agree that sorting on start time is a good default? We'd have to put it in the javadoc too
79095,1,Abandoned
79101,1,Patch Set 1: Code-Review-1We're still interested in this contribution but could you please resolve the following:- please add the content of Change 34498 to this contribution- make the contribution applicable to master again- exclude modifications e.g. in the .launch configuration- change the namespace of the bundle -from-  org.eclipse.jubula.client.core.functions.functionview --to--> org.eclipse.jubula.client.core.functions.ui
79115,1,AbandonedIncludes incorrect changes
79127,1,Patch Set 7: Code-Review+1I think the test error is unrelated.  AnnotationTest.testBug470665:11636->AbstractRegressionTest.runConformTest:1213->AbstractRegressionTest.runTest:2294->AbstractRegressionTest.runTest:2509->TestCase.assertEquals:235->TestCase.assertStringEquals:259 Unexpected failure.
79128,1,"Patch Set 7:> I think the test error is unrelated.  AnnotationTest.testBug470665:11636->AbstractRegressionTest.runConformTest:1213->AbstractRegressionTest.runTest:2294->AbstractRegressionTest.runTest:2509->TestCase.assertEquals:235->TestCase.assertStringEquals:259 > Unexpected failure.Yes, sorry about it. It was due to a recent change via bug 470665."
79133,1,Patch Set 1: Code-Review+1I think the test error is unrelated.  AnnotationTest.testBug470665:11636->AbstractRegressionTest.runConformTest:1213->AbstractRegressionTest.runTest:2294->AbstractRegressionTest.runTest:2509->TestCase.assertEquals:235->TestCase.assertStringEquals:259 Unexpected failure.
79143,0,"Patch Set 1:(4 comments)Thank you for your patch.Again we have the monitor issue with the No more handles SWTException here.Please see inline comments for issue, which occured after I resolved the monitor issue."
79149,0,"Patch Set 2:Hey, I'm back from holidays working again on this but this is wierd, the tests works great on my computer, the only thing i changed, i get rid of in the launch config  ""DISPLAY :1""also add a dispose method where you mentioned it Happy new year, Thibault"
79151,1,"Patch Set 4: Code-Review-1Thanks Thibault, but I get several test errors with this change. I think you should @IgnorePartRenderingEngineTests#testBug326175_True -> It was ignored beforeIn testSetCSSInfo, testSetCSSInfoWhenNoCSSStylingEngineInContext and testSetCSSInfoWhenUIElementWithTags  the shell is null. I think we can remove these tests in case you can't fix that, we have own tests for css"
79159,1,"AbandonedCan't be automatically rebased, no attention was paid for long time and it kills the inner jar which would break running with testframework."
79175,0,"Patch Set 1:Please give me an advice. I was trying to fix the review issues from ""Bug 465445 - Remove compiler warnings"" and Gerrit creates a new topic. Since I'm a Gerrit newbee I have no an idea how to continue... Thanks."
79176,1,"Patch Set 1:Well, it looks like the wrong bug number ;-)"
79180,1,Patch Set 2:Why are you using the bug number 465445? That bug is fixed and closed and not related to this proposed change.
79181,1,Patch Set 2:I apologize my mistake ! I'm still in the learning curve and try to fix the review comments of Sergey. (https://git.eclipse.org/r/#/c/46455/)
79182,1,"Patch Set 2:> I apologize my mistake ! I'm still in the learning curve and try to fix the review comments of Sergey. (https://git.eclipse.org/r/#/c/46455/)No problem. I *think* you put the change number from https://git.eclipse.org/r/#/c/46455/ with a little typo into the commit message as bug number. However, that number should be the number of a bugzilla bug report where the problem is described that you want to fix with this change.When uploading a revised version of a change, make sure you use the same change ID (and not 0000...)."
79183,0,Patch Set 2:Now I have got it !
79185,1,Abandoned
79187,1,Patch Set 1: Code-Review-1You should reuse the same Change-Id to add new patches to the existing Gerrit review. Please abandon redundant Gerrit reviews.
79188,1,Abandoned
79191,1,"Patch Set 2:This was one experiment to try and fix the bug, but I'm not looking at this change any more so we can abandon it."
79192,1,Abandoned.
79194,1,Abandonedmistake
79195,1,Abandonedmistake
79197,1,"AbandonedIssues with this proposed change:1) It is far out of date with master so rebasing results in a lot of conflicts2) It includes a number of changes to colours outside of the css selectors3) Nothing is included for the new Ceol theme.4) id should be capitalized ID5) Seems odd to have a /* bad practice */ code snippet in the example6) The theme preview wasn't working for me, but that may be because of bad conflict resolution.Also caught Bug 473241.I'm closing this as WONTFIX as I don't see this as worth pursuing.  Umar, if you have time to work on it, please reopen and I will review new changes."
79208,1,"AbandonedThis change was not integrated, abandon for now."
79210,1,"AbandonedThis change was not integrated, abandon for now."
79216,1,"AbandonedThis change was not integrated, abandon for now."
79218,1,AbandonedThis change set was made obsolete by the changes in Bug 429060
79221,1,AbandonedGrant has merged a change for this commit. See Bug 469249.
79237,1,"Patch Set 1:This change follows up (and depends on) review 54318.The GMF Notation model has a peculiar structure in the View::element reference, which is ""unsettable"" in the EMF feature sense of supporting a separate ""unset"" state and which has a default value that is derived from the element references of the parent view chain.To support AOF bindings and other operations on such references, the AOF needs to support this ""unset"" state explicitly.  As the EMF implementation of the AOF represents all scalar features as IOnes, and as the IOne interface already provides a default value, it seemed useful to add an ""isDefault"" API to IOne in order to let clients know when the box's value is defaulted.  The EMF implementation of the IOne for scalar features takes account of the unset state and exposes it in this new API.  The One class and its delegate likewise provide the default state for other domains.New JUnit tests are included for simple scenarios in the EMF domain and the core AOF."
79241,1,"Patch Set 1:This patch follows up on and depends on review 54635.The IObservable APIs for adding and removing observers are too restrictive of the observer type (because IObserver is parameterized).  This patch remedies that, as well as the throwing of exceptions in that adding and removal of observers that runs contrary to the prevailing design pattern.Existing JUnit tests are adjusted accordingly."
79242,1,"AbandonedOops, wrong branch."
79244,1,"Patch Set 1:This change follows up on and depends on review 54554.The IBox.OPTION and similar ""constants"" are not actually constant at all, because they are mutable boxes.  Client code can accidentally add elements to these boxes such that they will not longer be empty.This patch remedies the problem by introducing a general facility for immutable boxes.  A new Boxes utility class, analogous to java.util.Collections, adds true constants for empty boxes, as well as convenience API for construction of other immutable boxes.Other new utility APIs in support of the immutable boxes are* a proper Java enum (supporting switch statements) for the kinds of constraints* EMF-like switch utilities for IConstraints and IBoxIncludes complete test coverage."
79245,1,"AbandonedOops, wrong branch."
79247,1,Abandoned
79251,1,Abandoned
79253,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2826/ : UNSTABLE
79256,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2827/ : UNSTABLE
79259,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2828/ : UNSTABLE
79262,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2829/ : UNSTABLE
79265,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2830/ : UNSTABLE
79268,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2831/ : UNSTABLE
79271,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2832/ : UNSTABLE
79274,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2833/ : UNSTABLE
79277,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2834/ : UNSTABLE
79279,1,Abandoned
79287,1,Abandoned
79289,1,AbandonedThis is an invalid commit.
79292,1,Abandonedmoved to 22.0
79294,1,AbandonedThis is an invalid commit.
79296,1,AbandonedThis is an invalid commit.
79298,1,AbandonedThis is an invalid commit.
79300,1,AbandonedThis is an invalid commit.
79302,1,Abandoned
79304,1,Abandoned
79310,1,Abandoned
79314,0,AbandonedAbandonned as https://bugs.eclipse.org/bugs/show_bug.cgi?id=470188 is resolved.
79316,1,Abandoned
79330,1,Abandonedno longer required
79332,1,Abandoneddiego 2
79338,1,Abandoned
79340,1,Abandoned
79343,1,AbandonedRe-submitting using another Change
79346,1,Abandoned
79349,1,Abandoned
79351,1,Abandoned
79355,1,Abandoned
79358,1,Abandoned
79360,1,Abandoned
79363,1,Abandoned
79366,1,Abandoned
79372,1,Abandonedmistake
79377,1,Abandonedreplaced by https://git.eclipse.org/r/#/c/54374
79384,1,AbandonedRe-pushed the commit with some changes
79387,1,Patch Set 1:Hm. Yes it seems so. Ok should I abandon the change and commit just the feature.xml?
79390,1,Abandoned
79392,1,Abandoned
79397,1,Abandonedmissing Change-Id
79399,1,Abandoned
79402,1,AbandonedInvalid.
79406,1,Abandoned
79409,1,Abandoned
79411,0,"Patch Set 1:> - Ubuntu LTS 15.10 GTK3.16, GTK2, metacity, compiz, kdeI meant Ubuntu 15.04 here, too much copy paste!"
79414,1,Patch Set 2:We need to do more investigation before ignoring tests. Often it's because something when wrong in another test. So it's possible that you don't ignore the real culprit and end up disabling all the others.
79418,1,Abandoned
79422,1,Abandoned
79429,1,Abandoned
79431,1,Abandoned
79433,1,Abandoned
79435,1,Abandoned
79437,1,Abandoned
79439,1,Abandoned
79441,1,Abandoned
79443,1,Abandoned
79445,1,Patch Set 3: Code-Review+1Is the MM regen process still the same with the //NON-NLS markers to avoid formatter differences ?
79448,1,Abandoned
79458,1,Abandoned
79460,1,Abandoned
79462,1,"Patch Set 1: Code-Review-2 Verified-1Change in plans (or, otherwise was an error I was in the middle of correcting) ... I should not have been bothering with master and 9.2.13, since we will be moving to 9.3 there soon. 9.2.13 is for maintenance."
79463,1,"AbandonedAbandoning, since I reverted the changes that gave rise to this need."
79464,1,AbandonedPush to wrong branch
79468,1,Abandoned
79470,0,Patch Set 3:(19 comments)Thanks a lot for this thorough review
79473,1,Abandoned
79475,1,"Patch Set 2:@Alexis, it legitimately looks like a problem on your side. Please run mvn clean install locally to reproduce the bug."
79480,0,"Patch Set 1: Code-Review+1(Server was down for a while, so also commented in bug, but looks good to me!)"
79482,1,Abandoned
79486,1,Abandoned
79488,1,AbandonedSee bug 439874
79490,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/scout/job/org.eclipse.scout.rt_gerrit/2612/ : UNSTABLE
79491,1,Abandoned
79493,1,Abandonedupdated original patch instead
79496,1,Abandoned
79499,1,"Patch Set 2:(3 comments)(ended up opening this patch by mistake, might as well review it!)I agree with Patrick's points. You could keep the internal object nullable, but the API @NonNull."
79506,1,Abandoned
79511,1,Abandoned
79515,1,"Patch Set 1:If you do a signed push to a server that doesn't support it, you get: fatal: the receiving end does not support --signed pushI was hoping to get a similarly terse message in the opposite case, where the server requires it but the client doesn't support it. If we defer it to a prereceive hook, then it's much more verbose (e.g. includes a status for each ref) and requires pushing the pack first.Of course we get the verbose error message anyway if the signature is rejected by a prereceive hook for any other reason other than simply not being present. So maybe it's not worth worrying about."
79516,0,"Patch Set 1:> I was hoping to get a similarly terse message in the opposite case, > where the server requires it but the client doesn't support it. If > we defer it to a prereceive hook, then it's much more verbose (e.g. > includes a status for each ref) and requires pushing the pack > first.That sounds like two bugs in the hook interface:* hooks can't throw an exception to reject the entire push instead of rejecting one ref update at a time (C git doesn't have this bug)* there's no hook that runs after reading the command-list but before the packfile (C git does have this bug)"
79517,1,"Patch Set 1:> hooks can't throw an exception to reject the entire push instead of rejecting one ref update at a time (C git doesn't have this bug)IIRC this is actually an issue in the protocol. Once you reach a certain point, the client will choke unpleasantly if you don't send a result for each ref."
79518,1,"Patch Set 1:> IIRC this is actually an issue in the protocol. Once you reach a > certain point, the client will choke unpleasantly if you don't send > a result for each ref.*nod* Git uses the status ""pre-receive hook declined"" for this case. $ git push file:///tmp/test HEAD:refs/heads/master Counting objects: 178629, done. Delta compression using up to 12 threads. Compressing objects: 100% (46042/46042), done. Writing objects: 100% (178629/178629), 44.12 MiB | 20.96 MiB/s, done. Total 178629 (delta 133359), reused 175442 (delta 130692) remote: I don't like ref updates. To file:///tmp/test  ! [remote rejected] HEAD -> master (pre-receive hook declined) error: failed to push some refs to 'file:///tmp/test'Is at the end of commands and before the packfile is sent a bettertime to send errors?"
79519,1,Patch Set 1:> Is at the end of commands and before the packfile is sent a better time to send errors?Actually I don't think there is a way to avoid sending the pack because HTTP :(
79521,0,"Patch Set 1:I agree with your feature requests, but I think at this point given that it's going to have to return statuses for each ref, I'll just put it in the same hook that does the verification.Thanks."
79522,1,Abandoned
79524,1,"Patch Set 1:(1 comment)Thanks. Yeah, I agree that treating this as an unpack failure is confusing and that the ""Unpacking went fine, but I don't like the operation anyway"" protocol extension would be nicer (i.e., I agree with abandoning this for now).Sorry to take so long to get there."
79525,0,"Patch Set 1:And a configuration for hooks to read sounds fine to me, too. :)"
79528,1,Patch Set 1:(1 comment)I think I don't even need the config option or the copy constructor at this point to allow Gerrit to require a cert. I will abandon this whole series once I get that worked out downstream.
79529,1,Abandoned
79531,1,Abandoned
79534,1,Abandonedmoved to 0.22.0
79539,1,Abandonedincorrect link to the initial commit
79543,1,Abandoned
79546,1,Abandonedobsolete
79554,1,Abandonedbad merge
79555,1,Abandonedcleanup
79556,1,Abandonedcleanup
79570,1,Abandonednew whole patch will be provided soon...
79572,1,Abandonednew whole patch will be provided soon...
79575,1,Abandonednew whole patch will be provided soon...
79577,1,Abandonednew whole patch will be provided soon...
79580,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7131/ : UNSTABLE
79583,1,Abandonednew whole patch will be provided soon...
79586,1,Abandonednew whole patch will be provided soon...
79590,1,Abandonednew whole patch will be provided soon...
79593,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7133/ : UNSTABLE
79594,1,Abandonednew whole patch will be provided soon...
79598,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7183/ : UNSTABLE
79599,1,Abandonednew whole patch will be provided soon...
79604,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/7184/ : UNSTABLE
79605,1,Abandonednew whole patch will be provided soon...
79607,1,Abandoned
79609,1,Abandoned
79611,1,Abandoned
79613,1,Abandonedgood one here: https://git.eclipse.org/r/#/c/50858/
79615,1,Abandoned
79617,1,Abandoned
79624,1,"AbandonedCommited wrong files, not rebased"
79630,1,Abandonedreplaced with https://git.eclipse.org/r/#/c/49020/
79632,1,Abandonedreplaced with https://git.eclipse.org/r/#/c/49020/
79637,1,Abandonedreplaced with commit https://git.eclipse.org/r/#/c/49020/
79639,1,Abandoned
79641,1,Abandoned
79645,1,Patch Set 1:Build appears to have failed to materialise the repository INFO] o.h.m.e.h.MavenExecutionResultHandler - Build failed with exception(s)[INFO] o.h.m.e.h.MavenExecutionResultHandler - [1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.eclipse.tycho.extras:tycho-eclipserun-plugin:0.23.0:eclipse-run (default) on project org.eclipse.core.contenttype: Execution default of goal org.eclipse.tycho.extras:tycho-eclipserun-plugin:0.23.0:eclipse-run failed: Failed to load p2 repository with ID 'eclipse' from location http://download.eclipse.org/eclipse/updates/4.5milestones/S-4.5RC3-201505280700/[DEBUG] Closing connection to remote[ERROR] Failed to execute goal org.eclipse.tycho.extras:tycho-eclipserun-plugin:0.23.0:eclipse-run (default) on project org.eclipse.core.contenttype: Execution default of goal org.eclipse.tycho.extras:tycho-eclipserun-plugin:0.23.0:eclipse-run failed: Failed to load p2 repository with ID 'eclipse' from location http://download.eclipse.org/eclipse/updates/4.5milestones/S-4.5RC3-201505280700/: No repository found at http://download.eclipse.org/eclipse/updates/4.5milestones/S-4.5RC3-201505280700. -> [Help 1][ERROR]
79647,1,Abandoned
79649,1,Abandoned
79651,1,Abandoned
79653,1,Abandoned
79656,1,Abandonedwas temporary
79658,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/ecp/job/gerrit/1333/ : UNSTABLE
79662,1,Abandoned
79665,1,Abandoned
79670,1,Abandonedhas been released directly
79672,1,Abandonedthis has been pushed directly
79686,1,Abandoned
79691,1,Abandoned
79696,1,Abandoned
79701,1,Abandoned
79708,1,Abandoned
79713,1,Abandoned
79715,1,Abandoned
79717,1,Abandoned
79719,1,Abandoned
79721,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2325/ : UNSTABLE
79722,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2327/ : UNSTABLE
79723,1,Abandoned
79728,1,Abandoned
79730,1,Abandoned
79733,1,Abandonedmoved to dev
79735,1,Abandoned
79737,1,Abandoned
79739,1,AbandonedUploaded by mistake.
79749,1,Patch Set 1: Code-Review-1Sorry. This the wrong solution to the problem. Sorry for the noise.
79750,1,AbandonedThis was the wrong fix.
79755,0,"Patch Set 2:First, it looks good AFAIK. I tested in a more complex composition with a lot of automatic spanned cells, and searching works as intended.I'm not sure about the implementation details, as I don't understand the new check. Doesn't the information about the span in ILayerCell help?Technically I would accept the patch. But you need to modify some organisational details.1. You need to add the change-id to the commit message. If you are using EGit this means to simply check the necessary button in the commit message view.2. Please add yourself to the copyright header of the modified classes. And also add the current year comma separated."
79776,1,"Patch Set 1: Code-Review+1I have downloaded and applied the patch.I have opened an eclipse rcp with the different extra plugins.I am able to create a new example based on the two provided examples.I am able to navigate to the UML diagrams.I have created a bug for this feature:https://bugs.eclipse.org/bugs/show_bug.cgi?id=470266Perhaps we could just rename the name of the example category to add ""papyrus"" from ""ExamplesCategory_name=Diagram Definition""to ""ExamplesCategory_name=Papyrus Diagram Definition"""
79778,1,AbandonedPushed by accident. Should be in my working branch.
79780,1,Abandoned
79800,1,Abandoned
79808,1,Abandoned
79816,1,Abandoned
79818,1,Abandoned
79820,1,Abandoned
79827,1,AbandonedRe-pushed the commit after a small modification. Therefore this commit is unnecessary.
79833,0,"Patch Set 1: Code-Review-1Please update the file copyright header.This change looks good. However, I'm wondering whether it wouldn't be cleaner to create a generic NonDisposedMatcher, and to us a AllOf(Matcher<MenuItem>, NonDisposedMatcher). So the NonDisposedMatcher would be more easily reusable.WDYT?"
79834,0,Patch Set 1:Sounds good! I'll update the patch.
79835,1,"Patch Set 1:Actually, I think this bug is probably bug 261360/279351/338555. While my fix did work for this single use case, it will not fix the root cause. I will look further into this."
79841,1,AbandonedI'm rebasing this as change 50462 on the new Mars maintenance branch.
79845,1,"Patch Set 1:This is a new Gerrit review presenting a variation of change 38587 that fixes the problem of every regeneration of the tests producing code in a new random order, which I discussed on the Papyrus-Dev mailing list. This is accomplished primarily by a verbatim translation of the QVTo transformation steps to Xtend language.  The overall design of the transformation pipeline is the same as before:  in particular, the UML models are the same.  It's just the language in which the transformations are specified that has been changed.Xtend exposes list values in UML models in their native EList terms, which affords stable and predictable ordering of transformation operations and, hence, test model structure and generated code.  It also provides for more concise, debuggable, searchable, and performant transformations with better Java integration.  On the subject of performance:  a comparison of the QVTo version against the equivalent Xtend version, averaged over 5 runs after a couple of warm-ups with the longest run discarded finds that the Xtend version runs more than twice as fast:  49.75 seconds as compared to 117.25 seconds.  This is including the M2T code-generation step that is the same Xtend in both cases and XMI identifier generation which is unique to the Xtend implementation of the UML transformations.  But, to me this is a bonus, not the important factor:  it's the tooling support and stability of the transformation that are most significant.A new UMLWriter workflow component is employed to assign predictable, stable XMI identifiers to elements of generated UML models to avoid unnecessary diffs in source control when re-generating.  (somewhat moot now that the models are no longer in git)This patch set also regenerates the test code from the Xtend version of the framework. I have git-ignored the generated UTP source models because they reference and depend on UML instance models of the GMFGens that are already git-ignored, so there's no point in having these in git.  Besides that they are now much larger because of the generated unique XMI IDs.I welcome any feed-back you may have on the question of whether we should adopt this Xtend-based transformation or continue with the QVTo implementation.  I do want to continue adding more synchronization test cases to complete the coverage of that new capability, so it would be nice to do that only in one or the other variant of the test framework.  ;-)"
79846,1,"Patch Set 1:Also, I think it's worth noting that the (rather trivial, actually) exercise of translating from QVTo to Xtend picked up some problems that the QVTo language makes it easy to miss.  For example:* strings concatenated accidentally that were supposed to be separated in a list by commas (in the lists of edit-parts to test)* some GMFGen models have one or more GenNodes that don't have a model facet, resulting in stuff silently not happening in QVTo but more noisy with Xtend (requiring action to adapt the transformation logic)"
79848,1,"Patch Set 4:Patch set 4 reduces the amount of boilerplate code in the Xtend GMFGen-to-UTP transformation considerably and improves readability, by developing a small DSL for declaration of transformation rules for test contexts and assembly into packages.  This uses new active annotations which, owing to a logistical limitation of Xtend, must be defined in a new separate plug-in project."
79851,1,"Patch Set 5:Finally! I have fixed the generation of the wrong diagram-updater instance field reference for Sequence Diagram, which as a legacy diagram still uses TYPED_INSTANCE.  This employs a class-file scanning hack that is potentially expensive in I/O, so it uses a new @Cached active annotation that caches method computation results.Now the entire code-generation run generates no compilation errors that need to be fixed up afterwards and repeated runs produce no diffs.  The stage is set for completion of the generation of synchronization tests."
79866,1,Abandoned
79868,1,"Patch Set 1:This is the same change as review 46633, except:* targeting the correct feature branch* I have attempted to fix the Gerrit build failure by updating the top POMs to take the latest CDO weekly integration buildNote that there are about 200 commits to Papyrus master since the commit on which these changes are based, including a thorough reimplementation of the New Papyrus Model/Project wizards.  It would be a good idea to try to merge that soon, but it could be difficult."
79871,1,AbandonedI'll do this with a little more refactoring.
79874,0,Patch Set 1:(2 comments)Thats a nice non-intrusive way to fix the naming diff.I suggest though to fix the indentation to match.
79877,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-reviews/784/ : UNSTABLE
79878,1,Abandoned46806: remove often failing testUsers [I3beb6d0c]https://git.eclipse.org/r/#/c/46806/
79889,1,"Patch Set 1: Code-Review-2See https://bugs.eclipse.org/bugs/show_bug.cgi?id=440033#c16I'm not against putting a workaround/guard in Debug, but from looking at your patch it also seems to require that actions get patched. There might contributed actions which will then still cause the error."
79894,1,Abandonedsuperseded
79896,1,Abandoned
79903,1,Abandoned
79909,1,Abandoned
79912,1,Abandoned
79916,1,Abandoned
79919,0,Patch Set 1: Code-Review-1(3 comments)Minor issues with adherence to our naming conventions. But thanks for addressing this; I think it's best to learn them early on rather than doing one large change at the end of the GSoC.
79928,1,Abandoneddupe
79930,1,"Patch Set 1:Hi Christian,This is a version that should work quite well with the latest code from CDO master. Can you try it out?We'll need to discuss some things such as editor lifecycle / disposal approvers. Please let me know when you can be available.General warning: The patch sets of this review can and will contain changes that are not meant to be merged later. For example I changed compiler prefs in some projects to avoid endless warnings. And there always seem to be some newly generated sources."
79931,1,AbandonedThis was targeting the wrong branch (master).  It should have targeted the committers/cdamus/cdo-mars branch.
79934,1,Abandonedobsolete
79952,1,Abandoned
79966,1,"AbandonedI assume that review is outdated (it was last updated 12 months ago), so I abondan it. Sorry if that is wrong"
79968,1,Abandonedsuperseded
79972,1,Abandonedjust a merge commit
79976,1,Abandoned
79979,1,"AbandonedOk. I'll add a note to the release How To, although I'm still not sure why I've never had to do this before (e.g. for snapshots/3.16). This script is run by the build and I have never run it manually."
79982,0,"AbandonedNot ok, I will try again :)"
79992,0,Patch Set 1: Code-Review+2Looks fine to me!
80000,1,AbandonedActually. Hold on this. I want to associate an terminal to a command shell instead of a remote connection so we can have multiple command shells open to a connection at the same time.
80003,1,Abandoned
80008,1,Abandoned
80013,1,AbandonedSee bug 205974 why there are no ellipsis.Sorry for the lost work.
80017,1,Abandonedforgot to include the changeID and therefore this is a standalone commit instead of the second patch
80021,1,Patch Set 3:Main performance regression solved in [1]Thank you for you kind reviews...[1] https://git.eclipse.org/r/#/c/46447/
80022,1,Abandoned
80027,1,Abandoned
80038,1,"Patch Set 12:A few more changes in this latest patch set:* fix the framework's core workflow to make the generation of all test projects in one step work. * eliminate the steps that copy QVTo transformation files from the framework into the test plug-in and delete them afterwards, by employing URI mappings (QVTo uses EMF's URIConverter to resolve compilation units)* implement test generation for the Communication Diagram"
80040,1,"Patch Set 2: Code-Review-1I have uploaded a new patch set that rebases the changes onto the latest Mars post-M6 master branch and addresses several problems in the model transformations and code generation (see the updated commit comment for details).This is not nearly done, yet:  the generated code still has plenty of compilation errors that need to be fixed and the code review comments I made on the first patch set need to be addressed, as well as the comments by Fran├ºois."
80043,1,"Patch Set 3:I've posted a new patch set that fixes the build failure on a badly merged bundle manifest and updates the templates to fix the remaining compilation errors in the tests generated for the Use Case Diagram.  (I haven't tested other diagrams, yet)The patch set still contains all of the generated files that were included in the first patch set in 2014, which have many compilation errors in the Mars context.  Once I have generation working for the other diagrams, I'll split out the generated code into one or more separate patches."
80044,1,"Patch Set 3:Patch set 4 completes the first phase of updates to the tests generation framework to align with the current Mars codebase.  It also regenerates all diagram tests that have UTP test models (the Communication Diagram tests bundle does not have one).  As indicated in the commit comment, there are still some gaps in the framework and/or templates.  I reiterate here for clarity.Class Diagram:* missing ElementImports in the TestClassDiagramChildLabelNodeGen context, but easily fixed with Organize ImportsComponent Diagram:* extraneous ElementImports in source diagram for edit part classes that don't exist (fixed by Organize Imports)Composite Structure Diagram:* diagram creation command name breaks from the usual pattern. Need to be able to specify it in the source UML model?* same for the IXyzDiagramTestsConstants interface in the test bundle* extraneous ElementImports in source diagram for edit part classes that don't exist (fixed by Organize Imports)Profile Diagram:* the IXyzDiagramTestsConstants interface doesn't conform to the conventional naming pattern, easily fixed by renaming it* source UML model has ElementImports for edit-part classes that don't exist.  Organize Imports fixes thatSequence Diagram:* the UMLDiagramUpdater class doesn't have a static INSTANCE field (this diagram hasn't been regenerated from the Mars version of the diagram codegen templates)Some of these problems simply need to be addressed in the source UTP models (e.g., extraneous element imports) whereas others would need enhancements to the codegen framework to accommodate peculiarities of some diagrams.  That is the next phase."
80052,1,Patch Set 13:Patch set 13 makes several significant changes:* rebase on latest master again* add initial test infrastructure for generated view synchronization tests (bug 433206)* add QVTo transformation and Xtend template for top-node synchronization in the diagrams* generate the initial set of view synchronization tests for the Use Case diagram as an exampleSee the initial tests in action: http://youtu.be/ZIZPceUdvE8
80056,0,"Patch Set 14:> I'm thinking this should be superseded by change 45831. What do you all think? Should we abandon this one?That sounds good. Although I didn't check in details the differences between both, I understand that Change 45831 is a superset of this contribution, so that's fine"
80057,1,"AbandonedI'll take it as agreed, then, to let 45831 supersede this change."
80064,1,"Patch Set 11:Patch set 11 updates the QVTo transformation and Xtend code generation to address compilation errors in the generated code:* missing package imports for required edit-part classes* invalid package imports (non-existent edit-part classes)* non-conformant names of diagram creation command and test constants interface.  This introduces new attributes to test classes in the model, of String type,  specifying the relevant type names.  The defaults are computed by the QVTo  transformation but may be overridden (hard-coded) by a diagram test bundle's  specific QVTo to provide custom names"
80067,0,Patch Set 1:Provide easy mechanism for anyone interacting with a server to get to the main entry point.  It supports developers cause you don't have to copy/paste server url to browser.  And it supports external users trying to get a server up and running and interact easily.
80070,1,Abandoned
80076,1,Abandonedunable to merge or rebase
80079,1,Abandonedunable to merge or rebase
80082,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/1902/ : UNSTABLE
80085,1,Abandoned
80087,1,Abandoned
80090,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2289/ : UNSTABLE
80091,1,Abandoned
80093,1,Abandoned
80095,1,Abandoned
80098,1,Abandonedold merge
80100,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2303/ : UNSTABLE
80101,1,Abandoned
80106,1,Abandonedduplicate
80111,1,Abandonedsuperseded by 46386
80113,1,Patch Set 5: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4793/ : UNSTABLE
80116,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4790/ : UNSTABLE
80118,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4795/ : UNSTABLE
80120,1,Patch Set 8: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4796/ : UNSTABLE
80122,1,Abandoned
80124,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4792/ : UNSTABLE
80126,1,Patch Set 6: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4794/ : UNSTABLE
80128,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4789/ : UNSTABLE
80130,1,Patch Set 7: Code-Review-1Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4455/ : UNSTABLE
80132,0,"Patch Set 7:(4 comments)Thanks Snjezana for the patch. Please fix the format issues, AFAIK Wojciech plans to review patches this week."
80140,1,Abandoned
80155,0,Patch Set 3:(9 comments)Do not forget the license :)
80156,1,Abandoneddue to a more global refactoringintegration of the review in the new commit
80157,1,Patch Set 3:(5 comments)abandon due to a more global refactoring
80161,1,Abandoneddue to a more global refactoring
80165,1,"AbandonedAbandoning, as this solution is bad for accessibility and this should probably be handled SWT-side, as per bug comments."
80169,1,Abandonedresubmitted with clean workspace
80170,1,AbandonedCreate by mistake.
80172,1,Abandonedduplicate
80179,1,Abandonedsplit into two patches
80196,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2629/ : UNSTABLE
80198,1,Patch Set 1: Code-Review-2(1 comment)Still discussing how to best do this in the bug.
80203,1,Abandoned
80208,1,"Patch Set 3:> I would like to avoid changing the Open * dialogs so late in the > game. First, because of the new behavior and second to avoid any > issues that the code change might introduce.OK, understood, sounds fine for me."
80209,1,"AbandonedAbandoning, as the bug has been marked as wontfix."
80214,1,"Patch Set 4: Code-Review-2Please restrict this change only for the javadoc update for IFile#getContents methods as the bug description suggests. The change in FileSystemResourceManager is a functional change and it is unclear why it has any relation to the javadoc of IFile#getContents. If there are execution paths that give inconsistent status code compared to other execution paths, then this should be fixed in a separate bug as this one should be only a javadoc update."
80221,1,Patch Set 5:Your objections were not based on too narrow understanding of the request in the bug. The bug 462440 was created as a followup to bug 448863 and should be considered in that context. See also a related bug 465070.I responded to your objections but there was no response to my response.
80222,1,"Patch Set 5:> I responded to your objections but there was no response to my response.Sergey, you didn't even allow two full business days for that. People might be on leave or having urgent business to do.Overriding a -2 and rushing in changes is really not what we want to see. Next time please either wait a bit longer or ask another committer for a second opinion.> Replaced by a new change.==> https://git.eclipse.org/r/#/c/46147/"
80225,1,Abandoned
80227,1,Abandonedtest
80229,1,Abandonedtest
80232,1,"Patch Set 4: Code-Review-1(1 comment)Instead of shooting in the dark for fixes, you should revert the problematic commit and bring it back piecewise, well-tested."
80236,0,Patch Set 3: Code-Review-1This freezes the UI thread and I don't know why.TransientState's rwl cannot lock!
80237,0,"Patch Set 3:(5 comments)some code comments, haven't done any testing, might apply to the latest patch, sry gtg!"
80239,1,"Patch Set 2: Code-Review-1(2 comments)We can't afford to synchronize both the insertions and the doSingularQuery(). It would kill the loading of a trace when you have the CFV opened for example.I'd rather we revert the chunk thing for now ( https://git.eclipse.org/r/#/c/46120/ ), then add a separate BBQ class with synchronization and all that we can test independently. Afterwards we can move the threaded backend to use it."
80242,0,"Patch Set 1: Verified+1 Code-Review+2Hi, looks fine! I will rebase the commit on the develop branch and merge it."
80245,1,Abandoned
80247,1,Abandoned
80254,1,"Patch Set 1:There is a new patch at https://git.eclipse.org/r/#/c/43381/ (sorry, forgot to preserve review ID), which puts the line continuation handling into the console parser, and adds a test."
80258,1,AbandonedBuild fails
80274,1,Abandoned
80281,1,"Abandonedhudson tests unstable, gonna made another cherry pick"
80286,1,"Patch Set 1:patrick, yes, this is a bad solution, it's more to illustrate a problem... shoulda filed a bug"
80287,1,"Patch Set 1: Code-Review-1This is indeed a bug, the state value to display should be anything. This looks quite copy-pasted from the Control Flow View this is based on. You could file a bug and I'll check that on the next round of improvements to the XML view."
80288,1,Abandonedbugzilla has a problem description
80293,0,"Patch Set 2: Code-Review-1(34 comments)Welcome to gerrit Naser!Here's a first quick review of the code. After modifying a file, you can use ctrl-alt-F to format it correctly, it will automatically correct white spaces, alignment, etc., but unfortunately not blank lines ;-)"
80302,0,"Patch Set 4: Code-Review-1(8 comments)Good initiative! Some comments.They stab it with their steely knives,But they just can't kill the beast"
80309,1,"Patch Set 4:This does not fix the comments, sorry, I was away from internet for the last 24h."
80321,0,"Patch Set 2:If you ever need this patch, you know where it is. :)"
80324,0,Patch Set 3: Code-Review-1(2 comments)The event matching memory usage performance test went from 324 MB to 193. That's a nice improvement.And it doesn't seem to hurt performance. Just some minor comments
80325,0,"Patch Set 3:(2 comments)Maybe I'll change this later, but I am making these patches on my spare time so if you need them, try them out. :)"
80336,0,Patch Set 2:What is the maximum number of characters for this new data type? Can it support over 9000 characters? I think the maximum size of a string is also limited by the size of the history tree nodes. What is the behaviour if a string is inserted that cannot fit inside a single node?
80337,1,"Patch Set 2:Fran├ºois: with this new type, 32767 characters. If we do this change, we might as well add another type with 3 or 4 bytes for the size. If you try to add an interval that doesn't fit in a node, I wouldn't be surprised if it went through an infinite loop of ""tryInsertAtNode"": try to insert node, fail, create new node, repeat.Here I just did some copy paste, so it's really not maintainable. The proper solution would try to re-use the code as much as possible for all string types."
80368,1,"Patch Set 3:... just read the commit message. Still, I don't think the order is worth the maintenance burden."
80374,0,"Patch Set 1: Code-Review-1This is only a prototype, no need to review. This can be used as a base for future implementation, for the next intern maybe? :)"
80385,0,"Patch Set 2:I haven't mentioned performance's results. I noticed an improvement in the speed of the build of 8%, we use less the disk. -> I will add a note in the commit message in the next PS."
80386,0,"Patch Set 2: Code-Review-1This is very interesting, I will assume it can boost the speed of experiments a lot. the code is not yours though and needs to be cqed I think. Genevieve, could you please look into this?"
80387,1,"Patch Set 2:gotta note, the code is apache and contains no encryption, so the cq should be less painful"
80390,0,"Patch Set 2: Code-Review-2I am putting a temporary -2 until the problem is solved. Florian, we love you, this is only to avoid accidentally comiting this code."
80391,0,"Patch Set 2: Code-Review-2Ok, I'll take care of the CQ for this, alex told me how to do it and I'm agree I will do it :p"
80394,1,"Patch Set 2:I think it can be very interesting to add the varint support to TMF. But I'm not sure if this code is the best in term of licence to be intergred quickly. For the performance, I'm not sure if we can have a gain with this kind of patches, because actually the time spent in Read/Write on disk is ridiculous in comparision of the creation/destruction of each java object use in TMF.However, we can reduce by 3 size of the historytree file on disk. I think is very good because, we have less problem with the limit of the node size when we have a lot of attribute in the SS."
80397,0,"Patch Set 1:This patch adds the possibility to filter by subfields. For instance, you can get a subfield by writing:field1/subfield2/subsubfield1Also, to make Windows users happy, this will also work:field1\subfield2\subsubfield1This patch also adds the feature to compare a field to another field (in the EQUALS filter) instead of a value. This is useful for cases where you want two fields to be equals. Such cases include finding loopback in Pcap Trace (IPV4/SourceAddress == IPV4/DestinationAddress).This is mostly useful for Pcap, as it essentially gives us as many filtering possibility as Wireshark.The usefulness of adding such a feature to CONTAINS and COMPARE filters is still TBD."
80398,0,"Patch Set 1: Code-Review-1(7 comments)General comments:There is no indication to the user that filters on subfields is even possible. Should we add tool tips?I could see this being very useful for all CTF traces, for which the Content is made of subfields. We should implement an easy way to access the CTF subfields with filters. I expected "":content:/subfield"" to work."
80403,0,"Patch Set 1: Verified-1This breaks the legend in the resource view.That being said, the mockup is very interesting."
80404,0,"Patch Set 1: Code-Review-1Hi Ludovic,I like your initiative to improve the user experience. Beside Matthews findings, do you plan to add some other help information in the new dialog? If yes, then we should use a unified way to provide help across all the views, dialogs, wizards instead of adding view specific help buttons. Eclipse provides an extension point for that to define context sensitive help which can be opened from a view, dialog, wizard etc. The context sensitive help opens the relevant chapters in the User Guide. I wrote about this and other ways to improve user experience on the linuxtools-dev mailing list.http://dev.eclipse.org/mhonarc/lists/linuxtools-dev/msg03034.htmlBernd"
80405,1,"Patch Set 1:I want to add a help button in each view's tool bar (I wasnÔÇÖt thinking about adding it in dialogs and/or wizards even if we can).I don't think the user want to be sent to the user guide. The user guide is too precise and specific. This window is an intermediary, it show what the user should know without reading the guide. We can add a link in the help window like ""Click here for more details"" if the user doesnÔÇÖt find what he is looking for.A context sensitive help could be useful to complete that. But, in my opinion, it is not enough.Concerning the structure. I will try to do a help window class more generic and easily implementable by each view. I will also take a look to the problem Matthew has mentioned."
80407,1,"Patch Set 1:Hi Ludovic,With the context-sensitive help the user can be directed to the chapter of interests.Also, what you would like to achieve is a kind of a cheatsheet. So, Eclipse provides a way to add cheatsheets. See the link, I provided on my last comment which has a reference to cheatsheets. Please have a look at the link to cheatsheets.In my opinion, we should use means that already exists instead of inventing new ways of doing the same thing."
80425,0,"Patch Set 1: Verified-1 Code-Review-1(23 comments)Still missing: Open the XML editor on an existing file. Is that (easily) feasible?Also, if you have time to look at it, using the recently added abstract tree viewer may give more flexibility, we could display different information for each file: for instance, the modification date, the number of elements in it, if it validates, etc.Look at the state system explorer view in org.eclipse.linuxtools.tmf.ui.views.statesystem. There would be a view class to implement (with the code for the toolbar buttons) and another class that extends AbstractTmfTreeViewer. Just fill the methods to override. It doesn't have to be as complicated as the state system view for a start. Just one column with the file name, but it will be more easily extendable afterwards.Also, when deleting, a confirmation message would be welcome. I could just delete my whole xml_files directory without warning!"
80445,0,"Patch Set 4: Code-Review-1(8 comments)Most importantly is the completeness of the unit test (yes, that's a rare luxury ;-) But this plugin is still young and may still change a lot in the coming weeks/months, so complete unit tests will make sure we do not leave behind some functionnalities when changing stuff. Thanks!"
80453,1,"Patch Set 7:After a rebase on master and some minor conflict corrections, a Maven build went well for me without the test failure mentioned earlier.Since I can't commit on top of Mathieu's code, I pushed it on his Github, branch xml_req_rebased. Here's the link: https://github.com/MathieuRail/org.eclipse.linuxtools/tree/xml_req_rebasedIf you can push it to gerrit with your permission, that would be great."
80468,0,"Patch Set 6:This looks like an interesting approach!The idea of returning the results in an arraylist was so that the view could then access each ""attribute"" in O(1) (since the attribute quark is the index in the array).But it's true that many views today don't really need quarks in particular, they look at the whole thing (or a relatively large subset of it). In that case they could handle the data as they receive it, in any order.If a view/analysis really wants to get the information ""the old way"", they can build the arraylist themselves and wait until all the data is available.Will look more deeply at it next."
80469,1,"Patch Set 6:The idea to returns a ""ArrayList"" scale when you have a few attributes and they are in sequence. Otherwise, it's not sparse.The O(1) access is nice (should be keep in mind for some ""cases"").But, the danger with the interface is that a ""List"" is exposed and somebody could provide a ""LinkedList"" and the algorithm will run O(n2):  forach intervals           <-- n times    list.set(quark, value)   <-- n times (set in linked list)You should add people working on ""views"" to provide feedback. This is a ""fundamental"" changes of way you can think a query."
80472,0,Patch Set 7: Code-Review-1Can you please rebase this on https://git.eclipse.org/r/#/c/25332/ ? It'll be easier than the other way around ;)This looks like an interesting change.
80483,0,"Patch Set 1:Without this information, the whole file descriptor bookkeeping is not really possible. I see two options:1. As you said, check for the field child_pid., no cool analysis for you.2. When a sched_process_fork happens, the parent thread will always be in a sys_clone. In the flags given to sys_clone, we can check if the CLONE_THREAD bit is set. From there, we can set TGID accordingly (to child_tid if it's a new process, to parent_tid if it's a new thread). This should work for all LTTng 2.x versions.FYI, the CLONE_THREAD bit position has not changed since the clone system call appeared in the Linux kernel 2.4, so I think it is safe to say it won't change in a near future."
80494,1,"at java.lang.Thread.run(Thread.java:744)Build timed out (after 120 minutes). Marking the build as failed.[ERROR] Failure: java.lang.InterruptedExceptionTerminating xvnc.Finished: ABORTED"""
80496,0,Patch Set 2:Looks quite useful! This should be a separate analysis though (unless you use things like getCurrentState() on the current state system?) I'll look at this in details when I come back ;)
80498,0,"Patch Set 2: Code-Review-1I haven't looked at the patch yet. But Houssem Daoud at Dorsal has been working on disk I/O analysis in TMF and I'm pretty sure he keeps track of file descriptors/names per process, etc.His work is not finished yet, but I'll see if anything is ready to be merged in TMF. Instead of adding yet more information to the LTTng Kernel analysis, using separate analysis might be a better approach and greatly eases the development of corresponding views."
80501,1,AbandonedMerge conflicts.
80503,0,Patch Set 1: Code-Review-1(2 comments)looks good
80508,1,Abandonedwrong change ID. Please use Change-Id: I094c1ad09ee8635fb9ef92f7b469a2276e01a3a2
80514,1,Abandoned
80521,1,AbandonedI'm going to do this another way using process services. I'll upload a new change set soon.
80525,0,"AbandonedAbandoning, I had a hard time convincing Gerrit to push this because of its conflict.  I successfully got it committed to master solely via Git."
80529,0,"Abandonedabandoning, have successfully pushed the commit to master without Gerrit"
80531,1,Abandonedforgot to add its change id to the corrected push
80534,1,Abandonedoutdated
80538,1,Abandoned
80542,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/594/ : UNSTABLE
80543,1,Abandoned
80545,1,Abandoned
80550,0,"Patch Set 1:> (1 comment) >  > If you agree with the in-line comment and push the proposed new > patchset, can you add Sergey as a reviewer, he familiar with this > piece of code.Oh, I saw you already had :)"
80553,0,"Patch Set 2:Patch set 2, includes a new file with compilation issues in earlier versions of Eclipse e.g. 4.4  the originating change was:https://git.eclipse.org/r/#/c/42961/With the update to these two files, the compilation succeeds all the way to Eclipse 4.2.Thanks Marc-Andre for doing the maven compile on e4.2 !!"
80558,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2398/ : UNSTABLE
80565,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/p2/job/p2-gerrit/285/ : UNSTABLE
80566,1,"AbandonedThanks for the initial contribution Markus. I'm abandoning the change because to achieve the goal of having a properly packaged Mac app with all the abilities we are used to, we need to change p2 and other parts of the platform."
80581,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2271/ : UNSTABLE
80582,1,Abandoned
80584,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2270/ : UNSTABLE
80585,1,Abandoned
80587,1,Abandoned
80590,1,Abandoned
80595,1,Abandoned
80600,1,Abandoned
80604,0,Patch Set 1:(3 comments)Thanks for the review! new patch coming soon
80606,1,AbandonedFeedback for this patch was negative - A better solution would be to use text instead of an image. Limited support for displaying text in MV is an impediment ATM.
80608,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2379/ : UNSTABLE
80616,1,Abandoned
80620,1,Patch Set 1:(1 comment)> why abandon? Just push a new rebased patchset.I tried that but I got an error message saying that I cannot push a change on someone else behalf without being a commiter (something along those lines).
80621,1,AbandonedI'll abandon this on Hugo's request so he can upload it again under his name.
80623,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/599/ : UNSTABLE
80625,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/603/ : UNSTABLE
80627,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/607/ : UNSTABLE
80628,1,Abandoned
80631,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/rcptt/job/rcptt-all-gerrit/606/ : UNSTABLE
80633,1,Abandoned
80646,1,AbandonedAbandoned.
80651,0,Patch Set 1:Could you please also add a test case or modify an existing test case in org.eclipse.cdt.ui.tests.text.CodeFormatterTest. Thanks.
80654,1,Abandoned
80656,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/2256/ : UNSTABLE
80657,1,Abandoned
80672,0,"Patch Set 11:(10 comments)Looks good to me, but I still have some comments ;)"
80673,0,"Patch Set 11:(4 comments)Thank you for all your comments!I have a few questions on some of them, and taking all the others into account."
80676,0,"Patch Set 11:Many thanks to all for your advices, I'm taking all that into account.I've just pushed a change that refactors the pre-commit hook, and once this is validated I'll add the commit-msg hook, so that the scope of each change is limited and clear.Please don't review anything for the moment, I'll let you know when it's ready by removing the [WIP] tag in the commit message.Thanks again for your time!"
80678,1,AbandonedYes it can. Abandonning now.
80683,1,"Abandoned""john knows what he's doing"""
80692,1,"Abandoned""Debug As Rhino"" feature is moved to Web UI"
80695,1,Abandonedmerged to the I79c9a9aaf2dca2fe047d9b8aac94bfa063d2a901
80697,0,"Patch Set 2:(2 comments)Thanks. I think the change looks good, minor suggestions inline."
80702,0,"Patch Set 3:Dani,the problem here is that the code in question works fine if the editor *is not dirty* - the FileSynchronizer notifies the TextFileBufferManager and this one can notify listeners etc and at the end ElementStateListener in AbstractTextEditor closes the enclosing editor.For whatever reason this notification about deleted resource was disabled for *dirty* editors - so the editor was not closed. If this was done to give dirty editors chance to save their content - this doesn't work either, because first of all user denied once that he won't save it and second because the editor immediately recognize that resource is gone and simply stops to render the content and shows ""file does not exist"" error.The good news: with https://git.eclipse.org/r/41675 patch dirty editors of closed project will be closed too.Not so good news: this works only for projects closed with the ""standard"" CloseResourceAction - all other ""closing"" possibilities (custom actions or direct API use) will still not close the editor.So I think this change still makes sense."
80703,1,"Patch Set 3: Verified-1 Code-Review-2I looked at this again. I see your point and one can indeed argue that the proposed fix makes sense, but over all the years IFileBufferListener.underlyingFileDeleted(IFileBuffer) was only sent when one could forget about the buffer. So, for example editors simply close without asking to save. The fix would cause lost work in that scenario."
80704,1,"AbandonedThis change would cause breakage on client side, and the reported bug is fixed with the change for bug 458266."
80710,1,Abandoned
80712,1,Abandoned
80714,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2358/ : UNSTABLE
80717,1,"Patch Set 1:Thanks, pushed directly, unfortunately I cannot release N&N Gerrits. Please abandon"
80720,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/657/ : UNSTABLE
80722,1,Abandoned
80724,1,Abandoned
80727,0,"AbandonedOk great, even better then."
80728,0,"Patch Set 1: Code-Review-1I don't think this change changes much for the user (except additional progress dialog), because the calling thread (UI) will still need to wait until operation finishes. I haven't tried it, but the best test is to put breakpoint in the code which is wrapped via the task and check if UI is still blocked (yes it will be)."
80729,1,Abandonedneed to fix this in a different way
80731,1,Abandoned.
80733,1,Abandoned.
80745,0,"Patch Set 2: Verified+1 Code-Review+2(2 comments)Patch looks good except for a couple of minor changes, I was not able to rebase the patch from gerrit, can you submit a new patch set?"
80748,1,Patch Set 5: Verified+1Patch approved but I cannot push because of merge conflicts.
80763,1,Patch Set 1:As the current status is pending (I think due to invalid parent commits not-yet-being applied) I've cherry picked it manually to master with:http://git.eclipse.org/c/jubula/org.eclipse.jubula.core.git/commit/?id=1802bd73a77f0ad759b79ad1bcc98ec6ec06901a
80768,1,"AbandonedSorry for the (very) long response delay - abandoning due to the reasons: - that the setup is now (probably) out-dated - has never been completely set-up (inferring from the comment ""first version"")Currently there are - as far as I know - no plans to provide such a configuration in a short term."
80769,1,AbandonedSorry for the (very) long response delay - abandoning due to http://eclip.se/383399#c2
80771,1,AbandonedSorry for the (very) long response delay - abandoning due to the reason that:- this contribution is simply too old now (caused by ourselves)- not actually solving the problem (see comments from Achims review)
80772,1,AbandonedSorry for the (very) long response delay - abandoning due to the reason that: - this contribution is simply too old now (caused by ourselves) - not actually solving the problem (see comments from Zebs review)
80773,1,AbandonedSorry for the (very) long response delay - abandoning due to the reason that this contribution is simply too old now (caused by ourselves) / has been provided to a nowadays out-dated branch.
80777,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6601/ : UNSTABLE
80778,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6602/ : UNSTABLE
80779,1,Abandonedmoved to stable-3.7 as https://git.eclipse.org/r/#/c/40510/
80782,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6606/ : UNSTABLE
80783,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6607/ : UNSTABLE
80785,1,Abandonedmoved to stable-3.7 as https://git.eclipse.org/r/#/c/40509/
80787,0,".getProgressService().busyCursorWhile(new IRunnableWithProgress() {They will do it in a nicer way as before and user knows what happens, but still not the best way may be, but better as committing without amended info.The best solution would be to have a (view/wizard) context from ICommitMessageComponentNotifications and reuse their progress services to indicate that staging view (or commit wizard) is doing something but not block the entire UI for that."""
80789,0,"Patch Set 2:Just tried to use IWorkbenchSiteProgressService but this one also blocks the entire UI, not only the view.So I would just use ProgressMonitorDialog(getShell()).run(true, falseas we do it in many other places."
80791,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6612/ : UNSTABLE
80794,1,Abandonedmoved to stable-3.7 as https://git.eclipse.org/r/#/c/40508/
80798,1,Abandonedmove to stable-3.7 as https://git.eclipse.org/r/#/c/40507/
80800,0,Patch Set 3:Have you thought about adding your hook support to a more generic place? All your hooks are implemented in the jgit/api package. But users of JGit are not forced to use this package. If components like gerrit or gitblit use jgit on a more low-level (but still public) level than they would have no hooks support. E.g. look at RepoCommand.java. They creating commits with CommitBuilder and ObjectInserter but they would have no hooks support. Maybe somewhere in ObjectInserter.insert(CommitBuilder) would be a good place. But we have to take care that we don't call hooks for commits which come in e.g. through transport.
80801,1,"Patch Set 3:No, I have not considered it :). The right place for me was in the commands themselves, I didn't really think further ahead...I don't think the hooks have their place in such low-levels though... Someone who wishes to use the ObjectInserter directly probably doesn't want external processes to kick-in... not to mention the hooks themselves expect to be run in a particular environment; most notably, in an environment where the repository isn't locked (.git/index.lock doesn't exist). A hook (for example, post-commit) could very well checkout another branch, copy create a copy of the commit there, then re-checkout the original branch. On the other hand, CommitBuilder shouldn't be used without having locked the repo beforehand IIUC.Likewise, the pre-commit hook can ""block"" a commit entirely, which wouldn't be possible without some hickups if done too low-level : the CommitCommand, RebaseCommand, CherrypickCommand... or anything called by EGit might setup some preparation on the repository before calling the lower level ObjectInserter... but if the hook rejects the commit, all of this setup is not only useless but needs to be reverted.I'll try and pull them down a few level if you think that's necessary, but I don't really know how to do it cleanly."
80808,1,Abandonedmoved to stable-3.7 as https://git.eclipse.org/r/#/c/40506/
80819,1,Abandonedmoved to stable-3.7 as https://git.eclipse.org/r/#/c/40505/
80821,0,Patch Set 5: Code-Review-1(9 comments)Some tests would be nice
80826,1,Abandonedmove to stable-3.7 as https://git.eclipse.org/r/#/c/40504/
80844,1,"Patch Set 10:looks like I was wrong and the API tooling doesn't consistently react on new API methods overridden in subclasses, I'll re-add the since tags there, sorry for the noise, I will add a test"
80849,1,Abandonedmove to stable-3.7 as https://git.eclipse.org/r/#/c/40503/
80852,1,"Patch Set 1:In fact, there is one post action (the last one in the list) that will be executed and it is the one that applies the right stereotype. What is the use of the other postactions?I'm not sure what you meant by:- ""use the standard tools""?- Correct indexes? Sorry, but I'm new to the papyrus's jargon :-).I will check the new bugzilla after receiving your answer."
80854,1,Abandoned
80856,1,Abandoned
80858,1,Abandonedgerrit test
80860,1,Abandonedgerrit test
80862,1,Abandonedgerrit test
80864,1,Abandonedgerrit test
80866,1,Abandonedgerrit test
80869,1,Abandonedgerrit test
80872,1,Abandonedgerrit test
80877,1,Abandonedwas another test
80881,1,AbandonedCompatibility.
80888,1,Patch Set 2: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3594/ : UNSTABLE
80890,1,Patch Set 3: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3634/ : UNSTABLE
80891,1,Abandoned
80893,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3574/ : UNSTABLE
80896,1,Abandoned
80899,1,Abandoned
80905,1,"Abandonedpushed directly, whereas I don't see a reason why gerrit did not push to origin :("
80912,1,Abandoned
80917,1,Patch Set 1:Thanks for the feedback.I have resubmitted the change against master this time(even if in my environment it does qualify as maintenance).Please see: https://git.eclipse.org/r/#/c/40358/
80927,1,"Patch Set 2:> Is Bug 435384 planned to be solved in 4.5? If yes, we can wait. I think our CSS story should get better with 4.5.I put your question to the bug. Basically it depends on SWT teamDaniel"
80928,1,AbandonedSWT now has transparent support
80929,1,Abandonedcontent merged elsewhere
80931,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/recommenders/job/gerrit.master.luna/2026/ : UNSTABLEhttps://hudson.eclipse.org/recommenders/job/gerrit.master.kepler/2573/ : UNSTABLE
80938,1,Patch Set 4: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2035/ : UNSTABLE
80943,1,Abandonedduplicate of https://git.eclipse.org/r/#/c/40309
80946,0,"Patch Set 4: Code-Review-2You can't make this change here.  For legacy reasons, it's perfectly valid to have 2 IContributionItems with the same ID in one ContributionManager, as long as they're not the same ICI instance."
80955,1,Patch Set 1:Build Unstable https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4262/ : UNSTABLE
80957,1,Abandoned
80961,0,AbandonedMerged with its parent. Thanks Denis
80970,1,Abandonedneed newer version.
80974,1,"Patch Set 1: Code-Review+2Damn. It seems default push is pushing to gerrit. Let's see if I can change something so that by default it pushes to the corresponding branch in remote. However, any other contributor who installs the Qvtd setup, should indeed push to gerrit. Perhaps it's something I should just change in the cloned repository. I'll think about it. In any case, merging the easy fix into master."
80976,1,Abandoned- Change committed to master via normal workflow
80984,1,Abandonedon en a rien a faire: a but de tuto
80986,1,Abandonedempty merge
80989,1,Abandonedduplicated patch
80991,1,Abandoned
80993,1,Abandoned
80995,1,Abandoned
80998,1,Abandoned- This patch was manually mergere from nmodi/TransparentColor branch changes in master.- Will be creating a separate patch using Git merge.
81004,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/2009/ : UNSTABLE
81013,1,Abandonedwrong crlf settings
81015,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3355/ : UNSTABLE
81020,1,Abandoned
81024,1,Abandonedmoved to tracecompass
81027,1,Abandoned
81029,1,Abandonedunfortunately pushed a new gerrit review to fix the bug https://git.eclipse.org/r/40098
81032,1,AbandonedThanks! I've committed the fix directly: http://git.eclipse.org/c/oomph/org.eclipse.oomph.git/commit/?id=8739cb5ec83a26791bf379c6ca689df816cfed0c
81045,1,Patch Set 1: Verified-1Build Unstable https://hudson.eclipse.org/sirius/job/sirius.gerrit/3479/ : UNSTABLE
81057,1,Abandonedjust a test
81059,1,Abandoned
81061,1,Abandonedrebased to the new gerrit: https://git.eclipse.org/r/40023
81064,1,Abandoned
81068,1,"Patch Set 6: Code-Review+1Thanks Christian. Unfortunately I cannot release a Gerrit review (how silly is that?), so I pushed this directly. You can abandon this change."
81076,1,Abandonedrebased to the new gerrit: https://git.eclipse.org/r/#/c/40019/
81079,1,"Patch Set 1:(7 comments)Also, unnecessary formatting should go away after restoring of project formatting configuration."
81083,1,Abandoned
81091,1,"Abandoned""Someone"" including myself :)https://git.eclipse.org/r/#/c/39997/Note that I specifically left out the sign-offs of the original authors, since we are now considering this a 3rd-party dependency, and not a contribution to Eclipse from them."
81110,1,"Patch Set 2:The fast transform will not work for large slope as it. If the slope * (1<<30) does not fit into 32 bits, an overflow can occur. In this situation, we may reduce the resolution of the timestamp transform, or make the tsBitsWidth smaller. The cache hit rate will be reduced, but the computation will be correct.However, in the case we are interested in lttng, the slope is close to 1.0, because the operating system already scale the timestamp counter (TSC) to nanosecond."
81115,0,"Patch Set 1: Code-Review-1(11 comments)Looks like a great improvement to the original very not performant linear transform. Some comments though. I'll push a new patch with additional unit tests that *I think* may fail.Also, do you have any idea or the exact condition for which this transform can be used instead of the original? For example, would it work for very large slopes (for instance a transform that transforms seconds to ns)"
81121,1,Abandonedleaving this for now
81123,1,"Patch Set 1:When I run it, I get the following error, which doesn't look related to Guava:WARNING: Cannot read from http://wiki.eclipse.org/index.php?title=%23if%3A++&action=raw: Server returned HTTP response code: 400 for URL: http://wiki.eclipse.org/index.php?title=%23if%3A++&action=raw"
81125,1,Abandonedtestssh
81127,1,AbandonedThis problem was caused by a change to Xbase so the test case shouldn't need changing.
81129,1,Abandonederroneous push
81131,1,Abandonederroneous push
81133,1,Abandonederroneous push
81136,1,Abandoned
81138,1,Abandoned
81140,1,Abandonedtest
81147,1,Abandonedredundant
81151,0,"Patch Set 1:This is not totally ready yet, probably still need some code cleanup. But I'm pushing just to know how you like the idea before actually doing the full cleanup ;-)"
81153,0,"Patch Set 1:(1 comment)It is not *that* LTTng-specific. For instance, David Couturier with his ATL GPU traces might want to have the current process for each GPU event. And as Matthew pointed out when I talked to him about it, we could do that to Windows traces as well.This way, you can aggregate traces together in an experiment and they can share information (here process information) between them so that if any trace type provides it, the other traces' analyses can use it.So the best place to put it, without adding a new plug-in is in tmf.core."
81156,1,Abandonedaspects will solve the problem this was meant to solve
81163,1,Abandoned
81166,1,"Patch Set 2: Code-Review-1(4 comments)This review is so big that it breaks Gerrit  :-)The subject at hand is ostensibly integration of MWE2 workflow execution and Xtend compilation for the oep.infra.gmfdiag.css plug-in, but there are a great many files changed in other unrelated plug-ins (just line endings or encoding changed?).  Also, the CSS plug-in itself was renamed/refactored, resulting in lots of files moved.  Why?  This makes it very difficult to review the change.Can we take this a step at a time, starting by just factoring out the specific releng changes needed for integration of MWE2 and Xtend into the build for this plug-in?  Also, I thought the purpose overall was to provide some shared POM that would make it easy to integrate MWE2 and Xtend into any plug-in.  Quite possibly I'm missing some context for this review that would make it more clear to me what the intent is."
81167,1,"Patch Set 2:Hi Christian,Did you also check commits that were already merged in the branch ? seehttps://git.eclipse.org/r/#/q/owner:%22Francois+Le+Fevre%22+branch:%22bugs/447580-codeGen%22+status:merged,n,zIt will probably explain some changes. The original work was to generate emf at the correct maven build cycle.https://git.eclipse.org/r/#/c/36009/=> For example : Fran├ºois had to move up the configuration since the generation is on 3 plugins and group them as a maven module(which makes for me more sense than just sharing the same naming convention)The first version 0.0.1-SNAPSHOT of the emf generator was finished the 6 November and IMHO should have been reviewed and merged in master at that time. Instead this branch has been created to save the work and all future work on automatic generation binded on maven life-cycle.I strongly believe that this kind of work is really important to move Papyrus on the next step of model driven development: - removing generated files from git repository - binding all generations to a the correct life-cycle - avoid any manual generation Regards,Benoit"
81168,0,"Patch Set 2:(In reply to comment #9)> > Did you also check commits that were already merged in the branch ? see> https://git.eclipse.org/r/#/q/owner:%22Francois+Le+Fevre%22+branch:%22bugs/447580-codeGen%22+status:merged,n,zNo, I was reviewing this Gerrit change on its own terms, as usual.> It will probably explain some changes. The original work was to generate emf at> the correct maven build cycle.> https://git.eclipse.org/r/#/c/36009/I'm interested in the compilation of Xtend sources, which is the purpose of this current Gerrit change.> => For example : Fran?ois had to move up the configuration since the generation> is on 3 plugins and group them as a maven module> (which makes for me more sense than just sharing the same naming convention)Okay, but so far we have been putting all common build configuration in the top POM.  Why not in this case?  Or are we free now to introduce more POM hierarchy for other purposes?  That would be fine with me; I just thought that was not currently policy.  Also, I'm concerned that we're adding POM files that aren't maintained within the Eclipse projects and are therefore not easily managed within the Eclipse environment (they are only accessible in the Git directories).  For example, there isn't a plugins/infra/gmfdiag/css/xtext/.project file to create an Eclipse project that makes the pom.xml accessible within Eclipse.Any comment on the site.xml and xdoc files that look like auto-generated stubs?  AFAIK, we don't use these in Papyrus.  And all of the files that are changed in plug-ins that aren't generated?What I was hoping to see was common infrastructure that I could re-use in my own Xtend projects to simplify their build configuration (which, granted, isn't exactly complex:  the xtend-maven-plugin is quite simple).  I don't see much of a common infrastructure here that I can understand, or it's hard to find in the large number of changes.  I can't review this until it's cleaned up."
81169,1,"Patch Set 2:About the current review don't forget that its on a branch and that a squashing (reorder/merge...) phase is expected before merging in masterAbout site.xml and xdoc : they are used by the ""mvn site"" command => it should ease the doc/site generation (ex javadoc)but it's an other subject than xtend generation. About structure for pom.xml files :I didn't find any ""official"" policy on the subject in papyrus wiki (Maybe I missed it ? Is there a wiki page referencing official collegiate decisions ? )Indeed all pom.xml are currently on the same level as a .project file, but I believe that we should change that. - you can change the pom.xml with eclipse directly in the git repository view. Or you can use the import new project wizard. - Currently the top-pom* files are holding an exhaustive list of all Papyrus plugins. It shouldn't be the case. For example : extra plugins would be easier to manage if each of them were providing an independent top-pom. (Which will also allow to build them independently) *****On a more practical view, this is what I suggest : ******* - create independent bugs for each generation type - create a bug for publishing good website from each plugins with maven/tycho  - create a bug for the structure of pom.xml - push gerrit contribution to MASTER that will be reviewed by everyone (especially you :)) - treat the subjects in this order : xtend, emf, site, mw2 - drop the branch as soon as the reports to other gerrit review are done (since only branch with active work should be kept alive)=> It will re-focus the discussion on the subjects.Do you agree ?"
81170,1,"Patch Set 2:(In reply to comment #11)> Patch Set 2:> > About the current review don't forget that its on a branch and that a squashing> (reorder/merge...) phase is expected before merging in masterYes, but most of the files changed here would not want to be merged to master because they have nothing to do with integrating any kind of code generation into the build system.  So, the merge to master must not include those changes, so best not to implement them on the branch in the first place.  The purpose of any useful branch is eventually to merge it to master, so the same rigor should be applied to every branch as would be applied to master.> About site.xml and xdoc :> they are used by the ""mvn site"" commandYes, but currently they are empty or at least they look like generated templates.> => it should ease the doc/site generation (ex javadoc)Are we proposing to start publishing Maven project sites to Eclipse.org?  Will that help us to include Javadocs in the Papyrus SDK Developer Guide plug-in?  That would be nice.> but it's an other subject than xtend generation.RIght, it is.  Which is why it shouldn't be in this Gerrit change.  :-)> About structure for pom.xml files :> I didn't find any ""official"" policy on the subject in papyrus wiki (Maybe I> missed it ? Is there a wiki page referencing official collegiate decisions ? )Not that I know of.  There's just the pattern established when Tycho was first implemented in Papyrus and some discussions on the mailing list and conference calls that I remember (or perhaps misremember).  Anyways, I certainly don't object to changing the module structure if it can help improve matters, but it would be nice to see any changes implemented consistently throughout the repository.> Indeed all pom.xml are currently on the same level as a .project file, but I> believe that we should change that.> - you can change the pom.xml with eclipse directly in the git repository view.Yes, that's a good point.  This provides full access to the Git filesystem.  I tend to forget that because I only use EGit for the History View.  :-)> Or you can use the import new project wizard.> - Currently the top-pom* files are holding an exhaustive list of all Papyrus> plugins. It shouldn't be the case. For example : extra plugins would be easier> to manage if each of them were providing an independent top-pom. (Which will> also allow to build them independently)I agree.  These POMs need to be better modularized, and not just because of the number of times I've had to manually merge them because they're a central locus of change!  The same can be said for the JUnit AllTests suite (I've actually implemented something on my branch to help modularize that one).> *****On a more practical view, this is what I suggest : *******> - create independent bugs for each generation typeAgreed.> - create a bug for publishing good website from each plugins with maven/tychoI'll be interested to see what the enhancement bugzilla says about the motivation for this.> - create a bug for the structure of pom.xmlAgreed.> - push gerrit contribution to MASTER that will be reviewed by everyoneAgreed.> (especially you :))Yes, I can volunteer. :-)> - treat the subjects in this order : xtend, emf, site, mw2Why would mwe2 not be a higher priority than the site?  It's a code-generation concern.> - drop the branch as soon as the reports to other gerrit review are done (since> only branch with active work should be kept alive)Agreed.> => It will re-focus the discussion on the subjects.Yep.> > Do you agree ?Absolutely!  Thanks very much for taking the time to discuss this and proposing what I think is the right way forward.  It will definitely help us to make progress on all of these fronts."
81172,1,Abandonedit wiil split into several commits
81177,1,"Patch Set 5:Thanks Jan for the tip, for reasons unknown to me I have problems updating this Gerrit review. I use https://git.eclipse.org/r/#/c/39833/ to activate one of the test suites based on your suggestion."
81187,1,Abandoned
81189,1,Abandoned
81191,1,Abandoned
81193,1,Patch Set 3: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/481/ : UNSTABLE
81197,1,Abandonedmoved to master as Ie61c597c87a68da16a92cd52fea0bc5a4ff5ec28
81202,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/480/ : UNSTABLE
81206,1,Abandoned
81208,1,Abandoned
81210,1,Abandoned
81211,1,Patch Set 1:Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/1699/ : UNSTABLE
81213,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org//job/org.eclipse.scout.rt_gerrit/1697/ : UNSTABLE
81214,0,Patch Set 1: Code-Review-2please push to develop not master!
81215,1,Abandoned
81217,1,Abandoned
81220,0,"Patch Set 5: Code-Review-2Your patchset #5 only includes changes related to copyright. What I'd like is a commit that includes the functional part of the change (as in patch-set 4) + the copyright change.In order to do so, checkout commit from patch-set 4, then cherry-pick changes from patch-set 5, squash both commit and set as commit message the same one as in patch-set 4, including change-id."
81227,1,Topic Bug 363916 removed
81234,1,Abandonedintegrated using https://git.eclipse.org/r/#/c/33482/
81236,0,Patch Set 1:(4 comments)The concepts look good. I added some comments with proposed improvements.
81240,1,Abandonedintegrated using https://git.eclipse.org/r/#/c/33482/
81243,1,Abandonedintegrated using https://git.eclipse.org/r/#/c/33482/
81246,1,Abandonedintegrated using https://git.eclipse.org/r/#/c/33482/
81255,0,Patch Set 4:Build SUCCESSFUL. Now starting integration tests...
81256,1,Abandonedsuperseded by https://git.eclipse.org/r/#/c/36896/
81260,1,Abandoned
81263,1,Abandoned
81264,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/407/ : UNSTABLE
81265,1,Abandonedmoved to master as I6137f60c7c33592b7202e2d84388e749bb63e3ca
81266,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/408/ : UNSTABLE
81267,1,Abandonedmoved to master as If736ab3bc5972908a464212a29de8311b32e2718
81269,1,Abandoned
81274,1,Abandoned
81279,1,"Patch Set 2:Here's one problem I have when using it (I need this for the virtual machine view): this method is good for the zoomed event list, but I want to call it for both zoomed and not zoomed (complete range) event list. There could be a method that returns a flat map of <entry, event list>, and then the recursive call could call the setZoomedEventList for all entries, but then the events will not be set for the entries until the end and we cannot draw anything until everything is calculated.Some questions: 1- why do we use TimeGraphEntry here instead of ITimeGraphEntry to which we could add a setEventList?2- Why do we have a set of zoomed events and another one for the full range? Isn't the full range just a special case of the zoomed events? And doesn't that complicate the whole thing uselessly? Is it just to cache to full range data because we suppose it may be used more than once, while each zoom range is pretty much unique?Now that we don't have to live with the legacy API... could we break it here? :D"
81280,1,"Patch Set 2:> 1- why do we use TimeGraphEntry here instead of ITimeGraphEntry to which we could add a setEventList?I guess a combination of wanting to leave the 'how the list is stored' completely up to the implementation (that was before abstract view), and avoiding API breakage. I don't mind if we add a setter now.> 2- Why do we have a set of zoomed events and another one for the full range? Isn't the full range just a special case of the zoomed events? And doesn't that complicate the whole thing uselessly? Is it just to cache to full range data because we suppose it may be used more than once, while each zoom range is pretty much unique?There are two reasons for the two lists. One is that when you zoom out completely (a common case) the list is already available. The other is that when you scroll and zoom out you have 'some' level of detail before you settle on a new window range and the new zoomed list is computed. Otherwise everything outside of the old window range would be completely blank, and you would be scrolling 'in the dark' (e.g. when you drag the scroll bar thumb).I can see two cases where you only need one list. First is if you know that your data is small enough, you can have only the full list computed without any resolution gaps, then you don't need any zoomed list. The second is if you want to have only the current window visible data, then you can avoid the full range list -- with the caveat explained above (note that in this case, setting the zoom range to null when zooming to full range would be a bad idea...)."
81283,1,"Patch Set 1: Code-Review-1(1 comment)Sorry, I really tried to understand the commit message."
81288,1,Abandonedtried this again on my new mac and using ramdisk is slower than not using it
81294,1,Abandoned
81299,1,Abandonedmoved to master
81301,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/410/ : UNSTABLE
81302,1,Abandonedmoved to master
81304,1,Abandonedmoved to master
81306,1,Patch Set 2: Code-Review-2legit failures
81307,1,Abandoned
81313,1,"Patch Set 1: Code-Review-1I agree that from the byte code POV this is OK, but source code is for humans.It doesn't hurt being more explicit. There could be different reasons why it is nice to have, a couple of the common cases I see:a) ""implements Foo, FooExtension"", so reader immediately see that the main reason for this class to exists is ""Foo"". FooExtension could be even dropped in some major release.b) class AbstractA implements Adaptable {}, class A extends AbstractA implements Adaptable {} - most likely Adaptable was added to AbstractA after the class was created, but it is not necessary it stays there forever, but in any case we want A be adaptable.So, I don't think we have to this cleanup."
81314,1,"AbandonedOK, I don't quite agree with you but if it's not wanted so be it."
81316,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
81318,1,Abandonedupdated to Mars M3 in the meantimethe p2.statsURI problem is tracked separately
81320,1,"Abandoneda different solution is being proposed, see bugzilla."
81322,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6463/ : UNSTABLE
81325,1,Abandoned
81328,1,Abandoned
81339,1,Abandonedchange moved to 0.19.0
81343,1,"Patch Set 2:(10 comments)This commit is large enough that I'm finding it hard to reasonable review, so I've noted some changes that might be able to be separated into logical prior commits.  I'll take a shoot at a couple of them and see how it goes."
81348,1,Abandoned
81350,1,Abandonedoops
81361,1,Abandoned
81366,1,Abandoned
81368,1,Abandoned
81370,1,Abandonedcurrent master will reach 3.6 so there is no need to also push this to stable-3.6 now
81372,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/405/ : UNSTABLE
81378,1,Abandoned
81381,1,Abandonednot amended
81383,1,Abandonedaccidental push
81392,0,Patch Set 1:> I'll have a talk with the code formatter and let her know to back off.Not pressing Ctrl+Shift+F should do the trick. :) Project is already set to format the edited lines alreadz.
81397,1,"Patch Set 2:There is an issue with CTabFolderElement getting left in the css system.  I left a system.error message to track it down.  Once left in the system, the message will print upon opening an editor with a CTabFolder, even after closing all editors and then opening a new one."
81402,1,"Patch Set 2: Code-Review-1Steven: Interesting find in #401439c11.  This patch isn't quite adequate though as item(int) will still return the disposed item. Could you please update your patch noting that it's a workaround this finding in the comment, and remove the System.err.println()."
81403,1,"Patch Set 2:> patch isn't quite adequate though as item(int)The calling code asks for the length first, so I don't see how it will return the disposed items.  I've witnessed it firsthand.  I could throw and exception, but that would be bad for the Engine.  I could yank the items out of the array, but would also be bad for the CTabFolder and whatever kept it around.I think avoiding the current exception and not messing with the internal item array is a good first step."
81418,1,Abandonedanother review was used.
81429,1,Patch Set 1:The build failure seems to be an configuration error of the gerrit validation build job. All bundles builds fine in fact. The error reads:...No test report files were found. Configuration error?...
81430,1,"Patch Set 1: Verified+1Uwe,the patch itself looks good. Unfortunately, there is nobody working full time on p2, and I am not very familiar with the codebase you touched.I would deeply appreciate if you could tell me what is the effect of skipping certain notifications - your patch removes NPE but it would be good to know that it fixes the real problem, not just hiding it."
81431,1,"Patch Set 1:Daniel,the underlying problem is that notifications occur before the initialization of the variables ÔÇ£artifactReposForRemovalÔÇØ and ÔÇ£metadataReposForRemovalÔÇØ has been completed. It is a timing issue as far as I can say, as the NPEÔÇÖs does not happen all the time. And if the NPEÔÇÖs occur, everything is installed/uninstalled just fine, except that the users get a little bit worried as there are exceptions in the install log.If you look at DirectorApplication#run (line 1080 and following), ÔÇ£initializeServices()ÔÇØ is called at line 1088 which does register the provisioning event bus listener at the end of that method. At this point of time, ÔÇ£initializeRepositories()ÔÇØ (called at line 1095) hasnÔÇÖt been called yet and therefore both variables are still null. If there is an incoming notification before ÔÇ£initializeRepositories()ÔÇØ is fully processed, you run in the NPE. Once ÔÇ£initializeRepositories()ÔÇØ is called, the notifications are processed without triggering an NPE.The proposed fix is the simplest approach without changing the original control flow of the DirectorApplication. Obviously it would be also possible to do the registration of the provisioning event bus listener after the call to ÔÇ£initializeRepositories()ÔÇØ, but this will modify the control flow of the DirectorApplication slightly. IÔÇÖm open for any suggestion and can also provide a patch that moves the provisioning event bus registration after ÔÇ£initializeRepositories()ÔÇØ."
81435,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/p2/job/p2-gerrit/282/ : UNSTABLE
81436,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/p2/job/p2-gerrit/283/ : UNSTABLE
81445,1,Abandoned
81448,1,Patch Set 1: Verified-1https://hudson.eclipse.org/rcptt/view/active/job/rcptt-all-gerrit/149/Compilation fail
81449,1,Abandoned
81455,1,AbandonedDoesn't work with Sonar as expected.
81458,0,"Patch Set 1:Yes, that did the trick. Thanks!I was not aware of that functionality, is there a documentation somewhere explaining the whole generation and merging process?"
81459,1,"AbandonedDocumentation, what's that?  :-PI thought it was in the book, but I'm not sure..."
81463,1,Abandoned
81466,1,"Patch Set 2: Verified+1 Code-Review-1 IP-Clean-1(6 comments)The fix itself is good, but it should be submitted by the original contributor (see comment in bug 289916). It also has some minor issues that should be polished."
81474,1,"Patch Set 1:(5 comments)Sorry, I saw only very late that you already abandoned that change. Anyhow: here the comments I wrote so far"
81476,1,Abandoned
81480,0,Patch Set 1: Code-Review+2Looks good.
81482,1,Abandonedalready merged
81488,1,Abandoned
81490,0,Patch Set 1:When running maven builds it's sometimes desirable to validate the compilation of the tests.dsf.gdb plugin but don't actually execute this specific test cases but other ones which are part of the build reactor.This small change introduces a new parameter (don't skip by default) that allows skipping of this test cases if specified in the mvn command.
81493,1,Patch Set 2:Patch set two adds comments in the commit message as suggested.An specific example:Lets say that you can not run the test cases in test.dsf.gdb in a very specific environment. However you could replace these tests cases with an extension of these test cases or a customized version based on this open source bundle.So when running your builds you want to know if the original  tests.dsf.gdb still compiles as you need to re-base you custom test cases at a later point. So you would add this open source module to your build.However you don't want to run the open source test cases as they would fail in the custom environment but you still want to execute the extended version so you don't want to skip al tests either.So the option is to simple skip the test cases for the tests.dsf.gdb bundle and leave it on for other tests bundles.  The new system parameter does just that without affecting the current behavior.Let me know in case you have any concerns
81497,1,Abandoned
81500,1,Abandoned
81505,1,"Patch Set 1: Code-Review-2(7 comments)While this is heading in the right direction, there are too many problems.  I described these here:https://bugs.eclipse.org/bugs/show_bug.cgi?id=446889I'll reject this, because I think it is cleaner to do a new, clean submission, instead of fixing this with additional Gerrit submissions."
81508,0,"Patch Set 1: Code-Review+2 Verified+1This code has been reviewed together with the related submissions, looks good."
81513,1,AbandonedFixed.
81516,1,Abandonedcherry picked to master
81518,1,Abandonedold
81520,1,Abandonedold
81528,0,"Patch Set 2:In the communication diagram, when you have some message between 2 lifelines. You can either edit the message on the diagram itself, with the context menu > Edit Message > Edit using advanced [...] or by pressing f2 while the preferences for the editor are set to Advanded Editor: Window > Preferences > Papyrus > Embedded Editors > org.eclipse.uml2.uml.Message > Advanced Editor as Default.Coul you test that?thanks"
81529,1,"Patch Set 2:I tested but no changes. In investigating the code, I remarked that generated code of EditPart(MessageName3EditPar#performDirectEditRequest(Request)) doesn't contain the case of ICustomDirectEditorConfiguration. This case allows to use an Xtext editor with its parser defined in a DefaultXtextDirectEditorConfiguration as MessagePopUpEditor. My analysis used PropertyXtextEditorConfiguration as nominal use case. Could you confirm analysis ?Is it a regression or a not yet implemented functionality ?"
81530,1,"Patch Set 2:(In reply to comment #11)> Patch Set 2:> > I tested but no changes. In investigating the code, I remarked that generated> code of EditPart(MessageName3EditPar#performDirectEditRequest(Request)) doesn't> contain the case of ICustomDirectEditorConfiguration. This case allows to use an> Xtext editor with its parser defined in a DefaultXtextDirectEditorConfiguration> as MessagePopUpEditor. My analysis used PropertyXtextEditorConfiguration as> nominal use case.> > Could you confirm analysis ?Is it a regression or a not yet implemented> functionality ?More, this case was added with resolution of the task 429128 and the Sequence diagram was not generated since."
81532,1,"Patch Set 1: Code-Review-1Several comments on this patch:- I don't understand why the uml command updater is setting the name to something like ""1:name"" at line 173. Is the name of the message not simply the text after "":"", and the digit before should help rearranging the message?- code analysis: -- when you declare the variable Sring textToEdit = ""Not a message"", you force the creation of a new String, which will be 99,99% time not used, because the object edited will be a message and textToEdit will be overriden in the if statement. It is better to set it to null when being declared, and add a else clause to the next if statement (and it is also better to use a static string rather than a local created one, and even better with internationalization ;-))-- NamedElement#getName() can return null, so this line can lead to NPE: textToEdit = messageToEdit.getName().trim();"
81533,1,"Patch Set 1:(In reply to comment #4)> Patch Set 1: Code-Review-1> > Several comments on this patch:> - I don't understand why the uml command updater is setting the name to> something like ""1:name"" at line 173. Is the name of the message not simply the> text after "":"", and the digit before should help rearranging the message?Issue #1 : I tried to find how pass in this update command  but I don't understand when XText editor is used to set Message text. Have you an idea how access this editor for Message ?> - code analysis:> -- when you declare the variable Sring textToEdit = ""Not a message"", you force> the creation of a new String, which will be 99,99% time not used, because the> object edited will be a message and textToEdit will be overriden in the if> statement. It is better to set it to null when being declared, and add a else> clause to the next if statement (and it is also better to use a static string> rather than a local created one, and even better with internationalization ;-))Issue #2 : OK> -- NamedElement#getName() can return null, so this line can lead to NPE:> textToEdit = messageToEdit.getName().trim();Issue #3 : OK. Well observed !"
81536,1,"Patch Set 3: Code-Review-1Several issues with this editor:- The advanced editor doesn't work in the Model Explorer- The widget opened from the Sequence diagram is not correct (Blocking dialog instead of lightweight styled text), although it works- The editor is inconsistent in the Communication DiagramI'm not sure what the expected behavior really is for this editor. It has been initially implemented for the Communication Diagram, and I'm not sure it even makes sense to use it in the Sequence Diagram (In which the order of messages is represented graphically). And, what about the ModelExplorer, where we don't have any graphical information?The direct editors also require the diagrams to be regenerated to work properly, and I think Sequence Diagram is not up-to-date.A more powerful framework for declaring direct editors may be required (Currently, editors are declared on a metaclass, regardless of the edition context)Let's postpone this task until the requirements are complete & accurate"
81537,1,"AbandonedAs it is postponed, I prefer to abandon the task for now"
81539,0,Patch Set 2: Code-Review-1This works fine on Windows. The shell isShell {Eclipse SDK}and it appears in the task bar and the switcher.There seems to be some other issue here.
81541,1,"Patch Set 2: Code-Review-2> Why not apply the fix, do you see any harm in creating another top-level shell?Because I don't add code when I don't know why it needs to be added - ""it works"" is a bad reason. If you can provide a sound explanation why the current code doesn't work on Linux and why using a non-parented top-level shell works, then I might reconsider."
81545,1,"Patch Set 1:Dani, is this OK to merge? The disappearing of the workspace selection dialog is at least for me a pain point."
81560,1,Abandoned
81567,1,Abandoned
81570,1,Abandonedwhitelisting of bundles/classes will move to serverside if needed to avoid loosing relevant stacktraces
81582,1,Abandoned
81602,0,"Patch Set 10: Code-Review+1 Verified+1New patch set should contain your suggestions. Except the ""activity"" support. I don't think this information is available at model level so to preserve existing functionality I need to check the view registry."
81606,1,Patch Set 10:(4 comments)Thanks Brian for the detailed review. One clarification question from my side: Do you think the support of model elements for the Activities should be handled with this change? It will to me that this should be handled by a separate bug and the dialog should be adjusted once this change is done or marked dependent on this change.
81607,1,"Patch Set 10:Sorry Lars for this delayed reply.  Since the existing dialog supports activities, it would be a breaking change to not support it :-("
81608,0,"Patch Set 10:We would still support activities but only via the ViewRegistry, so this would not be a break. Does this change you opinion?"
81610,1,"Patch Set 10:I agree that we must also support the View Description in the model. I don't think we want to add activities support for the model, AFAIK Paul avoided that to reduce the complexity or the whole model. Lets move that to 4.5."
81632,1,Abandonedmoved to branch stable-3.5 as Ib169e88d9d51f4d0e6caa3a498f48edc81e0991din order to prepare a maintenance release to deliver this fix
81634,1,"AbandonedSorry, not sure why this was posted several times."
81637,1,Abandoned
81643,0,"Patch Set 5:Dani, this looks good to me (constants as API instead of Strings) for the View and Editor tag. Any concerns from you?"
81644,1,"Patch Set 5: Code-Review-2I realized that the IWorkbenchRegistryConstants contains constants for views and editors. I suggest we reuse them. Unfortunately they define the tag as ""view"" and ""editor"" and not ""View"" and ""Editor"", but it still makes sense to use these internal constants."
81645,1,AbandonedSee Bug
81650,1,Patch Set 3: Code-Review-1Lots of unrelated whitespace change. We should not mix content and wc changes. I suggest you open a bug for org.eclipse.e4.ui.workbench to solve the whitespace issues seperately.
81656,1,Abandoned
81658,0,AbandonedImplemented manually. Thanks J.!
81660,0,"// }Probably best just to remove these lines...unless they are needed for the browse.But overall things look great.  I will fix 3 and 4 prior to commit if you prefer.  If you could address 1/2...or just let me know that there is a good reason for creating/exporting a new package for this class...then I will approve, get things published, submitted and built/tested via the ECF builder for deployment.   Many thanks!"""
81667,1,"Patch Set 1:I've committed and pushed these additions to master.  I made a few small changes for robustness in the runRequest method, and changed the implementation and location of the new test case (moved to org.eclipse.ecf.tests.provider.filetransfer.scp test plugin and out of org.eclipse.ecf.tests.filetransfer).This review request can be deleted or cancelled, whichever is easiset.  I will also add comment to bug and resolve."
81669,0,AbandonedAlready implemented manually. Thanks J. Langley!
81671,1,Abandoned
81675,0,Patch Set 1:Use your patch to resolve this issue. It's more general and will cover more cases than my null checks:)
81691,1,Abandonedwe continue with review https://git.eclipse.org/r/#/c/33336/
81694,1,Abandonedwrong branch
81701,1,"Patch Set 1:Testdrive #94 completed with scope junit,swtbot,swtbot-sequence. 6 failures, 5 of them were in the reference build #81New failure compared to the reference build : org.eclipse.sirius.tests.swtbot.tree.CopyTreeRepresentationTest.testCopyTreeRepresentationBut this failure is actually there also on a build testing the tip of origin/performances (see #89)"
81705,1,Abandoned
81707,1,Abandonedbad project
81710,0,"Patch Set 1:Mine doesn't cover the experiment analyses. Also, I realized that in mine that there are BuildThreads foreach trace and each BuildThread do create the event list for all traces. I think yours takes care of that if I'm not mistaken.I'll try your patch and if it works for my use case then we should use your fix."
81711,1,Patch Set 1:I tried your patch and it works for me. I'll abandon this patch and we can continue with your patch
81715,1,Abandoned
81721,1,Patch Set 1: Code-Review-1I wouldn't do it by introduce two new classes. If you have a class defining JUnit tests and the only thing you want to change is to introduce a new flag (newLineAtEnd in your case) and let all tests run with and without that flag set then I would use Theories. Like RecursiveMergerTest. In your case I would suggest to stay only with MergeAlgorithmTest:  @RunWith(Theories.class)  public class MergeAlgorithmTest {  ...  @DataPoints  public static newLineAtEnd;  ...  @Theory  public void testXYZ(boolean nl) {  ....JUnit will take care that testXYZ is called twice - once with nl=true and once with nl=false.
81722,0,Patch Set 1:Maybe it is a bit too much to test all permutations of nl/no-nl for all tests. Just add a few extra tests for the missing cases. That'd probably be good enough and we could avoid the parameterized/theorized tests alltogether
81723,0,"Patch Set 1:..and if we do that, all these commits could probably be squashed into one or two. Small commits are good, but this a bit much considering the real change."
81735,1,"Patch Set 1:This doesn't (completely) fix the GC out-of-memory error when running all tests, but it does keep the number of threads from becoming too damn high."
81739,1,Abandoned
81741,1,Abandoned
81743,1,Abandoned
81749,1,"Patch Set 1: Verified-1 Code-Review-2As already commented in the original patch, this patch set is not a correct patch set. It is a new patch, and it contains invalid codes. I don't see a reason for a new example to show huge data set spanning. This was a misunderstanding, as I asked for test cases.Therefore this patch is declined. See the original one for further information.https://git.eclipse.org/r/#/c/32467/"
81750,1,AbandonedThis patch set is invalid. It contains a wrong example is not a successor patch set to the original patch.
81752,1,AbandonedThis is the wrong approach I will submit another implementation
81756,1,AbandonedBugzilla invalid.
81759,0,Patch Set 5: Code-Review-1(5 comments)Note that I have only reviewed the impementation for DelegatePackageRegistry. I have not looked at whether or not this is the right approach to solve the underlying issue of dynamic EPackages. Esteban: we probably need to discuss this together.
81772,1,Abandonedwrong branch.New change at https://git.eclipse.org/r/#/c/33101/
81774,1,Abandoned
81776,1,"AbandonedCommitted, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=441790#c21"
81777,0,Patch Set 2:In general this patch is an improvement. I still see two issues:1.) If I add a second window and drag the part not onto this window the part vanishes2.) If I drag the part onto the second window and afterwards outside the two windows a third window is created which holds the part (all good here). If I afterwards close the second window the third window (with the part is also closed)Not sure if these issue should have also be fixed with this bug.
81779,1,Patch Set 2:> If I afterwards close the second window the third window (with the part is also closed)I think it is separate issue connecting to closing the windows and I would file the new bug for itDaniel
81781,1,"Patch Set 2:>  Wouldn't it be more appropriate to override canDrag()?I think it is better idea, but I think we should do the same for the IPresentationEngine.NO_MOVE tag and other exit points that return null. I think we can create the separate bug for refactoring of this codeDaniel"
81792,1,Abandoned
81800,1,"Patch Set 1: Code-Review-1The thrown exception isn't being caught by anything, so a stacktrace is still thrown. While Eclipse does display an error message, the launch configuration dialog is still left in an inconsistent state."
81801,1,Abandoned
81803,1,Abandoned
81804,1,Abandonedmoved to stable-3.5 as https://git.eclipse.org/r/#/c/32993/
81808,1,"AbandonedSee https://git.eclipse.org/r/#/c/32989/ instead, which targets master and uses a different bug number, specific to the GroupingContentProvider case."
81814,1,Abandoned
81816,1,Abandoned
81818,0,Patch Set 1: Code-Review+1(2 comments)Great idea to generate this dynamically from Bugzilla!
81821,1,Abandoned
81826,1,Abandonedsupersede.
81828,1,Abandonedwrong build
81830,1,Abandoned
81855,1,Abandoned
81857,1,Abandoned
81861,0,"Patch Set 1: Code-Review-1I'm fine with changing what needs to be changed for Mars, but I don't think we should do such disruptive changes in a service release (i.e. in the Luna stream)."
81884,1,Abandoned
81890,1,"AbandonedReplace with review https://git.eclipse.org/r/32906Sorry, I accidently pushed this commit on a distant branch. So it is impossible to push another patch set."
81892,1,Patch Set 1: Code-Review-1I think you should update the Sequence documentation to mention the snap to geometry (https://bugs.eclipse.org/bugs/show_bug.cgi?id=431035#c1) as Sequence does not suport sequence element to be aligned and the blue line feedback indicates there will be some insertion/auto expand in Sequence diagrams. Then we should open a new bug to force the deactivation and forbid the enablement of snap to grid and snap to shapes on SequenceDiagrams. (see in org.eclipse.sirius.diagram.ui.graphical.edit.policies.SiriusContainerEditPolicy.getArrangeCommand(ArrangeRequest) how to access to the pref value for each diagram).
81893,1,"Patch Set 1:I completed the documentation.For the new bug (to force deactivation), a good hint is probably org.eclipse.gmf.runtime.diagram.ui.internal.ruler.SnapToHelperUtil.getSnapHelper(GraphicalEditPart).I will create it."
81909,1,Abandoned
81914,1,Abandoned
81916,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/1219/ : UNSTABLE
81931,1,"Patch Set 3:(4 comments)This code has API changes and so should be based on master, not ptp_8_0. Are you compiling against an 8.0 API baseline? For me, Eclipse claims there are missing tags in three places, which I've indicated in the patch comments. Also, I receive an error that ""the minor version should be incremented"" in sync.core/META-INF/MANIFEST.MF."
81938,1,Abandonedwrong branch!
81941,1,Abandonedmoved to luna branch
81979,1,Abandonedthis move to the new luna branch
81986,1,Abandonedwrong branch
81988,1,Abandoned
81990,1,Abandoned
81992,1,Abandoned
81994,0,"Patch Set 1:A further change in how Model Explorer manages refresh, to avoid recalculating the entire tree structure on every model edit, which doesn't scale well on large models.First, the Model Explorer's resource-set listener now only schedules structural refreshes for the specific objects that notified changes.Second, the UMLLabelProvider fires LabelProviderChangedEvents to trigger label updates for elements that derive their labels from other related elements, when those related elements are changed.  This required a new mix-in interface for label providers in the Label Provider Service to allow Model Explorer and other clients to pass notifications to them on changes in the model.  I'm not entirely happy with this solution, but it does address a couple of issues with the approach I would rather have taken, which is having individual label providers listen for model changes themselves:  * the providers registered with the Label Provider Service aren't initialized with a    ResourceSet, ServicesRegistry, or other context in which they can find the    model to listen to  * providers could discover, as they are asked to provide labels, the objects they    need to listen to.  But should they be Adapters or ResourceSetListeners?  And    can we be sure that they won't leak, that the providers will be disposed at the    right time so that they can remove listeners/adapters?  * only the Model Explorer (for now) needs label providers to trigger updates.    Element-picker dialogs and other widgets in the Properties view, for example,    don't have this need, so this design ensures that the large number of other    UMLLabelProviders that are created (there are lots) don't all listen for model    changes    I am willing to explore this alternative further if reviewers agree that the new IDependentLabelProvider interface isn't a great thing.Another point that I'm not sure about is the changes in the SemanticUMLContentProvider to prevent addition/removal of stereotype applications from a resource triggering complete refresh of the Model Explorer.  I don't know in what contexts this might break some UI that depends on that refresh trigger.  The consequence of reverting the SemanticUMLContentProvider changes is only that applying/unapplying stereotypes results in a long lag in the UI on large models as the Model Explorer refreshes itself.  This may be acceptable; comment is welcome."
81996,1,"Patch Set 2:I've updated the change set to remove the IDependentLabelProvider that I didn't like.  Instead, now the UMLLabelProvider is a service that acts as a subordinate of the LabelProviderService.  When instantiated as a service, it uses a new UMLLabelDependenciesService to efficiently listen for changes in the resource set and compute objects that need to have labels updated.  When not installed as a service (which is also commonly the case), then none of this machinery is engaged.I like this better because it doesn't introduce new API and lets the label provider take care of its own concerns, which is as it should be."
81997,0,"AbandonedTaking another approach, improving the intrinsic performance of EMF Facet (which apparently lost some optimizations in the 0.1->0.2 refactoring), shows promise.  Initial results suggest that even just caching the facet-operation overrides makes Model Explorer updates an order of magnitude quicker than before."
81999,1,Abandoned
82001,1,Abandoned
82003,1,Abandoned
82005,1,Abandoned
82007,1,Abandoned
82009,1,Abandoned
82011,1,Abandoned
82013,1,Abandoned
82015,1,Abandoned
82017,1,Abandoned
82019,1,Abandoned
82021,1,Abandoned
82023,1,Abandoned
82025,1,Abandoned
82033,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/6277/ : UNSTABLE
82035,1,"Patch Set 1:@Robin Rosenberg: Could you explain your ""not needed""? I agree that CommonUtils is a bad name.And IMO code cleanup is needed all over EGit, we shouldn't just abandon a contributor's change like that."
82044,1,Abandonedwrong branch
82046,1,Abandonednot realized
82048,1,Abandonednot realized
82080,0,"Patch Set 1: Do not submit(6 inline comments)Looks pretty good, added a few comments.  However, do not commit the .class files."
82097,0,"Patch Set 1: Verified-1 Code-Review-1irst of all: I think benchmarks are very useful. Said did already some stuff on this topic with respect to our content provider.  The JUnitBenchmark library looks very interesting at a first glance. However, in my opinion we should delay this patch to RMF 0.9.0, because:(1) the patch using JUnitBenchmarks requires at least junit 4.9. However, the current RMF target platform includes version 4.8.2 (which is part of the Eclipse JDT v.3.7.2). Plese note: Our current build is still based on eclipse 3.7 (indigo). Nevertheless, the orbit update site includes junit 4.10, which could be used as well.@ Fran├ºois: Do you use the RMF indigo target development definition?(2) Our plan is to build RMF 0.9.0 on top of Kepler. The Kepler update site includes a newer version of JDT as well as a newer version of Junit.(3) I guess, that the JUnitBenchmark library is not part of the Eclipse Orbit Project. As a consequence, we need a CQ for the library, especially for the customized version for working with OSGI. I think this should be no problem, since the library is only for testing/benchmark purposes.I will create a new bug entry covering this discussion."
82104,1,AbandonedWe've decided to keep home/projects/documentation.
82108,1,Abandoned
82123,0,Patch Set 1:Build SUCCESSFUL. Now starting integration tests...
82125,0,Patch Set 2:Build SUCCESSFUL. Now starting integration tests...
82128,1,"AbandonedAs discussed in bugzilla bug 435050, it is acceptable use more recent version of maven, which is not affected by the problem this change is meant to solve (i.e. SSL exceptions deploying snapshots to oss.sonatype.org).Although forcing specific version of http wagon works, it will likely cause problems in the long run and I believe it is better to let maven core pick http transport implementation.I also think it is a good idea to decouple version of maven used to build tycho from versions (plural!) of maven used during integration tests."
82130,1,Abandoned
82138,0,"Patch Set 1:No problem, this was a proof of concept and your comment is exactly IMO what reviews are for. :)"
82139,1,"AbandonedWe're not going to use JMeter, for now at least."
82141,1,"Patch Set 1: Verified; Looks good to me, approved; IP review completedThis will increase the wasted time the binary parser runs but catches binaries we are currently skipping over. I'll also double check to make sure we're skipping files not in output folders."
82144,1,Abandonedabandoning
82146,1,Abandonedwrong branch
82148,1,AbandonedStale.
82149,1,Patch Set 1: Verified+1 Code-Review+2Sorry for the previous erroneous comments. I pushed the wrong button accidentally.
82150,1,Abandoned
82152,1,Abandonedduplicate review
82154,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5942/ : UNSTABLE
82156,1,"Abandonedsorry, pushed to master from my local clone and somehow managed to confuse gerrit."
82162,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/598/ : UNSTABLE
82164,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/599/ : UNSTABLE
82165,1,Patch Set 2:The build error is not related to this change. If I run the tests directly on master i have the same errors.
82166,1,Patch Set 2:I am not sure that returning silently is better than throwing an exception (which is the current behaviour). An error has occurred if we get to those return statements.
82168,1,"Patch Set 2:The exception being logged indicates a problem that should be fixed, so suppressing the exception is not the right thing to do. The problem is with the way the task is being opened from the dashboard and then refreshed afterwards. Instead, we should call openTask which refreshes the task before opening it. I'll push another patch set, please give it a try."
82171,1,"Patch Set 1: Code-Review-2We need to keep the redirect, for this case:* Click Sign Out, then sign in again using a linked Google account. With this patch applied, you end up on a blank page since there is no ?redirect param.Also the change to LoginWindow.js for the case when redirect===null assumes that Orion is running at the server root, which is not always true. eg. if Orion happens to be running at http://myserver/what/lol then it would generate a link to ""http://myserver"", which is incorrect.I'm not sure what the correct fix is here. I think UserMenu.js needs to keep calling getAuthForm(url) to provide the redirect, but maybe `url` should always be the location of index.html, which would prevent any  user-specific information in the page URL from being preserved across logins. But (as usual, sigh) UserMenu.js isn't supposed to know about specific page URLs since they're contributed dynamically through plugins.So I guess we have to designate a special orion.page.link extension as giving the URL of the index page, add the extension to pageLinksPlugin.js, then lookup that extension from UserMenu.js to obtain the index page URL.Anyone have a better idea? :-|"
82174,1,Abandonedduplicate
82176,1,Abandoned
82178,0,Patch Set 1: Code-Review-2Could you fix your git settings. It appears you don't have a user name set. Thanks!
82185,1,Abandonedalready pushed
82194,1,Abandoned
82196,1,Abandoned
82205,0,Patch Set 2:Just my 2 cents: what else do you have besides lock snippets? :-)
82206,1,"Patch Set 2:From the JRE-related snippets, I have some snippets about java.lang.Process, one-two on java.net.*, a very simple one for java.util.StringTokenizer, two on java.security.*, one ""weird"" on logging and one (probably) controvertial on regex.Then, there are more library specific snippets, that probably don't interest snipmatch (yet), such as Hibernate ORM, eclipse plugins, JGit, neo4j, Android, RabbitMQ.I sense some disapprovement about this snippet :) would you like to abandon it?"
82207,1,"Patch Set 2:Don't get me wrong :-) I think in the meanwhile we have quite a fair amount of lock related snippets already and I'd like to keep the snippets balanced, i.e., cover more apis equally well.Having said this, I'd be curious to see more Eclipse snippets since this is a perfect domain for snipmatch as well. Can you publish some of those?"
82209,1,Abandonednot needed
82211,1,"Patch Set 1: Code-Review-1Hi Miltos. Sorry for the late reply; have been offline a couple of days.As for the snippet, I think there's one issue with it: it only exemplifies how to use the ""read"" part of a ReadWriteLock. At the very least, the snippet should include a comment like  // *Read* access here"
82222,1,Abandoned
82224,1,Abandonedfixed in another commit
82226,1,Abandoneddemo purpose.
82234,1,"AbandonedCreated by mistake, duplicate ofhttps://git.eclipse.org/r/#/c/28344/"
82244,1,Abandoned
82247,1,Abandonedwill be merged on stable-3.4 and merged back to master
82249,1,Abandoned
82251,1,Abandoned
82255,1,"AbandonedSorry,we do this in https://git.eclipse.org/r/#/c/27759/"
82275,1,Patch Set 2:Thanks I will abandon this change now that it's committed!
82278,1,Abandonedaccidentally pushed to format-2 instead of format-3
82292,1,Abandoned
82301,1,Patch Set 5: Code-Review-1I think this is a bad idea.  What's the root cause driving this change?  What this will cause is inconsistent states between clients which will become a debugging nightmare where some clients appear correct and others do not.
82302,1,AbandonedUn-necessary at this time.
82304,1,Abandonedaccident
82306,1,Abandonedaccident
82312,1,Abandoned
82314,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/xtext/job/emf.gerrit/75/ : UNSTABLE
82315,1,AbandonedEMF editor will use relative URIs again
82317,0,Patch Set 1:This would be a breaking change - people use ContextInjectorFactory.make() without fetching it as a service so there's no guarantee that it is bound - BTW DS not guarantee that the service with the highest ranking is bound!
82318,0,"AbandonedOk :-) That would have been to simple, eh ..."
82320,0,"Patch Set 1:I have a similar draft, but instead keeping the preserve map in the UI session I put it in the ServiceStore as preserved values have a request scope. Thus, we don't need to clear it at all - it is gone automatically after the request.Display#clearPreserved, WidgetAdapterImpl#clearPreserved and Fixture#clearPreserved could be removed completely."
82321,0,"Patch Set 1:(In reply to comment #4)That's also nice! I didn't do it since I wanted to avoid re-creating the HashMap in every request. When we do this, we should create the HashMap with a suitable initial capacity to avoid too many grow operations which are costly. But how could we determine the required capacity? Re-using the HashMap avoids this cost. It's a tradeoff between performance and memory and we'll have to measure which version is better. However, I see the benefits of your solution..."
82322,1,"Patch Set 1: Code-Review-1Performance analysis showed that although the memory savings are huge, the overall performance impact is not acceptable. Looking up the PreservedValuesStore from the UISession, creating the PreserveKeys and also the preserve and getPreserved methods require more time, adding up to an increase of ~ 20% of overall request processing. Since performance is more critical than memory consumption in RAP, I'll abandon this change."
82323,1,Abandoned
82324,1,Abandonedmoved to dev https://git.eclipse.org/r/#/c/28649/
82334,1,Abandonedmove to dev https://git.eclipse.org/r/#/c/28646/
82361,1,Abandoned
82364,1,"Patch Set 1: Code-Review-1The shared ""Apply Patch..."" wizard can handle the Git format. E.g. try this:1. Change some lines in pom.xml of org.eclipse.egit.core. 2. Create Patch in ""None"" format (this should really be called ""Git"" format, but that's another problem)3. Run Team -> Disconnect on org.eclipse.egit.core (the Git provider is no longer active)4. Run Team -> Apply Patch...5. It should find the file and apply the patch cleanlyDo you have an example where this does not work? Or does the CVS plugin use a different wizard than the default one?The reason I'm skeptical of this change is that changing it to ""Workspace"" breaks applying the patch in command-line Git and possibly other tools."
82376,1,Abandoneddecided on another strategy.  current implementation and API should be more specific about middleman context though.
82377,1,Abandoned
82380,1,AbandonedThis fix has been included in luna by a direct pull request.  Abandoning change in gerrit to clean out the record.  Thanks for the contribution.
82392,1,AbandonedExperiments - Invalid commit
82394,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5711/ : UNSTABLE
82397,1,Patch Set 2:Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/5714/ : UNSTABLE
82401,1,Patch Set 1:Does this mean that when tests timeout they're almost finished? Long running tests are bad and maybe we should have a closer look at them to see we they take so long to execute. I'm up for doing this... if there's an Yourkit license waiting for me ;)
82402,1,"Patch Set 1:I've been looking into which tests might be causing problems, and it looks to me like it's the Gerrit tests that are hanging. The following logs show testPerformQueryAnonymous(org.eclipse.mylyn.gerrit.tests.core.GerritConnectorTest) failing and then every other Gerrit test after that one fails as well.http://ci.mylyn.org/view/All/job/mylyn-reviews-snapshot/742/consolehttp://ci.mylyn.org/view/All/job/mylyn-all-snapshot/107/consoleFullI tried to run these tests locally and they were hanging too, with one of them even throwing a heap space error on the server. We reprovisioned the Gerrit servers and ran the tests locally and the tests ran in a few minutes. Waiting on results of the mylyn-review-snapshot. Instead of increasing the timeout, which only hides the problem, we might want to reprovision the Gerrit servers regularly if this works."
82404,1,"Patch Set 1:I have scheduled the provisioning job to run every Sunday morning since the test servers do need regular cleaning regardless. Steffen pointed out that we could also change the tests to use a better scoped query than ""status:open"" but for now my goal is just to have the builds passing and if regular reprovisioning is enough then I am happy with that.Leo, aren't there other tests besides Gerrit that regularly time out?"
82405,1,"Patch Set 1:The AllTests suite has been timing out lately, but I think it's due to the Gerrit tests. The AllTestsSuite typically takes about 2.5hours in the best case, but it's been timing out at 3. At some point that timeout needs to increase if we keep adding tests!I can't reach hudson.eclipse.org at the moment, but from memory the rest of our builds are failing due to the Sonar bug, so I don't think we have any other timeout related failures."
82406,1,"Patch Set 1:In that case, let's see if reprovisioning solves the timeout issue and, if so, abandon this for now. But it's good that we now know how to increase it if we have to."
82409,1,Abandoned
82419,1,Abandonedreplaced by https://git.eclipse.org/r/#/c/24371/ on master branch
82421,1,Abandonedredundant patch
82428,1,AbandonedSee Bug why this does not work
82429,1,Abandoned
82435,1,Abandoned
82439,1,Abandoned
82443,1,Patch Set 4: Code-Review-1It was a mistake to use them in the interface and they aren't even needed there. Since they are non-public we can change the API without actually breaking it. The fix is to use the public base classes in the API instead.
82446,1,Abandoned
82453,1,"Patch Set 2:Since this approach isn't something you want to take, and the window for non-committers to push changes for the stable branch has passed, can you make DfsUpdate a public non-final class?"
82455,0,Patch Set 1:(1 comment)Looks good to me but I wonder if we should use the horizontal extension that Marco build instead of hardcoding tabs.Marco can you please take a look at this.
82456,0,"Patch Set 1: Verified+1I took a quick look at it. Wim, no my extension point can not be used like this, as he adds a tab the the overall edtitor, while the vertical extention point adds it to the single elements in the tree.(+) I think it is very interesting, and provides means to solve a few problems. I also like the possiblity to have a list instead of the tree.(-)It breaks with the consistent Eclipse usage one is used to. That is, e.g. the feature to mark duplicate ids should be embedded more Eclipse style s.t. it integrates into the problems view etc. I like the feature to jump to the entries in the tree and the source, again, this should be solved the eclipse way. Repair and Mark should be applicable to the tree.The argument requirement org.eclipse.e4.tools.modeleditor.utilitytab.enabled is a no go.I like the patch, I don't like that it breaks with the way one is used to use Eclipse and I think the functionality embedded should be integrated in other ways. I like the idea of a table based editor in addition to the tree based editor but all concepts presented should apply for either way of editing it.Thanks Steven!!"
82463,1,"Patch Set 2:Steven, can you please rebase onto origin/master? I get a patch conflict."
82466,0,"Patch Set 1:I've seen the pom.xml and I thought about adding it there, but decided not to, because I think it would mean that we don't get source bundle for the new fragment. I think exclusions there are fine for fragments that don't have any code only the native part, but in this case we do have Java code and it would be good to get source bundle.Or, I don't understand that section of pom.xml..."
82469,1,Abandonedreplaced by https://git.eclipse.org/r/#/c/24443/
82471,1,Abandonedreplaced by https://git.eclipse.org/r/#/c/24443/
82475,1,"Patch Set 3: Code-Review-1The restore code is not nearly specific enough, it blindly sets the TBR to 'true' for *every* element in *every* trim.I'll comment further on the defect..."
82477,1,"Patch Set 3: Code-Review+1I tried this solution and it works, because the toBeRendered flag on the MToolbar was not responsible for perspective specific toolbars. Toolbars and perspectives were never thight coupled, a visible-when condition was always in charge for this functionality."
82483,0,Patch Set 4: Code-Review+1Still like the solution :-)
82489,1,AbandonedThis review is a mistake due to a bad commit. Sorry
82491,1,AbandonedThis review is a mistake due to a bad commit. Sorry
82493,1,AbandonedThis review is a mistake due to a bad commit. Sorry
82495,1,AbandonedThis review is a mistake due to a bad commit. Sorry
82497,1,Patch Set 1: Code-Review-1Please open a bug for this and refer in your commit message to it.
82498,1,AbandonedThis review is a mistake due to a bad commit. Sorry
82499,1,"AbandonedI'll take it from here. This change does fix my customer's stack overflow. If I can't come up with a better solution, this one will have to do and I'll push it in later."
82500,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/362/ : UNSTABLE
82501,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/363/ : UNSTABLE
82502,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/cdt/job/cdt-verify/364/ : UNSTABLE
82504,1,"Patch Set 1:Hmm, this bug is the next thing on my list for our beta release. We'll need to find a solution to this one way or another. Stack overflows aren't a great user experience."
82509,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82511,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82513,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82515,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82517,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82519,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82521,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82523,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82525,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82527,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82529,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82531,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82533,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master. I will redo the change later....it will be faster!
82535,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master.  I will redo the change later....it will be faster!
82537,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master.  I will redo the change later....it will be faster!
82539,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master.  I will redo the change later....it will be faster!
82541,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master.  I will redo the change later....it will be faster!
82544,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master.  I will redo the change later....it will be faster!
82546,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master.  I will redo the change later....it will be faster!
82549,1,Abandoned
82552,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master.  I will redo the change later....it will be faster!
82560,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master.  I will redo the change later....it will be faster!
82562,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master.  I will redo the change later....it will be faster!
82565,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master.  I will redo the change later....it will be faster!
82567,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master.  I will redo the change later....it will be faster!
82569,0,AbandonedInstead of getting fetching it from gerrit and rebase it on master.  I will redo the change later....it will be faster!
82573,1,Abandonedreplaced by https://git.eclipse.org/r/#/c/24335/(rebased on branch 3.10.x)
82576,1,Abandonedduplicate
82581,1,AbandonedIt's old.
82583,1,Abandonedwrong branch
82585,1,Abandoned
82587,1,Patch Set 1:Can you always add a link to the Gerrit review in the bug report if you create one? Easier for people to find it
82590,0,"Patch Set 1: Code-Review-1IIRC we were thinking of moving the location of the bookmarks file to the persistent properties. Or was it the supplementary files? Patrick, I think we had a good plan in mind last time we discussed this, do you remember?"
82592,1,"Patch Set 1: Code-Review-1(1 comment)I would prefer if we removed completely the concept of bookmarks file from the interfaces and instead use the editor's input. The file in the FileEditorInput is always the file used for storing bookmarks.How about a solution where the TmfTraceManager has a static method to return the editor associated with an opened trace? Then you can easily get the file from the editor input. Or the TmfTraceManager could return the file directly.Note that if you are using the TimeChartView, you can already get the bookmarks file from the TimeChartDecorationProvider associated with the trace. It is stored when the trace is opened from the signal's getBookmarksFile(), or when the view is opened from the editor's getBookmarksFile(). But both of these methods could be removed if we use the editor input or the new suggested method from TmfTraceManager instead."
82593,0,"Patch Set 1:Hi Patrick,Ok for me, thanks."
82594,1,Abandoned
82600,1,AbandonedSee Bug report
82602,1,AbandonedSee bug for the discussion
82604,1,Abandonedneed to add change-id
82606,1,Abandonedneed to add change-id
82608,1,Abandonedneed to add change-id
82610,0,"Patch Set 1: Code-Review-1(8 comments)Mostly good - just get the preferences and set them so the files get ""normalized"", this will make them easier to review in the future.Add Distribution and Author for files that don't have them.Fixup the .orig file."
82611,1,Abandonedneed to add change-id
82613,1,Abandonedneed to add change-id
82615,1,Abandonedneed to add change-id
82622,1,Abandoned
82625,1,Patch Set 1:C Git thinks _9 is a conflict:git merge theMergeerror: Entry 'DF/DF' not uptodate. Cannot merge.fatal: read-tree failed
82628,1,Abandoned
82633,0,Patch Set 1:I'll upload a new ref tomorrow!
82634,1,AbandonedI've created a new review because I there've been too many changes in the assembler
82645,1,"Patch Set 1: Code-Review-1Please avoid reformatting. Bye the way this is a very common error, which I also did in the past. But reformatting makes it really hard to see who changed what in the Git history."
82657,1,"AbandonedYeah, the new patch includes this one, plus actually fixes what the listener was for."
82661,1,Abandoned
82669,0,"Patch Set 1: Code-Review-1(7 comments)Looks very good! Wow @ those tests, that's very thorough!Some comments/questions. I'm wondering if the queue is actually being used, not sure just by looking at the code, I'd have to test it more."
82673,0,"AbandonedThis seems to work fine in the recent version of the e4 tools, see Bug 396693.I abandon this change, if the error can still be reproduced, we can restore it.Sorry Leonid for the long delay in processing on my side."
82675,0,"Patch Set 1:operf issue with dependent images is working with above changes. opcontrol continues to work fine. Please fix the tests and add that this fix is for #BZ 425439Please improve the commit message:oprofile: percentages for operf are not being shown correctly.Depending on the program, the total sum of the binary and its dependent images were more than a hundred percent. Fixed the calculation of them."
82680,0,"Patch Set 2: Verified+1 IP-Clean+1Looks good, except that it also filters directories named ""core"". This might be fairly common. (PTP has such a directory name). I'm not sure of the best way to change it, though."
82683,1,Patch Set 2:I just committed changed source to both Kepler and Luna. I think this covers the problems. See my last comments in the bug for details.
82684,1,"Patch Set 2:Rather than committing directly to git, it would be better to update the patch set with the new source, then push it to git from there. I don't see any commits yet, so if you haven't pushed yet, I'd suggest doing it this way."
82685,1,"**/core"""", """"!**/core/"""", """"**/core.[0-9]*"""" })) {  //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$That change is currently in my workspace for both Kepler and Luna. Once I tested the change, I committed the change then pushed the change to Gerrit (Team-<Remote->Push to Gerrit), which gave me the new URL I pasted into the bug. I thought that made it into Gerrit but I am a little confused since when I look at the diffs for either patch set 1 or patch set 2 they look the same to me. If I look at the commit message for patch set 1 and patch set 2 they are different.If I did something wrong, let me know what that is and how to fix it."""
82687,1,"Patch Set 2:You need to make sure the commit contains the same Change-Id from the original commit, not a new Change-Id (all 0's), otherwise you get a new Gerrit change. If you click on your name, you'll see four changes with the same subject. You should abandon the latest two, revert your local repo to the previous commit, then commit again with the correct Change-Id."
82690,1,Patch Set 1:I have the latest org.eclipse.remote.* and org.eclipse.ptp.* source in my workspace and ran a pull just before I did a commit. The only thing I can think of is that I have been using a working Kepler Eclipse install as a development environment. I've had so much trouble over the past week getting to a state where I could push code to git that I hadn't updates to a Luna build. I'm doing that now to see if that helps.
82691,1,"Patch Set 1:No, I think it was my fault. It looks like there was something wrong with the build verify configuration. I'll fix and re-run it."
82701,1,Abandoned
82703,1,Abandonedmoving to 0.16.0
82715,1,Abandoned
82721,1,Abandoned
82728,1,Abandoned
82729,1,AbandonedI forgot to amend the commit :-(
82733,0,"Patch Set 5: Code-Review-1Would it be possible to split this in smaller patches? Smaller patches means it's easier to review, easier to bisect, revert if needed, etc., but more importantly, it really shows the logical progression and tells the reviewers where they should be looking at first.I think this could be easily split in:* Add the ""xychart"" package and the base TmfXYChartViewer, as well as the dependencies in the manifest* Add the TmfBarChartViewer and its related classes (they could go in a xychart.barchart package, but it doesn't really matter.)* Add the tracing.examples plugin, with its settings (but no contents)* Add the NewHistogramView(I myself still have many huge patches I will try to break down in the next couple days, like the null-annotations one.)I like the notion of an ""examples"" plugin, it's very useful for prototyping, but can serve as kind of staging for ""real"" views. Eventually the NewHistogramViewer can migrate to TMF to become the widget used in the Histogram View."
82735,0,"Patch Set 6: Code-Review-1Oups, I hadn't seen Alex's comment on this patch and just added yet one more little patch inside this one ;-)Bernd, Alex, will you take care of splitting it? Or I can do it tomorrow if that can help. That will make it easier, I haven't really looked at the histogram yet and that all need to be looked at before being merged.By the way, if you can take a quick look at BarChartViewer vs XYLinePlotViewer. They are a bit different in method names and task separation, but I think they should be more alike. I'd like some feedback before unilaterally selecting one option above the other."
82738,1,"Patch Set 6:Hi Genevievethanks for updating this patch. I'll take a look. I'm going to split the patch in smaller patch sets as Alex suggested. BTW, I was working on updating the the selection handling with the left mouse and the drag zoom with the right mouse. This will be part of the set of patches. Bernd"
82740,0,Patch Set 6:oh yeah! But I don't see my line chart in those patchsets. You give me the honour of pushing this extra patch?
82744,1,Abandoned
82746,1,Abandoned
82747,1,Abandonedforgot changeID
82750,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/8/ : UNSTABLE
82751,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-tasks-gerrit/791/ : UNSTABLE
82752,1,AbandonedI'm abandonning this because it hasn't been updated in a while. Please reopen if it's still relevant.
82755,1,Patch Set 1:Should we abandon this review because bug# 310545 is resolved.
82758,1,"Patch Set 2:The basics of this change look like they should work for me.  Steffen, Tomasz, is there anything that you are concerned about here?"
82759,1,AbandonedI'm abandonning this because it hasn't been updated in a long time. We can always reopen this if it's still relevant.
82763,1,"Patch Set 3: I would prefer that you didn't submit this> Tomasz, is there anything that you are concerned about here?At first I wasn't able to create a passing test, but I think I have figured that out. What I would like to hear from you guys is how to make the patch look more like a proper fix and not an ugly hack (see my inline comments for Patch Set 1).> https://hudson.eclipse.org/sandbox/job/mylyn-tasks-gerrit/268/ : FAILURENot sure what happened there, no tests failures but the build process was killed for some reason."
82767,1,AbandonedI'm abandonning this because it hasn't been updated in a long time. We can always reopen this if it's still relevant.
82769,1,AbandonedI'm abandonning this because it hasn't been updated in a long time. We can always reopen this if it's still relevant.
82771,1,AbandonedI'm abandonning this because it hasn't been updated in a year and a half and it relates to the old Bugzilla connector. We can always reopen this if it's still relevant.
82778,0,AbandonedAlready fixed in master. Thanks for patch though!
82789,1,"Patch Set 2: Code-Review-1@Dani: this second patch is equivalent in term of functionalities to the 1st one and avoids a refactoring. It should integrate better with ongoing work.However, I get a test failure with this change:Failed tests:   testMirrorUtils(org.eclipse.jdt.apt.tests.MirrorUtilTests): To be honest, I don't know anything about APT, so it would be nice if you could give me a hint on possible reasons of the failure.You can try it locally also with:$  mvn clean verify -Dcbi-plugins.version=1.0.4 -Pbuild-individual-bundles -Dmaven.test.skip=false -DskipTests=false"
82797,0,"Patch Set 3:Yes, I think it would be easier to change the test so they actually don't depend on having a nested jar. However, I fine with dealing with Maven, Tycho, surefire and so on, but I don't know enough of JDT and APT to be able to adapt the tests."
82799,0,"Patch Set 1: Verified+1 Code-Review-1 IP-Clean-1(1 comment)This looks like a good test and a good fix.Some remarks before it can be merged, additionally to the note inlined in the code:* Can you merge the 2 commits (test and patch together)? Feel free to ask for help if necessary.* Some IP stuff:** Please update copyright header so that the year range ends by 2014** Please add your name and Copyright owner (if not you, generally your employer) to the list of authors in the Copyright headers of the modified files, with a short summary"
82803,1,AbandonedTargetted for the wrong branch
82804,1,AbandonedTargetted for the wrong branch
82805,1,Abandoned
82808,1,AbandonedThis is an SWT bug (see bug 424173).
82810,1,"Patch Set 2: Code-Review-1(1 comment)That fixes the problem for me, but I'd like to request you get your Display from somewhere else."
82817,1,Abandoned
82828,1,"Patch Set 2: Code-Review-1The file name in the file is ""G816\.project"". This should not be translated to being .project inside G816. On Linux for example, the Archive importer will generate a file named ""G816\.project"" and on Windows it should actually report an invalid file name."
82837,0,"Patch Set 4: Verified; Looks good to me, approvedPlease review contribution guidelines and resubmit with proper Contributor assertion (http://wiki.eclipse.org/Development_Resources/Handling_Git_Contributions#Gerrit)."
82850,0,"Patch Set 1:Hi,We have a launcher (proprietary code) that spawns a chain of valueadd (Yes, we do have more than 1 ValueAdd in our chain). The -r option allows to chain the value add.At the end of the chain, there might be the tcf-log : We have the -n in order NOT to redirect immediately to the target.This allows a client to do:connect <IP of the top most value add>redirect <Target IP>Thanks !"
82851,1,"AbandonedReplaced by https://bugs.eclipse.org/bugs/show_bug.cgi?id=424841 Attached a patch.(Sorry, I don't know how to update a gerrit)."
82852,1,Abandoned
82856,1,"Patch Set 1: Verified+1 Code-Review-1 IP-Clean+1If I execute mvn clean install in the renderer plug-in I get the following error:[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent![INFO] Compiling 1 source file to /home/vogella/git/eclipse.platform.ui/bundles/org.eclipse.ui.images.renderer/target/classes[INFO] -------------------------------------------------------------[ERROR] COMPILATION ERROR : [INFO] -------------------------------------------------------------[ERROR] /home/vogella/git/eclipse.platform.ui/bundles/org.eclipse.ui.images.renderer/src/main/java/org/eclipse/ui/images/renderer/RenderMojo.java:[446,46] error: cannot find symbol[ERROR]  method createRenderer()/home/vogella/git/eclipse.platform.ui/bundles/org.eclipse.ui.images.renderer/src/main/java/org/eclipse/ui/images/renderer/RenderMojo.java:[448,53] error: cannot find symbol[ERROR]  variable renderer of type ImageRenderer/home/vogella/git/eclipse.platform.ui/bundles/org.eclipse.ui.images.renderer/src/main/java/org/eclipse/ui/images/renderer/RenderMojo.java:[477,24] error: cannot find symbol[INFO] 3 errors [INFO] -------------------------------------------------------------[INFO] ------------------------------------------------------------------------[INFO] BUILD FAILURE[INFO] ------------------------------------------------------------------------[INFO] Total time: 1:03.577s[INFO] Finished at: Sun Dec 29 13:36:49 CET 2013[INFO] Final Memory: 18M/231M[INFO] ------------------------------------------------------------------------[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.3.2:compile (default-compile) on project org.eclipse.ui.images.renderer: Compilation failure: Compilation failure:[ERROR] /home/vogella/git/eclipse.platform.ui/bundles/org.eclipse.ui.images.renderer/src/main/java/org/eclipse/ui/images/renderer/RenderMojo.java:[446,46] error: cannot find symbol[ERROR] method createRenderer()[ERROR] /home/vogella/git/eclipse.platform.ui/bundles/org.eclipse.ui.images.renderer/src/main/java/org/eclipse/ui/images/renderer/RenderMojo.java:[448,53] error: cannot find symbol[ERROR] variable renderer of type ImageRenderer[ERROR] /home/vogella/git/eclipse.platform.ui/bundles/org.eclipse.ui.images.renderer/src/main/java/org/eclipse/ui/images/renderer/RenderMojo.java:[477,24] error: cannot find symbol"
82857,1,"AbandonedDoesn't compile due to batik dependency mismatch, see Change-Id: Ie41d4217006d6290bb84fe9a383b95f3fca5f71e for a fixed commit"
82871,1,"Patch Set 2:It seems wrong to do this in tasks.ui, but perhaps we could do it in context.tasks.ui?"
82872,1,Abandonedwe now are back to o.e.m.context with review https://git.eclipse.org/r/#/c/20141/
82874,1,Abandoned
82878,1,"Abandoned(In reply to comment #5)> Patch Set 1:> > That sounds like it could work, but wouldn't we need to add/remove it whenever a> task is activated / deactivated?We can add a ITaskActivationListener in TasksUIPlugin.start and show/hide the action set."
82885,0,"Patch Set 1: Code-Review+1 IP-Clean+1Looks fine, out of curiosity, what would happen if the decoded value is bigger dans 2^63 ?"
82887,1,"Patch Set 1: Code-Review-2Will have to be rebased to master. I tried to do it, but it conflicts with lastest master (and it will also conflict with another patch currently on Gerrit). I'll let you handle it ;)"
82888,1,Abandonedreplaced by https://git.eclipse.org/r/#/c/20070/
82895,1,Abandoned
82900,1,Abandonedoutdated
82904,1,Abandonedoutdated
82905,1,Abandonedoutdated
82907,1,"Patch Set 1: Do not submitI don't think this will work on Windows. IResource#getFullPath does not return the file system absolute path, but a ""workspace"" path (this was the cause of bug 378948).Let's fix this in the next release. (Sorry for not reviewing earlier.)"
82909,1,"java.lang.AssertionError: expected:<C:/workspaces/repo/file.txt> but was:</workspaces/repo/file.txt>So the device part of the path is lost in this roundtrip, and the result of stripWorkDir with this path will be a string like """"le.txt"""" (because too much is stripped).A pretty hacky way to deal with this here would be to detect the missing device part and handle it differently in stripWorkDir.But I can imagine that the whole thing would break horribly when there is a project which is named """"workspaces""""."""
82911,1,"file = ROOT.getFile(childLocation);getFileForLocation would return null because it's not known in the workspace. But getFile would return the resource behind the """"pom.xml"""" in the """"foo"""" project, because the path argument of getFile is a workspace-path!Later, bad things would happen because exists actually returns true for the above resource, but it would be the wrong one. Ugh.Another idea would be this: If getFileForLocation returns null, use getFile(new Path(""""._egit_internal_project_for_synchronization"""").append(childLocation)). Later, strip this known path in stripWorkDir.It's also a hack but as long as no project named like this exists, it would not have the above problem."""
82912,1,Abandonedoutdated
82916,1,"Patch Set 4: I would prefer that you didn't submit thisIt works as you described but I think this behavior is inconsistent and hard to understand:- if there are some staged modifications and some non-staged modifications in a different file and no files selected in commit dialog the staged modifications are committed- if some non-staged modification is selected in the commit dialog then staged modifications are no longer committed- also the decorators in the commit dialog don't show the difference between staged and non-staged modifications so it's hard to spot the difference (only tooltips show that)- meaning of checkboxes is different when comparing behavior for staged and non-staged changes- is it important that the selection scope decides on checkbox state for files listed in commit dialog or could we drop this ?Maybe we should change the commit dialog to also use standard git commit semantics and only commit staged changes. ""Add to index"" is already available in the context menu, we should then also add all the menu entries available in staging view. This would mean the commit dialog could probably share more of its implementation with staging view."
82917,0,"Patch Set 4:Good point Matthias, I'll work on improving commit dialog so that it will mimic native commit behavior."
82919,1,Abandonedoutdated
82923,1,Abandonedoutdated
82925,0,"Patch Set 2: Verified+1 IP-Clean+1Looks good. Once we get estraverse 1.5.0, I'm fine with submitting this."
82928,1,"AbandonedAbandonning, too many conflicts with latest changes in master. I'll post a new change"
82932,1,Abandonedalready in another commit
82934,1,Abandonedgerrit foo
82941,1,"Patch Set 4:i think there may be a problem whenever hudson runs a Process (i.e., running ""createrepo"" command in Createrepo.java)Trying to find out if that is the case and if there are other tests within linuxtools that runs a Process in a test."
82945,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/mylyn/job/gerrit-mylyn-tasks/163/ : UNSTABLE
82952,1,"AbandonedThere's a conflict in outliner.js when I tried to rebase this against master. Curtis, can you recreate the patch?"
82955,1,Patch Set 1:That sounds great. But I fear it's not possible to commit this to a maintenance branch because it add new API ;-(Can you port it to the master branch?
82960,1,Abandoned
82970,1,"Patch Set 1: Code-Review-1This filtering is a nice feature I didn't know :-)Before this change line breaks in the staging view were always LF with this change they are flipped to CR, this looks wrong"
82971,0,"Patch Set 1:Yes, me neither, nice addition :).> Before this change line breaks in the staging view were always LF with this change they are flipped to CR, this looks wrongVery strange. It looks the same for me before and after this change, I get this symbol: https://en.wikipedia.org/wiki/PilcrowThe only thing we do differently is using the other constructor of WhitespaceCharacterPainter, but looking at its code I don't see what could be causing this change.Could you maybe debug drawCharRange in WhitespaceCharacterPainter?"
82972,0,Patch Set 1:I tried on Mac maybe this plays a role ?I'll try to debug this
82974,1,Patch Set 1: Code-Review+2Looks like the lines added by the signed-off-by button use CR and the change-id button seems to flip all line endings to CR :-(Probably I used a test repository configured for Gerrit (gerrit.createchangeid = true) and hence always saw CR.I tried without this change and found this problem is unrelated to this change so I am going to include this nice change in stable-3.2 and hence will move it to stable-3.2
82975,1,Abandonedmoved to stable-3.2
82981,1,Patch Set 8:All execution tests failed except for the simple execution (createrepo directory).Failures in hudson seem to be from the command arguments?
82985,1,Abandonedproblem with hudson is due to the createrepo version in hudson (<0.9.x)
82988,1,Abandoned
82989,1,Abandoned
82990,1,Abandoned
82991,1,Abandoned
83002,1,Patch Set 1:I was having trouble adding another patch set due to Change-Id was changing. I have done it properly now. Will be closing this Change request.
83004,1,Abandonedsquashed with introduction of CBI jarsigner
83017,1,"AbandonedLet's abandon this, it can be pushed again if there's any action."
83022,0,"Patch Set 1:I don't understand yet what this is good for, could you explain ?"
83027,0,"Patch Set 1:There's also https://git.eclipse.org/r/#/c/16423/ which is for master. Which one is the good one?If the patch can go in master, only the master one should be proposed. We regularly sync from master to luna to get everything."
83029,1,Abandoned...which just happened
83037,0,"Patch Set 2: Looks good to me, but someone else must approveWill merge unless someone comes up with something better"
83038,1,"Patch Set 2: I would prefer that you didn't submit this(1 inline comment)Robin, I don't like all effects this change. I spent a lot of effort in trying to bring EGit History display close to what gitk and git-log do. In order to do so whe can't always positon commits when they want to enter the list. We postpone the decision about the correct lane until we know enough. With your proposal this postponed positioning of some commits is gone - you position them when they enter the list. This leads to a display of the history graph which differs from native git and looks more ugly to me (that's a matter of taste, I know)Please look at the commit message of https://git.eclipse.org/r/#/c/4863/ which talks exactly about the situation you want to fix here.Here you see screenshots of what gitk, ""git log"", the current jgit (what is currently in master) and your proposal do to the history display of the repo from ""PlotCommitListTest.test2SideBranches()""- Gitk: http://i.imgur.com/t1iPKUS.png- git log: http://i.imgur.com/D6grQc9.png- current jgit: http://i.imgur.com/qARGRbq.png- your proposal: http://i.imgur.com/VQdHeRj.pngI'll see whether I can find a solution for the bug. That's a severe bug where we present a topologically wrong history graph - so a solution must be found"
83041,1,Patch Set 2:@Christian: Any updates on this? Just had another duplicate bug report about this.
83043,1,"Patch Set 2:+1 for merging. Robin Rosenberg, could you retarget for 3.1?@Christian: Maybe you could post your not yet finished new version of PlotCommitList somewhere so that others can take a stab at fixing the remaining issues?"
83044,1,Abandonedmoved to stable-3.1 as change Ic8a8247c8a53be802c1be83850ed766b902ca646Christian will provide his alternative changes and tests later
83045,1,Abandonedwill not fit into 3.9 SR1. Please submit a new change for 3.9.2 as soon as the new branch has been created.
83048,1,Abandonedresubmitted for 0.14.0 branch since dev moved to 0.15.0
83051,1,Abandonedresubmitted for 0.14.0 branch since dev moved to 0.15.0
83057,1,Abandonedresubmitted for 0.14.0 branch since dev moved to 0.15.0
83062,1,Abandonedresubmitted for 0.14.0 branch since dev moved to 0.15.0
83068,1,Abandonedresubmitted for 0.14.0 branch since dev moved to 0.15.0
83075,1,Abandonedresubmitted for 0.14.0 branch since dev moved to 0.15.0
83080,1,Abandonedresubmitted for 0.14.0 branch since dev moved to 0.15.0
83081,1,AbandonedChange ID is wrongly updated. This should be a patch set for previous commit.
83084,1,Abandonedreplaced by https://git.eclipse.org/r/16775
83089,1,"Patch Set 4: Code-Review-2aaand, after thinking about it more, turns out that doing .add() and .increment() on state values would send the wrong message to developers: such methods would imply you are modifying the current object. But state values are immutable, and those method create a *new* object whose internal value is the new expected one. So code like: myValue = blabla myValue.increment(); doSomething(myValue); ...The second line would do absolutely nothing, but that wouldn't be immediately obvious. It's slightly more verbose to do unbox + create new value, but at it's much more representative of what is actually happening."
83090,1,Abandoned
83092,0,"Patch Set 2: Code-Review-1(15 comments)That looks like a lot of comments for such a small patch, but it's mostly the same things repeated in many classes.Good job on the tests, those look pretty solid. A small comment on how to format them though."
83102,1,Abandoned
83104,1,"Abandoned> should we move this to stable-3.1 ?Would be nice, yes. Moved: https://git.eclipse.org/r/16737"
83112,0,"Patch Set 1: Verified; Looks good to me, but someone else must approve; IP review completedWorks fine, also respects the Ctrl+click on Mac (not showing the menu)"
83114,1,AbandonedThis defect has already been FIXED / VERIFIED. No more action is needed.
83126,0,"Patch Set 1:Keep in mind that the way this feature is implemented doesn't allow the script to be run if the Sample Output line doesn't match the regex given. It was done this way to effectively check for numeric output.If it isn't worth making the Sample Output mandatory for this, though, I'll think of some other way to accomplish the same goal."
83127,1,Patch Set 2: Code-Review-1This change doesn't do anything after the rebase. I suggest abandoning it.
83128,1,Abandoned
83146,1,Abandonedhandled in other commit
83160,1,"Patch Set 3:(15 comments)Some comments.I'm not opposed to the idea, but please give some example in the bug of how it can be useful. Maybe code snippets, showing that it takes less code than with .unboxInt() to do the same thing."
83163,1,"Patch Set 5: Code-Review-1Not -1'ing on the code, but as per the previous comment:Please give some example in bug 408747 of how it can be useful. Maybe code snippets, showing that it takes less code than with .unboxInt() to do the same thing."
83167,1,Abandonedbad dependency
83169,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completedI verified the patch and it works as intended (AFAIK)Quotes have to be matched, escaped quotes are not allowed.  Only values can be quoted, '=', and ',' characters are not allowed inside the quoted value."
83170,1,Patch Set 1:I would expect missingParameterValue() to check expression syntax as it is defined by Query Syntax and Semantics in IContextQuery.java. But the code appears to enforce a different syntax.I don't put ÔÇÿ+ÔÇÖ since it is rather dirty way to check query syntax.I don't put ÔÇÿ-ÔÇÿ since it is non-essential functionality.
83174,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4869/ : UNSTABLE
83176,1,Patch Set 2: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4893/ : UNSTABLE
83177,1,Abandonedmoved to stable-3.1 as I2d5113af12512d9f429a57189c39b137c9b7c94f
83178,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4871/ : UNSTABLE
83179,1,Abandonedmoved to stable-3.1 as I55e79f2eb084a6fa685305182c0398cb171e3bb8
83180,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit-stable.gerrit/181/ : UNSTABLE
83181,1,Abandoned
83183,0,Patch Set 1: Verified+1 Code-Review+2 IP-Clean+1(1 comment)Thanks M-A!Minor in-line comment about javadoc.
83184,1,"AbandonedSorry, I forgot the change id so it created a new review.https://git.eclipse.org/r/#/c/16623/"
83185,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/sandbox/job/mylyn-tasks-gerrit/768/ : UNSTABLE
83186,1,Abandoned
83188,1,Patch Set 1:how can you run synchronize on a bare repository it has no working tree ? or do I misinterpret the stack trace shown in the referenced bug ?
83200,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4905/ : UNSTABLE
83202,1,Abandoned
83204,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/p2/job/p2-gerrit/6/ : UNSTABLE
83207,1,Abandonedfailed
83209,1,Patch Set 1: Code-Review-1Build Unstable https://hudson.eclipse.org/egit/job/egit.gerrit/4897/ : UNSTABLE
83210,0,"Patch Set 1:thanks, I like this proposal and squashed it into I54ebec9cbfb89b994e857cd8a20b2be6a55c65fb"
83211,1,Abandoned
83223,0,"Patch Set 3:Yes, patch set 2 would be fine too, but I think we should really have a unit test for this. My main concern was that building the SS for a sub-trace would trigger building it for the experiment, which we clearly don't want.I have a partial patch for such a test, but I haven't had time to finish it yet. I'll send it to you by email if you want to take a look at it."
83225,0,"Patch Set 1: Code-Review-1(2 comments)Some comments, but concept looks good. Let's just hope we don't get too confused about the SS of an experiment, and the SS's of the traces underneath it!"
83226,0,"AbandonedProblem handled in different way, consistent with behavior elsewhere in the project.Thanks for the patch anyway :-)"
83233,1,Abandoned
83234,1,Abandoned
83235,1,Abandoned
83236,1,Patch Set 1:Due to duplicated change-id property the wrong patch set has been created. The new patch with fixed change-id issue has been re-pushed to GerritDaniel
83237,1,Abandoned
83239,1,Abandoned
83242,1,Abandonedwas only test
83243,1,Abandonedwas only test
83244,1,AbandonedThe bug was closed as part of backlog clean-up and nobody seems to care about it. I do not use the ant tasks.
83248,1,"Patch Set 2:I think it is same fix as in https://git.eclipse.org/r/#/c/15760/ . However, Rodrigo submitted the later because I wasn't committers at time of my contribution so I would've have been merged in 2.1.I'll abandon this one."
83259,0,"Patch Set 12: Code-Review+1(2 comments)I think that looks very good to me! Nice job, good structure!After that we could delete ""StatisticsDialog"" and the other stuff from the o.e.r.sandbox.rcp plugin?"
83280,1,"AbandonedClosed, see change here: recommenders.incubator/org.eclipse.recommenders.stats"
83285,1,Abandoned
83290,1,Abandoned
83291,1,Abandoned
83296,1,Abandoned
83299,1,Abandoned
83301,1,Abandonedwrong branch
83305,1,Abandonedmerged in previous commit
83308,1,Abandonedmerged in previous commit
83312,1,Abandonedmerged in previous commit
83314,1,Abandonedwill be pushed to luna branch instead
83320,1,"Patch Set 2:Patch Set 2 contains this change rebased against the stable-3.0 branch.I'm afraid I wan't too sure how to push to refs/for/stable-3.0 - I got this error:$ git push gerrit stable-3.0:refs/for/stable-3.0Total 0 (delta 0), reused 0 (delta 0)remote: Processing changes: refs: 1, done    To ssh://rtyleyXXX@git.eclipse.org:29418/jgit/jgit.git ! [remote rejected] stable-3.0 -> refs/for/stable-3.0 (no new changes)error: failed to push some refs to 'ssh://rtyleyXXX@git.eclipse.org:29418/jgit/jgit.git'"
83323,1,"Patch Set 2:@Robin - yup, the commit was on my local copy of stable-3.0, so I think that should have worked.Here's what I get doing 'git push gerrit HEAD:refs/for/stable-3.0'...$ git log -2 --oneline9738596 Fix AnyObjectId's generic type declaration of Comparablec93a593 Fix CommitCommand not to destroy repo$ git push gerrit HEAD:refs/for/stable-3.0Total 0 (delta 0), reused 0 (delta 0)remote: Processing changes: refs: 1, done    To ssh://rtyley512@git.eclipse.org:29418/jgit/jgit.git ! [remote rejected] HEAD -> refs/for/stable-3.0 (no new changes)error: failed to push some refs to 'ssh://rtyley512@git.eclipse.org:29418/jgit/jgit.git'"
83331,1,"Patch Set 2: I would prefer that you didn't submit thisDaniel, my bad but this is really an SWT defect. The old CTabFolder did this automatically if a) there was no explicit ttip defined and the label was trunctated...I'll move the defect over to the SWT team.Thanks in any case...'"
83333,1,"Patch Set 1: Abandonedoops, wrong file. d'oh!"
83339,0,Patch Set 2: Do not submitWe should not modify the ResourceSorter at this time as it is API. A safer fix for RC1 is to add the fix to ResourceExtensionSorter.
83343,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83349,0,"Patch Set 3: Looks good to me, but someone else must approve"
83357,0,"Patch Set 1: Looks good to me, but someone else must approve"
83358,0,"Patch Set 1: Looks good to me, but someone else must approve"
83374,1,"Patch Set 2:Frank, can you provide more detail why you are suggesting not to include the timezone in the query stamp? That seems very important to me in order to guarantee the correct time is used independently of the server's time zone.The timestamp is included in the collector.getQueryTimestamp() but with the vagrant VM the timestamp is UTC and for some reason I get the wrong result when using 2012-12-12 20:42:19 +0100 instead of Wed Dec 12 20:42:19 CET 2012"
83375,1,"Patch Set 2:(In reply to comment #9)> The timestamp is included in the collector.getQueryTimestamp() but with the> vagrant VM the timestamp is UTC and for some reason I get the wrong result when> using 2012-12-12 20:42:19 +0100 instead of Wed Dec 12 20:42:19 CET 2012Okay, we need to understand why results are unexpected before we can remove the time zone (which I believe isn't the right thing to do). Can you investigate, e.g. by running queries through the web etc.?"
83376,1,"Patch Set 2:>Patch Set 2:>(In reply to comment #9)>> The timestamp is included in the collector.getQueryTimestamp() but with the>> vagrant VM the timestamp is UTC and for some reason I get the wrong result when>> using 2012-12-12 20:42:19 +0100 instead of Wed Dec 12 20:42:19 CET 2012>Okay, we need to understand why results are unexpected before we can >remove the time zone (which I believe isn't the right thing to do). Can you >investigate, e.g. by running queries through the web etc.?It looks like Bugzilla has changed the implementation and ignore the timezone information starting with 4.0.So when I can change the vagrant VM timezone from UTC to maybe PST I can verify if the timestamp must be in local time of the bugzilla instance or in UTC.Steffen do you know how to change the timezone of the VM?"
83377,0,Patch Set 2:It might be sufficient to change /etc/timezone to modify the timezone. Otherwise calling dpkg-reconfigure tzdata should work. Great that you are looking into it! If we can't specify a timezone for Bugzilla 4.0 we should file a bug and we certainly need to fix the code then.
83391,1,"Patch Set 5:It appears to me that Ubuntu has a 4 hour offset for MSK while perl (and Java) use a three hours offset:$ dateMon Dec 17 11:01:12 MSK 2012$ date -uMon Dec 17 07:01:30 UTC 2012$ date | perl -e 'use Date::Format; use Date::Parse; print time2str(""%Y-%m-%d %H:%M:%S"", str2time(<STDIN>));'2012-12-17 12:01:39Frank, it's worth filing a bug against Bugzilla to request that they always use the numeric notation for time zones which is not ambiguous but this looks like a specific problem to the MSK time zone. Since Java also interprets MSK as +0300 I don't see how we can address this problem."
83392,1,"Patch Set 5:Steffen,thats why I use the old style for versions < 4.2.I think we do not need to fill a bug against bugzilla because we grap the local time from the html result. We move forward to use the webservice function."
83393,1,Patch Set 5:(In reply to comment #30)> thats why I use the old style for versions < 4.2.I could be missing something but I don't see how that would fix the time zone offset discrepancy. Since it complicates the code I'm still not in favor of merging the change.> I think we do not need to fill a bug against bugzilla because we grap the local> time from the html result. We move forward to use the webservice function.I'm fairly certain that we'll be using the RDF output for a long time coming. A lot of servers don't have XML-RPC enabled and that may not change for public servers. I will make that request.
83394,1,"Patch Set 5:...I'm fairly certain that we'll be using the RDF output for a long time coming. A lot of servers don't have XML-RPC enabled and that may not change for public servers. I will make that request.Steffen,sorry I did not see that we add an ctype=rdf to the query.Please tell me the bug# so that I can create a patch for bugzilla.BTW. How do you generate reply for an review comment?"
83396,1,Patch Set 5: AbandonedBug# 310545 is closed.So we no longer need this review!
83398,0,Patch Set 1:Thanks Steffen.  See the bug for details.  I'd like to move to org.jsoup 1.7.2 instead of 1.6.1
83401,1,Patch Set 1: AbandonedUsed wrong changed id
83402,1,Patch Set 1: AbandonedUsed the wrong change id
83406,0,"Patch Set 5: I would prefer that you didn't submit thisHmm, the @since change are also part of another commit no? Then they should not be in here?Patch 4 was pretty good, but it's gonna need a rebase on latest master."
83408,1,"Patch Set 7: I would prefer that you didn't submit thisVery nice change, ""CtfKernel"" has always been a bad name... Could you plz:- rebase on latest master- not add ""(non-Javadoc)"" comments- split this in two commits (the rename in one, and the getEnvironnementSetup addition in another). Renames are often very intrusive in git, and it's hard to review other stuff at the same time.- Also rename CtfKernelStateInput -> LttngKernelStateInput in the rename commit"
83413,0,"Patch Set 1: I would prefer that you didn't submit this(4 inline comments)That is a welcome rename! ""CtfKernel"" never really made sense."
83427,0,"Patch Set 1:Hi Bill,Whenever you have time - this is a small fix (2 lines of code + comments).Thanks,Marc"
83428,1,Patch Set 1: AbandonedI found an issue with this patch; sorry.  I will work on this some more and submit a new patch.
83443,1,Patch Set 1: AbandonedThis change depends on another change that was abandoned (and cannot be rebased). So I am abandoning this one as well
83448,1,"Patch Set 2:Carsten, are you still waiting on a review of this one from me? :O"
83449,1,"Patch Set 2:Oh, not really, no. I had planned to fix the color issues in June, but hadn't gotten around to it then... The current state of it is that the reveal logic works for nested elements but looks ugly due to the color issues. So in light of the discussion on the bug we should decide if we just abandon this for now until the color problem is fixed..."
83450,1,Patch Set 2:Me again. :) Do you want to abandon this one at least for now?
83451,1,"Patch Set 2:Yes, let's abandon this for now. I never managed to get it to work reliably, esp. with edges :("
83453,1,Patch Set 1: Verified; IP review completed(2 inline comments)See enclosed notes and related bug discussion.
83455,1,Patch Set 1:Would it be to hard to add this as an optional parameter so we can use it in jgit/egit and have a default config for other users?
83456,1,"Patch Set 1: Do not submitAn NPE is a bug and stays a bug, fixing this is more important than not changing the API once more in a major release, we still have 4 weeks to go until Kepler is due and we release every 3 months. If this is a problem we should consider to leave the release train and merge fixes instead of sticking to known bugs."
83457,1,Patch Set 1:egit compile error is fixed with 94188f68395fa4bdd7055e90d85377dc832e4c5e so I propose we abandon this revert
83464,0,"Patch Set 5: Looks good to me, approvedThanks Sam! Feel free to submit."
83465,1,"Patch Set 5: AbandonedThis review somehow broke when I tried to rebase patch set 4 again in order to retrigger the build, so I've started a new one:12599: 360055: prompt users to disable ""Show subtasks not Matching Query"" [I706339a6]https://git.eclipse.org/r/#/c/12599/"
83471,1,Patch Set 3: AbandonedToo much trouble for users
83479,0,Patch Set 2: Abandonedwe have a new review https://git.eclipse.org/r/12547 for this!
83497,1,Patch Set 7: AbandonedI'll abandon this for now since it's always tricky to remove a feature once released. Let's add the bundles to the existing TBR feature and we can always add another one if needed later.
83499,0,"Patch Set 4: Looks good to me, approved(1 inline comment)You may want to copy a .settings/ folder from one of the other features as well."
83513,0,"Patch Set 1: (1 inline comment)The documentation looks good to me, just one inline comment. Also, make sure to remove trailing whitespaces in the javadoc"
83515,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83519,0,"Patch Set 2: Looks good to me, approved; IP review completed"
83526,1,"Patch Set 1:Hmm...I see your point. But see for example RepositoryStatus#createNotFoundError. There it seems like we could be in a situation where there no repository can be discovered. Also note that RepositoryStatus doesn't actually expose the TaskRepository. Though I will say that it would seem weird to not have at least a repos URL. Anyway, please feel free to abandon this if above isn't persuasive. :)"
83536,0,"Patch Set 1: (1 inline comment)The documentation looks good to me, just one inline comment. Also, make sure to remove trailing whitespaces."
83543,0,"Patch Set 2: Looks good to me, approvedAccidentally pushed e3fb20fbd8862441eb5a11e059a2ef98e7f8d7bc to master"
83550,1,"Patch Set 2: Do not submitCheck your warning settings. We are using project-specific compiler settings, so everybody should see the same thing.Some of these changes are quite harmless (like ""undocumented empty blocks""), but others can be potentially dangerous and change the behavior (like ""method can be potentially static"").Making stuff non-private because of inner classes is not the right way to fix it. Needed variables should be passed as constructor parameters, or by using public getters."
83564,1,Patch Set 1: Abandonedwill raise a bug on community as it does seems to be seen by webmaster ;)
83573,0,Patch Set 1:Thanks a lot for the change. I went through the same exercise on https://git.eclipse.org/r/#/c/12113/ . Great to see that we arrived at the same change.
83575,0,Patch Set 1:Thanks a lot for the change. I went through the same exercise on https://git.eclipse.org/r/#/c/12114/ . Great to see that we arrived at the same change.
83582,0,Patch Set 2: I would prefer that you didn't submit thisThis API change causes a lot of changes of the text traces we support internally.
83600,0,"Patch Set 1: Looks good to me, but someone else must approve(4 inline comments)Once the comments are covered, it should be good to go"
83603,1,Patch Set 1:Are you getting actual API errors for this? I'm not getting any... since the method itself didn't really change (it's only BitBuffer that moved packages) maybe sub-classes don't need the annotation?This API tool is weeeeird...
83607,0,"Patch Set 1: Looks good to me, but someone else must approve"
83610,1,Patch Set 2:I've reverted the change as it broke the build: compile errors in ChangeSetContentProvider and ChangeSetSorter.
83611,1,"Patch Set 2:My apologies, I have no idea how did I miss those."
83612,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83615,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83620,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83628,1,"Patch Set 1:The avoid unnecessary braces cleanup is (imho) broke since it does the ""cleanup"" at any depth. Turn it off."
83630,1,"Patch Set 1:In JGit we have less strict requirements on test code, e.g. we do not require javadocs, nor do we require externalization of strings."
83634,1,"Patch Set 1:We could harmonize a bit more. The serious NO here is the reformatting of statementsOther than that and the lesser javadoc requirements on test bundles, I'm sure all other differences are accidental."
83639,0,"Patch Set 2: Looks good to me, but someone else must approveIs there any vialble solution instead of sleep call inside of the tests?"
83640,0,"Patch Set 2: Looks good to me, but someone else must approve(2 inline comments)"
83642,0,"Patch Set 1: Looks good to me, but someone else must approve"
83646,0,"Patch Set 4: Looks good to me, but someone else must approve(1 inline comment)"
83649,0,"Patch Set 3: Looks good to me, but someone else must approve"
83653,0,"Patch Set 2: Looks good to me, but someone else must approve"
83654,0,"Patch Set 2: Looks good to me, approved; IP review completed"
83660,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83663,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83664,0,"Patch Set 1: Verified; Looks good to me, approved"
83671,0,"Patch Set 2: Verified; Looks good to me, approved; IP review completedReviewed with R4E.  Tested manually"
83673,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83677,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83680,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83682,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83687,0,"Patch Set 2: Looks good to me, but someone else must approve"
83689,0,"Patch Set 1: Looks good to me, but someone else must approve"
83693,0,"Patch Set 2: Looks good to me, but someone else must approve"
83696,0,"Patch Set 2: Looks good to me, but someone else must approve"
83701,0,"Patch Set 2: Looks good to me, but someone else must approve"
83705,1,Patch Set 1: I would prefer that you didn't submit thisI think we should move forward instead and close bug 365425. This bug has been open since quite a while and it's time to start getting rid of some old stuff to make moving forward easier.
83706,1,"Patch Set 1: AbandonedAbandoned, see bug 365425."
83717,0,"Patch Set 1:It looks like the base reviews model doesn't have many of the core containment relationships defined. I guess this has been ok, because up until now the model hasn't been serializable! But we'll need to be supporting that now."
83719,1,"Patch Set 1:Yes, that's correct. Feel free to propose an updated containment hierarchy since that's a concern that wasn't taken into consideration so far."
83727,1,Patch Set 1: AbandonedUploaded an update but it ended up as another change instead of a new patch set :-(
83728,1,Patch Set 1:This looks reasonable but I have to say that I'm not a big fan of putting the behavior (operations) into the model and I suspect this won't be the only operation. Can you give me a sense of the scope of the intended (future) changes along the lines of this change?
83729,1,"Patch Set 1:Right. I agree with you in general re: putting behaviour into the model. This is actually a bit of a new approach for me as I generally avoid EOperations. Some factors that weighed in for me:1. I needed somewhere to put the logic outside of UI and make it sharable across multiple usages. We could build a command infrastructure, but that's what EMF edit is for. But it's too ambitious to put in edit support yet.2. This is a special easy to justify case in that a) the behaviour is purely structural and b) occurs at object creation time. Here it is just a case of ensuring that changes create consistent reasonable state for the newly contained objects."
83731,0,"Patch Set 1: Looks good to me, but someone else must approve"
83737,0,"Patch Set 1: Looks good to me, approved; IP review completed"
83740,1,Patch Set 1: Do not submit(3 inline comments)The generated tests look awful and I don't see how generating them saves significant effort. I would prefer if we didn't generate these.
83751,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedworks for me"
83752,1,Patch Set 1: I would prefer that you didn't submit thisEither it doesn't work or has nothing to do with the referenced bug.
83753,1,"Patch Set 1:Robin, from Matthias's comment on Sept 26, it sounds like it works for him. At least, ignoring the initial error that he is getting. Given your -1, I am assuming the change set does not work for you at all, is this correct?"
83760,1,"Patch Set 1:Looks like this change can be abandoned, since the problem is already fixed: https://bugs.eclipse.org/bugs/show_bug.cgi?id=356647#c13"
83767,0,"Patch Set 1:(This patch is not intended for merge, please do not +1 yet!) The initial commit is to align the existing review model and the forked ""frame"" model. Once we do that, we can replace the R4E forked references with the orignal reviews model.In the r4e case we had to add a bunch of stuff. Unfortunatly, there are a few places where we needed to change the attribute ids."
83768,1,"Patch Set 1:Unfortunately, white space formatting changes are obscuring the actual changes. Sorry about that.."
83770,0,"Patch Set 1: Looks good to me, but someone else must approveI think this is good to go as well. I'm gong to make the other changes in a new gerrit. Can someone with IP Review +1?I authored 100% of the content that I am contributing. I have the rights to donate the content to Eclipse. I contribute the content under the EPL."
83771,1,"I have concerns because changing these in the frame.core might break compatibility in R4E between serialized model files using the old model versions with the new R4E application code.  Since only R4E uses persistent model data, we should try to minimize those changes, especially when it's only a matter of having very similar component/elements names."""
83772,1,"Patch Set 1: No scoreI didn't bother to generate the code because we'll be throwing this generated code away anyway. :) The basic idea here is that we align the two base models and then replace one of the aligned models (this one).re: the item name changes, see discussion in related bug. We'll need to change the serialization anyway, so my thinking is that it doesn't make for much of a difference. I do think that the author usage is slightly preferable, as it indicates role and matches Mylyn Task usage."
83773,1,"Patch Set 1:Ok then we can proceed like that then.  However if we do that, it would be good that all the non-compatible changes are concentrated into 1 R4E release, so that we can handle the transition efficiently.I'm not putting +1 on this now, as I believe this review should be abandoned and a new one created that will merge to a specific branch (i.e. not master).  We will push everything to master when the model changes and R4E adaptations are all complete."
83775,1,"Patch Set 1: Looks good to me, but someone else must approveLooks good in general:comments:1) reference from ReviewItem to Topic i.e. -> ""topics"" needs to be transient to avoid a change to the Review resource for every topic being created, this will minimize user contention and decease the possibility of user lockings.  This field will need to be populated within the de-serialization process.2) ""creationDate"" under Comment, R4E extended model uses ""createdOn"".      can we continue using ""createdOn"" in order to minimize serialization changes.     3) Comment#replies, seems redundant with ""comments"" besides ""replies"" is marked as containment which can cause collisions with the R4E extended model as Comments are contained at the user level.   One instance can be contained in only one parent.  "
83777,1,Patch Set 1: (3 inline comments)Captured Alvaro's review as in-line comments. WIll respond there.
83784,1,Patch Set 1: AbandonedToo big. :(
83787,1,"Patch Set 3: Do not submitLet's do the code review on the master branch (https://git.eclipse.org/r/#/c/8271/ is change set 3 rebased onto master) and once it is submitted there, cherry pick it on the release branch without code review.I'm having problems in my IDE when I try to import this change. Also, by having everything go through master first, we can't forget a fix in master."
83798,0,Patch Set 1:Ahh much better :)
83799,1,"Patch Set 1: AbandonedSorry, I had done a wrong push, please refer tohttps://git.eclipse.org/r/#/c/8216/I'm abandoning this change"
83809,0,"Patch Set 1:Hi Xavier, thanks for contributing :)A couple more notes:- If this is an API-breaking change (that requires a ""@since 2.0""), this should target the ""lttng-kepler"" branch. For now the master branch tracks 1.2.- Please make sure you install the git hook to generate a Change-Id line (see http://wiki.eclipse.org/Gerrit#Install_the_commit-msg_hook_in_your_repository ). Without this, Gerrit will create a new entry every time you update a previous patch."
83813,0,Patch Set 2: AbandonedCustom profile support is implemented.The real integration test has been added with https://git.eclipse.org/r/#/c/8172/ and https://git.eclipse.org/r/#/c/8180/
83824,1,"Patch Set 1: AbandonedSince Pawel committed this fix outside of Gerrit, abandoning this patch to indicate it should not be committed again.https://bugs.eclipse.org/bugs/show_bug.cgi?id=391185#c4"
83836,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83846,0,"Patch Set 2: Verified; Looks good to me, but someone else must approveSteffen,on my environment I did not get the failure for theorg.eclipse.mylyn.tasks.tests.RepositorySettingsPageTest.testNeedsAnonyoumousLogin and org.eclipse.mylyn.tasks.tests.RepositorySettingsPageTest.testNeedsAnonyoumousLoginNoRepositoryCan you pleas verify"
83847,1,"Patch Set 2: Do not submit(4 inline comments)The proposed change breaks backwards compatibility. The intention seems fine but this is very tricky to get right. I would suggest that we only change AbstractTaskRepositorySettingsPage intially and do this in a way that doesn't break AbstractRepositorySettingsPage. Then, in a second step we can look at changing that."
83849,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83854,0,"Patch Set 1: Looks good to me, but someone else must approveI went through the change sets and they look good to me."
83855,0,"Patch Set 1: Looks good to me, but someone else must approveNot sure why some show as new adds"
83856,0,"Patch Set 1: Verified; Looks good to me, approved; IP review completed"
83860,0,"Patch Set 1: Looks good to me, but someone else must approveI think this is what is breaking downstream Maven build off github. http://ci.mylyn.org/job/mylyn-reviews-r4e-github/11/consoleI authored 100% of the content that I am contributing. I have the rights to donate the content to Eclipse. I contribute the content under the EPL."
83862,1,"Patch Set 1: (1 inline comment)Miles, please do not +1 your own changes. That is very confusing for others looking at the review results."
83863,1,"Patch Set 1: No scoreMistake. I'm having an issue with getting the build to work when consuming the Mylyn hosted build of reviews from another build server. See http://ci.mylyn.org/job/mylyn-reviews-r4e-github/16/console I was thinking that this was an issue we'd run into where Maven is turning these version dependencies into hard requirements. It is getting 3.9.0 I think and then complaining:[ERROR] Cannot resolve project dependencies:[ERROR]   Software being installed: org.eclipse.mylyn.reviews.ldap 0.12.0.qualifier[ERROR]   Missing requirement: org.eclipse.mylyn.reviews.core 1.1.0.I20121004-0416 requires 'bundle org.eclipse.mylyn.tasks.core 3.8.0' but it could not be found[ERROR]   Cannot satisfy dependency: org.eclipse.mylyn.reviews.ldap 0.12.0.qualifier depends on: bundle org.eclipse.mylyn.reviews.core 1.1.0[ERROR] [ERROR] Internal error: java.lang.RuntimeException: ""No solution found because the problem is unsatisfiable."": [""Unable to satisfy dependency from org.eclipse.mylyn.reviews.core 1.1.0.I20121004-0416 to bundle org.eclipse.mylyn.tasks.core 3.8.0."", ""No solution found because the problem is unsatisfiable.""] -> [Help 1]"
83873,0,"Patch Set 2: I would prefer that you didn't submit thisChange 7768 does not make the Location/LocationData immutable, it just changes the API (I didn't want to have too much stuff changing in one commit). I was hoping to push that one first, and then update this change here on top of it ;)Thanks for the reviews Bernd!"
83876,1,"Patch Set 1: I would prefer that you didn't submit this(2 inline comments)I don't agree with the the shallow copy in TmfLocation.clone() and CtfLocation.clone() (see comments).However, I like the initiative to simplify CtfLocation."
83877,1,"Patch Set 1:If the field is immutable (which means its contents cannot be modified, like Strings), a shallow copy is safe.In the case of a CtfLocation, the field type CtfLocationData is immutable. Its two fields are final. So another object having a pointer to the same object could not modify it, they'd have to create a new one.Although for TmfLocation, I agree there is no guarantee. We do not control all possible implementations, like with CtfLocation. I did add a comment in the Javadoc description, but it's probably not enough.I will re-spin the patch to do a deep-copy in TmfLocation. But I still think we can do a shallow-copy in CtfLocation, since we control CtfLocationData and we know it's immutable, and it'd be faster to do so."
83879,1,Patch Set 1: AbandonedArgh. Abandoning change to wrong repos.
83882,1,"Patch Set 1: Abandonedoops, wrong branch *again*"
83900,1,"Patch Set 4: Verified; Looks good to me, but someone else must approve; IP review completedLooks good, I would suggest not exposing the map, since this can lead to some people doing naughty things with the state systems, but it works and looks nice right now."
83902,1,"Patch Set 3:I've re-worked this commit a bit, now on top of exposing the method in ITmfTrace I've changed it to return a map of all the state systems for this trace.I tried to keep the complexity at a minimum (not touching the extension points, etc.) The extension point already specifies a trace type, so it's simple to define one (or more) state system for each trace type.Admittedly, I'm not sure a Map<String, something> is the best thing to use here. I like the fact that it's dead simple (if there's a conflict, it replaces with the new one. User's fault). But then you have to make sure you cache the hashmap lookups and don't do them every query..."
83907,1,Patch Set 2: I would prefer that you didn't submit thisThis is currently obsolete.Will update after we figure out how to handle multiple state systems for one trace.
83908,1,"Patch Set 1:This should release all resources held by the experiment and allow subsequent deletion of the experiment's traces from the file system.However deletion still fails due to two lingering references to the experiment:1. TmfEventsView.fExperiment: It should be cleared in the experiment disposed handler2. TmfRawEventViewer.fTrace: TmfEventsTable does not propagate setTrace to the raw viewer if the trace is null. Also TmfRawEventViewer.refreshEventCount() should probably handle a null trace to set the thumb and refresh its display.Also, this clearing could be performed when executing the Delete command on a trace which is currently displayed, to allow the deletion to succeed. This could be done in a separate patch."
83944,1,"Patch Set 1: AbandonedTry to re-use existing change id, but failed :-(Delte this patch"
83956,1,Patch Set 1: Abandonedthis bug was fixed in change I6901f386b00e8cd5208f22aa93298bca4d750dd3 in the mean time
83957,1,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedThis might fix current broken build. Now failing job tries to resolve maven-reporting-impl:jar:2.1 in codehaus.snapshots which is wrong.Chris, what do you think?"
83966,1,Patch Set 6: I would prefer that you didn't submit thisI agree with Matthias' suggestions. Please update with a new changeset.I also refactored a couple classes out and collapsed things into DiscardChangesOperation.I would also request that you do the tests in another gerrit changeset so we can avoid triggering the IP process for this.
83975,1,Patch Set 3:Found the problem! it was a wrong file length in index
83988,1,Patch Set 1: AbandonedThis one depends on the other abandoned one.Collapse changes first.Plus need bugzilla loaded with proper commit message
83991,1,"Patch Set 1: AbandonedI already committed this fix directly to Git.  I'm worried that I will forget and then try to commit again from Gerrit, so I'm abandoning it.  However, a review is still welcomed."
83997,0,"Patch Set 2: Looks good to me, approved"
83999,1,"Patch Set 2:> This looks too big for a single change.Any particular part of the change that you want to see separated out? I already did that for the disableMirrors thing (see dependent change), but I had to (temporarily) delete a test for this in order to not get compile errors."
84000,1,"Patch Set 2:Maybe it's my lack of experience with Gerrit, but each bullet from the comment message looks like a good candidate for a separate change (after all, you wanted to highlight them as separate items).Again, this is not to veto this change, just a general observation. I am still getting used to Gerrit, so apologies if my comments appear random and inappropriate. ;-)"
84001,0,"Patch Set 2: AbandonedI was just going to write how it was not reasonably possible to split up this change in small increments, when I realized that it is. The changes from this commit are now contained in change https://git.eclipse.org/r/#/c/5604/ and its predecessors.Although I agree that it is good to have small-ish yet self-contained commits in the commit history, it was quite a bit of effort to produce them. IMHO we need to reconsider what to do if we get a similar situation in the future."
84004,0,"Patch Set 2: Verified; Looks good to me, approved"
84006,1,"Patch Set 1: AbandonedIt is not a complete changes. Submitted by mistake, sorry."
84007,1,"Patch Set 1: AbandonedIt is not a complete changes. Submitted by mistake, sorry."
84008,1,"Patch Set 1: AbandonedIt is not a complete changes. Submitted by mistake, sorry."
84009,1,"Patch Set 1: AbandonedIt is not a complete changes. Submitted by mistake, sorry."
84011,1,Patch Set 1: AbandonedSubmitted an updated patch as a different change :( still a lot to learn
84033,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed(1 inline comment)"
84040,0,"Patch Set 2: Looks good to me, approved; IP review completedahah, I'm a bag guy, I made my own code review!"
84046,0,"Patch Set 1: Looks good to me, approved; IP review completedThis change adds a Divide operation, that's an improvement.It also adds tests, which not everyone is doing.In the context of this tutorial, looks fine to me."
84047,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completed(2 inline comments)it works, but the test should check for divide by zero"
84051,0,"Patch Set 1: Looks good to me, approved; IP review completed(1 inline comment)I find the change to be extremely important."
84052,0,"Patch Set 1: Looks good to me, approved(2 inline comments)Good work, you are an expert in Git and Gerrit! ;-)"
84068,0,Patch Set 1: I would prefer that you didn't submit this(2 inline comments)squash this commit with your previous commit and ensure thatchange-id footer is the one from the previous commit:Change-Id: Iece43632086afadf175af6638255041ccaf2bfbband push it to gerrit again. This will ensure that the squashed commit ends up as second patchset in that change. When this succeeded abandon this change.
84073,1,"Patch Set 1:The pack is normally closed when the last window to it is evicted from the WindowCache.This eviction occurs one of two ways:The first is by the weak LRU popping the least-recently-used window in order to release resources to keep the cache under the byte or open file limits. As these windows are popped the open window count on PackFile gets decreased, and the file is closed when the count drops to 0.The second is when WindowCache spins the ReferenceQueue. If the JVM GC killed some of our SoftReferences in order to free up heap memory WindowCache will (eventually) spin those now dead references out and decrement the open window count on the associated PackFile. When the count drops to 0, the file is closed.I just made a patch to C Git today that doesn't keep the file open if there is exactly 1 window on it. This might be useful in JGit too, but less so because the default window size is so much smaller (8 Kib in JGit). So it might not be worth my time to try and do.Are you seeing file leaking or something Chris? This code is one of the most heavily exercised areas in Gerrit Code Review servers and the current version has been running in production pretty solidly for nearly 6 months."
84074,1,Patch Set 1:This comes from https://bugs.eclipse.org/bugs/show_bug.cgi?id=300084.The problem can be fixed by replacing the OS layer :)
84080,1,Patch Set 1: Abandonedthis was wrong
84103,1,"Patch Set 3: No scoresry, no ip problem here!"
84106,1,"Patch Set 3: Looks good to me, but someone else must approve; IP review completed- rebased to current master- resolved conflicts"
84112,1,Patch Set 1: Abandonedunnecessary bumping of version as we don't plan to ship a bug fix release for 0.11.1
84115,1,"Patch Set 2: I would prefer that you didn't submit thisI wonder if we shouldn't put things where they belong: if this is a repository configuration, we should show it there (and let it be changed there, too).Unfortunately, the UI support for the repository configuration is currently very limited (it's shown as Property page when a Repository is selected in the Repositories View), but we will need more of this kind of configuration soon (autosetupmerge and autosetuprebase come to my mind, for example), so  I think we should look into this direction (e.g. some sort of ""Repository configuration"" dialog).I don't think Eclipse users would ever understand that they have to open a Project property page to find a property that is not stored in the project meta data.Furthermore, going the configuration approach, we could also tell users to add this flag to the user-specific configuration so that they don't have to bother with configuring each repository one by one."
84119,1,"Patch Set 2:+1, please open a bug to track this proposal"
84120,1,Patch Set 2:I created https://bugs.eclipse.org/bugs/show_bug.cgi?id=336415 for the repository configuration.Should I abandon this change for now?
84121,1,Patch Set 2: AbandonedAbandoned until bug 336415 is sorted out.
84122,0,Patch Set 1:This is an interesting approach. I actually like it but not sure if this is the kosher way of handling things. It's better than an Eclipse preference imho too :)
84130,0,Patch Set 1: (3 inline comments)List of changes should be sorted in descending order and maybe limited to last 100 changes (it would be nice if this could be set in preferences).
84142,0,"Patch Set 1: Looks good to me, but someone else must approve"
84162,1,Patch Set 1: Do not submitI already regret the predecessor patch that created ObjectListIterator.I have an even better strategy in mind.  I'll probably post a revert to back out ObjectListIterator and propose a different implementation.  But my new idea is too simple so I think I'll try it first in C Git and see what the C Git contributors have to say there.
84169,1,Patch Set 1: No score; No scoreCould someone with a Mac tell what the value of the 'file.encoding' system property is? I have a feeling herein lies the key to solving these problems.
84171,0,Patch Set 1: I would prefer that you didn't submit thisI think we should abandon this. Support the efforts being undertaken for msys git so it can read (and write) UTF-8 encoded paths.
84182,1,"Patch Set 1: AbandonedI can not repeat my problem. The problem was repeatable until I tested this change, but not anymore. My repo had ~150k files, but this works quite well now, evenwithout this patch."
84199,0,Patch Set 5:Now I have added the org.eclipse.egit.mylyn plugin. So you can see the full usage of the ICommitMessageProvider extension.Additionally feature I have added is the use of a project specific commit template. For this you must enter the project properties and add a template at Task Repository -> Commit Template.Andf -of cource - you must add a query in mylyn and activate a task :)
84204,0,Patch Set 9:Now I have renamed the wrong typed directory (egilt) into the correct name :oI hope we can now take a look onto the implementation and a +1 :)
84212,0,"Patch Set 11: Do not submitThorsten, could you please abondon this change as it was split and merged into the master repo. Thanks for your efforts!"
84223,1,"Patch Set 1:A problem with @SupressWarning is that it is too coarse.This would be the first deprecated warning to suppress and I'm not convinced it is a good idea. We are programming for the 3.5 API and you will get different warnings depending on the Eclipse version you are running. This differs from other warnings, that do not depend on our Eclipse version. I.e. we know better what is hidden.The SupressWarning annotation should perhaps refer to the use of addDerived, because anyone looking at the code with Eclipse 3.5 will not understand the problem. Replacement for what?You can hide warnings in the problem filter."
84226,1,"Patch Set 1:Actually, I thought we were targeting 3.4. Did I miss a memo?In any case, I think it would be better to inline comments then to suppress the warning with annotations."
84228,1,Patch Set 1: I would prefer that you didn't submit thisI recently added a TODO comment for both usages of setDerived in commit b07033deb2140b321b8d4882161f6e0431bcdb20.So I think this change could be abandoned.
84229,1,"Patch Set 1: AbandonedYep, the initial thought was to eliminate the existing warnings but as stated above by Robin, these pop up again depending on the target platform you're using.Abandoning this."
84239,1,Patch Set 1:Seems replaced by Change-Id: Id153e65d5ee6eddc1e121e04f8471047e5061ff0please abandon
84249,0,Patch Set 1: Abandonedhurray it works :-)
84253,1,"Patch Set 1:I think it is a mistake. There should be a warning. C Git sometime prints a warning when you try to use it. We should have a warning right away when trying to create it, or maybe an error (-f to force creation anyway)."
84261,1,Patch Set 1: AbandonedThis change is unnecessary for the effect I'm trying to achieve (fixing bug 312868).
84279,0,"Patch Set 1: Looks good to me, but someone else must approve; IP review completedYeah, finally we support rebase in EGit! I've played a little bit with this change and it works well. I didn't found any bugs."
84281,1,Patch Set 1:Created bug 331078 for a failing rebase which aborts due to conflicts with this EGit implementation but succeeds with native git.
84286,0,"Patch Set 1: Looks good to me, approved; IP review completedLooks good."
